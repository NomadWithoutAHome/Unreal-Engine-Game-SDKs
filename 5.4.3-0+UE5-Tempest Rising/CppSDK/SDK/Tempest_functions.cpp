#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Tempest

#include "Basic.hpp"

#include "Tempest_classes.hpp"
#include "Tempest_parameters.hpp"


namespace SDK
{

// Function Tempest.AICommander.ReceiveTick
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAICommander::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AICommander", "ReceiveTick");

	Params::AICommander_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AICommanderFunctionLibrary.AISquadOrder_GetOrderType
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FAISquadOrder&             SquadOrder                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TSubclassOf<class UAISquadOrderType>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UAISquadOrderType> UAICommanderFunctionLibrary::AISquadOrder_GetOrderType(const struct FAISquadOrder& SquadOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "AISquadOrder_GetOrderType");

	Params::AICommanderFunctionLibrary_AISquadOrder_GetOrderType Parms{};

	Parms.SquadOrder = std::move(SquadOrder);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.AISquadOrder_GetTargetActor
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FAISquadOrder&             SquadOrder                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UAICommanderFunctionLibrary::AISquadOrder_GetTargetActor(const struct FAISquadOrder& SquadOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "AISquadOrder_GetTargetActor");

	Params::AICommanderFunctionLibrary_AISquadOrder_GetTargetActor Parms{};

	Parms.SquadOrder = std::move(SquadOrder);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.AISquadOrder_GetTargetLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FAISquadOrder&             SquadOrder                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UAICommanderFunctionLibrary::AISquadOrder_GetTargetLocation(const struct FAISquadOrder& SquadOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "AISquadOrder_GetTargetLocation");

	Params::AICommanderFunctionLibrary_AISquadOrder_GetTargetLocation Parms{};

	Parms.SquadOrder = std::move(SquadOrder);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.AISquadOrder_GetTargetRadius
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FAISquadOrder&             SquadOrder                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAICommanderFunctionLibrary::AISquadOrder_GetTargetRadius(const struct FAISquadOrder& SquadOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "AISquadOrder_GetTargetRadius");

	Params::AICommanderFunctionLibrary_AISquadOrder_GetTargetRadius Parms{};

	Parms.SquadOrder = std::move(SquadOrder);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.AISquadOrder_HasOrderType
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FAISquadOrder&             SquadOrder                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const TSubclassOf<class UAISquadOrderType>OrderType                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAICommanderFunctionLibrary::AISquadOrder_HasOrderType(const struct FAISquadOrder& SquadOrder, const TSubclassOf<class UAISquadOrderType> OrderType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "AISquadOrder_HasOrderType");

	Params::AICommanderFunctionLibrary_AISquadOrder_HasOrderType Parms{};

	Parms.SquadOrder = std::move(SquadOrder);
	Parms.OrderType = OrderType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.AISquadOrder_HasTarget
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FAISquadOrder&             SquadOrder                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAICommanderFunctionLibrary::AISquadOrder_HasTarget(const struct FAISquadOrder& SquadOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "AISquadOrder_HasTarget");

	Params::AICommanderFunctionLibrary_AISquadOrder_HasTarget Parms{};

	Parms.SquadOrder = std::move(SquadOrder);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.AISquadOrder_HasTargetActor
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FAISquadOrder&             SquadOrder                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAICommanderFunctionLibrary::AISquadOrder_HasTargetActor(const struct FAISquadOrder& SquadOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "AISquadOrder_HasTargetActor");

	Params::AICommanderFunctionLibrary_AISquadOrder_HasTargetActor Parms{};

	Parms.SquadOrder = std::move(SquadOrder);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.AISquadOrder_HasTargetLocation
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FAISquadOrder&             SquadOrder                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAICommanderFunctionLibrary::AISquadOrder_HasTargetLocation(const struct FAISquadOrder& SquadOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "AISquadOrder_HasTargetLocation");

	Params::AICommanderFunctionLibrary_AISquadOrder_HasTargetLocation Parms{};

	Parms.SquadOrder = std::move(SquadOrder);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.AISquadOrder_IsValid
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FAISquadOrder&             SquadOrder                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAICommanderFunctionLibrary::AISquadOrder_IsValid(const struct FAISquadOrder& SquadOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "AISquadOrder_IsValid");

	Params::AICommanderFunctionLibrary_AISquadOrder_IsValid Parms{};

	Parms.SquadOrder = std::move(SquadOrder);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.AISquadOrder_Make
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const TSubclassOf<class UAISquadOrderType>OrderType                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAISquadOrder                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAISquadOrder UAICommanderFunctionLibrary::AISquadOrder_Make(const TSubclassOf<class UAISquadOrderType> OrderType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "AISquadOrder_Make");

	Params::AICommanderFunctionLibrary_AISquadOrder_Make Parms{};

	Parms.OrderType = OrderType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.AISquadOrder_MakeWithActorLocation
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const TSubclassOf<class UAISquadOrderType>OrderType                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     Actor                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Radius                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAISquadOrder                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAISquadOrder UAICommanderFunctionLibrary::AISquadOrder_MakeWithActorLocation(const TSubclassOf<class UAISquadOrderType> OrderType, const class AActor* Actor, const float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "AISquadOrder_MakeWithActorLocation");

	Params::AICommanderFunctionLibrary_AISquadOrder_MakeWithActorLocation Parms{};

	Parms.OrderType = OrderType;
	Parms.Actor = Actor;
	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.AISquadOrder_MakeWithTargetActor
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const TSubclassOf<class UAISquadOrderType>OrderType                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAITargetActor&            TargetActor                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAISquadOrder                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAISquadOrder UAICommanderFunctionLibrary::AISquadOrder_MakeWithTargetActor(const TSubclassOf<class UAISquadOrderType> OrderType, const struct FAITargetActor& TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "AISquadOrder_MakeWithTargetActor");

	Params::AICommanderFunctionLibrary_AISquadOrder_MakeWithTargetActor Parms{};

	Parms.OrderType = OrderType;
	Parms.TargetActor = std::move(TargetActor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.AISquadOrder_MakeWithTargetLocation
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const TSubclassOf<class UAISquadOrderType>OrderType                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAITargetLocation&         TargetLocation                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FAISquadOrder                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAISquadOrder UAICommanderFunctionLibrary::AISquadOrder_MakeWithTargetLocation(const TSubclassOf<class UAISquadOrderType> OrderType, const struct FAITargetLocation& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "AISquadOrder_MakeWithTargetLocation");

	Params::AICommanderFunctionLibrary_AISquadOrder_MakeWithTargetLocation Parms{};

	Parms.OrderType = OrderType;
	Parms.TargetLocation = std::move(TargetLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.AITarget_MakeFromAITargetActor
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FAITargetActor&            AITargetActor                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAITarget                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAITarget UAICommanderFunctionLibrary::AITarget_MakeFromAITargetActor(const struct FAITargetActor& AITargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "AITarget_MakeFromAITargetActor");

	Params::AICommanderFunctionLibrary_AITarget_MakeFromAITargetActor Parms{};

	Parms.AITargetActor = std::move(AITargetActor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.AITarget_MakeFromAITargetLocation
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FAITargetLocation&         AITargetLocation                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FAITarget                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAITarget UAICommanderFunctionLibrary::AITarget_MakeFromAITargetLocation(const struct FAITargetLocation& AITargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "AITarget_MakeFromAITargetLocation");

	Params::AICommanderFunctionLibrary_AITarget_MakeFromAITargetLocation Parms{};

	Parms.AITargetLocation = std::move(AITargetLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.AITarget_MakeWithActorLocation
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AActor*                     Actor                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Radius                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAITarget                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAITarget UAICommanderFunctionLibrary::AITarget_MakeWithActorLocation(const class AActor* Actor, const float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "AITarget_MakeWithActorLocation");

	Params::AICommanderFunctionLibrary_AITarget_MakeWithActorLocation Parms{};

	Parms.Actor = Actor;
	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.AITargetActor_GetActor
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FAITargetActor&            TargetActor                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UAICommanderFunctionLibrary::AITargetActor_GetActor(const struct FAITargetActor& TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "AITargetActor_GetActor");

	Params::AICommanderFunctionLibrary_AITargetActor_GetActor Parms{};

	Parms.TargetActor = std::move(TargetActor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.AITargetActor_IsValid
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FAITargetActor&            TargetActor                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAICommanderFunctionLibrary::AITargetActor_IsValid(const struct FAITargetActor& TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "AITargetActor_IsValid");

	Params::AICommanderFunctionLibrary_AITargetActor_IsValid Parms{};

	Parms.TargetActor = std::move(TargetActor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.AITargetActor_MakeWithActor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAITargetActor                   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAITargetActor UAICommanderFunctionLibrary::AITargetActor_MakeWithActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "AITargetActor_MakeWithActor");

	Params::AICommanderFunctionLibrary_AITargetActor_MakeWithActor Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.AITargetActor_MakeWithActorTag
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              ActorTag                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAITargetActor                   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAITargetActor UAICommanderFunctionLibrary::AITargetActor_MakeWithActorTag(const class UObject* WorldContextObject, const struct FGameplayTag& ActorTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "AITargetActor_MakeWithActorTag");

	Params::AICommanderFunctionLibrary_AITargetActor_MakeWithActorTag Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ActorTag = std::move(ActorTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.AITargetLocation_GetLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FAITargetLocation&         TargetLocation                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UAICommanderFunctionLibrary::AITargetLocation_GetLocation(const struct FAITargetLocation& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "AITargetLocation_GetLocation");

	Params::AICommanderFunctionLibrary_AITargetLocation_GetLocation Parms{};

	Parms.TargetLocation = std::move(TargetLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.AITargetLocation_GetRadius
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FAITargetLocation&         TargetLocation                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAICommanderFunctionLibrary::AITargetLocation_GetRadius(const struct FAITargetLocation& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "AITargetLocation_GetRadius");

	Params::AICommanderFunctionLibrary_AITargetLocation_GetRadius Parms{};

	Parms.TargetLocation = std::move(TargetLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.AITargetLocation_IsValid
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FAITargetLocation&         TargetLocation                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAICommanderFunctionLibrary::AITargetLocation_IsValid(const struct FAITargetLocation& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "AITargetLocation_IsValid");

	Params::AICommanderFunctionLibrary_AITargetLocation_IsValid Parms{};

	Parms.TargetLocation = std::move(TargetLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.AITargetLocation_Make
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FVector2D&                 Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Radius                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAITargetLocation                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAITargetLocation UAICommanderFunctionLibrary::AITargetLocation_Make(const struct FVector2D& Location, const float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "AITargetLocation_Make");

	Params::AICommanderFunctionLibrary_AITargetLocation_Make Parms{};

	Parms.Location = std::move(Location);
	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.AITargetLocation_MakeWithActorLocation
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AActor*                     Actor                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Radius                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAITargetLocation                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAITargetLocation UAICommanderFunctionLibrary::AITargetLocation_MakeWithActorLocation(const class AActor* Actor, const float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "AITargetLocation_MakeWithActorLocation");

	Params::AICommanderFunctionLibrary_AITargetLocation_MakeWithActorLocation Parms{};

	Parms.Actor = Actor;
	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.CreateAIMission
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      PlayerID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSubclassOf<class UAIMission>     MissionClass                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bAutoActivate                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAIMission*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAIMission* UAICommanderFunctionLibrary::CreateAIMission(const class UObject* WorldContextObject, const ETedPlayerID PlayerID, const TSubclassOf<class UAIMission> MissionClass, const bool bAutoActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "CreateAIMission");

	Params::AICommanderFunctionLibrary_CreateAIMission Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerID = PlayerID;
	Parms.MissionClass = MissionClass;
	Parms.bAutoActivate = bAutoActivate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.FindAIMissionByClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      PlayerID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSubclassOf<class UAIMission>     MissionClass                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bExactMatch                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAIMission*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAIMission* UAICommanderFunctionLibrary::FindAIMissionByClass(const class UObject* WorldContextObject, const ETedPlayerID PlayerID, const TSubclassOf<class UAIMission> MissionClass, const bool bExactMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "FindAIMissionByClass");

	Params::AICommanderFunctionLibrary_FindAIMissionByClass Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerID = PlayerID;
	Parms.MissionClass = MissionClass;
	Parms.bExactMatch = bExactMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.FindAIMissionByHandle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      PlayerID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAIMissionHandle&          MissionHandle                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAIMission*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAIMission* UAICommanderFunctionLibrary::FindAIMissionByHandle(const class UObject* WorldContextObject, const ETedPlayerID PlayerID, const struct FAIMissionHandle& MissionHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "FindAIMissionByHandle");

	Params::AICommanderFunctionLibrary_FindAIMissionByHandle Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerID = PlayerID;
	Parms.MissionHandle = std::move(MissionHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.FindAIMissionByTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      PlayerID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              MissionTag                                             (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bExactMatch                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAIMission*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAIMission* UAICommanderFunctionLibrary::FindAIMissionByTag(const class UObject* WorldContextObject, const ETedPlayerID PlayerID, const struct FGameplayTag& MissionTag, const bool bExactMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "FindAIMissionByTag");

	Params::AICommanderFunctionLibrary_FindAIMissionByTag Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerID = PlayerID;
	Parms.MissionTag = std::move(MissionTag);
	Parms.bExactMatch = bExactMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.FindAIMissionByTags
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      PlayerID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     MissionTags                                            (ConstParm, Parm, NativeAccessSpecifierPublic)
// const EGameplayContainerMatchType       MatchType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bExactMatch                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAIMission*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAIMission* UAICommanderFunctionLibrary::FindAIMissionByTags(const class UObject* WorldContextObject, const ETedPlayerID PlayerID, const struct FGameplayTagContainer& MissionTags, const EGameplayContainerMatchType MatchType, const bool bExactMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "FindAIMissionByTags");

	Params::AICommanderFunctionLibrary_FindAIMissionByTags Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerID = PlayerID;
	Parms.MissionTags = std::move(MissionTags);
	Parms.MatchType = MatchType;
	Parms.bExactMatch = bExactMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.FindAIMissions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      PlayerID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSubclassOf<class UAIMission>     MissionClass                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bExactMatch                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UAIMission*>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UAIMission*> UAICommanderFunctionLibrary::FindAIMissions(const class UObject* WorldContextObject, const ETedPlayerID PlayerID, const TSubclassOf<class UAIMission> MissionClass, const bool bExactMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "FindAIMissions");

	Params::AICommanderFunctionLibrary_FindAIMissions Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerID = PlayerID;
	Parms.MissionClass = MissionClass;
	Parms.bExactMatch = bExactMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.FindAIMissionsByTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      PlayerID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              MissionTag                                             (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bExactMatch                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UAIMission*>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UAIMission*> UAICommanderFunctionLibrary::FindAIMissionsByTag(const class UObject* WorldContextObject, const ETedPlayerID PlayerID, const struct FGameplayTag& MissionTag, const bool bExactMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "FindAIMissionsByTag");

	Params::AICommanderFunctionLibrary_FindAIMissionsByTag Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerID = PlayerID;
	Parms.MissionTag = std::move(MissionTag);
	Parms.bExactMatch = bExactMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.FindAIMissionsByTags
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      PlayerID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     MissionTags                                            (ConstParm, Parm, NativeAccessSpecifierPublic)
// const EGameplayContainerMatchType       MatchType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bExactMatch                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UAIMission*>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UAIMission*> UAICommanderFunctionLibrary::FindAIMissionsByTags(const class UObject* WorldContextObject, const ETedPlayerID PlayerID, const struct FGameplayTagContainer& MissionTags, const EGameplayContainerMatchType MatchType, const bool bExactMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "FindAIMissionsByTags");

	Params::AICommanderFunctionLibrary_FindAIMissionsByTags Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerID = PlayerID;
	Parms.MissionTags = std::move(MissionTags);
	Parms.MatchType = MatchType;
	Parms.bExactMatch = bExactMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.GetAIMissions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      PlayerID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UAIMission*>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UAIMission*> UAICommanderFunctionLibrary::GetAIMissions(const class UObject* WorldContextObject, const ETedPlayerID PlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "GetAIMissions");

	Params::AICommanderFunctionLibrary_GetAIMissions Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerID = PlayerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AICommanderFunctionLibrary.RemoveAIMission
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      PlayerID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAIMission*                       Mission                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAICommanderFunctionLibrary::RemoveAIMission(const class UObject* WorldContextObject, const ETedPlayerID PlayerID, class UAIMission* Mission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "RemoveAIMission");

	Params::AICommanderFunctionLibrary_RemoveAIMission Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerID = PlayerID;
	Parms.Mission = Mission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AICommanderFunctionLibrary.RemoveAIMissionByHandle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      PlayerID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAIMissionHandle&          MissionHandle                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAICommanderFunctionLibrary::RemoveAIMissionByHandle(const class UObject* WorldContextObject, const ETedPlayerID PlayerID, const struct FAIMissionHandle& MissionHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "RemoveAIMissionByHandle");

	Params::AICommanderFunctionLibrary_RemoveAIMissionByHandle Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerID = PlayerID;
	Parms.MissionHandle = std::move(MissionHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AICommanderFunctionLibrary.RemoveAllAIMissions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      PlayerID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSubclassOf<class UAIMission>     MissionClass                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bExactMatch                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAICommanderFunctionLibrary::RemoveAllAIMissions(const class UObject* WorldContextObject, const ETedPlayerID PlayerID, const TSubclassOf<class UAIMission> MissionClass, const bool bExactMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "RemoveAllAIMissions");

	Params::AICommanderFunctionLibrary_RemoveAllAIMissions Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerID = PlayerID;
	Parms.MissionClass = MissionClass;
	Parms.bExactMatch = bExactMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AICommanderFunctionLibrary.Skirmish_CalculateWinVal
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const TArray<class ATedPawn*>&          We                                                     (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const TArray<class ATedPawn*>&          Enemy                                                  (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   Method                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAICommanderFunctionLibrary::Skirmish_CalculateWinVal(const TArray<class ATedPawn*>& We, const TArray<class ATedPawn*>& Enemy, int32 Method)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AICommanderFunctionLibrary", "Skirmish_CalculateWinVal");

	Params::AICommanderFunctionLibrary_Skirmish_CalculateWinVal Parms{};

	Parms.We = std::move(We);
	Parms.Enemy = std::move(Enemy);
	Parms.Method = Method;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.AddExperience
// (Native, Public, BlueprintCallable)
// Parameters:
// const float                             InGainedExperience                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::AddExperience(const float InGainedExperience)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "AddExperience");

	Params::TedPawn_AddExperience Parms{};

	Parms.InGainedExperience = InGainedExperience;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.ClearAnimatingAbility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 Ability                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::ClearAnimatingAbility(class UGameplayAbility* Ability)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "ClearAnimatingAbility");

	Params::TedPawn_ClearAnimatingAbility Parms{};

	Parms.Ability = Ability;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.Client_R_InterpTo
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// const struct FTransform&                InitLoc                                                (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTransform&                TargetLoc                                              (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RotTime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LocTime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AlignmentDistanceTolerance                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::Client_R_InterpTo(const struct FTransform& InitLoc, const struct FTransform& TargetLoc, float RotTime, float LocTime, float AlignmentDistanceTolerance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "Client_R_InterpTo");

	Params::TedPawn_Client_R_InterpTo Parms{};

	Parms.InitLoc = std::move(InitLoc);
	Parms.TargetLoc = std::move(TargetLoc);
	Parms.RotTime = RotTime;
	Parms.LocTime = LocTime;
	Parms.AlignmentDistanceTolerance = AlignmentDistanceTolerance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.CurrentMontageJumpToSection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SectionName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::CurrentMontageJumpToSection(class FName SectionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "CurrentMontageJumpToSection");

	Params::TedPawn_CurrentMontageJumpToSection Parms{};

	Parms.SectionName = SectionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.CurrentMontageSetPlayRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InPlayRate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::CurrentMontageSetPlayRate(float InPlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "CurrentMontageSetPlayRate");

	Params::TedPawn_CurrentMontageSetPlayRate Parms{};

	Parms.InPlayRate = InPlayRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.CurrentMontageStop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   OverrideBlendOutTime                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::CurrentMontageStop(float OverrideBlendOutTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "CurrentMontageStop");

	Params::TedPawn_CurrentMontageStop Parms{};

	Parms.OverrideBlendOutTime = OverrideBlendOutTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.FindPathGoalLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   StartPoint                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   EndPoint                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::FindPathGoalLocation(const struct FVector& StartPoint, const struct FVector& EndPoint, struct FVector* OutLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "FindPathGoalLocation");

	Params::TedPawn_FindPathGoalLocation Parms{};

	Parms.StartPoint = std::move(StartPoint);
	Parms.EndPoint = std::move(EndPoint);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GiveWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TSubclassOf<class UTedWeapon>     WeaponClass                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bSkipNotify                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::GiveWeapon(const TSubclassOf<class UTedWeapon> WeaponClass, const bool bSkipNotify)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GiveWeapon");

	Params::TedPawn_GiveWeapon Parms{};

	Parms.WeaponClass = WeaponClass;
	Parms.bSkipNotify = bSkipNotify;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.K2_OnWeaponSwitched
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UTedWeapon*                       NewWeapon                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedWeapon*                       PreviousWeapon                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::K2_OnWeaponSwitched(class UTedWeapon* NewWeapon, class UTedWeapon* PreviousWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "K2_OnWeaponSwitched");

	Params::TedPawn_K2_OnWeaponSwitched Parms{};

	Parms.NewWeapon = NewWeapon;
	Parms.PreviousWeapon = PreviousWeapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedPawn.K2_SetCanBeDamaged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bInCanBeDamaged                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::K2_SetCanBeDamaged(const bool bInCanBeDamaged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "K2_SetCanBeDamaged");

	Params::TedPawn_K2_SetCanBeDamaged Parms{};

	Parms.bInCanBeDamaged = bInCanBeDamaged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.NetMulticast_Died
// (Net, Native, Event, NetMulticast, Protected)

void ATedPawn::NetMulticast_Died()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "NetMulticast_Died");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.NetMulticast_OnLifeTimeExpired
// (Net, Native, Event, NetMulticast, Protected)

void ATedPawn::NetMulticast_OnLifeTimeExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "NetMulticast_OnLifeTimeExpired");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.OnDelayedDestroy
// (Event, Public, BlueprintEvent)

void ATedPawn::OnDelayedDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "OnDelayedDestroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedPawn.OnFirstPlayerStateReplicated
// (Final, Native, Protected)
// Parameters:
// class ATedPlayerController*             PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::OnFirstPlayerStateReplicated(class ATedPlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "OnFirstPlayerStateReplicated");

	Params::TedPawn_OnFirstPlayerStateReplicated Parms{};

	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.OnLifeTimeExpired
// (Native, Event, Protected, BlueprintEvent)

void ATedPawn::OnLifeTimeExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "OnLifeTimeExpired");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.OnLifeTimeExpiredCosmetic
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void ATedPawn::OnLifeTimeExpiredCosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "OnLifeTimeExpiredCosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedPawn.OnPlayerIDChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// ETedPlayerID                            NewPlayerID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::OnPlayerIDChanged(ETedPlayerID NewPlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "OnPlayerIDChanged");

	Params::TedPawn_OnPlayerIDChanged Parms{};

	Parms.NewPlayerID = NewPlayerID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedPawn.OnRep_AvailableWeaponClasses
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const TArray<TSubclassOf<class UTedWeapon>>&OldAvailableWeaponClasses                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

void ATedPawn::OnRep_AvailableWeaponClasses(const TArray<TSubclassOf<class UTedWeapon>>& OldAvailableWeaponClasses)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "OnRep_AvailableWeaponClasses");

	Params::TedPawn_OnRep_AvailableWeaponClasses Parms{};

	Parms.OldAvailableWeaponClasses = std::move(OldAvailableWeaponClasses);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.OnRep_CommandExecutionInfo
// (Final, Native, Protected)

void ATedPawn::OnRep_CommandExecutionInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "OnRep_CommandExecutionInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.OnRep_CurrentWeaponClass
// (Final, Native, Protected)

void ATedPawn::OnRep_CurrentWeaponClass()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "OnRep_CurrentWeaponClass");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.OnRep_GainedExperience
// (Final, Native, Protected)
// Parameters:
// const float                             PreviousExperience                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::OnRep_GainedExperience(const float PreviousExperience)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "OnRep_GainedExperience");

	Params::TedPawn_OnRep_GainedExperience Parms{};

	Parms.PreviousExperience = PreviousExperience;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.OnRep_GameplayEffectStack
// (Final, Native, Public)

void ATedPawn::OnRep_GameplayEffectStack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "OnRep_GameplayEffectStack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.OnRep_InitialLifetime
// (Final, Native, Public)

void ATedPawn::OnRep_InitialLifetime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "OnRep_InitialLifetime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.OnRep_LastDamageInfo
// (Final, Native, Protected)

void ATedPawn::OnRep_LastDamageInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "OnRep_LastDamageInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.OnRep_PawnContainerOwner
// (Native, Public)

void ATedPawn::OnRep_PawnContainerOwner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "OnRep_PawnContainerOwner");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.OnRep_PawnDeath
// (Final, Native, Protected)

void ATedPawn::OnRep_PawnDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "OnRep_PawnDeath");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.OnRep_RepAnimMontageInfo
// (Native, Protected)

void ATedPawn::OnRep_RepAnimMontageInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "OnRep_RepAnimMontageInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.OnRep_RepFocusInfo_Debug
// (Final, Native, Protected)

void ATedPawn::OnRep_RepFocusInfo_Debug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "OnRep_RepFocusInfo_Debug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.OnRep_ReplacedPawn
// (Final, Native, Protected)

void ATedPawn::OnRep_ReplacedPawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "OnRep_ReplacedPawn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.OnRep_ReplicationTags
// (Native, Protected)

void ATedPawn::OnRep_ReplicationTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "OnRep_ReplicationTags");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.OnRep_UpgradeFlags
// (Final, Native, Protected)
// Parameters:
// const ETedPawnUpgradeTypeFlags          PrevUpgradeFlags                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::OnRep_UpgradeFlags(const ETedPawnUpgradeTypeFlags PrevUpgradeFlags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "OnRep_UpgradeFlags");

	Params::TedPawn_OnRep_UpgradeFlags Parms{};

	Parms.PrevUpgradeFlags = PrevUpgradeFlags;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.OnRep_Visibility
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FTedVisibility&            OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ATedPawn::OnRep_Visibility(const struct FTedVisibility& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "OnRep_Visibility");

	Params::TedPawn_OnRep_Visibility Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.OnRep_WeaponInfoCache
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const TArray<struct FTedWeaponInfo>&    OldWeaponInfoCache                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ATedPawn::OnRep_WeaponInfoCache(const TArray<struct FTedWeaponInfo>& OldWeaponInfoCache)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "OnRep_WeaponInfoCache");

	Params::TedPawn_OnRep_WeaponInfoCache Parms{};

	Parms.OldWeaponInfoCache = std::move(OldWeaponInfoCache);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.OnSelectionChanged_Blueprint
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bIsSelected                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bIsHovered                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::OnSelectionChanged_Blueprint(const bool bIsSelected, const bool bIsHovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "OnSelectionChanged_Blueprint");

	Params::TedPawn_OnSelectionChanged_Blueprint Parms{};

	Parms.bIsSelected = bIsSelected;
	Parms.bIsHovered = bIsHovered;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedPawn.PlayMontage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimMontage*                     AnimMontage                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlayRate                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             StartSectionName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartTimeSeconds                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameplayAbility*                 AnimatingAbility                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ATedPawn::PlayMontage(class UAnimMontage* AnimMontage, float PlayRate, class FName StartSectionName, float StartTimeSeconds, class UGameplayAbility* AnimatingAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "PlayMontage");

	Params::TedPawn_PlayMontage Parms{};

	Parms.AnimMontage = AnimMontage;
	Parms.PlayRate = PlayRate;
	Parms.StartSectionName = StartSectionName;
	Parms.StartTimeSeconds = StartTimeSeconds;
	Parms.AnimatingAbility = AnimatingAbility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.ReceiveOnDeath
// (Event, Protected, BlueprintEvent)

void ATedPawn::ReceiveOnDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "ReceiveOnDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedPawn.ReceiveOnPawnReplaced
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ATedPawn*                         ReplacedBy                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::ReceiveOnPawnReplaced(class ATedPawn* ReplacedBy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "ReceiveOnPawnReplaced");

	Params::TedPawn_ReceiveOnPawnReplaced Parms{};

	Parms.ReplacedBy = ReplacedBy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedPawn.ReceiveOnVeterancyLevelChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETedVeterancyLevel                      NewLevel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedVeterancyLevel                      PreviousLevel                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::ReceiveOnVeterancyLevelChanged(ETedVeterancyLevel NewLevel, ETedVeterancyLevel PreviousLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "ReceiveOnVeterancyLevelChanged");

	Params::TedPawn_ReceiveOnVeterancyLevelChanged Parms{};

	Parms.NewLevel = NewLevel;
	Parms.PreviousLevel = PreviousLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedPawn.ReceiveTakeAnyDamage
// (Final, Native, Public)
// Parameters:
// class AActor*                           DamagedActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UDamageType*                DamageType                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      InstigatedBy                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::ReceiveTakeAnyDamage(class AActor* DamagedActor, float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "ReceiveTakeAnyDamage");

	Params::TedPawn_ReceiveTakeAnyDamage Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.ReceiveUpdateHealthEffects
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   HealthPct                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::ReceiveUpdateHealthEffects(float HealthPct)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "ReceiveUpdateHealthEffects");

	Params::TedPawn_ReceiveUpdateHealthEffects Parms{};

	Parms.HealthPct = HealthPct;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedPawn.ReceiveUpgradeActivated
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const ETedPawnUpgradeType               UpgradeType                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::ReceiveUpgradeActivated(const ETedPawnUpgradeType UpgradeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "ReceiveUpgradeActivated");

	Params::TedPawn_ReceiveUpgradeActivated Parms{};

	Parms.UpgradeType = UpgradeType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedPawn.RemoveWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TSubclassOf<class UTedWeapon>     WeaponClass                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bSkipNotify                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::RemoveWeapon(const TSubclassOf<class UTedWeapon> WeaponClass, const bool bSkipNotify)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "RemoveWeapon");

	Params::TedPawn_RemoveWeapon Parms{};

	Parms.WeaponClass = WeaponClass;
	Parms.bSkipNotify = bSkipNotify;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.Server_DestroyActorDelayed
// (Net, NetReliable, Native, Event, Public, NetServer)

void ATedPawn::Server_DestroyActorDelayed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "Server_DestroyActorDelayed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.SetAttackBehaviorEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bEnabled                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::SetAttackBehaviorEnabled(const bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "SetAttackBehaviorEnabled");

	Params::TedPawn_SetAttackBehaviorEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.SetCanBeDamagedDuringCinematic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bCanBeDamagedDuringCinematic                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::SetCanBeDamagedDuringCinematic(const bool bCanBeDamagedDuringCinematic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "SetCanBeDamagedDuringCinematic");

	Params::TedPawn_SetCanBeDamagedDuringCinematic Parms{};

	Parms.bCanBeDamagedDuringCinematic = bCanBeDamagedDuringCinematic;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.SetCurrentWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TSubclassOf<class UTedWeapon>     WeaponClass                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::SetCurrentWeapon(const TSubclassOf<class UTedWeapon> WeaponClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "SetCurrentWeapon");

	Params::TedPawn_SetCurrentWeapon Parms{};

	Parms.WeaponClass = WeaponClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.SetEvadeBehaviorEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bEnabled                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::SetEvadeBehaviorEnabled(const bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "SetEvadeBehaviorEnabled");

	Params::TedPawn_SetEvadeBehaviorEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.SetIdleBehaviorsEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bEnabled                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::SetIdleBehaviorsEnabled(const bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "SetIdleBehaviorsEnabled");

	Params::TedPawn_SetIdleBehaviorsEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.SetInvestigationBehaviorEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bEnabled                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::SetInvestigationBehaviorEnabled(const bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "SetInvestigationBehaviorEnabled");

	Params::TedPawn_SetInvestigationBehaviorEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.StartAutoRechargingWeapons
// (Native, Public, BlueprintCallable)

void ATedPawn::StartAutoRechargingWeapons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "StartAutoRechargingWeapons");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.StartRechargingWeapons
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bAutoRechargeOnly                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::StartRechargingWeapons(bool bAutoRechargeOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "StartRechargingWeapons");

	Params::TedPawn_StartRechargingWeapons Parms{};

	Parms.bAutoRechargeOnly = bAutoRechargeOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.StopRechargingWeapons
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bSkipAutoRecharge                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::StopRechargingWeapons(bool bSkipAutoRecharge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "StopRechargingWeapons");

	Params::TedPawn_StopRechargingWeapons Parms{};

	Parms.bSkipAutoRecharge = bSkipAutoRecharge;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.UpgradePawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const ETedPawnUpgradeTypeFlags          InUpgradeFlags                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawn::UpgradePawn(const ETedPawnUpgradeTypeFlags InUpgradeFlags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "UpgradePawn");

	Params::TedPawn_UpgradePawn Parms{};

	Parms.InUpgradeFlags = InUpgradeFlags;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.AreAllIdleBehaviorsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::AreAllIdleBehaviorsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "AreAllIdleBehaviorsEnabled");

	Params::TedPawn_AreAllIdleBehaviorsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.CanBeDamagedDuringCinematicMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::CanBeDamagedDuringCinematicMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "CanBeDamagedDuringCinematicMode");

	Params::TedPawn_CanBeDamagedDuringCinematicMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.CanFire
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::CanFire() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "CanFire");

	Params::TedPawn_CanFire Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.FindBestWeapon
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class ATedPawn*                   Target                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   TargetLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bDoWeaponDistanceCheck                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedWeapon*                 ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedWeapon* ATedPawn::FindBestWeapon(const class ATedPawn* Target, const struct FVector& TargetLocation, const bool bDoWeaponDistanceCheck) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "FindBestWeapon");

	Params::TedPawn_FindBestWeapon Parms{};

	Parms.Target = Target;
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.bDoWeaponDistanceCheck = bDoWeaponDistanceCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.FindBestWeaponClass
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class ATedPawn*                   Target                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   TargetLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UTedWeapon>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UTedWeapon> ATedPawn::FindBestWeaponClass(const class ATedPawn* Target, const struct FVector& TargetLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "FindBestWeaponClass");

	Params::TedPawn_FindBestWeaponClass Parms{};

	Parms.Target = Target;
	Parms.TargetLocation = std::move(TargetLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetAnimMontageFromSet
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              MontageId                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimMontage* ATedPawn::GetAnimMontageFromSet(const struct FGameplayTag& MontageId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetAnimMontageFromSet");

	Params::TedPawn_GetAnimMontageFromSet Parms{};

	Parms.MontageId = std::move(MontageId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetAnimMontageSetAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimMontageSet*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimMontageSet* ATedPawn::GetAnimMontageSetAsset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetAnimMontageSetAsset");

	Params::TedPawn_GetAnimMontageSetAsset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetAvailableWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TSubclassOf<class UTedWeapon>     WeaponClass                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bExactMatch                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedWeapon*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedWeapon* ATedPawn::GetAvailableWeapon(const TSubclassOf<class UTedWeapon> WeaponClass, const bool bExactMatch) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetAvailableWeapon");

	Params::TedPawn_GetAvailableWeapon Parms{};

	Parms.WeaponClass = WeaponClass;
	Parms.bExactMatch = bExactMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetAvailableWeaponClasses
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<TSubclassOf<class UTedWeapon>>   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)

TArray<TSubclassOf<class UTedWeapon>> ATedPawn::GetAvailableWeaponClasses() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetAvailableWeaponClasses");

	Params::TedPawn_GetAvailableWeaponClasses Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetAvailableWeapons
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UTedWeapon*>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UTedWeapon*> ATedPawn::GetAvailableWeapons() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetAvailableWeapons");

	Params::TedPawn_GetAvailableWeapons Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetCurrentMontage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimMontage*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimMontage* ATedPawn::GetCurrentMontage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetCurrentMontage");

	Params::TedPawn_GetCurrentMontage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetCurrentWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedWeapon*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedWeapon* ATedPawn::GetCurrentWeapon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetCurrentWeapon");

	Params::TedPawn_GetCurrentWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetCurrentWeaponClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UTedWeapon>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UTedWeapon> ATedPawn::GetCurrentWeaponClass() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetCurrentWeaponClass");

	Params::TedPawn_GetCurrentWeaponClass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetDefinitionId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag ATedPawn::GetDefinitionId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetDefinitionId");

	Params::TedPawn_GetDefinitionId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetEntityDomain
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag ATedPawn::GetEntityDomain() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetEntityDomain");

	Params::TedPawn_GetEntityDomain Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetFireTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* ATedPawn::GetFireTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetFireTarget");

	Params::TedPawn_GetFireTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetFireTargetLocation
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ATedPawn::GetFireTargetLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetFireTargetLocation");

	Params::TedPawn_GetFireTargetLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetFocalPoint
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ATedPawn::GetFocalPoint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetFocalPoint");

	Params::TedPawn_GetFocalPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetFocusActor
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* ATedPawn::GetFocusActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetFocusActor");

	Params::TedPawn_GetFocusActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetFocusLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ATedPawn::GetFocusLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetFocusLocation");

	Params::TedPawn_GetFocusLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetFocusRotation
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator ATedPawn::GetFocusRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetFocusRotation");

	Params::TedPawn_GetFocusRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetFoWRevealRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ATedPawn::GetFoWRevealRadius() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetFoWRevealRadius");

	Params::TedPawn_GetFoWRevealRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetFoWVisionRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ATedPawn::GetFoWVisionRadius() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetFoWVisionRadius");

	Params::TedPawn_GetFoWVisionRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetGainedExperience
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ATedPawn::GetGainedExperience() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetGainedExperience");

	Params::TedPawn_GetGainedExperience Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ATedPawn::GetHealth() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetHealth");

	Params::TedPawn_GetHealth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetHealthMax
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ATedPawn::GetHealthMax() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetHealthMax");

	Params::TedPawn_GetHealthMax Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetHealthPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ATedPawn::GetHealthPct() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetHealthPct");

	Params::TedPawn_GetHealthPct Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetLastDamageInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FTedPawnDamageInfo         ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FTedPawnDamageInfo ATedPawn::GetLastDamageInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetLastDamageInfo");

	Params::TedPawn_GetLastDamageInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetLifeTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ATedPawn::GetLifeTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetLifeTime");

	Params::TedPawn_GetLifeTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetLoadSound
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class USoundCue>         ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class USoundCue> ATedPawn::GetLoadSound() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetLoadSound");

	Params::TedPawn_GetLoadSound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetOwningFaction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedFaction                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedFaction ATedPawn::GetOwningFaction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetOwningFaction");

	Params::TedPawn_GetOwningFaction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetOwningPlayerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedPlayerController*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedPlayerController* ATedPawn::GetOwningPlayerController() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetOwningPlayerController");

	Params::TedPawn_GetOwningPlayerController Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetOwningPlayerData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedPlayerData*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedPlayerData* ATedPawn::GetOwningPlayerData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetOwningPlayerData");

	Params::TedPawn_GetOwningPlayerData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetOwningPlayerID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedPlayerID                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedPlayerID ATedPawn::GetOwningPlayerID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetOwningPlayerID");

	Params::TedPawn_GetOwningPlayerID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetOwningPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    bReturnOriginalOwner                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedPlayerState*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedPlayerState* ATedPawn::GetOwningPlayerState(bool bReturnOriginalOwner) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetOwningPlayerState");

	Params::TedPawn_GetOwningPlayerState Parms{};

	Parms.bReturnOriginalOwner = bReturnOriginalOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetPawnContainerOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedPawn*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedPawn* ATedPawn::GetPawnContainerOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetPawnContainerOwner");

	Params::TedPawn_GetPawnContainerOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetPawnFactionFromDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedFaction                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedFaction ATedPawn::GetPawnFactionFromDefinition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetPawnFactionFromDefinition");

	Params::TedPawn_GetPawnFactionFromDefinition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetPawnUnderAttackAnnouncement
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// TSubclassOf<class UTedAnnouncement>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UTedAnnouncement> ATedPawn::GetPawnUnderAttackAnnouncement() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetPawnUnderAttackAnnouncement");

	Params::TedPawn_GetPawnUnderAttackAnnouncement Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetPhysicalFireStartLoc
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             PhysicalFireLocSocketNameOverride                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ATedPawn::GetPhysicalFireStartLoc(class FName PhysicalFireLocSocketNameOverride) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetPhysicalFireStartLoc");

	Params::TedPawn_GetPhysicalFireStartLoc Parms{};

	Parms.PhysicalFireLocSocketNameOverride = PhysicalFireLocSocketNameOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetPower
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ATedPawn::GetPower() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetPower");

	Params::TedPawn_GetPower Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetPowerBase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ATedPawn::GetPowerBase() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetPowerBase");

	Params::TedPawn_GetPowerBase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetRemainingLifeTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ATedPawn::GetRemainingLifeTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetRemainingLifeTime");

	Params::TedPawn_GetRemainingLifeTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetTargetingDomains
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagContainer      ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGameplayTagContainer ATedPawn::GetTargetingDomains() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetTargetingDomains");

	Params::TedPawn_GetTargetingDomains Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetUnloadSound
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class USoundCue>         ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class USoundCue> ATedPawn::GetUnloadSound() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetUnloadSound");

	Params::TedPawn_GetUnloadSound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetVeterancyLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedVeterancyLevel                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedVeterancyLevel ATedPawn::GetVeterancyLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetVeterancyLevel");

	Params::TedPawn_GetVeterancyLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.GetVeterancyProgressToNextLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ATedPawn::GetVeterancyProgressToNextLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "GetVeterancyProgressToNextLevel");

	Params::TedPawn_GetVeterancyProgressToNextLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.HandleCreditsGatheredStatusEffect
// (Final, Native, Public, BlueprintCallable, Const)

void ATedPawn::HandleCreditsGatheredStatusEffect() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "HandleCreditsGatheredStatusEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawn.HasAmmoForWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedWeapon*                 Weapon                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::HasAmmoForWeapon(const class UTedWeapon* Weapon) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "HasAmmoForWeapon");

	Params::TedPawn_HasAmmoForWeapon Parms{};

	Parms.Weapon = Weapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.HasAnimMontageInSet
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              MontageId                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::HasAnimMontageInSet(const struct FGameplayTag& MontageId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "HasAnimMontageInSet");

	Params::TedPawn_HasAnimMontageInSet Parms{};

	Parms.MontageId = std::move(MontageId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.HasAnyWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::HasAnyWeapon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "HasAnyWeapon");

	Params::TedPawn_HasAnyWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.HasFireTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::HasFireTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "HasFireTarget");

	Params::TedPawn_HasFireTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.HasFocus
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::HasFocus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "HasFocus");

	Params::TedPawn_HasFocus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.HasMaxAmmoForWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedWeapon*                 Weapon                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::HasMaxAmmoForWeapon(const class UTedWeapon* Weapon) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "HasMaxAmmoForWeapon");

	Params::TedPawn_HasMaxAmmoForWeapon Parms{};

	Parms.Weapon = Weapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.HasUpgrade
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const ETedPawnUpgradeType               UpgradeType                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::HasUpgrade(const ETedPawnUpgradeType UpgradeType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "HasUpgrade");

	Params::TedPawn_HasUpgrade Parms{};

	Parms.UpgradeType = UpgradeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.HasWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TSubclassOf<class UTedWeapon>     WeaponClass                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::HasWeapon(const TSubclassOf<class UTedWeapon> WeaponClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "HasWeapon");

	Params::TedPawn_HasWeapon Parms{};

	Parms.WeaponClass = WeaponClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.HasWeaponSelected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::HasWeaponSelected() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "HasWeaponSelected");

	Params::TedPawn_HasWeaponSelected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.IsAlive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::IsAlive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "IsAlive");

	Params::TedPawn_IsAlive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.IsAttackBehaviorEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::IsAttackBehaviorEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "IsAttackBehaviorEnabled");

	Params::TedPawn_IsAttackBehaviorEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.IsDamaged
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::IsDamaged() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "IsDamaged");

	Params::TedPawn_IsDamaged Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.IsEvadeBehaviorEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::IsEvadeBehaviorEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "IsEvadeBehaviorEnabled");

	Params::TedPawn_IsEvadeBehaviorEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.IsFogOfWarVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const uint8                             ChannelId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::IsFogOfWarVisible(const uint8 ChannelId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "IsFogOfWarVisible");

	Params::TedPawn_IsFogOfWarVisible Parms{};

	Parms.ChannelId = ChannelId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.IsFogOfWarVisibleFor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class ATedPlayerController*       TedPC                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::IsFogOfWarVisibleFor(const class ATedPlayerController* TedPC) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "IsFogOfWarVisibleFor");

	Params::TedPawn_IsFogOfWarVisibleFor Parms{};

	Parms.TedPC = TedPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.IsFogOfWarVisibleForLocalPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::IsFogOfWarVisibleForLocalPlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "IsFogOfWarVisibleForLocalPlayer");

	Params::TedPawn_IsFogOfWarVisibleForLocalPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.IsFogOfWarVisibleForLocalPlayerReal
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::IsFogOfWarVisibleForLocalPlayerReal() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "IsFogOfWarVisibleForLocalPlayerReal");

	Params::TedPawn_IsFogOfWarVisibleForLocalPlayerReal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.IsInContainer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::IsInContainer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "IsInContainer");

	Params::TedPawn_IsInContainer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.IsInEntityDomain
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              InEntityDomain                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::IsInEntityDomain(const struct FGameplayTag& InEntityDomain) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "IsInEntityDomain");

	Params::TedPawn_IsInEntityDomain Parms{};

	Parms.InEntityDomain = std::move(InEntityDomain);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.IsInvestigationBehaviorEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::IsInvestigationBehaviorEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "IsInvestigationBehaviorEnabled");

	Params::TedPawn_IsInvestigationBehaviorEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.IsReachargingWeapons
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::IsReachargingWeapons() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "IsReachargingWeapons");

	Params::TedPawn_IsReachargingWeapons Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.IsResearchingUpgrade
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::IsResearchingUpgrade() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "IsResearchingUpgrade");

	Params::TedPawn_IsResearchingUpgrade Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.IsUpgraded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::IsUpgraded() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "IsUpgraded");

	Params::TedPawn_IsUpgraded Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.IsUpgradeResearchRunning
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::IsUpgradeResearchRunning() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "IsUpgradeResearchRunning");

	Params::TedPawn_IsUpgradeResearchRunning Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.K2_GetAnimMontagesFromSet
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              MontageId                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UAnimMontage*>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UAnimMontage*> ATedPawn::K2_GetAnimMontagesFromSet(const struct FGameplayTag& MontageId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "K2_GetAnimMontagesFromSet");

	Params::TedPawn_K2_GetAnimMontagesFromSet Parms{};

	Parms.MontageId = std::move(MontageId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.K2_GetLocalVisibilityChannel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 ATedPawn::K2_GetLocalVisibilityChannel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "K2_GetLocalVisibilityChannel");

	Params::TedPawn_K2_GetLocalVisibilityChannel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.K2_WasEverVisibleLocally
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::K2_WasEverVisibleLocally() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "K2_WasEverVisibleLocally");

	Params::TedPawn_K2_WasEverVisibleLocally Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.ShouldRegisterInUpgradeSystem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::ShouldRegisterInUpgradeSystem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "ShouldRegisterInUpgradeSystem");

	Params::TedPawn_ShouldRegisterInUpgradeSystem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.TedGetActiveEffectCount
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TSubclassOf<class UGameplayEffect>&Effect                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ATedPawn::TedGetActiveEffectCount(const TSubclassOf<class UGameplayEffect>& Effect) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "TedGetActiveEffectCount");

	Params::TedPawn_TedGetActiveEffectCount Parms{};

	Parms.Effect = Effect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.TedHasAnyActiveEffect
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagContainer&     InContainer                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bRequireAll                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::TedHasAnyActiveEffect(const struct FGameplayTagContainer& InContainer, bool bRequireAll) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "TedHasAnyActiveEffect");

	Params::TedPawn_TedHasAnyActiveEffect Parms{};

	Parms.InContainer = std::move(InContainer);
	Parms.bRequireAll = bRequireAll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.TedIsEffectActive
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TSubclassOf<class UGameplayEffect>&Effect                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::TedIsEffectActive(const TSubclassOf<class UGameplayEffect>& Effect) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "TedIsEffectActive");

	Params::TedPawn_TedIsEffectActive Parms{};

	Parms.Effect = Effect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawn.WasRecentlyRenderedOnScreen
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Tolerance                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPawn::WasRecentlyRenderedOnScreen(float Tolerance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawn", "WasRecentlyRenderedOnScreen");

	Params::TedPawn_WasRecentlyRenderedOnScreen Parms{};

	Parms.Tolerance = Tolerance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureBase.Client_OnUnitSpawned
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class ATedUnitBase*                     SpawnedUnit                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedStructureBase::Client_OnUnitSpawned(class ATedUnitBase* SpawnedUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "Client_OnUnitSpawned");

	Params::TedStructureBase_Client_OnUnitSpawned Parms{};

	Parms.SpawnedUnit = SpawnedUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructureBase.FinishDeconstruction
// (Native, Public, BlueprintCallable)

void ATedStructureBase::FinishDeconstruction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "FinishDeconstruction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructureBase.K2_OnBeginSellingStructure
// (Event, Public, BlueprintEvent)

void ATedStructureBase::K2_OnBeginSellingStructure()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "K2_OnBeginSellingStructure");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedStructureBase.K2_OnEndSellingStructure
// (Event, Public, BlueprintEvent)

void ATedStructureBase::K2_OnEndSellingStructure()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "K2_OnEndSellingStructure");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedStructureBase.K2_OnUnitSpawned
// (Event, Public, BlueprintEvent)
// Parameters:
// class ATedUnitBase*                     SpawnedUnit                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedUnitBase*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedUnitBase* ATedStructureBase::K2_OnUnitSpawned(class ATedUnitBase* SpawnedUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "K2_OnUnitSpawned");

	Params::TedStructureBase_K2_OnUnitSpawned Parms{};

	Parms.SpawnedUnit = SpawnedUnit;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureBase.Multicast_OnCaptured
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// ETedPlayerID                            NewPlayerID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedStructureBase::Multicast_OnCaptured(ETedPlayerID NewPlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "Multicast_OnCaptured");

	Params::TedStructureBase_Multicast_OnCaptured Parms{};

	Parms.NewPlayerID = NewPlayerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructureBase.NetMulticast_OnUnitSpawned
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// class ATedUnitBase*                     SpawnedUnit                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedStructureBase::NetMulticast_OnUnitSpawned(class ATedUnitBase* SpawnedUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "NetMulticast_OnUnitSpawned");

	Params::TedStructureBase_NetMulticast_OnUnitSpawned Parms{};

	Parms.SpawnedUnit = SpawnedUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructureBase.OnCapturedCosmetic
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// ETedPlayerID                            NewPlayerID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedStructureBase::OnCapturedCosmetic(ETedPlayerID NewPlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "OnCapturedCosmetic");

	Params::TedStructureBase_OnCapturedCosmetic Parms{};

	Parms.NewPlayerID = NewPlayerID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedStructureBase.OnPlaySpawnEffectsCosmetic
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ATedStructureBase::OnPlaySpawnEffectsCosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "OnPlaySpawnEffectsCosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedStructureBase.OnRep_Alignment
// (Final, Native, Protected)

void ATedStructureBase::OnRep_Alignment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "OnRep_Alignment");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructureBase.OnRep_PowerState
// (Native, Protected)

void ATedStructureBase::OnRep_PowerState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "OnRep_PowerState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructureBase.OnRep_RallyPointTarget
// (Final, Native, Protected)

void ATedStructureBase::OnRep_RallyPointTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "OnRep_RallyPointTarget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructureBase.OnRep_Repairing
// (Native, Protected)

void ATedStructureBase::OnRep_Repairing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "OnRep_Repairing");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructureBase.OnRep_ReplicatedBuildRadius
// (Final, Native, Protected)

void ATedStructureBase::OnRep_ReplicatedBuildRadius()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "OnRep_ReplicatedBuildRadius");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructureBase.OnRep_StructureSell
// (Final, Native, Protected)

void ATedStructureBase::OnRep_StructureSell()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "OnRep_StructureSell");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructureBase.ReceiveHandleConstructionVisuals
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bInConstructing                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedStructureBase::ReceiveHandleConstructionVisuals(const bool bInConstructing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "ReceiveHandleConstructionVisuals");

	Params::TedStructureBase_ReceiveHandleConstructionVisuals Parms{};

	Parms.bInConstructing = bInConstructing;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedStructureBase.ReceiveHandlePowerStateVisuals
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bBlackedOut                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bUserPowered                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bSufficientPower                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedStructureBase::ReceiveHandlePowerStateVisuals(const bool bBlackedOut, const bool bUserPowered, const bool bSufficientPower)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "ReceiveHandlePowerStateVisuals");

	Params::TedStructureBase_ReceiveHandlePowerStateVisuals Parms{};

	Parms.bBlackedOut = bBlackedOut;
	Parms.bUserPowered = bUserPowered;
	Parms.bSufficientPower = bSufficientPower;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedStructureBase.ReceiveOnCaptured
// (Event, Public, BlueprintEvent)
// Parameters:
// ETedPlayerID                            NewPlayerID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedStructureBase::ReceiveOnCaptured(ETedPlayerID NewPlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "ReceiveOnCaptured");

	Params::TedStructureBase_ReceiveOnCaptured Parms{};

	Parms.NewPlayerID = NewPlayerID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedStructureBase.SetConstructionPlayRateOverride
// (Final, BlueprintCosmetic, Native, Protected, BlueprintCallable)
// Parameters:
// const bool                              bSet                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InPlayRate                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedStructureBase::SetConstructionPlayRateOverride(const bool bSet, const float InPlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "SetConstructionPlayRateOverride");

	Params::TedStructureBase_SetConstructionPlayRateOverride Parms{};

	Parms.bSet = bSet;
	Parms.InPlayRate = InPlayRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructureBase.SetPowerStateFlag
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const ETedPowerStateFlag                InFlag                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInEnable                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedStructureBase::SetPowerStateFlag(const ETedPowerStateFlag InFlag, const bool bInEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "SetPowerStateFlag");

	Params::TedStructureBase_SetPowerStateFlag Parms{};

	Parms.InFlag = InFlag;
	Parms.bInEnable = bInEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructureBase.SetRepairing
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bInRepairing                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedStructureBase::SetRepairing(const bool bInRepairing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "SetRepairing");

	Params::TedStructureBase_SetRepairing Parms{};

	Parms.bInRepairing = bInRepairing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructureBase.SpawnUnit
// (Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class ATedUnitBase>         InUnitClass                                            (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedStructureUnitSpawnMode              InMode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedUnitBase*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedUnitBase* ATedStructureBase::SpawnUnit(TSubclassOf<class ATedUnitBase> InUnitClass, ETedStructureUnitSpawnMode InMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "SpawnUnit");

	Params::TedStructureBase_SpawnUnit Parms{};

	Parms.InUnitClass = InUnitClass;
	Parms.InMode = InMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureBase.StartDeconstructing
// (Native, Public, BlueprintCallable)

void ATedStructureBase::StartDeconstructing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "StartDeconstructing");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructureBase.CanSpawnUnit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedStructureBase::CanSpawnUnit() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "CanSpawnUnit");

	Params::TedStructureBase_CanSpawnUnit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureBase.GetAlignment
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const bool                              bIgnoreOffset                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedStructureAlignment                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedStructureAlignment ATedStructureBase::GetAlignment(const bool bIgnoreOffset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "GetAlignment");

	Params::TedStructureBase_GetAlignment Parms{};

	Parms.bIgnoreOffset = bIgnoreOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureBase.GetDefinitionAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedStructureDefinitionAsset*ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedStructureDefinitionAsset* ATedStructureBase::GetDefinitionAsset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "GetDefinitionAsset");

	Params::TedStructureBase_GetDefinitionAsset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureBase.GetNavModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBoxComponent*                    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBoxComponent* ATedStructureBase::GetNavModifier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "GetNavModifier");

	Params::TedStructureBase_GetNavModifier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureBase.GetPowerStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedPowerStatus                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedPowerStatus ATedStructureBase::GetPowerStatus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "GetPowerStatus");

	Params::TedStructureBase_GetPowerStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureBase.GetStructureCaptureBeginTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ATedStructureBase::GetStructureCaptureBeginTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "GetStructureCaptureBeginTime");

	Params::TedStructureBase_GetStructureCaptureBeginTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureBase.GetStructureCaptureProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ATedStructureBase::GetStructureCaptureProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "GetStructureCaptureProgress");

	Params::TedStructureBase_GetStructureCaptureProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureBase.GetStructureCaptureTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ATedStructureBase::GetStructureCaptureTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "GetStructureCaptureTime");

	Params::TedStructureBase_GetStructureCaptureTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureBase.GetStructureGridSize
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FIntPoint                  ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FIntPoint ATedStructureBase::GetStructureGridSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "GetStructureGridSize");

	Params::TedStructureBase_GetStructureGridSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureBase.GetStructureGridSizeAligned
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const ETedStructureAlignment            InAlignment                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FIntPoint                  ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FIntPoint ATedStructureBase::GetStructureGridSizeAligned(const ETedStructureAlignment InAlignment) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "GetStructureGridSizeAligned");

	Params::TedStructureBase_GetStructureGridSizeAligned Parms{};

	Parms.InAlignment = InAlignment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureBase.GetStructureSellBeginTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ATedStructureBase::GetStructureSellBeginTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "GetStructureSellBeginTime");

	Params::TedStructureBase_GetStructureSellBeginTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureBase.GetStructureSellProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ATedStructureBase::GetStructureSellProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "GetStructureSellProgress");

	Params::TedStructureBase_GetStructureSellProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureBase.GetStructureSellTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ATedStructureBase::GetStructureSellTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "GetStructureSellTime");

	Params::TedStructureBase_GetStructureSellTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureBase.GetTempStaticMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UStaticMeshComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UStaticMeshComponent* ATedStructureBase::GetTempStaticMesh() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "GetTempStaticMesh");

	Params::TedStructureBase_GetTempStaticMesh Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureBase.HasPowerStateFlag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const ETedPowerStateFlag                InFlag                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedStructureBase::HasPowerStateFlag(const ETedPowerStateFlag InFlag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "HasPowerStateFlag");

	Params::TedStructureBase_HasPowerStateFlag Parms{};

	Parms.InFlag = InFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureBase.IsConstructing
// (Final, BlueprintCosmetic, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedStructureBase::IsConstructing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "IsConstructing");

	Params::TedStructureBase_IsConstructing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureBase.IsRepairing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedStructureBase::IsRepairing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "IsRepairing");

	Params::TedStructureBase_IsRepairing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureBase.IsStructureBeingCaptured
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedStructureBase::IsStructureBeingCaptured() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "IsStructureBeingCaptured");

	Params::TedStructureBase_IsStructureBeingCaptured Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureBase.IsStructureBeingSold
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedStructureBase::IsStructureBeingSold() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureBase", "IsStructureBeingSold");

	Params::TedStructureBase_IsStructureBeingSold Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureHarvester.OnHarvestingSpeedChangedCosmetic
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// EStructureHarvesterStage                NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedStructureHarvester::OnHarvestingSpeedChangedCosmetic(EStructureHarvesterStage NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureHarvester", "OnHarvestingSpeedChangedCosmetic");

	Params::TedStructureHarvester_OnHarvestingSpeedChangedCosmetic Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedStructureHarvester.OnRep_HarvestingSpeed
// (Final, Native, Protected)

void ATedStructureHarvester::OnRep_HarvestingSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureHarvester", "OnRep_HarvestingSpeed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructureHarvester.GetCurrentHarvestingSpeed
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EStructureHarvesterStage                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EStructureHarvesterStage ATedStructureHarvester::GetCurrentHarvestingSpeed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureHarvester", "GetCurrentHarvestingSpeed");

	Params::TedStructureHarvester_GetCurrentHarvestingSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureRefinery_DYN.GetPawnContainerComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedPawnContainerComponent*       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedPawnContainerComponent* ATedStructureRefinery_DYN::GetPawnContainerComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureRefinery_DYN", "GetPawnContainerComponent");

	Params::TedStructureRefinery_DYN_GetPawnContainerComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureRefinery_DYN.GetRefineryExitLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D ATedStructureRefinery_DYN::GetRefineryExitLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureRefinery_DYN", "GetRefineryExitLocation");

	Params::TedStructureRefinery_DYN_GetRefineryExitLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureRefinery_DYN.IsRecallActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedStructureRefinery_DYN::IsRecallActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureRefinery_DYN", "IsRecallActive");

	Params::TedStructureRefinery_DYN_IsRecallActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIManager_Utility.GetUtilityAIBrain
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UUtilityAIBrain*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUtilityAIBrain* UAIManager_Utility::GetUtilityAIBrain() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIManager_Utility", "GetUtilityAIBrain");

	Params::AIManager_Utility_GetUtilityAIBrain Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedHotspotFunctionsLibrary.AddHotspotAtLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedHotspotConfig*          Config                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedHotspotHandle                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTedHotspotHandle UTedHotspotFunctionsLibrary::AddHotspotAtLocation(const class UObject* WorldContext, const class UTedHotspotConfig* Config, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedHotspotFunctionsLibrary", "AddHotspotAtLocation");

	Params::TedHotspotFunctionsLibrary_AddHotspotAtLocation Parms{};

	Parms.WorldContext = WorldContext;
	Parms.Config = Config;
	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedHotspotFunctionsLibrary.AddHotspotAttached
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedHotspotConfig*          Config                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     Target                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedHotspotHandle                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTedHotspotHandle UTedHotspotFunctionsLibrary::AddHotspotAttached(const class UObject* WorldContext, const class UTedHotspotConfig* Config, const class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedHotspotFunctionsLibrary", "AddHotspotAttached");

	Params::TedHotspotFunctionsLibrary_AddHotspotAttached Parms{};

	Parms.WorldContext = WorldContext;
	Parms.Config = Config;
	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedHotspotFunctionsLibrary.RemoveHotspotByHandle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedHotspotHandle&         Handle                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedHotspotFunctionsLibrary::RemoveHotspotByHandle(const class UObject* WorldContext, const struct FTedHotspotHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedHotspotFunctionsLibrary", "RemoveHotspotByHandle");

	Params::TedHotspotFunctionsLibrary_RemoveHotspotByHandle Parms{};

	Parms.WorldContext = WorldContext;
	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedHotspotFunctionsLibrary.RemoveHotspotByTarget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     Target                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedHotspotFunctionsLibrary::RemoveHotspotByTarget(const class UObject* WorldContext, const class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedHotspotFunctionsLibrary", "RemoveHotspotByTarget");

	Params::TedHotspotFunctionsLibrary_RemoveHotspotByTarget Parms{};

	Parms.WorldContext = WorldContext;
	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission.Activate
// (Final, Native, Public, BlueprintCallable)

void UAIMission::Activate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "Activate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission.AddPawnsToSquad
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class ATedPawn*>&          Pawns                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UAIMission::AddPawnsToSquad(const TArray<class ATedPawn*>& Pawns)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "AddPawnsToSquad");

	Params::AIMission_AddPawnsToSquad Parms{};

	Parms.Pawns = std::move(Pawns);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission.AddPawnToSquad
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ATedPawn*                         Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission::AddPawnToSquad(class ATedPawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "AddPawnToSquad");

	Params::AIMission_AddPawnToSquad Parms{};

	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission.ClearSquad
// (Final, Native, Public, BlueprintCallable)

void UAIMission::ClearSquad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "ClearSquad");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission.ClearSquadRallyPoint
// (Final, Native, Public, BlueprintCallable)

void UAIMission::ClearSquadRallyPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "ClearSquadRallyPoint");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission.Deactivate
// (Final, Native, Public, BlueprintCallable)

void UAIMission::Deactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "Deactivate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission.RemovePawnFromSquad
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ATedPawn*                         Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission::RemovePawnFromSquad(class ATedPawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "RemovePawnFromSquad");

	Params::AIMission_RemovePawnFromSquad Parms{};

	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission.RemovePawnsFromSquad
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class ATedPawn*>&          Pawns                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UAIMission::RemovePawnsFromSquad(const TArray<class ATedPawn*>& Pawns)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "RemovePawnsFromSquad");

	Params::AIMission_RemovePawnsFromSquad Parms{};

	Parms.Pawns = std::move(Pawns);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission.Restart
// (Native, Public, BlueprintCallable)

void UAIMission::Restart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "Restart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission.SetActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bActive_0                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission::SetActive(const bool bActive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "SetActive");

	Params::AIMission_SetActive Parms{};

	Parms.bActive_0 = bActive_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission.SetAlwaysRerunSquadBuildOrderOnRestart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bAlwaysRerunSquadBuildOrderOnRestart_0                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission::SetAlwaysRerunSquadBuildOrderOnRestart(const bool bAlwaysRerunSquadBuildOrderOnRestart_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "SetAlwaysRerunSquadBuildOrderOnRestart");

	Params::AIMission_SetAlwaysRerunSquadBuildOrderOnRestart Parms{};

	Parms.bAlwaysRerunSquadBuildOrderOnRestart_0 = bAlwaysRerunSquadBuildOrderOnRestart_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission.SetCanStealSquadMembers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bCanStealSquadMembers_0                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission::SetCanStealSquadMembers(const bool bCanStealSquadMembers_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "SetCanStealSquadMembers");

	Params::AIMission_SetCanStealSquadMembers Parms{};

	Parms.bCanStealSquadMembers_0 = bCanStealSquadMembers_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission.SetDiedSquadPawnProductionSettings
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAIMissionDiedSquadPawnProductionSettings&DiedSquadPawnProductionSettings_0                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAIMission::SetDiedSquadPawnProductionSettings(const struct FAIMissionDiedSquadPawnProductionSettings& DiedSquadPawnProductionSettings_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "SetDiedSquadPawnProductionSettings");

	Params::AIMission_SetDiedSquadPawnProductionSettings Parms{};

	Parms.DiedSquadPawnProductionSettings_0 = std::move(DiedSquadPawnProductionSettings_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission.SetFriendlyName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    FriendlyName_0                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission::SetFriendlyName(const class FString& FriendlyName_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "SetFriendlyName");

	Params::AIMission_SetFriendlyName Parms{};

	Parms.FriendlyName_0 = std::move(FriendlyName_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission.SetMissionPriority
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             MissionPriority_0                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission::SetMissionPriority(const int32 MissionPriority_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "SetMissionPriority");

	Params::AIMission_SetMissionPriority Parms{};

	Parms.MissionPriority_0 = MissionPriority_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission.SetMissionTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     MissionsTags                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAIMission::SetMissionTags(const struct FGameplayTagContainer& MissionsTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "SetMissionTags");

	Params::AIMission_SetMissionTags Parms{};

	Parms.MissionsTags = std::move(MissionsTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission.SetRemoveOnFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bRemoveOnFinish_0                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission::SetRemoveOnFinish(const bool bRemoveOnFinish_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "SetRemoveOnFinish");

	Params::AIMission_SetRemoveOnFinish Parms{};

	Parms.bRemoveOnFinish_0 = bRemoveOnFinish_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission.SetRequestSquadPawnProductionWhenDied
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bRequestSquadPawnProductionWhenDied_0                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission::SetRequestSquadPawnProductionWhenDied(const bool bRequestSquadPawnProductionWhenDied_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "SetRequestSquadPawnProductionWhenDied");

	Params::AIMission_SetRequestSquadPawnProductionWhenDied Parms{};

	Parms.bRequestSquadPawnProductionWhenDied_0 = bRequestSquadPawnProductionWhenDied_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission.SetRequiresFullSquad
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bRequiresFullSquad_0                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission::SetRequiresFullSquad(const bool bRequiresFullSquad_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "SetRequiresFullSquad");

	Params::AIMission_SetRequiresFullSquad Parms{};

	Parms.bRequiresFullSquad_0 = bRequiresFullSquad_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission.SetSquadBuildOrder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UAIDefinition_BuildOrder*   SquadBuildOrder_0                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission::SetSquadBuildOrder(const class UAIDefinition_BuildOrder* SquadBuildOrder_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "SetSquadBuildOrder");

	Params::AIMission_SetSquadBuildOrder Parms{};

	Parms.SquadBuildOrder_0 = SquadBuildOrder_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission.SetSquadLocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bLockSquad_0                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission::SetSquadLocked(const bool bLockSquad_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "SetSquadLocked");

	Params::AIMission_SetSquadLocked Parms{};

	Parms.bLockSquad_0 = bLockSquad_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission.SetSquadProductionLocation
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAITargetLocation&         SquadProductionLocation_0                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UAIMission::SetSquadProductionLocation(const struct FAITargetLocation& SquadProductionLocation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "SetSquadProductionLocation");

	Params::AIMission_SetSquadProductionLocation Parms{};

	Parms.SquadProductionLocation_0 = std::move(SquadProductionLocation_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission.SetSquadRallyPoint
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAITargetLocation&         SquadRallyPoint_0                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UAIMission::SetSquadRallyPoint(const struct FAITargetLocation& SquadRallyPoint_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "SetSquadRallyPoint");

	Params::AIMission_SetSquadRallyPoint Parms{};

	Parms.SquadRallyPoint_0 = std::move(SquadRallyPoint_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission.SetStartWhenReady
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bStartWhenReady_0                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission::SetStartWhenReady(const bool bStartWhenReady_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "SetStartWhenReady");

	Params::AIMission_SetStartWhenReady Parms{};

	Parms.bStartWhenReady_0 = bStartWhenReady_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission.StartWhenReady
// (Final, Native, Public, BlueprintCallable)

void UAIMission::StartWhenReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "StartWhenReady");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission.CanStealSquadMembers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIMission::CanStealSquadMembers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "CanStealSquadMembers");

	Params::AIMission_CanStealSquadMembers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission.GetDiedSquadPawnProductionSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAIMissionDiedSquadPawnProductionSettingsReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FAIMissionDiedSquadPawnProductionSettings UAIMission::GetDiedSquadPawnProductionSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "GetDiedSquadPawnProductionSettings");

	Params::AIMission_GetDiedSquadPawnProductionSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission.GetDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAIMission::GetDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "GetDisplayName");

	Params::AIMission_GetDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission.GetFriendlyName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAIMission::GetFriendlyName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "GetFriendlyName");

	Params::AIMission_GetFriendlyName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission.GetMissionHandle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAIMissionHandle                 ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FAIMissionHandle UAIMission::GetMissionHandle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "GetMissionHandle");

	Params::AIMission_GetMissionHandle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission.GetMissionPriority
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAIMission::GetMissionPriority() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "GetMissionPriority");

	Params::AIMission_GetMissionPriority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission.GetMissionState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAIMissionState                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAIMissionState UAIMission::GetMissionState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "GetMissionState");

	Params::AIMission_GetMissionState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission.GetMissionTags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagContainer      ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGameplayTagContainer UAIMission::GetMissionTags() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "GetMissionTags");

	Params::AIMission_GetMissionTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission.GetSquadBuildOrder
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UAIDefinition_BuildOrder*   ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UAIDefinition_BuildOrder* UAIMission::GetSquadBuildOrder() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "GetSquadBuildOrder");

	Params::AIMission_GetSquadBuildOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission.GetSquadOrder
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAISquadOrder                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAISquadOrder UAIMission::GetSquadOrder() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "GetSquadOrder");

	Params::AIMission_GetSquadOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission.GetSquadProductionLocation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAITargetLocation          ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FAITargetLocation UAIMission::GetSquadProductionLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "GetSquadProductionLocation");

	Params::AIMission_GetSquadProductionLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission.GetSquadRallyPoint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAITargetLocation          ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FAITargetLocation UAIMission::GetSquadRallyPoint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "GetSquadRallyPoint");

	Params::AIMission_GetSquadRallyPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission.HasActiveSquadProduction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIMission::HasActiveSquadProduction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "HasActiveSquadProduction");

	Params::AIMission_HasActiveSquadProduction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission.HasPawnInSquad
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class ATedPawn*                   Pawn                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIMission::HasPawnInSquad(const class ATedPawn* Pawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "HasPawnInSquad");

	Params::AIMission_HasPawnInSquad Parms{};

	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission.HasSquad
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIMission::HasSquad() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "HasSquad");

	Params::AIMission_HasSquad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission.HasSquadRallyPoint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIMission::HasSquadRallyPoint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "HasSquadRallyPoint");

	Params::AIMission_HasSquadRallyPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIMission::IsActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "IsActive");

	Params::AIMission_IsActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission.IsSquadAlive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIMission::IsSquadAlive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "IsSquadAlive");

	Params::AIMission_IsSquadAlive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission.IsSquadLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIMission::IsSquadLocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "IsSquadLocked");

	Params::AIMission_IsSquadLocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission.IsSquadReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIMission::IsSquadReady() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "IsSquadReady");

	Params::AIMission_IsSquadReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission.IsSquadWiped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIMission::IsSquadWiped() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "IsSquadWiped");

	Params::AIMission_IsSquadWiped Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission.K2_GetSquadPawns
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class ATedPawn*>                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ATedPawn*> UAIMission::K2_GetSquadPawns() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "K2_GetSquadPawns");

	Params::AIMission_K2_GetSquadPawns Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission.RequiresFullSquad
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIMission::RequiresFullSquad() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "RequiresFullSquad");

	Params::AIMission_RequiresFullSquad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission.ShouldAlwaysRerunSquadBuildOrderOnRestart
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIMission::ShouldAlwaysRerunSquadBuildOrderOnRestart() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "ShouldAlwaysRerunSquadBuildOrderOnRestart");

	Params::AIMission_ShouldAlwaysRerunSquadBuildOrderOnRestart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission.ShouldRemoveOnFinish
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIMission::ShouldRemoveOnFinish() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "ShouldRemoveOnFinish");

	Params::AIMission_ShouldRemoveOnFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission.ShouldRequestSquadPawnProductionWhenDied
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIMission::ShouldRequestSquadPawnProductionWhenDied() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "ShouldRequestSquadPawnProductionWhenDied");

	Params::AIMission_ShouldRequestSquadPawnProductionWhenDied Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission.ShouldStartWhenReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIMission::ShouldStartWhenReady() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission", "ShouldStartWhenReady");

	Params::AIMission_ShouldStartWhenReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission_Attack.SetSquadTarget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAITarget&                 Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAIMission_Attack::SetSquadTarget(const struct FAITarget& Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_Attack", "SetSquadTarget");

	Params::AIMission_Attack_SetSquadTarget Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedEcsModule_Stealth.K2_SetStealthRevealEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ATedPawn*                         TargetPawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedEcsModule_Stealth::K2_SetStealthRevealEnabled(class ATedPawn* TargetPawn, bool bEnable, float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedEcsModule_Stealth", "K2_SetStealthRevealEnabled");

	Params::TedEcsModule_Stealth_K2_SetStealthRevealEnabled Parms{};

	Parms.TargetPawn = TargetPawn;
	Parms.bEnable = bEnable;
	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_CaptureStructures.SetMaxCaptureCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             MaxCaptureCount_0                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_CaptureStructures::SetMaxCaptureCount(const int32 MaxCaptureCount_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_CaptureStructures", "SetMaxCaptureCount");

	Params::AIMission_CaptureStructures_SetMaxCaptureCount Parms{};

	Parms.MaxCaptureCount_0 = MaxCaptureCount_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_CaptureStructures.SetTargetStructure
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ATedStructureBase*                Structure                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_CaptureStructures::SetTargetStructure(class ATedStructureBase* Structure)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_CaptureStructures", "SetTargetStructure");

	Params::AIMission_CaptureStructures_SetTargetStructure Parms{};

	Parms.Structure = Structure;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_CaptureStructures.SetTargetStructures
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class ATedStructureBase*>& Structures                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UAIMission_CaptureStructures::SetTargetStructures(const TArray<class ATedStructureBase*>& Structures)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_CaptureStructures", "SetTargetStructures");

	Params::AIMission_CaptureStructures_SetTargetStructures Parms{};

	Parms.Structures = std::move(Structures);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_CaptureStructures.SetTargetStructuresByActorTags
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     ActorTags                                              (ConstParm, Parm, NativeAccessSpecifierPublic)
// const bool                              bExactMatch                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_CaptureStructures::SetTargetStructuresByActorTags(const struct FGameplayTagContainer& ActorTags, const bool bExactMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_CaptureStructures", "SetTargetStructuresByActorTags");

	Params::AIMission_CaptureStructures_SetTargetStructuresByActorTags Parms{};

	Parms.ActorTags = std::move(ActorTags);
	Parms.bExactMatch = bExactMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_CaptureStructures.SetTargetStructuresByDefinitionIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     DefinitionIds                                          (ConstParm, Parm, NativeAccessSpecifierPublic)
// const bool                              bExactMatch                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_CaptureStructures::SetTargetStructuresByDefinitionIds(const struct FGameplayTagContainer& DefinitionIds, const bool bExactMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_CaptureStructures", "SetTargetStructuresByDefinitionIds");

	Params::AIMission_CaptureStructures_SetTargetStructuresByDefinitionIds Parms{};

	Parms.DefinitionIds = std::move(DefinitionIds);
	Parms.bExactMatch = bExactMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_CaptureStructures.GetMaxCaptureCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAIMission_CaptureStructures::GetMaxCaptureCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_CaptureStructures", "GetMaxCaptureCount");

	Params::AIMission_CaptureStructures_GetMaxCaptureCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSubtitleTrackInstance.PushSubtitlesToHUD
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const class FText&                      Text                                                   (Parm, NativeAccessSpecifierPublic)

void UTedSubtitleTrackInstance::PushSubtitlesToHUD(const class FText& Text) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSubtitleTrackInstance", "PushSubtitlesToHUD");

	Params::TedSubtitleTrackInstance_PushSubtitlesToHUD Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_Convoy.SetAISplineRoute
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class AAISplineRoute*             AISplineRoute                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_Convoy::SetAISplineRoute(const class AAISplineRoute* AISplineRoute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_Convoy", "SetAISplineRoute");

	Params::AIMission_Convoy_SetAISplineRoute Parms{};

	Parms.AISplineRoute = AISplineRoute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_Convoy.SetConvoyColumnUnit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ATedUnitBase*                     Unit                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_Convoy::SetConvoyColumnUnit(class ATedUnitBase* Unit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_Convoy", "SetConvoyColumnUnit");

	Params::AIMission_Convoy_SetConvoyColumnUnit Parms{};

	Parms.Unit = Unit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_Convoy.SetConvoyColumnUnits
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class ATedUnitBase*>&      Units                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UAIMission_Convoy::SetConvoyColumnUnits(const TArray<class ATedUnitBase*>& Units)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_Convoy", "SetConvoyColumnUnits");

	Params::AIMission_Convoy_SetConvoyColumnUnits Parms{};

	Parms.Units = std::move(Units);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_Convoy.SetConvoyColumnUnitsByDefinitionIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     DefinitionIds                                          (ConstParm, Parm, NativeAccessSpecifierPublic)
// const bool                              bExactMatch                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_Convoy::SetConvoyColumnUnitsByDefinitionIds(const struct FGameplayTagContainer& DefinitionIds, const bool bExactMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_Convoy", "SetConvoyColumnUnitsByDefinitionIds");

	Params::AIMission_Convoy_SetConvoyColumnUnitsByDefinitionIds Parms{};

	Parms.DefinitionIds = std::move(DefinitionIds);
	Parms.bExactMatch = bExactMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_Convoy.SetConvoyMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const EAIMissionConvoyMode              ConvoyMode_0                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_Convoy::SetConvoyMode(const EAIMissionConvoyMode ConvoyMode_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_Convoy", "SetConvoyMode");

	Params::AIMission_Convoy_SetConvoyMode Parms{};

	Parms.ConvoyMode_0 = ConvoyMode_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_Convoy.SetInfiniteConvoy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bInfiniteConvoy                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_Convoy::SetInfiniteConvoy(const bool bInfiniteConvoy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_Convoy", "SetInfiniteConvoy");

	Params::AIMission_Convoy_SetInfiniteConvoy Parms{};

	Parms.bInfiniteConvoy = bInfiniteConvoy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_Convoy.SetNumRepeats
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             NumRepeats_0                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bRestartRepeatsCounter                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_Convoy::SetNumRepeats(const int32 NumRepeats_0, const bool bRestartRepeatsCounter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_Convoy", "SetNumRepeats");

	Params::AIMission_Convoy_SetNumRepeats Parms{};

	Parms.NumRepeats_0 = NumRepeats_0;
	Parms.bRestartRepeatsCounter = bRestartRepeatsCounter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_Convoy.SetStartAtClosestWaypoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bStartAtClosestWaypoint_0                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_Convoy::SetStartAtClosestWaypoint(const bool bStartAtClosestWaypoint_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_Convoy", "SetStartAtClosestWaypoint");

	Params::AIMission_Convoy_SetStartAtClosestWaypoint Parms{};

	Parms.bStartAtClosestWaypoint_0 = bStartAtClosestWaypoint_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_Convoy.GetConvoyColumnUnits
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class ATedUnitBase*>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ATedUnitBase*> UAIMission_Convoy::GetConvoyColumnUnits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_Convoy", "GetConvoyColumnUnits");

	Params::AIMission_Convoy_GetConvoyColumnUnits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission_Convoy.GetConvoyMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAIMissionConvoyMode                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAIMissionConvoyMode UAIMission_Convoy::GetConvoyMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_Convoy", "GetConvoyMode");

	Params::AIMission_Convoy_GetConvoyMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission_Convoy.GetNumRepeats
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAIMission_Convoy::GetNumRepeats() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_Convoy", "GetNumRepeats");

	Params::AIMission_Convoy_GetNumRepeats Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission_Convoy.IsInfiniteConvoy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIMission_Convoy::IsInfiniteConvoy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_Convoy", "IsInfiniteConvoy");

	Params::AIMission_Convoy_IsInfiniteConvoy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission_Convoy.ShouldStartAtClosestWaypoint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIMission_Convoy::ShouldStartAtClosestWaypoint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_Convoy", "ShouldStartAtClosestWaypoint");

	Params::AIMission_Convoy_ShouldStartAtClosestWaypoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUserWidget.CanPlayWidgetAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              InAnim                                                 (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUserWidget::CanPlayWidgetAnimation(const struct FGameplayTag& InAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUserWidget", "CanPlayWidgetAnimation");

	Params::TedUserWidget_CanPlayWidgetAnimation Parms{};

	Parms.InAnim = std::move(InAnim);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUserWidget.HideCustomTooltip
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UTedUserWidget::HideCustomTooltip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUserWidget", "HideCustomTooltip");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUserWidget.HidePopup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTedPopup*                        InPopup                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUserWidget::HidePopup(class UTedPopup* InPopup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUserWidget", "HidePopup");

	Params::TedUserWidget_HidePopup Parms{};

	Parms.InPopup = InPopup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUserWidget.NativeRefreshControlMappings
// (Native, Protected)

void UTedUserWidget::NativeRefreshControlMappings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUserWidget", "NativeRefreshControlMappings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUserWidget.NotifyWidgetAnimationEnd
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              InAnim                                                 (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUserWidget::NotifyWidgetAnimationEnd(const struct FGameplayTag& InAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUserWidget", "NotifyWidgetAnimationEnd");

	Params::TedUserWidget_NotifyWidgetAnimationEnd Parms{};

	Parms.InAnim = std::move(InAnim);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUserWidget.NotifyWidgetAnimationStart
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              InAnim                                                 (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUserWidget::NotifyWidgetAnimationStart(const struct FGameplayTag& InAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUserWidget", "NotifyWidgetAnimationStart");

	Params::TedUserWidget_NotifyWidgetAnimationStart Parms{};

	Parms.InAnim = std::move(InAnim);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUserWidget.OnPlayWidgetAnimation
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              InAnim                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUserWidget::OnPlayWidgetAnimation(const struct FGameplayTag& InAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUserWidget", "OnPlayWidgetAnimation");

	Params::TedUserWidget_OnPlayWidgetAnimation Parms{};

	Parms.InAnim = std::move(InAnim);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedUserWidget.OnRefreshControlMappings
// (Event, Protected, BlueprintEvent)

void UTedUserWidget::OnRefreshControlMappings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUserWidget", "OnRefreshControlMappings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedUserWidget.OnStopWidgetAnimation
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              InAnim                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUserWidget::OnStopWidgetAnimation(const struct FGameplayTag& InAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUserWidget", "OnStopWidgetAnimation");

	Params::TedUserWidget_OnStopWidgetAnimation Parms{};

	Parms.InAnim = std::move(InAnim);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedUserWidget.PlaySoundUI
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class USoundCue*                        InSound                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUserWidget::PlaySoundUI(class USoundCue* InSound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUserWidget", "PlaySoundUI");

	Params::TedUserWidget_PlaySoundUI Parms{};

	Parms.InSound = InSound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUserWidget.PlayWidgetAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              InAnim                                                 (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUserWidget::PlayWidgetAnimation(const struct FGameplayTag& InAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUserWidget", "PlayWidgetAnimation");

	Params::TedUserWidget_PlayWidgetAnimation Parms{};

	Parms.InAnim = std::move(InAnim);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUserWidget.RefreshUI
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UTedUserWidget::RefreshUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUserWidget", "RefreshUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUserWidget.ShowCustomTooltip
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UTedUserWidget::ShowCustomTooltip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUserWidget", "ShowCustomTooltip");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUserWidget.StopWidgetAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              InAnim                                                 (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUserWidget::StopWidgetAnimation(const struct FGameplayTag& InAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUserWidget", "StopWidgetAnimation");

	Params::TedUserWidget_StopWidgetAnimation Parms{};

	Parms.InAnim = std::move(InAnim);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUserWidget.GetAvailableShortcutNames
// (Final, Native, Protected, Const)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UTedUserWidget::GetAvailableShortcutNames() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUserWidget", "GetAvailableShortcutNames");

	Params::TedUserWidget_GetAvailableShortcutNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUserWidget.GetCustomTooltipDisplayParams
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FTedTooltipDisplayParams*        OutParams                                              (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UTedUserWidget::GetCustomTooltipDisplayParams(struct FTedTooltipDisplayParams* OutParams) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUserWidget", "GetCustomTooltipDisplayParams");

	Params::TedUserWidget_GetCustomTooltipDisplayParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutParams != nullptr)
		*OutParams = std::move(Parms.OutParams);
}


// Function Tempest.TedUserWidget.GetHUD
// (Final, Native, Protected, BlueprintCallable, Const)
// Parameters:
// class ATedHUD*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedHUD* UTedUserWidget::GetHUD() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUserWidget", "GetHUD");

	Params::TedUserWidget_GetHUD Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUserWidget.HasValidSetup
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUserWidget::HasValidSetup() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUserWidget", "HasValidSetup");

	Params::TedUserWidget_HasValidSetup Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUserWidget.IsStartupSequenceEnabled
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUserWidget::IsStartupSequenceEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUserWidget", "IsStartupSequenceEnabled");

	Params::TedUserWidget_IsStartupSequenceEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUserWidget.IsStartupSequenceFinished
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUserWidget::IsStartupSequenceFinished() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUserWidget", "IsStartupSequenceFinished");

	Params::TedUserWidget_IsStartupSequenceFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUserWidget.OnCanPlayWidgetAnimation
// (Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const struct FGameplayTag&              InAnim                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUserWidget::OnCanPlayWidgetAnimation(const struct FGameplayTag& InAnim) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUserWidget", "OnCanPlayWidgetAnimation");

	Params::TedUserWidget_OnCanPlayWidgetAnimation Parms{};

	Parms.InAnim = std::move(InAnim);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Tempest.TedUserWidget.PaintSpline
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// struct FPaintContext&                   InContext                                              (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FVector2D&                 InStartLoc                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 InStartDir                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 InEndLoc                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 InEndDir                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              InTint                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InThickness                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUserWidget::PaintSpline(struct FPaintContext& InContext, const struct FVector2D& InStartLoc, const struct FVector2D& InStartDir, const struct FVector2D& InEndLoc, const struct FVector2D& InEndDir, const struct FLinearColor& InTint, const float InThickness) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUserWidget", "PaintSpline");

	Params::TedUserWidget_PaintSpline Parms{};

	Parms.InContext = std::move(InContext);
	Parms.InStartLoc = std::move(InStartLoc);
	Parms.InStartDir = std::move(InStartDir);
	Parms.InEndLoc = std::move(InEndLoc);
	Parms.InEndDir = std::move(InEndDir);
	Parms.InTint = std::move(InTint);
	Parms.InThickness = InThickness;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	InContext = std::move(Parms.InContext);
}


// Function Tempest.TedUserWidget.SupportsCustomTooltip
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUserWidget::SupportsCustomTooltip() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUserWidget", "SupportsCustomTooltip");

	Params::TedUserWidget_SupportsCustomTooltip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedHintsMainWidget.OnHintHidden
// (Event, Protected, BlueprintEvent)

void UTedHintsMainWidget::OnHintHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHintsMainWidget", "OnHintHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedHintsMainWidget.OnNewHintTriggered
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewHintsNumber                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedHintsMainWidget::OnNewHintTriggered(int32 NewHintsNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHintsMainWidget", "OnNewHintTriggered");

	Params::TedHintsMainWidget_OnNewHintTriggered Parms{};

	Parms.NewHintsNumber = NewHintsNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedHintsMainWidget.OnNewHintUIFocusRequested
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UTedHintsAsset*                   HintToFocus                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedHintsMainWidget::OnNewHintUIFocusRequested(class UTedHintsAsset* HintToFocus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHintsMainWidget", "OnNewHintUIFocusRequested");

	Params::TedHintsMainWidget_OnNewHintUIFocusRequested Parms{};

	Parms.HintToFocus = HintToFocus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.AIMission_Defend.SetSquadTarget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAITarget&                 Target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAIMission_Defend::SetSquadTarget(const struct FAITarget& Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_Defend", "SetSquadTarget");

	Params::AIMission_Defend_SetSquadTarget Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_EnsurePower.AddPreferredBuildLocation
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAITargetLocation&         Location                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UAIMission_EnsurePower::AddPreferredBuildLocation(const struct FAITargetLocation& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_EnsurePower", "AddPreferredBuildLocation");

	Params::AIMission_EnsurePower_AddPreferredBuildLocation Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_EnsurePower.ClearPreferredBuildLocation
// (Final, Native, Public, BlueprintCallable)

void UAIMission_EnsurePower::ClearPreferredBuildLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_EnsurePower", "ClearPreferredBuildLocation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_EnsurePower.RemovePreferredBuildLocation
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAITargetLocation&         Location                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UAIMission_EnsurePower::RemovePreferredBuildLocation(const struct FAITargetLocation& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_EnsurePower", "RemovePreferredBuildLocation");

	Params::AIMission_EnsurePower_RemovePreferredBuildLocation Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_EnsurePower.SetInitialBuildPowerDelay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const float                             Delay                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_EnsurePower::SetInitialBuildPowerDelay(const float Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_EnsurePower", "SetInitialBuildPowerDelay");

	Params::AIMission_EnsurePower_SetInitialBuildPowerDelay Parms{};

	Parms.Delay = Delay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_EnsurePower.SetPreferredBuildLocations
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FAITargetLocation>& Locations                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UAIMission_EnsurePower::SetPreferredBuildLocations(const TArray<struct FAITargetLocation>& Locations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_EnsurePower", "SetPreferredBuildLocations");

	Params::AIMission_EnsurePower_SetPreferredBuildLocations Parms{};

	Parms.Locations = std::move(Locations);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_EnsurePower.SetSubsequentBuildPowerDelay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const float                             Delay                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_EnsurePower::SetSubsequentBuildPowerDelay(const float Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_EnsurePower", "SetSubsequentBuildPowerDelay");

	Params::AIMission_EnsurePower_SetSubsequentBuildPowerDelay Parms{};

	Parms.Delay = Delay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_EnsurePower.GetInitialBuildPowerDelay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAIMission_EnsurePower::GetInitialBuildPowerDelay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_EnsurePower", "GetInitialBuildPowerDelay");

	Params::AIMission_EnsurePower_GetInitialBuildPowerDelay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission_EnsurePower.GetPreferredBuildLocations
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FAITargetLocation>  ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FAITargetLocation> UAIMission_EnsurePower::GetPreferredBuildLocations() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_EnsurePower", "GetPreferredBuildLocations");

	Params::AIMission_EnsurePower_GetPreferredBuildLocations Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission_EnsurePower.GetSubsequentBuildPowerDelay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAIMission_EnsurePower::GetSubsequentBuildPowerDelay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_EnsurePower", "GetSubsequentBuildPowerDelay");

	Params::AIMission_EnsurePower_GetSubsequentBuildPowerDelay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelBase.ActivateSlotState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InSlotIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedContentPanelBase::ActivateSlotState(int32 InSlotIndex, ETedContentSlotState InState, bool bInActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelBase", "ActivateSlotState");

	Params::TedContentPanelBase_ActivateSlotState Parms{};

	Parms.InSlotIndex = InSlotIndex;
	Parms.InState = InState;
	Parms.bInActivate = bInActivate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelBase.ClearAllSlotStates
// (Final, Native, Public, BlueprintCallable)

void UTedContentPanelBase::ClearAllSlotStates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelBase", "ClearAllSlotStates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelBase.ClearSlotStates
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InSlotIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedContentPanelBase::ClearSlotStates(int32 InSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelBase", "ClearSlotStates");

	Params::TedContentPanelBase_ClearSlotStates Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelBase.HideSlotCustomTooltip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UTedTooltipWidget>    InTooltipClass                                         (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedContentPanelBase::HideSlotCustomTooltip(TSubclassOf<class UTedTooltipWidget> InTooltipClass, const int32 InSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelBase", "HideSlotCustomTooltip");

	Params::TedContentPanelBase_HideSlotCustomTooltip Parms{};

	Parms.InTooltipClass = InTooltipClass;
	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelBase.OnActivateSlotStateInternal
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedContentPanelBase::OnActivateSlotStateInternal(class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelBase", "OnActivateSlotStateInternal");

	Params::TedContentPanelBase_OnActivateSlotStateInternal Parms{};

	Parms.InContentSlot = InContentSlot;
	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelBase.OnRegisterContentSlot
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentPanelRegistration            InMode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedContentPanelBase::OnRegisterContentSlot(class UTedContentPanelSlotBase* InContentSlot, ETedContentPanelRegistration InMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelBase", "OnRegisterContentSlot");

	Params::TedContentPanelBase_OnRegisterContentSlot Parms{};

	Parms.InContentSlot = InContentSlot;
	Parms.InMode = InMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelBase.OnShowSlotCustomTooltip
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// TSubclassOf<class UTedTooltipWidget>    InTooltipClass                                         (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlo                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedContentPanelBase::OnShowSlotCustomTooltip(TSubclassOf<class UTedTooltipWidget> InTooltipClass, class UTedContentPanelSlotBase* InContentSlo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelBase", "OnShowSlotCustomTooltip");

	Params::TedContentPanelBase_OnShowSlotCustomTooltip Parms{};

	Parms.InTooltipClass = InTooltipClass;
	Parms.InContentSlo = InContentSlo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelBase.OnTriggerSlotActionInternal
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedContentPanelBase::OnTriggerSlotActionInternal(class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelBase", "OnTriggerSlotActionInternal");

	Params::TedContentPanelBase_OnTriggerSlotActionInternal Parms{};

	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelBase.OnUnregisterContentSlot
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedContentPanelBase::OnUnregisterContentSlot(class UTedContentPanelSlotBase* InContentSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelBase", "OnUnregisterContentSlot");

	Params::TedContentPanelBase_OnUnregisterContentSlot Parms{};

	Parms.InContentSlot = InContentSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelBase.RefreshContentSlotUI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedContentPanelBase::RefreshContentSlotUI(const int32 InSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelBase", "RefreshContentSlotUI");

	Params::TedContentPanelBase_RefreshContentSlotUI Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelBase.RefreshUIFor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class UTedContentPanelSlotBase*>&InSlots                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UTedContentPanelBase::RefreshUIFor(const TArray<class UTedContentPanelSlotBase*>& InSlots)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelBase", "RefreshUIFor");

	Params::TedContentPanelBase_RefreshUIFor Parms{};

	Parms.InSlots = std::move(InSlots);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelBase.ShowSlotCustomTooltip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UTedTooltipWidget>    InTooltipClass                                         (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedContentPanelBase::ShowSlotCustomTooltip(TSubclassOf<class UTedTooltipWidget> InTooltipClass, const int32 InSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelBase", "ShowSlotCustomTooltip");

	Params::TedContentPanelBase_ShowSlotCustomTooltip Parms{};

	Parms.InTooltipClass = InTooltipClass;
	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelBase.TriggerSlotAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InSlotIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedContentPanelBase::TriggerSlotAction(int32 InSlotIndex, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelBase", "TriggerSlotAction");

	Params::TedContentPanelBase_TriggerSlotAction Parms{};

	Parms.InSlotIndex = InSlotIndex;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelBase.CanActivateSlotState
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedContentPanelSlotBase*   InSlotWidget                                           (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedContentPanelBase::CanActivateSlotState(const class UTedContentPanelSlotBase* InSlotWidget, ETedContentSlotState InState, bool bInActivate) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelBase", "CanActivateSlotState");

	Params::TedContentPanelBase_CanActivateSlotState Parms{};

	Parms.InSlotWidget = InSlotWidget;
	Parms.InState = InState;
	Parms.bInActivate = bInActivate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelBase.CanTriggerSlotAction
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedContentPanelSlotBase*   InSlotWidget                                           (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedContentPanelBase::CanTriggerSlotAction(const class UTedContentPanelSlotBase* InSlotWidget, ETedContentSlotAction InAction) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelBase", "CanTriggerSlotAction");

	Params::TedContentPanelBase_CanTriggerSlotAction Parms{};

	Parms.InSlotWidget = InSlotWidget;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelBase.GetContentSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   InSlotIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedContentPanelSlotBase* UTedContentPanelBase::GetContentSlot(int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelBase", "GetContentSlot");

	Params::TedContentPanelBase_GetContentSlot Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelBase.GetContentSlotByState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const ETedContentSlotState              InState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InIndex                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedContentPanelSlotBase* UTedContentPanelBase::GetContentSlotByState(const ETedContentSlotState InState, const int32 InIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelBase", "GetContentSlotByState");

	Params::TedContentPanelBase_GetContentSlotByState Parms{};

	Parms.InState = InState;
	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelBase.GetContentSlotIndexByState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const ETedContentSlotState              InState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InIndex                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedContentPanelBase::GetContentSlotIndexByState(const ETedContentSlotState InState, const int32 InIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelBase", "GetContentSlotIndexByState");

	Params::TedContentPanelBase_GetContentSlotIndexByState Parms{};

	Parms.InState = InState;
	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelBase.GetContentSlots
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<class UTedContentPanelSlotBase*>*OutSlots                                               (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedContentPanelBase::GetContentSlots(TArray<class UTedContentPanelSlotBase*>* OutSlots) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelBase", "GetContentSlots");

	Params::TedContentPanelBase_GetContentSlots Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSlots != nullptr)
		*OutSlots = std::move(Parms.OutSlots);

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelBase.GetContentSlotsByState
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UTedContentPanelSlotBase*>*OutSlots                                               (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedContentPanelBase::GetContentSlotsByState(ETedContentSlotState InState, TArray<class UTedContentPanelSlotBase*>* OutSlots) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelBase", "GetContentSlotsByState");

	Params::TedContentPanelBase_GetContentSlotsByState Parms{};

	Parms.InState = InState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSlots != nullptr)
		*OutSlots = std::move(Parms.OutSlots);

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelBase.GetContentSlotsCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedContentPanelBase::GetContentSlotsCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelBase", "GetContentSlotsCount");

	Params::TedContentPanelBase_GetContentSlotsCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelBase.GetContentSlotsCountByState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedContentPanelBase::GetContentSlotsCountByState(ETedContentSlotState InState) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelBase", "GetContentSlotsCountByState");

	Params::TedContentPanelBase_GetContentSlotsCountByState Parms{};

	Parms.InState = InState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelBase.GetSlotCustomTooltipDisplayParams
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedTooltipDisplayParams*        OutParams                                              (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UTedContentPanelBase::GetSlotCustomTooltipDisplayParams(const int32 InSlotIndex, struct FTedTooltipDisplayParams* OutParams) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelBase", "GetSlotCustomTooltipDisplayParams");

	Params::TedContentPanelBase_GetSlotCustomTooltipDisplayParams Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutParams != nullptr)
		*OutParams = std::move(Parms.OutParams);
}


// Function Tempest.TedContentPanelBase.IsAnySlotStateActive
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSet<ETedContentSlotState>&       InStates                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedContentPanelBase::IsAnySlotStateActive(const int32 InSlotIndex, const TSet<ETedContentSlotState>& InStates) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelBase", "IsAnySlotStateActive");

	Params::TedContentPanelBase_IsAnySlotStateActive Parms{};

	Parms.InSlotIndex = InSlotIndex;
	Parms.InStates = std::move(InStates);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelBase.IsSlotStateActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   InSlotIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedContentPanelBase::IsSlotStateActive(int32 InSlotIndex, ETedContentSlotState InState) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelBase", "IsSlotStateActive");

	Params::TedContentPanelBase_IsSlotStateActive Parms{};

	Parms.InSlotIndex = InSlotIndex;
	Parms.InState = InState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelBase.K2_GetSlotStateAssetSelector
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const struct FGameplayTag&              InSelectorKey                                          (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedContentSlotStateAssetSelector*Out                                                    (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedContentPanelBase::K2_GetSlotStateAssetSelector(const struct FGameplayTag& InSelectorKey, struct FTedContentSlotStateAssetSelector* Out) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelBase", "K2_GetSlotStateAssetSelector");

	Params::TedContentPanelBase_K2_GetSlotStateAssetSelector Parms{};

	Parms.InSelectorKey = std::move(InSelectorKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out != nullptr)
		*Out = std::move(Parms.Out);

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelDynamic.OnCacheContent
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// int32*                                  OutExpectedSlotsCount                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedContentPanelDynamic::OnCacheContent(int32* OutExpectedSlotsCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelDynamic", "OnCacheContent");

	Params::TedContentPanelDynamic_OnCacheContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutExpectedSlotsCount != nullptr)
		*OutExpectedSlotsCount = Parms.OutExpectedSlotsCount;
}


// Function Tempest.TedContentPanelDynamic.OnResetContent
// (Native, Event, Protected, BlueprintEvent)

void UTedContentPanelDynamic::OnResetContent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelDynamic", "OnResetContent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelDynamic.RefreshContent
// (Native, Public, BlueprintCallable)

void UTedContentPanelDynamic::RefreshContent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelDynamic", "RefreshContent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelDynamic.ResetContent
// (Final, Native, Public, BlueprintCallable)

void UTedContentPanelDynamic::ResetContent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelDynamic", "ResetContent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelDynamic.GetInnerContentPanelOverride
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// const class UTedContentPanelSlotBase*   InContentSlot                                          (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPanelWidget*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPanelWidget* UTedContentPanelDynamic::GetInnerContentPanelOverride(const class UTedContentPanelSlotBase* InContentSlot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelDynamic", "GetInnerContentPanelOverride");

	Params::TedContentPanelDynamic_GetInnerContentPanelOverride Parms{};

	Parms.InContentSlot = InContentSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelDynamic.GetSlotClassOverride
// (Native, Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// int32                                   InSlotIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UTedContentPanelSlotBase>*OutClass                                               (Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedContentPanelDynamic::GetSlotClassOverride(int32 InSlotIndex, TSubclassOf<class UTedContentPanelSlotBase>* OutClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelDynamic", "GetSlotClassOverride");

	Params::TedContentPanelDynamic_GetSlotClassOverride Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutClass != nullptr)
		*OutClass = Parms.OutClass;

	return Parms.ReturnValue;
}


// Function Tempest.TedEquipmentPanel.K2_SetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class UTedEquipment*>&     InContent                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedEquipmentPanel::K2_SetContent(const TArray<class UTedEquipment*>& InContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentPanel", "K2_SetContent");

	Params::TedEquipmentPanel_K2_SetContent Parms{};

	Parms.InContent = std::move(InContent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedEquipmentPanel.OnEditableTextBoxSearchStringChange
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const class FText&                      InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedEquipmentPanel::OnEditableTextBoxSearchStringChange(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentPanel", "OnEditableTextBoxSearchStringChange");

	Params::TedEquipmentPanel_OnEditableTextBoxSearchStringChange Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedEquipmentPanel.RequestBuy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTedEquipmentSlot*                InEquipmentSlot                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedEquipmentPanel::RequestBuy(class UTedEquipmentSlot* InEquipmentSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentPanel", "RequestBuy");

	Params::TedEquipmentPanel_RequestBuy Parms{};

	Parms.InEquipmentSlot = InEquipmentSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedEquipmentPanel.RequestEquip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTedEquipmentSlot*                InEquipmentSlot                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedEquipmentPanel::RequestEquip(class UTedEquipmentSlot* InEquipmentSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentPanel", "RequestEquip");

	Params::TedEquipmentPanel_RequestEquip Parms{};

	Parms.InEquipmentSlot = InEquipmentSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedEquipmentPanel.RequestUnequip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTedEquipmentSlot*                InEquipmentSlot                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedEquipmentPanel::RequestUnequip(class UTedEquipmentSlot* InEquipmentSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentPanel", "RequestUnequip");

	Params::TedEquipmentPanel_RequestUnequip Parms{};

	Parms.InEquipmentSlot = InEquipmentSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedEquipmentPanel.SetFilterType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const ETedEquipmentPanelFilterOptionTypeInType                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedEquipmentPanel::SetFilterType(const ETedEquipmentPanelFilterOptionType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentPanel", "SetFilterType");

	Params::TedEquipmentPanel_SetFilterType Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedEquipmentPanel.SetSearchString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InSearchString                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedEquipmentPanel::SetSearchString(const class FString& InSearchString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentPanel", "SetSearchString");

	Params::TedEquipmentPanel_SetSearchString Parms{};

	Parms.InSearchString = std::move(InSearchString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedEquipmentPanel.SortContent
// (Final, Native, Public, BlueprintCallable)

void UTedEquipmentPanel::SortContent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentPanel", "SortContent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedEquipmentPanel.CanEquipmentBeEquipped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedEquipment*              InEquipment                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedEquipmentPanel::CanEquipmentBeEquipped(const class UTedEquipment* InEquipment) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentPanel", "CanEquipmentBeEquipped");

	Params::TedEquipmentPanel_CanEquipmentBeEquipped Parms{};

	Parms.InEquipment = InEquipment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEquipmentPanel.CanEquipmentBePurchased
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedEquipment*              InEquipment                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedEquipmentPanel::CanEquipmentBePurchased(const class UTedEquipment* InEquipment) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentPanel", "CanEquipmentBePurchased");

	Params::TedEquipmentPanel_CanEquipmentBePurchased Parms{};

	Parms.InEquipment = InEquipment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEquipmentPanel.GetCurrentFilterType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedEquipmentPanelFilterOptionType      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedEquipmentPanelFilterOptionType UTedEquipmentPanel::GetCurrentFilterType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentPanel", "GetCurrentFilterType");

	Params::TedEquipmentPanel_GetCurrentFilterType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEquipmentPanel.GetRemainingRequisitionPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedEquipmentPanel::GetRemainingRequisitionPoints() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentPanel", "GetRemainingRequisitionPoints");

	Params::TedEquipmentPanel_GetRemainingRequisitionPoints Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEquipmentPanel.GetSearchString
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTedEquipmentPanel::GetSearchString() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentPanel", "GetSearchString");

	Params::TedEquipmentPanel_GetSearchString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEquipmentPanel.HasRequisitionForEquipment
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedEquipment*              InEquipment                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedEquipmentPanel::HasRequisitionForEquipment(const class UTedEquipment* InEquipment) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentPanel", "HasRequisitionForEquipment");

	Params::TedEquipmentPanel_HasRequisitionForEquipment Parms{};

	Parms.InEquipment = InEquipment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEquipmentPanel.HasSpaceForEquipment
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedEquipment*              InEquipment                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedEquipmentPanel::HasSpaceForEquipment(const class UTedEquipment* InEquipment) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentPanel", "HasSpaceForEquipment");

	Params::TedEquipmentPanel_HasSpaceForEquipment Parms{};

	Parms.InEquipment = InEquipment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEquipmentPanel.IsEquipmentEquipped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedEquipment*              InEquipment                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedEquipmentPanel::IsEquipmentEquipped(const class UTedEquipment* InEquipment) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentPanel", "IsEquipmentEquipped");

	Params::TedEquipmentPanel_IsEquipmentEquipped Parms{};

	Parms.InEquipment = InEquipment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEquipmentPanel.IsEquipmentPurchased
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedEquipment*              InEquipment                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedEquipmentPanel::IsEquipmentPurchased(const class UTedEquipment* InEquipment) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentPanel", "IsEquipmentPurchased");

	Params::TedEquipmentPanel_IsEquipmentPurchased Parms{};

	Parms.InEquipment = InEquipment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission_Patrol.SetInfinitePatrol
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bInfinitePatrol                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_Patrol::SetInfinitePatrol(const bool bInfinitePatrol)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_Patrol", "SetInfinitePatrol");

	Params::AIMission_Patrol_SetInfinitePatrol Parms{};

	Parms.bInfinitePatrol = bInfinitePatrol;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_Patrol.SetNumRepeats
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             NumRepeats_0                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bRestartRepeatsCounter                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_Patrol::SetNumRepeats(const int32 NumRepeats_0, const bool bRestartRepeatsCounter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_Patrol", "SetNumRepeats");

	Params::AIMission_Patrol_SetNumRepeats Parms{};

	Parms.NumRepeats_0 = NumRepeats_0;
	Parms.bRestartRepeatsCounter = bRestartRepeatsCounter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_Patrol.SetPatrolMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const EAIMissionPatrolMode              PatrolMode_0                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_Patrol::SetPatrolMode(const EAIMissionPatrolMode PatrolMode_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_Patrol", "SetPatrolMode");

	Params::AIMission_Patrol_SetPatrolMode Parms{};

	Parms.PatrolMode_0 = PatrolMode_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_Patrol.SetStartAtClosestWaypoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bStartAtClosestWaypoint_0                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_Patrol::SetStartAtClosestWaypoint(const bool bStartAtClosestWaypoint_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_Patrol", "SetStartAtClosestWaypoint");

	Params::AIMission_Patrol_SetStartAtClosestWaypoint Parms{};

	Parms.bStartAtClosestWaypoint_0 = bStartAtClosestWaypoint_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_Patrol.SetWaypoints
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FVector>&           Waypoints_0                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UAIMission_Patrol::SetWaypoints(const TArray<struct FVector>& Waypoints_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_Patrol", "SetWaypoints");

	Params::AIMission_Patrol_SetWaypoints Parms{};

	Parms.Waypoints_0 = std::move(Waypoints_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_Patrol.SetWaypointsFromActorLocations
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class AActor*>&            Actors                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UAIMission_Patrol::SetWaypointsFromActorLocations(const TArray<class AActor*>& Actors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_Patrol", "SetWaypointsFromActorLocations");

	Params::AIMission_Patrol_SetWaypointsFromActorLocations Parms{};

	Parms.Actors = std::move(Actors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_Patrol.SetWaypointsFromAIRoute
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class AAIRoute*                   AIRoute                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_Patrol::SetWaypointsFromAIRoute(const class AAIRoute* AIRoute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_Patrol", "SetWaypointsFromAIRoute");

	Params::AIMission_Patrol_SetWaypointsFromAIRoute Parms{};

	Parms.AIRoute = AIRoute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_Patrol.GetNumRepeats
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAIMission_Patrol::GetNumRepeats() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_Patrol", "GetNumRepeats");

	Params::AIMission_Patrol_GetNumRepeats Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission_Patrol.GetPatrolMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAIMissionPatrolMode                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAIMissionPatrolMode UAIMission_Patrol::GetPatrolMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_Patrol", "GetPatrolMode");

	Params::AIMission_Patrol_GetPatrolMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission_Patrol.IsInfinitePatrol
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIMission_Patrol::IsInfinitePatrol() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_Patrol", "IsInfinitePatrol");

	Params::AIMission_Patrol_IsInfinitePatrol Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission_Patrol.ShouldStartAtClosestWaypoint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIMission_Patrol::ShouldStartAtClosestWaypoint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_Patrol", "ShouldStartAtClosestWaypoint");

	Params::AIMission_Patrol_ShouldStartAtClosestWaypoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission_RebuildStructures.OnStructureActorDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_RebuildStructures::OnStructureActorDestroyed(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_RebuildStructures", "OnStructureActorDestroyed");

	Params::AIMission_RebuildStructures_OnStructureActorDestroyed Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_RebuildStructures.RegisterAllStructures
// (Final, Native, Public, BlueprintCallable)

void UAIMission_RebuildStructures::RegisterAllStructures()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_RebuildStructures", "RegisterAllStructures");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_RebuildStructures.RegisterStructure
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ATedStructureBase*                Structure                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_RebuildStructures::RegisterStructure(class ATedStructureBase* Structure)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_RebuildStructures", "RegisterStructure");

	Params::AIMission_RebuildStructures_RegisterStructure Parms{};

	Parms.Structure = Structure;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_RebuildStructures.RegisterStructures
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class ATedStructureBase*>& Structures                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UAIMission_RebuildStructures::RegisterStructures(const TArray<class ATedStructureBase*>& Structures)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_RebuildStructures", "RegisterStructures");

	Params::AIMission_RebuildStructures_RegisterStructures Parms{};

	Parms.Structures = std::move(Structures);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_RebuildStructures.RegisterStructuresByActorTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     ActorTags                                              (ConstParm, Parm, NativeAccessSpecifierPublic)
// const bool                              bExactMatch                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_RebuildStructures::RegisterStructuresByActorTag(const struct FGameplayTagContainer& ActorTags, const bool bExactMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_RebuildStructures", "RegisterStructuresByActorTag");

	Params::AIMission_RebuildStructures_RegisterStructuresByActorTag Parms{};

	Parms.ActorTags = std::move(ActorTags);
	Parms.bExactMatch = bExactMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_RebuildStructures.RegisterStructuresByDefinitionId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     DefinitionIds                                          (ConstParm, Parm, NativeAccessSpecifierPublic)
// const bool                              bExactMatch                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_RebuildStructures::RegisterStructuresByDefinitionId(const struct FGameplayTagContainer& DefinitionIds, const bool bExactMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_RebuildStructures", "RegisterStructuresByDefinitionId");

	Params::AIMission_RebuildStructures_RegisterStructuresByDefinitionId Parms{};

	Parms.DefinitionIds = std::move(DefinitionIds);
	Parms.bExactMatch = bExactMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_RebuildStructures.RegisterStructuresByOwnedTags
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     Tags                                                   (ConstParm, Parm, NativeAccessSpecifierPublic)
// const EGameplayContainerMatchType       MatchType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bExactMatch                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_RebuildStructures::RegisterStructuresByOwnedTags(const struct FGameplayTagContainer& Tags, const EGameplayContainerMatchType MatchType, const bool bExactMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_RebuildStructures", "RegisterStructuresByOwnedTags");

	Params::AIMission_RebuildStructures_RegisterStructuresByOwnedTags Parms{};

	Parms.Tags = std::move(Tags);
	Parms.MatchType = MatchType;
	Parms.bExactMatch = bExactMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_RebuildStructures.RegisterStructuresByType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const EAIMissionRebuildStructureType    StructureType                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_RebuildStructures::RegisterStructuresByType(const EAIMissionRebuildStructureType StructureType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_RebuildStructures", "RegisterStructuresByType");

	Params::AIMission_RebuildStructures_RegisterStructuresByType Parms{};

	Parms.StructureType = StructureType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_RebuildStructures.SetIgnorePrerequisites
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bIgnorePrerequisites_0                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_RebuildStructures::SetIgnorePrerequisites(const bool bIgnorePrerequisites_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_RebuildStructures", "SetIgnorePrerequisites");

	Params::AIMission_RebuildStructures_SetIgnorePrerequisites Parms{};

	Parms.bIgnorePrerequisites_0 = bIgnorePrerequisites_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_RebuildStructures.SetMaxRebuildCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             MaxRebuildCount_0                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_RebuildStructures::SetMaxRebuildCount(const int32 MaxRebuildCount_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_RebuildStructures", "SetMaxRebuildCount");

	Params::AIMission_RebuildStructures_SetMaxRebuildCount Parms{};

	Parms.MaxRebuildCount_0 = MaxRebuildCount_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_RebuildStructures.SetRebuildDelay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const float                             Delay                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_RebuildStructures::SetRebuildDelay(const float Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_RebuildStructures", "SetRebuildDelay");

	Params::AIMission_RebuildStructures_SetRebuildDelay Parms{};

	Parms.Delay = Delay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_RebuildStructures.UnregisterAllStructures
// (Final, Native, Public, BlueprintCallable)

void UAIMission_RebuildStructures::UnregisterAllStructures()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_RebuildStructures", "UnregisterAllStructures");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_RebuildStructures.UnregisterStructure
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ATedStructureBase*                Structure                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_RebuildStructures::UnregisterStructure(class ATedStructureBase* Structure)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_RebuildStructures", "UnregisterStructure");

	Params::AIMission_RebuildStructures_UnregisterStructure Parms{};

	Parms.Structure = Structure;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_RebuildStructures.UnregisterStructures
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class ATedStructureBase*>& Structures                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UAIMission_RebuildStructures::UnregisterStructures(const TArray<class ATedStructureBase*>& Structures)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_RebuildStructures", "UnregisterStructures");

	Params::AIMission_RebuildStructures_UnregisterStructures Parms{};

	Parms.Structures = std::move(Structures);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AIMission_RebuildStructures.GetIgnorePrerequisites
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIMission_RebuildStructures::GetIgnorePrerequisites() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_RebuildStructures", "GetIgnorePrerequisites");

	Params::AIMission_RebuildStructures_GetIgnorePrerequisites Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission_RebuildStructures.GetMaxRebuildCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAIMission_RebuildStructures::GetMaxRebuildCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_RebuildStructures", "GetMaxRebuildCount");

	Params::AIMission_RebuildStructures_GetMaxRebuildCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission_RebuildStructures.GetRebuildDelay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAIMission_RebuildStructures::GetRebuildDelay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_RebuildStructures", "GetRebuildDelay");

	Params::AIMission_RebuildStructures_GetRebuildDelay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommand.GetAvailableKeyBindingsSorted
// (Final, Native, Static, Protected)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UTedCommand::GetAvailableKeyBindingsSorted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedCommand", "GetAvailableKeyBindingsSorted");

	Params::TedCommand_GetAvailableKeyBindingsSorted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommand.GetCreditCost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AActor*                     CommandActor                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommand::GetCreditCost(const class AActor* CommandActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommand", "GetCreditCost");

	Params::TedCommand_GetCreditCost Parms{};

	Parms.CommandActor = CommandActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommand.GetCursorConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedCursorConfig*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedCursorConfig* UTedCommand::GetCursorConfig() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommand", "GetCursorConfig");

	Params::TedCommand_GetCursorConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommand.GetDisplayCursor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTedCommand::GetDisplayCursor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommand", "GetDisplayCursor");

	Params::TedCommand_GetDisplayCursor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommand.GetDisplayDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedCommand::GetDisplayDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommand", "GetDisplayDescription");

	Params::TedCommand_GetDisplayDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommand.GetDisplayIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTedCommand::GetDisplayIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommand", "GetDisplayIcon");

	Params::TedCommand_GetDisplayIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommand.GetDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedCommand::GetDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommand", "GetDisplayName");

	Params::TedCommand_GetDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommand.GetDisplaySection
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedCommandDisplaySection               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedCommandDisplaySection UTedCommand::GetDisplaySection() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommand", "GetDisplaySection");

	Params::TedCommand_GetDisplaySection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommand.GetIntelCost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AActor*                     CommandActor                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommand::GetIntelCost(const class AActor* CommandActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommand", "GetIntelCost");

	Params::TedCommand_GetIntelCost Parms{};

	Parms.CommandActor = CommandActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommand.GetIsAlternating
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCommand::GetIsAlternating() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommand", "GetIsAlternating");

	Params::TedCommand_GetIsAlternating Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommand.GetPopulationCost
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AActor*                     CommandActor                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommand::GetPopulationCost(const class AActor* CommandActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommand", "GetPopulationCost");

	Params::TedCommand_GetPopulationCost Parms{};

	Parms.CommandActor = CommandActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommand.GetPowerCost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class AActor*                     CommandActor                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommand::GetPowerCost(const class AActor* CommandActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommand", "GetPowerCost");

	Params::TedCommand_GetPowerCost Parms{};

	Parms.CommandActor = CommandActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEncyclopediaFactionPanel.SetContent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<struct FEncyclopediaFactoryPanelInfo>&NewContent                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UTedEncyclopediaFactionPanel::SetContent(const TArray<struct FEncyclopediaFactoryPanelInfo>& NewContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEncyclopediaFactionPanel", "SetContent");

	Params::TedEncyclopediaFactionPanel_SetContent Parms{};

	Parms.NewContent = std::move(NewContent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedEncyclopediaFactionPanel.GetContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEncyclopediaFactoryPanelInfo    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEncyclopediaFactoryPanelInfo UTedEncyclopediaFactionPanel::GetContent(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEncyclopediaFactionPanel", "GetContent");

	Params::TedEncyclopediaFactionPanel_GetContent Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelSlotBase.ActivateState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedContentPanelSlotBase::ActivateState(ETedContentSlotState InState, bool bInActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelSlotBase", "ActivateState");

	Params::TedContentPanelSlotBase_ActivateState Parms{};

	Parms.InState = InState;
	Parms.bInActivate = bInActivate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelSlotBase.K2_GetParentContentPanel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTedContentPanelBase*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedContentPanelBase* UTedContentPanelSlotBase::K2_GetParentContentPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelSlotBase", "K2_GetParentContentPanel");

	Params::TedContentPanelSlotBase_K2_GetParentContentPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelSlotBase.K2_GetSlotIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedContentPanelSlotBase::K2_GetSlotIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelSlotBase", "K2_GetSlotIndex");

	Params::TedContentPanelSlotBase_K2_GetSlotIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelSlotBase.OnActivateState
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedContentPanelSlotBase::OnActivateState(ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelSlotBase", "OnActivateState");

	Params::TedContentPanelSlotBase_OnActivateState Parms{};

	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelSlotBase.OnTriggerAction
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedContentPanelSlotBase::OnTriggerAction(ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelSlotBase", "OnTriggerAction");

	Params::TedContentPanelSlotBase_OnTriggerAction Parms{};

	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelSlotBase.TriggerAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedContentPanelSlotBase::TriggerAction(ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelSlotBase", "TriggerAction");

	Params::TedContentPanelSlotBase_TriggerAction Parms{};

	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelSlotBase.GetMaterialsSupportingStates
// (Native, Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class UMaterialInstanceDynamic*>*OutMIDs                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UTedContentPanelSlotBase::GetMaterialsSupportingStates(TArray<class UMaterialInstanceDynamic*>* OutMIDs) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelSlotBase", "GetMaterialsSupportingStates");

	Params::TedContentPanelSlotBase_GetMaterialsSupportingStates Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMIDs != nullptr)
		*OutMIDs = std::move(Parms.OutMIDs);
}


// Function Tempest.TedContentPanelSlotBase.GetParentContentPanel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedContentPanelBase*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedContentPanelBase* UTedContentPanelSlotBase::GetParentContentPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelSlotBase", "GetParentContentPanel");

	Params::TedContentPanelSlotBase_GetParentContentPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelSlotBase.GetSlotIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedContentPanelSlotBase::GetSlotIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelSlotBase", "GetSlotIndex");

	Params::TedContentPanelSlotBase_GetSlotIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelSlotBase.IsStateActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedContentPanelSlotBase::IsStateActive(ETedContentSlotState InState) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelSlotBase", "IsStateActive");

	Params::TedContentPanelSlotBase_IsStateActive Parms{};

	Parms.InState = InState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelSlotBase.K2_GetAssetSelector
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const struct FGameplayTag&              InSelectorKey                                          (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedContentSlotStateAssetSelector*Out                                                    (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedContentPanelSlotBase::K2_GetAssetSelector(const struct FGameplayTag& InSelectorKey, struct FTedContentSlotStateAssetSelector* Out) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelSlotBase", "K2_GetAssetSelector");

	Params::TedContentPanelSlotBase_K2_GetAssetSelector Parms{};

	Parms.InSelectorKey = std::move(InSelectorKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out != nullptr)
		*Out = std::move(Parms.Out);

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelSlotBase.RefreshWidgetUsingAssetSelector
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const struct FGameplayTag&              InSelectorKey                                          (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          InTargetWidget                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedContentPanelSlotBase::RefreshWidgetUsingAssetSelector(const struct FGameplayTag& InSelectorKey, class UWidget* InTargetWidget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelSlotBase", "RefreshWidgetUsingAssetSelector");

	Params::TedContentPanelSlotBase_RefreshWidgetUsingAssetSelector Parms{};

	Parms.InSelectorKey = std::move(InSelectorKey);
	Parms.InTargetWidget = InTargetWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission_Scriptable.SetSquadOrder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAISquadOrder&             Order                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAIMission_Scriptable::SetSquadOrder(const struct FAISquadOrder& Order)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_Scriptable", "SetSquadOrder");

	Params::AIMission_Scriptable_SetSquadOrder Parms{};

	Parms.Order = std::move(Order);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawnsPanel.AddContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class ATedPawn*>&          InContent                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const bool                              bInRefreshUI                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPawnsPanel::AddContent(const TArray<class ATedPawn*>& InContent, const bool bInRefreshUI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnsPanel", "AddContent");

	Params::TedPawnsPanel_AddContent Parms{};

	Parms.InContent = std::move(InContent);
	Parms.bInRefreshUI = bInRefreshUI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawnsPanel.ClearContent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bInRefreshUI                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPawnsPanel::ClearContent(const bool bInRefreshUI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnsPanel", "ClearContent");

	Params::TedPawnsPanel_ClearContent Parms{};

	Parms.bInRefreshUI = bInRefreshUI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawnsPanel.ContainsPawnOfClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class ATedPawn>             InClass                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPawnsPanel::ContainsPawnOfClass(TSubclassOf<class ATedPawn> InClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnsPanel", "ContainsPawnOfClass");

	Params::TedPawnsPanel_ContainsPawnOfClass Parms{};

	Parms.InClass = InClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawnsPanel.OnPawnEndPlay_Handler
// (Final, Native, Protected)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          InEndPlayReason                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPawnsPanel::OnPawnEndPlay_Handler(class AActor* InActor, EEndPlayReason InEndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnsPanel", "OnPawnEndPlay_Handler");

	Params::TedPawnsPanel_OnPawnEndPlay_Handler Parms{};

	Parms.InActor = InActor;
	Parms.InEndPlayReason = InEndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawnsPanel.RemoveContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class ATedPawn*>&          InContent                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const bool                              bInRefreshUI                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPawnsPanel::RemoveContent(const TArray<class ATedPawn*>& InContent, const bool bInRefreshUI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnsPanel", "RemoveContent");

	Params::TedPawnsPanel_RemoveContent Parms{};

	Parms.InContent = std::move(InContent);
	Parms.bInRefreshUI = bInRefreshUI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawnsPanel.SetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class ATedPawn*>&          InContent                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const bool                              bInRefreshUI                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPawnsPanel::SetContent(const TArray<class ATedPawn*>& InContent, const bool bInRefreshUI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnsPanel", "SetContent");

	Params::TedPawnsPanel_SetContent Parms{};

	Parms.InContent = std::move(InContent);
	Parms.bInRefreshUI = bInRefreshUI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawnsPanel.GetAllContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class ATedPawn*>           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class ATedPawn*> UTedPawnsPanel::GetAllContent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnsPanel", "GetAllContent");

	Params::TedPawnsPanel_GetAllContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawnsPanel.GetContentIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class ATedPawn*                   InPawn                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedPawnsPanel::GetContentIndex(const class ATedPawn* InPawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnsPanel", "GetContentIndex");

	Params::TedPawnsPanel_GetContentIndex Parms{};

	Parms.InPawn = InPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawnsPanel.GetContentSlotByContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class ATedPawn*                   InPawn                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedContentPanelSlotBase* UTedPawnsPanel::GetContentSlotByContent(const class ATedPawn* InPawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnsPanel", "GetContentSlotByContent");

	Params::TedPawnsPanel_GetContentSlotByContent Parms{};

	Parms.InPawn = InPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawnsPanel.GetSlotContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedPawn*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedPawn* UTedPawnsPanel::GetSlotContent(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnsPanel", "GetSlotContent");

	Params::TedPawnsPanel_GetSlotContent Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawnsPanel.ShouldGeneratePawnDamagedEvents
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPawnsPanel::ShouldGeneratePawnDamagedEvents() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnsPanel", "ShouldGeneratePawnDamagedEvents");

	Params::TedPawnsPanel_ShouldGeneratePawnDamagedEvents Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSelectionDetailsPawnsGrid.OnSortAndRefreshAfterPawnHPChange
// (Final, Native, Protected)

void UTedSelectionDetailsPawnsGrid::OnSortAndRefreshAfterPawnHPChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsPawnsGrid", "OnSortAndRefreshAfterPawnHPChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSelectionDetailsPawnsGrid.SetCurrentRow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InRow                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSelectionDetailsPawnsGrid::SetCurrentRow(const int32 InRow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsPawnsGrid", "SetCurrentRow");

	Params::TedSelectionDetailsPawnsGrid_SetCurrentRow Parms{};

	Parms.InRow = InRow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSelectionDetailsPawnsGrid.SwitchRow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bInUp                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSelectionDetailsPawnsGrid::SwitchRow(const bool bInUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsPawnsGrid", "SwitchRow");

	Params::TedSelectionDetailsPawnsGrid_SwitchRow Parms{};

	Parms.bInUp = bInUp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSelectionDetailsPawnsGrid.CanSwitch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const bool                              bInUp                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedSelectionDetailsPawnsGrid::CanSwitch(const bool bInUp) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsPawnsGrid", "CanSwitch");

	Params::TedSelectionDetailsPawnsGrid_CanSwitch Parms{};

	Parms.bInUp = bInUp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSelectionDetailsPawnsGrid.CanSwitchDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedSelectionDetailsPawnsGrid::CanSwitchDown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsPawnsGrid", "CanSwitchDown");

	Params::TedSelectionDetailsPawnsGrid_CanSwitchDown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSelectionDetailsPawnsGrid.CanSwitchUp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedSelectionDetailsPawnsGrid::CanSwitchUp() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsPawnsGrid", "CanSwitchUp");

	Params::TedSelectionDetailsPawnsGrid_CanSwitchUp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSelectionDetailsPawnsGrid.GetLastAvailableRowToSwitch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedSelectionDetailsPawnsGrid::GetLastAvailableRowToSwitch() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsPawnsGrid", "GetLastAvailableRowToSwitch");

	Params::TedSelectionDetailsPawnsGrid_GetLastAvailableRowToSwitch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIMission_SeekPlayerStructures.SetSquadStructureTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     Targets                                                (Parm, NativeAccessSpecifierPublic)
// int32                                   InMaxStructures                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIMission_SeekPlayerStructures::SetSquadStructureTarget(const struct FGameplayTagContainer& Targets, int32 InMaxStructures)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIMission_SeekPlayerStructures", "SetSquadStructureTarget");

	Params::AIMission_SeekPlayerStructures_SetSquadStructureTarget Parms{};

	Parms.Targets = std::move(Targets);
	Parms.InMaxStructures = InMaxStructures;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedDefinitionAsset.GetAssetIdentifierFromDefinition
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TSoftObjectPtr<class UTedDefinitionAsset>Definition                                             (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UTedDefinitionAsset::GetAssetIdentifierFromDefinition(TSoftObjectPtr<class UTedDefinitionAsset> Definition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedDefinitionAsset", "GetAssetIdentifierFromDefinition");

	Params::TedDefinitionAsset_GetAssetIdentifierFromDefinition Parms{};

	Parms.Definition = Definition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEntityDefinitionAsset.GetDescription
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedEntityDefinitionAsset::GetDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEntityDefinitionAsset", "GetDescription");

	Params::TedEntityDefinitionAsset_GetDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AIRoute.GetWaypoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FVector2D>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector2D> AAIRoute::GetWaypoints() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIRoute", "GetWaypoints");

	Params::AIRoute_GetWaypoints Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AISplineRoute.GetWaypoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FVector>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector> AAISplineRoute::GetWaypoints() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AISplineRoute", "GetWaypoints");

	Params::AISplineRoute_GetWaypoints Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AISplineRoute.GetWaypoints2D
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FVector2D>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector2D> AAISplineRoute::GetWaypoints2D() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AISplineRoute", "GetWaypoints2D");

	Params::AISplineRoute_GetWaypoints2D Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedTooltipWidget.OnTooltipHidden
// (Event, Protected, BlueprintEvent)

void UTedTooltipWidget::OnTooltipHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTooltipWidget", "OnTooltipHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedTooltipWidget.OnTooltipShown
// (Event, Protected, BlueprintEvent)

void UTedTooltipWidget::OnTooltipShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTooltipWidget", "OnTooltipShown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedTooltipWidget.GetTargetWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UTedTooltipWidget::GetTargetWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTooltipWidget", "GetTargetWidget");

	Params::TedTooltipWidget_GetTargetWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSelectionDetails_InfoSlots_Tooltip_Defense.SetTargetPawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ATedPawn*                         InPawn                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSelectionDetails_InfoSlots_Tooltip_Defense::SetTargetPawn(class ATedPawn* InPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetails_InfoSlots_Tooltip_Defense", "SetTargetPawn");

	Params::TedSelectionDetails_InfoSlots_Tooltip_Defense_SetTargetPawn Parms{};

	Parms.InPawn = InPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedEquipmentSlotTooltip.GetDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedEquipmentSlotTooltip::GetDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentSlotTooltip", "GetDescription");

	Params::TedEquipmentSlotTooltip_GetDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEquipmentSlotTooltip.GetEquipmentSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedEquipmentSlot*          ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedEquipmentSlot* UTedEquipmentSlotTooltip::GetEquipmentSlot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentSlotTooltip", "GetEquipmentSlot");

	Params::TedEquipmentSlotTooltip_GetEquipmentSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEquipmentSlotTooltip.GetIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTedEquipmentSlotTooltip::GetIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentSlotTooltip", "GetIcon");

	Params::TedEquipmentSlotTooltip_GetIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEquipmentSlotTooltip.GetInventorySpaceCost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedEquipmentSlotTooltip::GetInventorySpaceCost() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentSlotTooltip", "GetInventorySpaceCost");

	Params::TedEquipmentSlotTooltip_GetInventorySpaceCost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEquipmentSlotTooltip.GetRequisitionCost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedEquipmentSlotTooltip::GetRequisitionCost() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentSlotTooltip", "GetRequisitionCost");

	Params::TedEquipmentSlotTooltip_GetRequisitionCost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEquipmentSlotTooltip.GetTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedEquipmentSlotTooltip::GetTitle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentSlotTooltip", "GetTitle");

	Params::TedEquipmentSlotTooltip_GetTitle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEncyclopediaSubsystem.AllAssetsUnlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedEncyclopediaSubsystem::AllAssetsUnlocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEncyclopediaSubsystem", "AllAssetsUnlocked");

	Params::TedEncyclopediaSubsystem_AllAssetsUnlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEncyclopediaSubsystem.GetAssetStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UTedEncyclopediaDefinitionAsset*  Asset                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEncyclopediaAssetStatus                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EEncyclopediaAssetStatus UTedEncyclopediaSubsystem::GetAssetStatus(class UTedEncyclopediaDefinitionAsset* Asset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEncyclopediaSubsystem", "GetAssetStatus");

	Params::TedEncyclopediaSubsystem_GetAssetStatus Parms{};

	Parms.Asset = Asset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEncyclopediaSubsystem.IsUnLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UTedEncyclopediaDefinitionAsset*  Asset                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedEncyclopediaSubsystem::IsUnLocked(class UTedEncyclopediaDefinitionAsset* Asset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEncyclopediaSubsystem", "IsUnLocked");

	Params::TedEncyclopediaSubsystem_IsUnLocked Parms{};

	Parms.Asset = Asset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEncyclopediaSubsystem.MarkAsRead
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTedEncyclopediaDefinitionAsset*  NewAsset                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedEncyclopediaSubsystem::MarkAsRead(class UTedEncyclopediaDefinitionAsset* NewAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEncyclopediaSubsystem", "MarkAsRead");

	Params::TedEncyclopediaSubsystem_MarkAsRead Parms{};

	Parms.NewAsset = NewAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedEncyclopediaSubsystem.UnlockAllAssets
// (Final, Native, Public, BlueprintCallable)

void UTedEncyclopediaSubsystem::UnlockAllAssets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEncyclopediaSubsystem", "UnlockAllAssets");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelStatic.SetRuntimeContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InContext                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedContentPanelStatic::SetRuntimeContext(class UObject* InContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelStatic", "SetRuntimeContext");

	Params::TedContentPanelStatic_SetRuntimeContext Parms{};

	Parms.InContext = InContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelStatic.GetRuntimeContext
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UTedContentPanelStatic::GetRuntimeContext() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelStatic", "GetRuntimeContext");

	Params::TedContentPanelStatic_GetRuntimeContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFogOfWarManager.DisableFogOfWarReveal
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FFoWAgentHandle&           InFoWAgentHandle                                       (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedFogOfWarManager::DisableFogOfWarReveal(const class UObject* WorldContextObject, const struct FFoWAgentHandle& InFoWAgentHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFogOfWarManager", "DisableFogOfWarReveal");

	Params::TedFogOfWarManager_DisableFogOfWarReveal Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InFoWAgentHandle = std::move(InFoWAgentHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedFogOfWarManager.RevealFogOfWar
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             RevealRadius                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             VisionRadius                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8                             ChannelId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             RevealTime                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFoWAgentHandle                  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FFoWAgentHandle UTedFogOfWarManager::RevealFogOfWar(const class UObject* WorldContextObject, const float RevealRadius, const float VisionRadius, const uint8 ChannelId, const float RevealTime, const struct FVector& Location, class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFogOfWarManager", "RevealFogOfWar");

	Params::TedFogOfWarManager_RevealFogOfWar Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.RevealRadius = RevealRadius;
	Parms.VisionRadius = VisionRadius;
	Parms.ChannelId = ChannelId;
	Parms.RevealTime = RevealTime;
	Parms.Location = std::move(Location);
	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFogOfWarManager.OnAttachActorDied
// (Final, Native, Protected)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedFogOfWarManager::OnAttachActorDied(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedFogOfWarManager", "OnAttachActorDied");

	Params::TedFogOfWarManager_OnAttachActorDied Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameModeBase.GameTestStartCapturingBroadcast
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   CapturingIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    CaptureName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedGameModeBase::GameTestStartCapturingBroadcast(int32 CapturingIndex, const class FString& CaptureName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameModeBase", "GameTestStartCapturingBroadcast");

	Params::TedGameModeBase_GameTestStartCapturingBroadcast Parms{};

	Parms.CapturingIndex = CapturingIndex;
	Parms.CaptureName = std::move(CaptureName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameModeBase.GameTestStopCapturingBroadcast
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   CapturingIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    CaptureName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedGameModeBase::GameTestStopCapturingBroadcast(int32 CapturingIndex, const class FString& CaptureName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameModeBase", "GameTestStopCapturingBroadcast");

	Params::TedGameModeBase_GameTestStopCapturingBroadcast Parms{};

	Parms.CapturingIndex = CapturingIndex;
	Parms.CaptureName = std::move(CaptureName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameMode.K2_GetGameDifficulty
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedGameDifficulty                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedGameDifficulty ATedGameMode::K2_GetGameDifficulty(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGameMode", "K2_GetGameDifficulty");

	Params::TedGameMode_K2_GetGameDifficulty Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameMode.K2_GetGameDifficultySwitch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedGameDifficulty*                     Difficulty                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedGameMode::K2_GetGameDifficultySwitch(const class UObject* WorldContextObject, ETedGameDifficulty* Difficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGameMode", "K2_GetGameDifficultySwitch");

	Params::TedGameMode_K2_GetGameDifficultySwitch Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Difficulty != nullptr)
		*Difficulty = Parms.Difficulty;
}


// Function Tempest.TedGameMode.K2_GetSupportsDifficulty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedGameMode::K2_GetSupportsDifficulty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameMode", "K2_GetSupportsDifficulty");

	Params::TedGameMode_K2_GetSupportsDifficulty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameCreationPlayersPanel.AddContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTedGameCreationPlayer&    InContent                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const bool                              bInSkipRefresContent                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedGameCreationPlayersPanel::AddContent(const struct FTedGameCreationPlayer& InContent, const bool bInSkipRefresContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "AddContent");

	Params::TedGameCreationPlayersPanel_AddContent Parms{};

	Parms.InContent = std::move(InContent);
	Parms.bInSkipRefresContent = bInSkipRefresContent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameCreationPlayersPanel.ClearTitleOverride
// (Final, Native, Public, BlueprintCallable)

void UTedGameCreationPlayersPanel::ClearTitleOverride()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "ClearTitleOverride");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameCreationPlayersPanel.InsertContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedGameCreationPlayer&    InContent                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const bool                              bInSkipRefresContent                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedGameCreationPlayersPanel::InsertContent(const int32 InSlotIndex, const struct FTedGameCreationPlayer& InContent, const bool bInSkipRefresContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "InsertContent");

	Params::TedGameCreationPlayersPanel_InsertContent Parms{};

	Parms.InSlotIndex = InSlotIndex;
	Parms.InContent = std::move(InContent);
	Parms.bInSkipRefresContent = bInSkipRefresContent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameCreationPlayersPanel.OverrideTitle
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      InTitle                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedGameCreationPlayersPanel::OverrideTitle(const class FText& InTitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "OverrideTitle");

	Params::TedGameCreationPlayersPanel_OverrideTitle Parms{};

	Parms.InTitle = std::move(InTitle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameCreationPlayersPanel.RegenPreviewTeam
// (Final, Native, Protected)

void UTedGameCreationPlayersPanel::RegenPreviewTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "RegenPreviewTeam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameCreationPlayersPanel.RemoveContent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInSkipRefresContent                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGameCreationPlayersPanel::RemoveContent(const int32 InSlotIndex, const bool bInSkipRefresContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "RemoveContent");

	Params::TedGameCreationPlayersPanel_RemoveContent Parms{};

	Parms.InSlotIndex = InSlotIndex;
	Parms.bInSkipRefresContent = bInSkipRefresContent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameCreationPlayersPanel.RequestAddBotPlayer
// (Final, Native, Public, BlueprintCallable)

void UTedGameCreationPlayersPanel::RequestAddBotPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "RequestAddBotPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameCreationPlayersPanel.RequestAddHumanPlayer
// (Final, Native, Public, BlueprintCallable)

void UTedGameCreationPlayersPanel::RequestAddHumanPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "RequestAddHumanPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameCreationPlayersPanel.RequestRemovePlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedGameCreationPlayersPanel::RequestRemovePlayer(const int32 InSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "RequestRemovePlayer");

	Params::TedGameCreationPlayersPanel_RequestRemovePlayer Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameCreationPlayersPanel.SetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTedGameCreationTeam&      InContent                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const bool                              bInSkipRefresContent                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedGameCreationPlayersPanel::SetContent(const struct FTedGameCreationTeam& InContent, const bool bInSkipRefresContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "SetContent");

	Params::TedGameCreationPlayersPanel_SetContent Parms{};

	Parms.InContent = std::move(InContent);
	Parms.bInSkipRefresContent = bInSkipRefresContent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameCreationPlayersPanel.SetContentInSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedGameCreationPlayer&    InContent                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedGameCreationPlayersPanel::SetContentInSlot(const int32 InSlotIndex, const struct FTedGameCreationPlayer& InContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "SetContentInSlot");

	Params::TedGameCreationPlayersPanel_SetContentInSlot Parms{};

	Parms.InSlotIndex = InSlotIndex;
	Parms.InContent = std::move(InContent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameCreationPlayersPanel.SetLabel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      InLabel                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedGameCreationPlayersPanel::SetLabel(const int32 InSlotIndex, const class FText& InLabel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "SetLabel");

	Params::TedGameCreationPlayersPanel_SetLabel Parms{};

	Parms.InSlotIndex = InSlotIndex;
	Parms.InLabel = std::move(InLabel);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameCreationPlayersPanel.UpdateTitle
// (Final, Native, Public, BlueprintCallable)

void UTedGameCreationPlayersPanel::UpdateTitle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "UpdateTitle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameCreationPlayersPanel.CanRequestAddBotPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InPlayerIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGameCreationPlayersPanel::CanRequestAddBotPlayer(const int32 InPlayerIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "CanRequestAddBotPlayer");

	Params::TedGameCreationPlayersPanel_CanRequestAddBotPlayer Parms{};

	Parms.InPlayerIndex = InPlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameCreationPlayersPanel.GetAvatar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTedGameCreationPlayersPanel::GetAvatar(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "GetAvatar");

	Params::TedGameCreationPlayersPanel_GetAvatar Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameCreationPlayersPanel.GetContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FTedGameCreationTeam       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FTedGameCreationTeam UTedGameCreationPlayersPanel::GetContent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "GetContent");

	Params::TedGameCreationPlayersPanel_GetContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameCreationPlayersPanel.GetLabel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedGameCreationPlayersPanel::GetLabel(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "GetLabel");

	Params::TedGameCreationPlayersPanel_GetLabel Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameCreationPlayersPanel.GetPlayerSettingValue
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const int32                             InPlayerIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedSessionMemberSettingKey       InKey                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGameCreationPlayersPanel::GetPlayerSettingValue(const int32 InPlayerIndex, const ETedSessionMemberSettingKey InKey, int32* OutValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "GetPlayerSettingValue");

	Params::TedGameCreationPlayersPanel_GetPlayerSettingValue Parms{};

	Parms.InPlayerIndex = InPlayerIndex;
	Parms.InKey = InKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutValue != nullptr)
		*OutValue = Parms.OutValue;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameCreationPlayersPanel.GetPlayersNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedGameCreationPlayersPanel::GetPlayersNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "GetPlayersNum");

	Params::TedGameCreationPlayersPanel_GetPlayersNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameCreationPlayersPanel.GetTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedTeamID                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedTeamID UTedGameCreationPlayersPanel::GetTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "GetTeam");

	Params::TedGameCreationPlayersPanel_GetTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameCreationPlayersPanel.HasPlayerSetting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InPlayerIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedSessionMemberSettingKey       InKey                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGameCreationPlayersPanel::HasPlayerSetting(const int32 InPlayerIndex, const ETedSessionMemberSettingKey InKey) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "HasPlayerSetting");

	Params::TedGameCreationPlayersPanel_HasPlayerSetting Parms{};

	Parms.InPlayerIndex = InPlayerIndex;
	Parms.InKey = InKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameCreationPlayersPanel.IsAdmin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InPlayerIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGameCreationPlayersPanel::IsAdmin(const int32 InPlayerIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "IsAdmin");

	Params::TedGameCreationPlayersPanel_IsAdmin Parms{};

	Parms.InPlayerIndex = InPlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameCreationPlayersPanel.IsBot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGameCreationPlayersPanel::IsBot(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "IsBot");

	Params::TedGameCreationPlayersPanel_IsBot Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameCreationPlayersPanel.IsEmpty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGameCreationPlayersPanel::IsEmpty(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "IsEmpty");

	Params::TedGameCreationPlayersPanel_IsEmpty Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameCreationPlayersPanel.IsHuman
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGameCreationPlayersPanel::IsHuman(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "IsHuman");

	Params::TedGameCreationPlayersPanel_IsHuman Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameCreationPlayersPanel.IsPlayerSettingValueUsed
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const ETedSessionMemberSettingKey       InKey                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGameCreationPlayersPanel::IsPlayerSettingValueUsed(const ETedSessionMemberSettingKey InKey, const int32 InValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "IsPlayerSettingValueUsed");

	Params::TedGameCreationPlayersPanel_IsPlayerSettingValueUsed Parms{};

	Parms.InKey = InKey;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameCreationPlayersPanel.IsReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGameCreationPlayersPanel::IsReady(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "IsReady");

	Params::TedGameCreationPlayersPanel_IsReady Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameCreationPlayersPanel.IsTeamRelevant
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGameCreationPlayersPanel::IsTeamRelevant() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersPanel", "IsTeamRelevant");

	Params::TedGameCreationPlayersPanel_IsTeamRelevant Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFeatures.AreLeaderboardsAvailable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFeatures::AreLeaderboardsAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFeatures", "AreLeaderboardsAvailable");

	Params::TedFeatures_AreLeaderboardsAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFeatures.DoesPlayerProfileShowEmptyRatingsAndPlacements
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFeatures::DoesPlayerProfileShowEmptyRatingsAndPlacements()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFeatures", "DoesPlayerProfileShowEmptyRatingsAndPlacements");

	Params::TedFeatures_DoesPlayerProfileShowEmptyRatingsAndPlacements Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFeatures.IsAnyOfGameBranch
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const TArray<ETedBranch>&               InBranches                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFeatures::IsAnyOfGameBranch(const TArray<ETedBranch>& InBranches)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFeatures", "IsAnyOfGameBranch");

	Params::TedFeatures_IsAnyOfGameBranch Parms{};

	Parms.InBranches = std::move(InBranches);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFeatures.IsCampaignAvailable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFeatures::IsCampaignAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFeatures", "IsCampaignAvailable");

	Params::TedFeatures_IsCampaignAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFeatures.IsCampaignMissionSelectAvailable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFeatures::IsCampaignMissionSelectAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFeatures", "IsCampaignMissionSelectAvailable");

	Params::TedFeatures_IsCampaignMissionSelectAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFeatures.IsCheatMenuAvailable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFeatures::IsCheatMenuAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFeatures", "IsCheatMenuAvailable");

	Params::TedFeatures_IsCheatMenuAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFeatures.IsCodexAvailable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFeatures::IsCodexAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFeatures", "IsCodexAvailable");

	Params::TedFeatures_IsCodexAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFeatures.IsCustomMultiplayerAvailable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFeatures::IsCustomMultiplayerAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFeatures", "IsCustomMultiplayerAvailable");

	Params::TedFeatures_IsCustomMultiplayerAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFeatures.IsFriendsAvailable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFeatures::IsFriendsAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFeatures", "IsFriendsAvailable");

	Params::TedFeatures_IsFriendsAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFeatures.IsGameBranch
// (Final, Native, Static, Private, BlueprintCallable, BlueprintPure)
// Parameters:
// const ETedBranch                        InBranch                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFeatures::IsGameBranch(const ETedBranch InBranch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFeatures", "IsGameBranch");

	Params::TedFeatures_IsGameBranch Parms{};

	Parms.InBranch = InBranch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFeatures.IsGlobalBuildQueueAvailable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFeatures::IsGlobalBuildQueueAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFeatures", "IsGlobalBuildQueueAvailable");

	Params::TedFeatures_IsGlobalBuildQueueAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFeatures.IsMapBanAvailable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFeatures::IsMapBanAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFeatures", "IsMapBanAvailable");

	Params::TedFeatures_IsMapBanAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFeatures.IsMultiplayerAvailable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFeatures::IsMultiplayerAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFeatures", "IsMultiplayerAvailable");

	Params::TedFeatures_IsMultiplayerAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFeatures.IsNetworkRequiredToRunGame
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFeatures::IsNetworkRequiredToRunGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFeatures", "IsNetworkRequiredToRunGame");

	Params::TedFeatures_IsNetworkRequiredToRunGame Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFeatures.IsNotAnyOfGameBranch
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const TArray<ETedBranch>&               InBranches                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFeatures::IsNotAnyOfGameBranch(const TArray<ETedBranch>& InBranches)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFeatures", "IsNotAnyOfGameBranch");

	Params::TedFeatures_IsNotAnyOfGameBranch Parms{};

	Parms.InBranches = std::move(InBranches);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFeatures.IsNotGameBranch
// (Final, Native, Static, Private, BlueprintCallable, BlueprintPure)
// Parameters:
// const ETedBranch                        InBranch                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFeatures::IsNotGameBranch(const ETedBranch InBranch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFeatures", "IsNotGameBranch");

	Params::TedFeatures_IsNotGameBranch Parms{};

	Parms.InBranch = InBranch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFeatures.IsPartyAvailable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFeatures::IsPartyAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFeatures", "IsPartyAvailable");

	Params::TedFeatures_IsPartyAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFeatures.IsPlayerProfileAvailable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFeatures::IsPlayerProfileAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFeatures", "IsPlayerProfileAvailable");

	Params::TedFeatures_IsPlayerProfileAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFeatures.IsQrCodeAvailable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFeatures::IsQrCodeAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFeatures", "IsQrCodeAvailable");

	Params::TedFeatures_IsQrCodeAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFeatures.IsRandomFactionAvailable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFeatures::IsRandomFactionAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFeatures", "IsRandomFactionAvailable");

	Params::TedFeatures_IsRandomFactionAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFeatures.IsRankedMultiplayerAvailable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFeatures::IsRankedMultiplayerAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFeatures", "IsRankedMultiplayerAvailable");

	Params::TedFeatures_IsRankedMultiplayerAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFeatures.IsReplayAvailable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFeatures::IsReplayAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFeatures", "IsReplayAvailable");

	Params::TedFeatures_IsReplayAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFeatures.IsSkirmishAvailable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFeatures::IsSkirmishAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFeatures", "IsSkirmishAvailable");

	Params::TedFeatures_IsSkirmishAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFeatures.IsSpectatorAvailable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFeatures::IsSpectatorAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFeatures", "IsSpectatorAvailable");

	Params::TedFeatures_IsSpectatorAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFeatures.IsSuperWeaponAvailable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFeatures::IsSuperWeaponAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFeatures", "IsSuperWeaponAvailable");

	Params::TedFeatures_IsSuperWeaponAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFeatures.IsUnrankedMultiplayerAvailable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFeatures::IsUnrankedMultiplayerAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFeatures", "IsUnrankedMultiplayerAvailable");

	Params::TedFeatures_IsUnrankedMultiplayerAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFeatures.IsVetiAvailable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFeatures::IsVetiAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedFeatures", "IsVetiAvailable");

	Params::TedFeatures_IsVetiAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUnitCommand_GuardLocation.CreateGuardLocationCommandData
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TSubclassOf<class UTedUnitCommand_GuardLocation>CommandClass                                           (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Radius                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCommandData             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayCommandData UTedUnitCommand_GuardLocation::CreateGuardLocationCommandData(TSubclassOf<class UTedUnitCommand_GuardLocation> CommandClass, const struct FVector& Location, const float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUnitCommand_GuardLocation", "CreateGuardLocationCommandData");

	Params::TedUnitCommand_GuardLocation_CreateGuardLocationCommandData Parms{};

	Parms.CommandClass = CommandClass;
	Parms.Location = std::move(Location);
	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUnitMovementReplicationManager.Client_ReceiveMovementSnapshotBatch
// (Net, Native, Event, Protected, NetClient)
// Parameters:
// const struct FRepMoveSnapshotBatch&     MoveSnapshotBatch                                      (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void ATedUnitMovementReplicationManager::Client_ReceiveMovementSnapshotBatch(const struct FRepMoveSnapshotBatch& MoveSnapshotBatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitMovementReplicationManager", "Client_ReceiveMovementSnapshotBatch");

	Params::TedUnitMovementReplicationManager_Client_ReceiveMovementSnapshotBatch Parms{};

	Parms.MoveSnapshotBatch = std::move(MoveSnapshotBatch);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUnitMovementReplicationManager.OnRep_RegisteredUnits
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const TArray<class ATedUnitBase*>&      OldValue                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ATedUnitMovementReplicationManager::OnRep_RegisteredUnits(const TArray<class ATedUnitBase*>& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitMovementReplicationManager", "OnRep_RegisteredUnits");

	Params::TedUnitMovementReplicationManager_OnRep_RegisteredUnits Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUnitMovementReplicationManager.Server_ReceiveMovementSnapshotBatchAck
// (Net, Native, Event, Protected, NetServer)
// Parameters:
// const int32                             BatchID                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedUnitMovementReplicationManager::Server_ReceiveMovementSnapshotBatchAck(const int32 BatchID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitMovementReplicationManager", "Server_ReceiveMovementSnapshotBatchAck");

	Params::TedUnitMovementReplicationManager_Server_ReceiveMovementSnapshotBatchAck Parms{};

	Parms.BatchID = BatchID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUnitMovementReplicationManager.Server_ReceiveUnitRegisteredAck
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// const TArray<class ATedUnitBase*>&      Units                                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ATedUnitMovementReplicationManager::Server_ReceiveUnitRegisteredAck(const TArray<class ATedUnitBase*>& Units)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitMovementReplicationManager", "Server_ReceiveUnitRegisteredAck");

	Params::TedUnitMovementReplicationManager_Server_ReceiveUnitRegisteredAck Parms{};

	Parms.Units = std::move(Units);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedDropDown.AddOption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InOptionValue                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedDropDown::AddOption(const int32 InOptionValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDropDown", "AddOption");

	Params::TedDropDown_AddOption Parms{};

	Parms.InOptionValue = InOptionValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDropDown.ClearOptions
// (Final, Native, Public, BlueprintCallable)

void UTedDropDown::ClearOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDropDown", "ClearOptions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedDropDown.ClearSelection
// (Final, Native, Public, BlueprintCallable)

void UTedDropDown::ClearSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDropDown", "ClearSelection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedDropDown.GetOrCreateArrowMID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* UTedDropDown::GetOrCreateArrowMID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDropDown", "GetOrCreateArrowMID");

	Params::TedDropDown_GetOrCreateArrowMID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDropDown.RefreshOptions
// (Final, Native, Public, BlueprintCallable)

void UTedDropDown::RefreshOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDropDown", "RefreshOptions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedDropDown.RemoveOption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InOptionValue                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedDropDown::RemoveOption(const int32 InOptionValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDropDown", "RemoveOption");

	Params::TedDropDown_RemoveOption Parms{};

	Parms.InOptionValue = InOptionValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDropDown.SelectOptionByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InOptionIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedDropDown::SelectOptionByIndex(const int32 InOptionIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDropDown", "SelectOptionByIndex");

	Params::TedDropDown_SelectOptionByIndex Parms{};

	Parms.InOptionIndex = InOptionIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedDropDown.SelectOptionByValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InOptionValue                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedDropDown::SelectOptionByValue(const int32 InOptionValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDropDown", "SelectOptionByValue");

	Params::TedDropDown_SelectOptionByValue Parms{};

	Parms.InOptionValue = InOptionValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedDropDown.GetArrowMID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* UTedDropDown::GetArrowMID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDropDown", "GetArrowMID");

	Params::TedDropDown_GetArrowMID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDropDown.GetOptionIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InOptionValue                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedDropDown::GetOptionIndex(const int32 InOptionValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDropDown", "GetOptionIndex");

	Params::TedDropDown_GetOptionIndex Parms{};

	Parms.InOptionValue = InOptionValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDropDown.GetOptionsCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedDropDown::GetOptionsCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDropDown", "GetOptionsCount");

	Params::TedDropDown_GetOptionsCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDropDown.GetOptionValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InOptionIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedDropDown::GetOptionValue(const int32 InOptionIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDropDown", "GetOptionValue");

	Params::TedDropDown_GetOptionValue Parms{};

	Parms.InOptionIndex = InOptionIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDropDown.GetOptionValueText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InOptionValue                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedDropDown::GetOptionValueText(const int32 InOptionValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDropDown", "GetOptionValueText");

	Params::TedDropDown_GetOptionValueText Parms{};

	Parms.InOptionValue = InOptionValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDropDown.GetSelectedOptionIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedDropDown::GetSelectedOptionIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDropDown", "GetSelectedOptionIndex");

	Params::TedDropDown_GetSelectedOptionIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDropDown.GetSelectedOptionValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedDropDown::GetSelectedOptionValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDropDown", "GetSelectedOptionValue");

	Params::TedDropDown_GetSelectedOptionValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDropDown.IsOpen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedDropDown::IsOpen() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDropDown", "IsOpen");

	Params::TedDropDown_IsOpen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameplayCueNotify_HitActor.OnNiagaraFinished
// (Final, Native, Protected)
// Parameters:
// class UNiagaraComponent*                ParticleSC                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedGameplayCueNotify_HitActor::OnNiagaraFinished(class UNiagaraComponent* ParticleSC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameplayCueNotify_HitActor", "OnNiagaraFinished");

	Params::TedGameplayCueNotify_HitActor_OnNiagaraFinished Parms{};

	Parms.ParticleSC = ParticleSC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameplayCueNotify_HitActor.OnParticleFinished
// (Final, Native, Protected)
// Parameters:
// class UParticleSystemComponent*         ParticleSC                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedGameplayCueNotify_HitActor::OnParticleFinished(class UParticleSystemComponent* ParticleSC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameplayCueNotify_HitActor", "OnParticleFinished");

	Params::TedGameplayCueNotify_HitActor_OnParticleFinished Parms{};

	Parms.ParticleSC = ParticleSC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameplayCueNotify_HitActor.OnSoundFinished
// (Final, Native, Protected)
// Parameters:
// class UAudioComponent*                  AudioComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedGameplayCueNotify_HitActor::OnSoundFinished(class UAudioComponent* AudioComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameplayCueNotify_HitActor", "OnSoundFinished");

	Params::TedGameplayCueNotify_HitActor_OnSoundFinished Parms{};

	Parms.AudioComp = AudioComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameplayCueNotify_HitActor.K2_GetFXAssetConfigs
// (Native, Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const class AActor*                     TargetActor                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayCueParameters&    GCueParams                                             (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// TArray<struct FGCueParticleConfig>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FGCueParticleConfig> ATedGameplayCueNotify_HitActor::K2_GetFXAssetConfigs(const class AActor* TargetActor, const struct FGameplayCueParameters& GCueParams) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameplayCueNotify_HitActor", "K2_GetFXAssetConfigs");

	Params::TedGameplayCueNotify_HitActor_K2_GetFXAssetConfigs Parms{};

	Parms.TargetActor = TargetActor;
	Parms.GCueParams = std::move(GCueParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameMode_MP.OnInactivePlayerStateEndPlay
// (Final, Native, Protected)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          InEndPlayReason                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedGameMode_MP::OnInactivePlayerStateEndPlay(class AActor* InActor, EEndPlayReason InEndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameMode_MP", "OnInactivePlayerStateEndPlay");

	Params::TedGameMode_MP_OnInactivePlayerStateEndPlay Parms{};

	Parms.InActor = InActor;
	Parms.InEndPlayReason = InEndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameProgressFunctionLibrary.CanContinueCampaign
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGameProgressFunctionLibrary::CanContinueCampaign(const class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGameProgressFunctionLibrary", "CanContinueCampaign");

	Params::TedGameProgressFunctionLibrary_CanContinueCampaign Parms{};

	Parms.InWorldContext = InWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameProgressFunctionLibrary.ContinueCampaignFromBriefing
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedCampaignInfo*           InCampaign                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedMapInfo*                InMap                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGameProgressFunctionLibrary::ContinueCampaignFromBriefing(const class UObject* InWorldContext, const class UTedCampaignInfo* InCampaign, const class UTedMapInfo* InMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGameProgressFunctionLibrary", "ContinueCampaignFromBriefing");

	Params::TedGameProgressFunctionLibrary_ContinueCampaignFromBriefing Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InCampaign = InCampaign;
	Parms.InMap = InMap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameProgressFunctionLibrary.ContinueCampaignFromBriefingWithDifficulty
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedCampaignInfo*           InCampaign                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedMapInfo*                InMap                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedGameDifficulty                      InDifficulty                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGameProgressFunctionLibrary::ContinueCampaignFromBriefingWithDifficulty(const class UObject* InWorldContext, const class UTedCampaignInfo* InCampaign, const class UTedMapInfo* InMap, ETedGameDifficulty InDifficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGameProgressFunctionLibrary", "ContinueCampaignFromBriefingWithDifficulty");

	Params::TedGameProgressFunctionLibrary_ContinueCampaignFromBriefingWithDifficulty Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InCampaign = InCampaign;
	Parms.InMap = InMap;
	Parms.InDifficulty = InDifficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameProgressFunctionLibrary.ContinueCampaignFromMap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedCampaignInfo*           InCampaign                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedMapInfo*                InMap                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInOpenMap                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGameProgressFunctionLibrary::ContinueCampaignFromMap(const class UObject* InWorldContext, const class UTedCampaignInfo* InCampaign, const class UTedMapInfo* InMap, const bool bInOpenMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGameProgressFunctionLibrary", "ContinueCampaignFromMap");

	Params::TedGameProgressFunctionLibrary_ContinueCampaignFromMap Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InCampaign = InCampaign;
	Parms.InMap = InMap;
	Parms.bInOpenMap = bInOpenMap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameProgressFunctionLibrary.GetCampaignLatestUnlockedMap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedCampaignInfo*           InCampaign                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedMapInfo*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedMapInfo* UTedGameProgressFunctionLibrary::GetCampaignLatestUnlockedMap(const class UObject* InWorldContext, const class UTedCampaignInfo* InCampaign)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGameProgressFunctionLibrary", "GetCampaignLatestUnlockedMap");

	Params::TedGameProgressFunctionLibrary_GetCampaignLatestUnlockedMap Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InCampaign = InCampaign;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameProgressFunctionLibrary.GetCurrentCampaign
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedCampaignInfo*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedCampaignInfo* UTedGameProgressFunctionLibrary::GetCurrentCampaign(const class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGameProgressFunctionLibrary", "GetCurrentCampaign");

	Params::TedGameProgressFunctionLibrary_GetCurrentCampaign Parms{};

	Parms.InWorldContext = InWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameProgressFunctionLibrary.GetCurrentCampaignMap
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedMapInfo*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedMapInfo* UTedGameProgressFunctionLibrary::GetCurrentCampaignMap(const class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGameProgressFunctionLibrary", "GetCurrentCampaignMap");

	Params::TedGameProgressFunctionLibrary_GetCurrentCampaignMap Parms{};

	Parms.InWorldContext = InWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameProgressFunctionLibrary.IsAnyCampaignStarted
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGameProgressFunctionLibrary::IsAnyCampaignStarted(const class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGameProgressFunctionLibrary", "IsAnyCampaignStarted");

	Params::TedGameProgressFunctionLibrary_IsAnyCampaignStarted Parms{};

	Parms.InWorldContext = InWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameProgressFunctionLibrary.IsCampaignStarted
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedCampaignInfo*           InCampaign                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGameProgressFunctionLibrary::IsCampaignStarted(const class UObject* InWorldContext, const class UTedCampaignInfo* InCampaign)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGameProgressFunctionLibrary", "IsCampaignStarted");

	Params::TedGameProgressFunctionLibrary_IsCampaignStarted Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InCampaign = InCampaign;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameProgressFunctionLibrary.SimulateGameProgress
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedSimulatedGameProgress*  InSimulatedProgress                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedGameProgressFunctionLibrary::SimulateGameProgress(const class UObject* InWorldContext, const class UTedSimulatedGameProgress* InSimulatedProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGameProgressFunctionLibrary", "SimulateGameProgress");

	Params::TedGameProgressFunctionLibrary_SimulateGameProgress Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InSimulatedProgress = InSimulatedProgress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameProgressFunctionLibrary.StartCampaign
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedCampaignInfo*           InCampaign                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInOpenMap                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedGameDifficulty                      InDifficulty                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGameProgressFunctionLibrary::StartCampaign(const class UObject* InWorldContext, const class UTedCampaignInfo* InCampaign, const bool bInOpenMap, ETedGameDifficulty InDifficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGameProgressFunctionLibrary", "StartCampaign");

	Params::TedGameProgressFunctionLibrary_StartCampaign Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InCampaign = InCampaign;
	Parms.bInOpenMap = bInOpenMap;
	Parms.InDifficulty = InDifficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGenericDataContentSlot.GetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// struct FTedGenericDataContainer*        OutContent                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGenericDataContentSlot::GetContent(struct FTedGenericDataContainer* OutContent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGenericDataContentSlot", "GetContent");

	Params::TedGenericDataContentSlot_GetContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutContent != nullptr)
		*OutContent = std::move(Parms.OutContent);

	return Parms.ReturnValue;
}


// Function Tempest.TedGenericDataContentSlot.GetGenericDataContentPanel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedGenericDataContentPanel*      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedGenericDataContentPanel* UTedGenericDataContentSlot::GetGenericDataContentPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGenericDataContentSlot", "GetGenericDataContentPanel");

	Params::TedGenericDataContentSlot_GetGenericDataContentPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGenericDataContentSlot.K2_GetContentValue_Float
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const struct FGameplayTag&              InKey                                                  (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGenericDataContentSlot::K2_GetContentValue_Float(const struct FGameplayTag& InKey, float* OutValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGenericDataContentSlot", "K2_GetContentValue_Float");

	Params::TedGenericDataContentSlot_K2_GetContentValue_Float Parms{};

	Parms.InKey = std::move(InKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutValue != nullptr)
		*OutValue = Parms.OutValue;

	return Parms.ReturnValue;
}


// Function Tempest.TedGenericDataContentSlot.K2_GetContentValue_Int32
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const struct FGameplayTag&              InKey                                                  (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGenericDataContentSlot::K2_GetContentValue_Int32(const struct FGameplayTag& InKey, int32* OutValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGenericDataContentSlot", "K2_GetContentValue_Int32");

	Params::TedGenericDataContentSlot_K2_GetContentValue_Int32 Parms{};

	Parms.InKey = std::move(InKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutValue != nullptr)
		*OutValue = Parms.OutValue;

	return Parms.ReturnValue;
}


// Function Tempest.TedGenericDataContentSlot.K2_GetContentValue_Object
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const struct FGameplayTag&              InKey                                                  (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSubclassOf<class UObject>        InOutputType                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject**                         OutValue                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGenericDataContentSlot::K2_GetContentValue_Object(const struct FGameplayTag& InKey, const TSubclassOf<class UObject> InOutputType, class UObject** OutValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGenericDataContentSlot", "K2_GetContentValue_Object");

	Params::TedGenericDataContentSlot_K2_GetContentValue_Object Parms{};

	Parms.InKey = std::move(InKey);
	Parms.InOutputType = InOutputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutValue != nullptr)
		*OutValue = Parms.OutValue;

	return Parms.ReturnValue;
}


// Function Tempest.TedGenericDataContentSlot.K2_GetContentValue_SlateBrush
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const struct FGameplayTag&              InKey                                                  (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateBrush*                     OutValue                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGenericDataContentSlot::K2_GetContentValue_SlateBrush(const struct FGameplayTag& InKey, struct FSlateBrush* OutValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGenericDataContentSlot", "K2_GetContentValue_SlateBrush");

	Params::TedGenericDataContentSlot_K2_GetContentValue_SlateBrush Parms{};

	Parms.InKey = std::move(InKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutValue != nullptr)
		*OutValue = std::move(Parms.OutValue);

	return Parms.ReturnValue;
}


// Function Tempest.TedGenericDataContentSlot.K2_GetContentValue_Text
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const struct FGameplayTag&              InKey                                                  (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText*                            OutValue                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGenericDataContentSlot::K2_GetContentValue_Text(const struct FGameplayTag& InKey, class FText* OutValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGenericDataContentSlot", "K2_GetContentValue_Text");

	Params::TedGenericDataContentSlot_K2_GetContentValue_Text Parms{};

	Parms.InKey = std::move(InKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutValue != nullptr)
		*OutValue = std::move(Parms.OutValue);

	return Parms.ReturnValue;
}


// Function Tempest.TedHudPopup.Cancel
// (Final, Native, Public, BlueprintCallable)

void UTedHudPopup::Cancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHudPopup", "Cancel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedHudPopup.K2_HideButton
// (Event, Public, BlueprintEvent)

void UTedHudPopup::K2_HideButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHudPopup", "K2_HideButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedHudPopup.K2_ShowButton
// (Event, Public, BlueprintEvent)

void UTedHudPopup::K2_ShowButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHudPopup", "K2_ShowButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedGameVersionWidget.GetGameVersion
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedGameVersionWidget::GetGameVersion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameVersionWidget", "GetGameVersion");

	Params::TedGameVersionWidget_GetGameVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPopupButtonsSlot.NotifyContentClicked
// (Final, Native, Public, BlueprintCallable)

void UTedPopupButtonsSlot::NotifyContentClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPopupButtonsSlot", "NotifyContentClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPopupButtonsSlot.GetButtonsPanel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedPopupButtonsPanel*            ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedPopupButtonsPanel* UTedPopupButtonsSlot::GetButtonsPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPopupButtonsSlot", "GetButtonsPanel");

	Params::TedPopupButtonsSlot_GetButtonsPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPopupButtonsSlot.GetContentDescription
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedPopupButtonsSlot::GetContentDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPopupButtonsSlot", "GetContentDescription");

	Params::TedPopupButtonsSlot_GetContentDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPopupButtonsSlot.GetContentText
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedPopupButtonsSlot::GetContentText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPopupButtonsSlot", "GetContentText");

	Params::TedPopupButtonsSlot_GetContentText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlowingButton.GetGlowTextBlocks
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UTextBlock*>               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UTextBlock*> UTedGlowingButton::GetGlowTextBlocks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGlowingButton", "GetGlowTextBlocks");

	Params::TedGlowingButton_GetGlowTextBlocks Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlowingButton.SetGlowText
// (Final, Native, Public, HasOutParams)
// Parameters:
// const class FText&                      Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedGlowingButton::SetGlowText(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGlowingButton", "SetGlowText");

	Params::TedGlowingButton_SetGlowText Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedProjectile.ReceiveOnProjectileFired
// (Event, Protected, BlueprintEvent)

void ATedProjectile::ReceiveOnProjectileFired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedProjectile", "ReceiveOnProjectileFired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedProjectile.ReceiveOnProjectileHit
// (Event, Protected, BlueprintEvent)

void ATedProjectile::ReceiveOnProjectileHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedProjectile", "ReceiveOnProjectileHit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedProjectile.GetDamageGESpec
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayEffectSpecHandle        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayEffectSpecHandle ATedProjectile::GetDamageGESpec() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedProjectile", "GetDamageGESpec");

	Params::TedProjectile_GetDamageGESpec Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedProjectile.GetDestination
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ATedProjectile::GetDestination() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedProjectile", "GetDestination");

	Params::TedProjectile_GetDestination Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedProjectile.GetStart
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ATedProjectile::GetStart() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedProjectile", "GetStart");

	Params::TedProjectile_GetStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWorkerButton.HandleDamageIcon
// (Final, Native, Public, BlueprintCallable)

void UTedWorkerButton::HandleDamageIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWorkerButton", "HandleDamageIcon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedWorkerButton.K2_OnSingleWorkerHealthChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   OldValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedWorkerButton::K2_OnSingleWorkerHealthChanged(float OldValue, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWorkerButton", "K2_OnSingleWorkerHealthChanged");

	Params::TedWorkerButton_K2_OnSingleWorkerHealthChanged Parms{};

	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedWorkerButton.SetWorkerData
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ATedPawn*                         WorkerPawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedWorkerButton::SetWorkerData(class ATedPawn* WorkerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWorkerButton", "SetWorkerData");

	Params::TedWorkerButton_SetWorkerData Parms{};

	Parms.WorkerPawn = WorkerPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTextBlock_TypeWriter.EnableCurve
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bInEnable                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedTextBlock_TypeWriter::EnableCurve(const bool bInEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTextBlock_TypeWriter", "EnableCurve");

	Params::TedTextBlock_TypeWriter_EnableCurve Parms{};

	Parms.bInEnable = bInEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTextBlock_TypeWriter.Finish
// (Final, Native, Public, BlueprintCallable)

void UTedTextBlock_TypeWriter::Finish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTextBlock_TypeWriter", "Finish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTextBlock_TypeWriter.GetCurrentText
// (Final, Native, Protected)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedTextBlock_TypeWriter::GetCurrentText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTextBlock_TypeWriter", "GetCurrentText");

	Params::TedTextBlock_TypeWriter_GetCurrentText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedTextBlock_TypeWriter.K2_SetActualText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FText&                      InText                                                 (ConstParm, Parm, NativeAccessSpecifierPublic)

void UTedTextBlock_TypeWriter::K2_SetActualText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTextBlock_TypeWriter", "K2_SetActualText");

	Params::TedTextBlock_TypeWriter_K2_SetActualText Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTextBlock_TypeWriter.Reset
// (Final, Native, Public, BlueprintCallable)

void UTedTextBlock_TypeWriter::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTextBlock_TypeWriter", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTextBlock_TypeWriter.SetCurve
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRuntimeFloatCurve&        InCurve                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedTextBlock_TypeWriter::SetCurve(const struct FRuntimeFloatCurve& InCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTextBlock_TypeWriter", "SetCurve");

	Params::TedTextBlock_TypeWriter_SetCurve Parms{};

	Parms.InCurve = std::move(InCurve);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTextBlock_TypeWriter.SetCurveFromAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCurveFloat*                      InCurve                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedTextBlock_TypeWriter::SetCurveFromAsset(class UCurveFloat* InCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTextBlock_TypeWriter", "SetCurveFromAsset");

	Params::TedTextBlock_TypeWriter_SetCurveFromAsset Parms{};

	Parms.InCurve = InCurve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTextBlock_TypeWriter.SetDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const float                             InDuration                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedTextBlock_TypeWriter::SetDuration(const float InDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTextBlock_TypeWriter", "SetDuration");

	Params::TedTextBlock_TypeWriter_SetDuration Parms{};

	Parms.InDuration = InDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTextBlock_TypeWriter.Start
// (Final, Native, Public, BlueprintCallable)

void UTedTextBlock_TypeWriter::Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTextBlock_TypeWriter", "Start");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTextBlock_TypeWriter.CanAnimateDuringPause
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedTextBlock_TypeWriter::CanAnimateDuringPause() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTextBlock_TypeWriter", "CanAnimateDuringPause");

	Params::TedTextBlock_TypeWriter_CanAnimateDuringPause Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedTextBlock_TypeWriter.GetDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedTextBlock_TypeWriter::GetDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTextBlock_TypeWriter", "GetDuration");

	Params::TedTextBlock_TypeWriter_GetDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedTextBlock_TypeWriter.GetElapsedTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const bool                              bInClampToDuration                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedTextBlock_TypeWriter::GetElapsedTime(const bool bInClampToDuration) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTextBlock_TypeWriter", "GetElapsedTime");

	Params::TedTextBlock_TypeWriter_GetElapsedTime Parms{};

	Parms.bInClampToDuration = bInClampToDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedTextBlock_TypeWriter.GetProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedTextBlock_TypeWriter::GetProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTextBlock_TypeWriter", "GetProgress");

	Params::TedTextBlock_TypeWriter_GetProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedTextBlock_TypeWriter.GetRemainingTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedTextBlock_TypeWriter::GetRemainingTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTextBlock_TypeWriter", "GetRemainingTime");

	Params::TedTextBlock_TypeWriter_GetRemainingTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedTextBlock_TypeWriter.GetStartTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedTextBlock_TypeWriter::GetStartTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTextBlock_TypeWriter", "GetStartTime");

	Params::TedTextBlock_TypeWriter_GetStartTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedTextBlock_TypeWriter.IsRunning
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedTextBlock_TypeWriter::IsRunning() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTextBlock_TypeWriter", "IsRunning");

	Params::TedTextBlock_TypeWriter_IsRunning Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedTextBlock_TypeWriter_VO.StartVO
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class USoundBase*                       InVO                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UAudioComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAudioComponent* UTedTextBlock_TypeWriter_VO::StartVO(class USoundBase* InVO, const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTextBlock_TypeWriter_VO", "StartVO");

	Params::TedTextBlock_TypeWriter_VO_StartVO Parms{};

	Parms.InVO = InVO;
	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedHotspotConfig.GetDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedHotspotConfig::GetDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHotspotConfig", "GetDuration");

	Params::TedHotspotConfig_GetDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedHotspotConfig.GetHotspotRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedHotspotConfig::GetHotspotRadius() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHotspotConfig", "GetHotspotRadius");

	Params::TedHotspotConfig_GetHotspotRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedHotspotConfig.GetPriority
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedHotspotConfig::GetPriority() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHotspotConfig", "GetPriority");

	Params::TedHotspotConfig_GetPriority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedHotspotConfig.IsUsingTargetLocation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedHotspotConfig::IsUsingTargetLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHotspotConfig", "IsUsingTargetLocation");

	Params::TedHotspotConfig_IsUsingTargetLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCampaignSlotsPanel.SlotRequest_Delete
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCampaignSlotsPanel::SlotRequest_Delete(int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCampaignSlotsPanel", "SlotRequest_Delete");

	Params::TedCampaignSlotsPanel_SlotRequest_Delete Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCampaignSlotsPanel.GetSlotContentData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedSavedGameProfileInfo*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedSavedGameProfileInfo* UTedCampaignSlotsPanel::GetSlotContentData(int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCampaignSlotsPanel", "GetSlotContentData");

	Params::TedCampaignSlotsPanel_GetSlotContentData Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.AbbreviateTextBeyondLength
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const int32                             InLength                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedUIFunctionsLibrary::AbbreviateTextBeyondLength(const class FText& InText, const int32 InLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "AbbreviateTextBeyondLength");

	Params::TedUIFunctionsLibrary_AbbreviateTextBeyondLength Parms{};

	Parms.InText = std::move(InText);
	Parms.InLength = InLength;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.BotDifficultyAsLocalizedText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const ETedBotDifficulty                 Difficulty                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedUIFunctionsLibrary::BotDifficultyAsLocalizedText(const ETedBotDifficulty Difficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "BotDifficultyAsLocalizedText");

	Params::TedUIFunctionsLibrary_BotDifficultyAsLocalizedText Parms{};

	Parms.Difficulty = Difficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.BranchUITheme
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedFaction                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedFaction UTedUIFunctionsLibrary::BranchUITheme(const class UObject* WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "BranchUITheme");

	Params::TedUIFunctionsLibrary_BranchUITheme Parms{};

	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.CalculateMinimapLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FBox&                      InWorldBounds                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FVector2D&                 InWorldLocation                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 InMinimapSize                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D*                       OutResult                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUIFunctionsLibrary::CalculateMinimapLocation(const struct FBox& InWorldBounds, const struct FVector2D& InWorldLocation, const struct FVector2D& InMinimapSize, struct FVector2D* OutResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "CalculateMinimapLocation");

	Params::TedUIFunctionsLibrary_CalculateMinimapLocation Parms{};

	Parms.InWorldBounds = std::move(InWorldBounds);
	Parms.InWorldLocation = std::move(InWorldLocation);
	Parms.InMinimapSize = std::move(InMinimapSize);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResult != nullptr)
		*OutResult = std::move(Parms.OutResult);
}


// Function Tempest.TedUIFunctionsLibrary.CalculateTextSize
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class FText&                      InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FSlateFontInfo&            InFont                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UTedUIFunctionsLibrary::CalculateTextSize(const class FText& InText, const struct FSlateFontInfo& InFont)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "CalculateTextSize");

	Params::TedUIFunctionsLibrary_CalculateTextSize Parms{};

	Parms.InText = std::move(InText);
	Parms.InFont = std::move(InFont);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.CapitalizeFirstLetter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTedUIFunctionsLibrary::CapitalizeFirstLetter(const class FString& InString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "CapitalizeFirstLetter");

	Params::TedUIFunctionsLibrary_CapitalizeFirstLetter Parms{};

	Parms.InString = std::move(InString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.CleanupPlayerName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    InPlayerName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8                             InMaxLength                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedUIFunctionsLibrary::CleanupPlayerName(const class FString& InPlayerName, const uint8 InMaxLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "CleanupPlayerName");

	Params::TedUIFunctionsLibrary_CleanupPlayerName Parms{};

	Parms.InPlayerName = std::move(InPlayerName);
	Parms.InMaxLength = InMaxLength;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.DifficultyAsText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ETedGameDifficulty                      Difficulty                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedUIFunctionsLibrary::DifficultyAsText(ETedGameDifficulty Difficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "DifficultyAsText");

	Params::TedUIFunctionsLibrary_DifficultyAsText Parms{};

	Parms.Difficulty = Difficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.EvaluateRowAndColumn_Columns
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InColumns                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutRow                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutColumn                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUIFunctionsLibrary::EvaluateRowAndColumn_Columns(const int32 InSlotIndex, const int32 InColumns, int32* OutRow, int32* OutColumn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "EvaluateRowAndColumn_Columns");

	Params::TedUIFunctionsLibrary_EvaluateRowAndColumn_Columns Parms{};

	Parms.InSlotIndex = InSlotIndex;
	Parms.InColumns = InColumns;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRow != nullptr)
		*OutRow = Parms.OutRow;

	if (OutColumn != nullptr)
		*OutColumn = Parms.OutColumn;
}


// Function Tempest.TedUIFunctionsLibrary.EvaluateRowAndColumn_Rows
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InRows                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutRow                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutColumn                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUIFunctionsLibrary::EvaluateRowAndColumn_Rows(const int32 InSlotIndex, const int32 InRows, int32* OutRow, int32* OutColumn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "EvaluateRowAndColumn_Rows");

	Params::TedUIFunctionsLibrary_EvaluateRowAndColumn_Rows Parms{};

	Parms.InSlotIndex = InSlotIndex;
	Parms.InRows = InRows;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRow != nullptr)
		*OutRow = Parms.OutRow;

	if (OutColumn != nullptr)
		*OutColumn = Parms.OutColumn;
}


// Function Tempest.TedUIFunctionsLibrary.FindChildrenOfType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UUserWidget*                Widget                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UWidget>              Class_0                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UWidget*>                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UWidget*> UTedUIFunctionsLibrary::FindChildrenOfType(const class UUserWidget* Widget, TSubclassOf<class UWidget> Class_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "FindChildrenOfType");

	Params::TedUIFunctionsLibrary_FindChildrenOfType Parms{};

	Parms.Widget = Widget;
	Parms.Class_0 = Class_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetBrushFromSelector
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTedContentSlotStateAssetSelector&InSelector                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const ETedContentSlotState              InState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USlateBrushAsset*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USlateBrushAsset* UTedUIFunctionsLibrary::GetBrushFromSelector(const struct FTedContentSlotStateAssetSelector& InSelector, const ETedContentSlotState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetBrushFromSelector");

	Params::TedUIFunctionsLibrary_GetBrushFromSelector Parms{};

	Parms.InSelector = std::move(InSelector);
	Parms.InState = InState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetBrushFromSelector_ContentSlot
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTedContentSlotStateAssetSelector&InSelector                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class UTedContentPanelSlotBase*   InWidget                                               (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USlateBrushAsset*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USlateBrushAsset* UTedUIFunctionsLibrary::GetBrushFromSelector_ContentSlot(const struct FTedContentSlotStateAssetSelector& InSelector, const class UTedContentPanelSlotBase* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetBrushFromSelector_ContentSlot");

	Params::TedUIFunctionsLibrary_GetBrushFromSelector_ContentSlot Parms{};

	Parms.InSelector = std::move(InSelector);
	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetCampaignDifficulty
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedGameDifficulty                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedGameDifficulty UTedUIFunctionsLibrary::GetCampaignDifficulty(const class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetCampaignDifficulty");

	Params::TedUIFunctionsLibrary_GetCampaignDifficulty Parms{};

	Parms.InWorldContext = InWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetChordDisplayText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FInputChord&               InChord                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInLong                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedUIFunctionsLibrary::GetChordDisplayText(const struct FInputChord& InChord, const bool bInLong)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetChordDisplayText");

	Params::TedUIFunctionsLibrary_GetChordDisplayText Parms{};

	Parms.InChord = std::move(InChord);
	Parms.bInLong = bInLong;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetChordDisplayTextLoose
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FKey&                      InPrimaryKey                                           (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FKey&                      InSecondaryKey                                         (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInShift                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInCtrl                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInAlt                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInLong                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedUIFunctionsLibrary::GetChordDisplayTextLoose(const struct FKey& InPrimaryKey, const struct FKey& InSecondaryKey, const bool bInShift, const bool bInCtrl, const bool bInAlt, const bool bInLong)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetChordDisplayTextLoose");

	Params::TedUIFunctionsLibrary_GetChordDisplayTextLoose Parms{};

	Parms.InPrimaryKey = std::move(InPrimaryKey);
	Parms.InSecondaryKey = std::move(InSecondaryKey);
	Parms.bInShift = bInShift;
	Parms.bInCtrl = bInCtrl;
	Parms.bInAlt = bInAlt;
	Parms.bInLong = bInLong;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetCompletedMapRequisitionReward
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedMapInfo*                MapInfo                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  GainedRequisition                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  TotalRequisition                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedGameDifficulty                      Difficulty                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUIFunctionsLibrary::GetCompletedMapRequisitionReward(const class UObject* InWorldContext, const class UTedMapInfo* MapInfo, int32* GainedRequisition, int32* TotalRequisition, ETedGameDifficulty Difficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetCompletedMapRequisitionReward");

	Params::TedUIFunctionsLibrary_GetCompletedMapRequisitionReward Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.MapInfo = MapInfo;
	Parms.Difficulty = Difficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (GainedRequisition != nullptr)
		*GainedRequisition = Parms.GainedRequisition;

	if (TotalRequisition != nullptr)
		*TotalRequisition = Parms.TotalRequisition;
}


// Function Tempest.TedUIFunctionsLibrary.GetDateTimeShort
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FDateTime&                 InDateTime                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedUIFunctionsLibrary::GetDateTimeShort(const struct FDateTime& InDateTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetDateTimeShort");

	Params::TedUIFunctionsLibrary_GetDateTimeShort Parms{};

	Parms.InDateTime = std::move(InDateTime);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetFactionName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const ETedFaction                       InFaction                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedUIFunctionsLibrary::GetFactionName(const ETedFaction InFaction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetFactionName");

	Params::TedUIFunctionsLibrary_GetFactionName Parms{};

	Parms.InFaction = InFaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetFormattedText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTedFormattedText&         InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedUIFunctionsLibrary::GetFormattedText(const struct FTedFormattedText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetFormattedText");

	Params::TedUIFunctionsLibrary_GetFormattedText Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetHighestCompletedMapDifficulty
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedMapInfo*                MapInfo                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedGameDifficulty                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedGameDifficulty UTedUIFunctionsLibrary::GetHighestCompletedMapDifficulty(const class UObject* InWorldContext, const class UTedMapInfo* MapInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetHighestCompletedMapDifficulty");

	Params::TedUIFunctionsLibrary_GetHighestCompletedMapDifficulty Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.MapInfo = MapInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetInputActionChord
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       InInputActionName                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInputChord                      ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FInputChord UTedUIFunctionsLibrary::GetInputActionChord(const class FName InInputActionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetInputActionChord");

	Params::TedUIFunctionsLibrary_GetInputActionChord Parms{};

	Parms.InInputActionName = InInputActionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetInputActionDisplayText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UInputAction*               InputAction                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ULocalPlayer*               InLocalPlayer                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInLong                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedUIFunctionsLibrary::GetInputActionDisplayText(const class UInputAction* InputAction, const class ULocalPlayer* InLocalPlayer, const bool bInLong)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetInputActionDisplayText");

	Params::TedUIFunctionsLibrary_GetInputActionDisplayText Parms{};

	Parms.InputAction = InputAction;
	Parms.InLocalPlayer = InLocalPlayer;
	Parms.bInLong = bInLong;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetInputActionKey
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UInputAction*               InputAction                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ULocalPlayer*               InLocalPlayer                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey UTedUIFunctionsLibrary::GetInputActionKey(const class UInputAction* InputAction, const class ULocalPlayer* InLocalPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetInputActionKey");

	Params::TedUIFunctionsLibrary_GetInputActionKey Parms{};

	Parms.InputAction = InputAction;
	Parms.InLocalPlayer = InLocalPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetInputActionMappingDisplayText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FInputActionKeyMapping&    InMapping                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const bool                              bInLong                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedUIFunctionsLibrary::GetInputActionMappingDisplayText(const struct FInputActionKeyMapping& InMapping, const bool bInLong)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetInputActionMappingDisplayText");

	Params::TedUIFunctionsLibrary_GetInputActionMappingDisplayText Parms{};

	Parms.InMapping = std::move(InMapping);
	Parms.bInLong = bInLong;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetInputAxisKey
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       InInputAxisName                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey UTedUIFunctionsLibrary::GetInputAxisKey(const class FName InInputAxisName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetInputAxisKey");

	Params::TedUIFunctionsLibrary_GetInputAxisKey Parms{};

	Parms.InInputAxisName = InInputAxisName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetInputAxisMappingDisplayText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FInputAxisKeyMapping&      InMapping                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const bool                              bInLong                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedUIFunctionsLibrary::GetInputAxisMappingDisplayText(const struct FInputAxisKeyMapping& InMapping, const bool bInLong)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetInputAxisMappingDisplayText");

	Params::TedUIFunctionsLibrary_GetInputAxisMappingDisplayText Parms{};

	Parms.InMapping = std::move(InMapping);
	Parms.bInLong = bInLong;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetInputDisplayText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      InInputName                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInAction                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInLong                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedUIFunctionsLibrary::GetInputDisplayText(const class FName& InInputName, const bool bInAction, const bool bInLong)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetInputDisplayText");

	Params::TedUIFunctionsLibrary_GetInputDisplayText Parms{};

	Parms.InInputName = InInputName;
	Parms.bInAction = bInAction;
	Parms.bInLong = bInLong;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetInputMappingKey
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       InMappingName                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ULocalPlayer*               InLocalPlayer                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey UTedUIFunctionsLibrary::GetInputMappingKey(const class FName InMappingName, const class ULocalPlayer* InLocalPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetInputMappingKey");

	Params::TedUIFunctionsLibrary_GetInputMappingKey Parms{};

	Parms.InMappingName = InMappingName;
	Parms.InLocalPlayer = InLocalPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetInputShortcut_Action
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      InKeyBinding                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInputChord*                     OutShortcut                                            (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUIFunctionsLibrary::GetInputShortcut_Action(const class FName& InKeyBinding, struct FInputChord* OutShortcut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetInputShortcut_Action");

	Params::TedUIFunctionsLibrary_GetInputShortcut_Action Parms{};

	Parms.InKeyBinding = InKeyBinding;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutShortcut != nullptr)
		*OutShortcut = std::move(Parms.OutShortcut);

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetKeyDisplayText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FKey&                      InKey                                                  (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInLong                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedUIFunctionsLibrary::GetKeyDisplayText(const struct FKey& InKey, const bool bInLong)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetKeyDisplayText");

	Params::TedUIFunctionsLibrary_GetKeyDisplayText Parms{};

	Parms.InKey = std::move(InKey);
	Parms.bInLong = bInLong;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetMapProgressData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedMapInfo*                MapInfo                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FObjectivesData*                 OutObjectivesData                                      (Parm, OutParm, NativeAccessSpecifierPublic)

void UTedUIFunctionsLibrary::GetMapProgressData(const class UObject* InWorldContext, const class UTedMapInfo* MapInfo, struct FObjectivesData* OutObjectivesData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetMapProgressData");

	Params::TedUIFunctionsLibrary_GetMapProgressData Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.MapInfo = MapInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutObjectivesData != nullptr)
		*OutObjectivesData = std::move(Parms.OutObjectivesData);
}


// Function Tempest.TedUIFunctionsLibrary.GetMaterialFromSelector
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTedContentSlotStateAssetSelector&InSelector                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const ETedContentSlotState              InState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInterface* UTedUIFunctionsLibrary::GetMaterialFromSelector(const struct FTedContentSlotStateAssetSelector& InSelector, const ETedContentSlotState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetMaterialFromSelector");

	Params::TedUIFunctionsLibrary_GetMaterialFromSelector Parms{};

	Parms.InSelector = std::move(InSelector);
	Parms.InState = InState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetMaterialFromSelector_ContentSlot
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTedContentSlotStateAssetSelector&InSelector                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class UTedContentPanelSlotBase*   InWidget                                               (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInterface* UTedUIFunctionsLibrary::GetMaterialFromSelector_ContentSlot(const struct FTedContentSlotStateAssetSelector& InSelector, const class UTedContentPanelSlotBase* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetMaterialFromSelector_ContentSlot");

	Params::TedUIFunctionsLibrary_GetMaterialFromSelector_ContentSlot Parms{};

	Parms.InSelector = std::move(InSelector);
	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetNameForBot
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const ETedBotDifficulty                 InDifficulty                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedUIFunctionsLibrary::GetNameForBot(const ETedBotDifficulty InDifficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetNameForBot");

	Params::TedUIFunctionsLibrary_GetNameForBot Parms{};

	Parms.InDifficulty = InDifficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetOuterWidget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UUserWidget*                InChild                                                (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSubclassOf<class UWidget>        OuterWidgetClass                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UTedUIFunctionsLibrary::GetOuterWidget(const class UUserWidget* InChild, const TSubclassOf<class UWidget> OuterWidgetClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetOuterWidget");

	Params::TedUIFunctionsLibrary_GetOuterWidget Parms{};

	Parms.InChild = InChild;
	Parms.OuterWidgetClass = OuterWidgetClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetPanelSlotPadding
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UWidget*                    InWidget                                               (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMargin                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FMargin UTedUIFunctionsLibrary::GetPanelSlotPadding(const class UWidget* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetPanelSlotPadding");

	Params::TedUIFunctionsLibrary_GetPanelSlotPadding Parms{};

	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetPerceivedPlayerColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      PlayerID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UTedUIFunctionsLibrary::GetPerceivedPlayerColor(const class UObject* InWorldContext, const ETedPlayerID PlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetPerceivedPlayerColor");

	Params::TedUIFunctionsLibrary_GetPerceivedPlayerColor Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.PlayerID = PlayerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetPlayerName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InPlayerIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8                             InMaxLength                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bShouldAddElipsis                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedUIFunctionsLibrary::GetPlayerName(const class UObject* InWorldContext, const int32 InPlayerIndex, const uint8 InMaxLength, const bool bShouldAddElipsis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetPlayerName");

	Params::TedUIFunctionsLibrary_GetPlayerName Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InPlayerIndex = InPlayerIndex;
	Parms.InMaxLength = InMaxLength;
	Parms.bShouldAddElipsis = bShouldAddElipsis;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetPlayerNameFromPlayerState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class APlayerState*               InPlayerState                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8                             InMaxLength                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bShouldAddElipsis                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedUIFunctionsLibrary::GetPlayerNameFromPlayerState(const class APlayerState* InPlayerState, const uint8 InMaxLength, const bool bShouldAddElipsis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetPlayerNameFromPlayerState");

	Params::TedUIFunctionsLibrary_GetPlayerNameFromPlayerState Parms{};

	Parms.InPlayerState = InPlayerState;
	Parms.InMaxLength = InMaxLength;
	Parms.bShouldAddElipsis = bShouldAddElipsis;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetShortcutChordDisplayText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTedShortcutChordUI&       InShortcutChord                                        (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInIgnoreSecondary                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInLong                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedUIFunctionsLibrary::GetShortcutChordDisplayText(const struct FTedShortcutChordUI& InShortcutChord, const bool bInIgnoreSecondary, const bool bInLong)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetShortcutChordDisplayText");

	Params::TedUIFunctionsLibrary_GetShortcutChordDisplayText Parms{};

	Parms.InShortcutChord = std::move(InShortcutChord);
	Parms.bInIgnoreSecondary = bInIgnoreSecondary;
	Parms.bInLong = bInLong;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetShortcutDisplayText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTedShortcutUI&            InShortcut                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const bool                              bInLong                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedUIFunctionsLibrary::GetShortcutDisplayText(const struct FTedShortcutUI& InShortcut, const bool bInLong)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetShortcutDisplayText");

	Params::TedUIFunctionsLibrary_GetShortcutDisplayText Parms{};

	Parms.InShortcut = std::move(InShortcut);
	Parms.bInLong = bInLong;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetStyleFromSelector
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTedContentSlotStateAssetSelector&InSelector                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const ETedContentSlotState              InState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USlateWidgetStyleAsset*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USlateWidgetStyleAsset* UTedUIFunctionsLibrary::GetStyleFromSelector(const struct FTedContentSlotStateAssetSelector& InSelector, const ETedContentSlotState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetStyleFromSelector");

	Params::TedUIFunctionsLibrary_GetStyleFromSelector Parms{};

	Parms.InSelector = std::move(InSelector);
	Parms.InState = InState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetStyleFromSelector_ContentSlot
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTedContentSlotStateAssetSelector&InSelector                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class UTedContentPanelSlotBase*   InWidget                                               (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USlateWidgetStyleAsset*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USlateWidgetStyleAsset* UTedUIFunctionsLibrary::GetStyleFromSelector_ContentSlot(const struct FTedContentSlotStateAssetSelector& InSelector, const class UTedContentPanelSlotBase* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetStyleFromSelector_ContentSlot");

	Params::TedUIFunctionsLibrary_GetStyleFromSelector_ContentSlot Parms{};

	Parms.InSelector = std::move(InSelector);
	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetTeamName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const ETedTeamID                        InTeam                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedUIFunctionsLibrary::GetTeamName(const ETedTeamID InTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetTeamName");

	Params::TedUIFunctionsLibrary_GetTeamName Parms{};

	Parms.InTeam = InTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetTextureFromSelector
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTedContentSlotStateAssetSelector&InSelector                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const ETedContentSlotState              InState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTedUIFunctionsLibrary::GetTextureFromSelector(const struct FTedContentSlotStateAssetSelector& InSelector, const ETedContentSlotState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetTextureFromSelector");

	Params::TedUIFunctionsLibrary_GetTextureFromSelector Parms{};

	Parms.InSelector = std::move(InSelector);
	Parms.InState = InState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetTextureFromSelector_ContentSlot
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTedContentSlotStateAssetSelector&InSelector                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class UTedContentPanelSlotBase*   InWidget                                               (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTedUIFunctionsLibrary::GetTextureFromSelector_ContentSlot(const struct FTedContentSlotStateAssetSelector& InSelector, const class UTedContentPanelSlotBase* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetTextureFromSelector_ContentSlot");

	Params::TedUIFunctionsLibrary_GetTextureFromSelector_ContentSlot Parms{};

	Parms.InSelector = std::move(InSelector);
	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetThemedMovie
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedThemeMovie&            InMovie                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class UFileMediaSource*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UFileMediaSource* UTedUIFunctionsLibrary::GetThemedMovie(const class UObject* InWorldContext, const struct FTedThemeMovie& InMovie)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetThemedMovie");

	Params::TedUIFunctionsLibrary_GetThemedMovie Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InMovie = std::move(InMovie);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetTotalPanelSlotPaddingBetween
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UWidget*                    InWidget                                               (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UWidget*                    InRootWidget                                           (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMargin                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FMargin UTedUIFunctionsLibrary::GetTotalPanelSlotPaddingBetween(const class UWidget* InWidget, const class UWidget* InRootWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetTotalPanelSlotPaddingBetween");

	Params::TedUIFunctionsLibrary_GetTotalPanelSlotPaddingBetween Parms{};

	Parms.InWidget = InWidget;
	Parms.InRootWidget = InRootWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetUITheme
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedFaction                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedFaction UTedUIFunctionsLibrary::GetUITheme(const class UObject* WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetUITheme");

	Params::TedUIFunctionsLibrary_GetUITheme Parms{};

	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.GetUnitCardWeaponWidthWidth
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float*                                  OutFixedWidth                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutMinWidth                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutMaxWidth                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUIFunctionsLibrary::GetUnitCardWeaponWidthWidth(float* OutFixedWidth, float* OutMinWidth, float* OutMaxWidth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "GetUnitCardWeaponWidthWidth");

	Params::TedUIFunctionsLibrary_GetUnitCardWeaponWidthWidth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFixedWidth != nullptr)
		*OutFixedWidth = Parms.OutFixedWidth;

	if (OutMinWidth != nullptr)
		*OutMinWidth = Parms.OutMinWidth;

	if (OutMaxWidth != nullptr)
		*OutMaxWidth = Parms.OutMaxWidth;
}


// Function Tempest.TedUIFunctionsLibrary.HideMeshWidget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              Source                                                 (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUIFunctionsLibrary::HideMeshWidget(const class UObject* WorldContext, const struct FGameplayTag& Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "HideMeshWidget");

	Params::TedUIFunctionsLibrary_HideMeshWidget Parms{};

	Parms.WorldContext = WorldContext;
	Parms.Source = std::move(Source);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUIFunctionsLibrary.IsAnyMoviePlaying
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUIFunctionsLibrary::IsAnyMoviePlaying(const class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "IsAnyMoviePlaying");

	Params::TedUIFunctionsLibrary_IsAnyMoviePlaying Parms{};

	Parms.InWorldContext = InWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.IsInputChordValid
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FInputChord&               InChord                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUIFunctionsLibrary::IsInputChordValid(const struct FInputChord& InChord)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "IsInputChordValid");

	Params::TedUIFunctionsLibrary_IsInputChordValid Parms{};

	Parms.InChord = std::move(InChord);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.IsMoviePlaying
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedMovieType                     InMovieType                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUIFunctionsLibrary::IsMoviePlaying(const class UObject* InWorldContext, const ETedMovieType InMovieType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "IsMoviePlaying");

	Params::TedUIFunctionsLibrary_IsMoviePlaying Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InMovieType = InMovieType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.IsSlateBrushDefault
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FSlateBrush&               InBrush                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUIFunctionsLibrary::IsSlateBrushDefault(const struct FSlateBrush& InBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "IsSlateBrushDefault");

	Params::TedUIFunctionsLibrary_IsSlateBrushDefault Parms{};

	Parms.InBrush = std::move(InBrush);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.IsWidgetRendered
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UWidget*                    Widget                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUIFunctionsLibrary::IsWidgetRendered(const class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "IsWidgetRendered");

	Params::TedUIFunctionsLibrary_IsWidgetRendered Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.IsWidgetVisible
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UWidget*                    Widget                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUIFunctionsLibrary::IsWidgetVisible(const class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "IsWidgetVisible");

	Params::TedUIFunctionsLibrary_IsWidgetVisible Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.MarkEULAAsRead
// (Final, Native, Static, Public, BlueprintCallable)

void UTedUIFunctionsLibrary::MarkEULAAsRead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "MarkEULAAsRead");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUIFunctionsLibrary.PauseMovie
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedMovieType                     InMovieType                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUIFunctionsLibrary::PauseMovie(const class UObject* InWorldContext, const ETedMovieType InMovieType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "PauseMovie");

	Params::TedUIFunctionsLibrary_PauseMovie Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InMovieType = InMovieType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUIFunctionsLibrary.PopulatePanelWithUpgradeDescriptions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTedContentPanelInstanced*        InPanel                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedUpgrade*                InUpgrade                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ATedPlayerState*            InContextPlayerState                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUIFunctionsLibrary::PopulatePanelWithUpgradeDescriptions(class UTedContentPanelInstanced* InPanel, const class UTedUpgrade* InUpgrade, const class ATedPlayerState* InContextPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "PopulatePanelWithUpgradeDescriptions");

	Params::TedUIFunctionsLibrary_PopulatePanelWithUpgradeDescriptions Parms{};

	Parms.InPanel = InPanel;
	Parms.InUpgrade = InUpgrade;
	Parms.InContextPlayerState = InContextPlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUIFunctionsLibrary.ReplaceTooltipParamsHeaderAndDescription
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTedTooltipDisplayParams&        InTooltip                                              (Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// const class FText&                      InHeader                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FText&                      InDescription                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FTedTooltipDisplayParams         ReturnValue                                            (Parm, OutParm, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FTedTooltipDisplayParams UTedUIFunctionsLibrary::ReplaceTooltipParamsHeaderAndDescription(struct FTedTooltipDisplayParams& InTooltip, const class FText& InHeader, const class FText& InDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "ReplaceTooltipParamsHeaderAndDescription");

	Params::TedUIFunctionsLibrary_ReplaceTooltipParamsHeaderAndDescription Parms{};

	Parms.InTooltip = std::move(InTooltip);
	Parms.InHeader = std::move(InHeader);
	Parms.InDescription = std::move(InDescription);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	InTooltip = std::move(Parms.InTooltip);

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.ResumeMovie
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedMovieType                     InMovieType                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUIFunctionsLibrary::ResumeMovie(const class UObject* InWorldContext, const ETedMovieType InMovieType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "ResumeMovie");

	Params::TedUIFunctionsLibrary_ResumeMovie Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InMovieType = InMovieType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUIFunctionsLibrary.ShouldAnyChildrenBeVisible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UPanelWidget*               InPanel                                                (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUIFunctionsLibrary::ShouldAnyChildrenBeVisible(const class UPanelWidget* InPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "ShouldAnyChildrenBeVisible");

	Params::TedUIFunctionsLibrary_ShouldAnyChildrenBeVisible Parms{};

	Parms.InPanel = InPanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.ShouldShowEULA
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUIFunctionsLibrary::ShouldShowEULA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "ShouldShowEULA");

	Params::TedUIFunctionsLibrary_ShouldShowEULA Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.ShowMeshWidget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              Source                                                 (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              Target                                                 (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ContextObject                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUIFunctionsLibrary::ShowMeshWidget(const class UObject* WorldContext, const struct FGameplayTag& Source, const struct FGameplayTag& Target, class UObject* ContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "ShowMeshWidget");

	Params::TedUIFunctionsLibrary_ShowMeshWidget Parms{};

	Parms.WorldContext = WorldContext;
	Parms.Source = std::move(Source);
	Parms.Target = std::move(Target);
	Parms.ContextObject = ContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUIFunctionsLibrary.StopMovie
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedMovieType                     InMovieType                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUIFunctionsLibrary::StopMovie(const class UObject* InWorldContext, const ETedMovieType InMovieType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "StopMovie");

	Params::TedUIFunctionsLibrary_StopMovie Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InMovieType = InMovieType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUIFunctionsLibrary.SynchronizeWrapAtWithSizeBoxWidth
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTextBlock*                       InTextBlock                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class USizeBox*                   InSizeBox                                              (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUIFunctionsLibrary::SynchronizeWrapAtWithSizeBoxWidth(class UTextBlock* InTextBlock, const class USizeBox* InSizeBox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "SynchronizeWrapAtWithSizeBoxWidth");

	Params::TedUIFunctionsLibrary_SynchronizeWrapAtWithSizeBoxWidth Parms{};

	Parms.InTextBlock = InTextBlock;
	Parms.InSizeBox = InSizeBox;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUIFunctionsLibrary.Transition_GetState
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FTedUI_Transition_Tickable&InTransition                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// ETedUI_TransitionState                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedUI_TransitionState UTedUIFunctionsLibrary::Transition_GetState(const struct FTedUI_Transition_Tickable& InTransition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "Transition_GetState");

	Params::TedUIFunctionsLibrary_Transition_GetState Parms{};

	Parms.InTransition = std::move(InTransition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.Transition_GetStateExec
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTedUI_Transition_Tickable&InTransition                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// ETedUI_TransitionState                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedUI_TransitionState UTedUIFunctionsLibrary::Transition_GetStateExec(const struct FTedUI_Transition_Tickable& InTransition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "Transition_GetStateExec");

	Params::TedUIFunctionsLibrary_Transition_GetStateExec Parms{};

	Parms.InTransition = std::move(InTransition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.Transition_Reset
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTedUI_Transition_Tickable&      Transition                                             (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const float                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUIFunctionsLibrary::Transition_Reset(struct FTedUI_Transition_Tickable& Transition, const float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "Transition_Reset");

	Params::TedUIFunctionsLibrary_Transition_Reset Parms{};

	Parms.Transition = std::move(Transition);
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Transition = std::move(Parms.Transition);
}


// Function Tempest.TedUIFunctionsLibrary.Transition_SetDuration
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTedUI_Transition_Tickable&      Transition                                             (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const float                             InDuration                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUIFunctionsLibrary::Transition_SetDuration(struct FTedUI_Transition_Tickable& Transition, const float InDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "Transition_SetDuration");

	Params::TedUIFunctionsLibrary_Transition_SetDuration Parms{};

	Parms.Transition = std::move(Transition);
	Parms.InDuration = InDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Transition = std::move(Parms.Transition);
}


// Function Tempest.TedUIFunctionsLibrary.Transition_SetTarget
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTedUI_Transition_Tickable&      Transition                                             (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const float                             InTarget                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUIFunctionsLibrary::Transition_SetTarget(struct FTedUI_Transition_Tickable& Transition, const float InTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "Transition_SetTarget");

	Params::TedUIFunctionsLibrary_Transition_SetTarget Parms{};

	Parms.Transition = std::move(Transition);
	Parms.InTarget = InTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Transition = std::move(Parms.Transition);
}


// Function Tempest.TedUIFunctionsLibrary.Transition_SetTargetByDirection
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTedUI_Transition_Tickable&      Transition                                             (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const bool                              bInForward                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUIFunctionsLibrary::Transition_SetTargetByDirection(struct FTedUI_Transition_Tickable& Transition, const bool bInForward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "Transition_SetTargetByDirection");

	Params::TedUIFunctionsLibrary_Transition_SetTargetByDirection Parms{};

	Parms.Transition = std::move(Transition);
	Parms.bInForward = bInForward;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Transition = std::move(Parms.Transition);
}


// Function Tempest.TedUIFunctionsLibrary.Transition_Tick
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTedUI_Transition_Tickable&      Transition                                             (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const float                             InDeltaSeconds                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutCurrent                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedUI_TransitionState                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedUI_TransitionState UTedUIFunctionsLibrary::Transition_Tick(struct FTedUI_Transition_Tickable& Transition, const float InDeltaSeconds, float* OutCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "Transition_Tick");

	Params::TedUIFunctionsLibrary_Transition_Tick Parms{};

	Parms.Transition = std::move(Transition);
	Parms.InDeltaSeconds = InDeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Transition = std::move(Parms.Transition);

	if (OutCurrent != nullptr)
		*OutCurrent = Parms.OutCurrent;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.Transition_TickExec
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTedUI_Transition_Tickable&      Transition                                             (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const float                             InDeltaSeconds                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutCurrent                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedUI_TransitionState                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedUI_TransitionState UTedUIFunctionsLibrary::Transition_TickExec(struct FTedUI_Transition_Tickable& Transition, const float InDeltaSeconds, float* OutCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "Transition_TickExec");

	Params::TedUIFunctionsLibrary_Transition_TickExec Parms{};

	Parms.Transition = std::move(Transition);
	Parms.InDeltaSeconds = InDeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Transition = std::move(Parms.Transition);

	if (OutCurrent != nullptr)
		*OutCurrent = Parms.OutCurrent;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.TransitionCurve_GetValue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTedUI_TransitionCurve&    InCurve                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const float                             InAlpha                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedUIFunctionsLibrary::TransitionCurve_GetValue(const struct FTedUI_TransitionCurve& InCurve, const float InAlpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "TransitionCurve_GetValue");

	Params::TedUIFunctionsLibrary_TransitionCurve_GetValue Parms{};

	Parms.InCurve = std::move(InCurve);
	Parms.InAlpha = InAlpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.TransitionCurve_GetValueByTransition
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTedUI_TransitionCurve&    InCurve                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FTedUI_Transition_Tickable&InTransition                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedUIFunctionsLibrary::TransitionCurve_GetValueByTransition(const struct FTedUI_TransitionCurve& InCurve, const struct FTedUI_Transition_Tickable& InTransition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "TransitionCurve_GetValueByTransition");

	Params::TedUIFunctionsLibrary_TransitionCurve_GetValueByTransition Parms{};

	Parms.InCurve = std::move(InCurve);
	Parms.InTransition = std::move(InTransition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.TransitionCurve_Tick
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTedUI_Transition_Tickable&      Transition                                             (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FTedUI_TransitionCurve&    InCurve                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const float                             InDeltaSeconds                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutCurrent                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutCurveValue                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedUI_TransitionState                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedUI_TransitionState UTedUIFunctionsLibrary::TransitionCurve_Tick(struct FTedUI_Transition_Tickable& Transition, const struct FTedUI_TransitionCurve& InCurve, const float InDeltaSeconds, float* OutCurrent, float* OutCurveValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "TransitionCurve_Tick");

	Params::TedUIFunctionsLibrary_TransitionCurve_Tick Parms{};

	Parms.Transition = std::move(Transition);
	Parms.InCurve = std::move(InCurve);
	Parms.InDeltaSeconds = InDeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Transition = std::move(Parms.Transition);

	if (OutCurrent != nullptr)
		*OutCurrent = Parms.OutCurrent;

	if (OutCurveValue != nullptr)
		*OutCurveValue = Parms.OutCurveValue;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIFunctionsLibrary.TransitionCurve_TickExec
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTedUI_Transition_Tickable&      Transition                                             (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FTedUI_TransitionCurve&    InCurve                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const float                             InDeltaSeconds                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutCurrent                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutCurveValue                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedUI_TransitionState                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedUI_TransitionState UTedUIFunctionsLibrary::TransitionCurve_TickExec(struct FTedUI_Transition_Tickable& Transition, const struct FTedUI_TransitionCurve& InCurve, const float InDeltaSeconds, float* OutCurrent, float* OutCurveValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUIFunctionsLibrary", "TransitionCurve_TickExec");

	Params::TedUIFunctionsLibrary_TransitionCurve_TickExec Parms{};

	Parms.Transition = std::move(Transition);
	Parms.InCurve = std::move(InCurve);
	Parms.InDeltaSeconds = InDeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Transition = std::move(Parms.Transition);

	if (OutCurrent != nullptr)
		*OutCurrent = Parms.OutCurrent;

	if (OutCurveValue != nullptr)
		*OutCurveValue = Parms.OutCurveValue;

	return Parms.ReturnValue;
}


// Function Tempest.EffectsAnimationCurve.GetAnimationTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEffectsAnimationCurve::GetAnimationTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EffectsAnimationCurve", "GetAnimationTime");

	Params::EffectsAnimationCurve_GetAnimationTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.EffectsAnimationCurve.GetDisplacementXValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEffectsAnimationCurve::GetDisplacementXValue(float InTime) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EffectsAnimationCurve", "GetDisplacementXValue");

	Params::EffectsAnimationCurve_GetDisplacementXValue Parms{};

	Parms.InTime = InTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.EffectsAnimationCurve.GetDisplacementYValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEffectsAnimationCurve::GetDisplacementYValue(float InTime) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EffectsAnimationCurve", "GetDisplacementYValue");

	Params::EffectsAnimationCurve_GetDisplacementYValue Parms{};

	Parms.InTime = InTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.EffectsAnimationCurve.GetOpacityValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEffectsAnimationCurve::GetOpacityValue(float InTime) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EffectsAnimationCurve", "GetOpacityValue");

	Params::EffectsAnimationCurve_GetOpacityValue Parms{};

	Parms.InTime = InTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMenuScreenWidget.GetWidgetBackPriorities
// (Event, Public, BlueprintEvent)
// Parameters:
// TMap<class UWidget*, uint8>             ReturnValue                                            (Parm, OutParm, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TMap<class UWidget*, uint8> UTedMenuScreenWidget::GetWidgetBackPriorities()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenWidget", "GetWidgetBackPriorities");

	Params::TedMenuScreenWidget_GetWidgetBackPriorities Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Tempest.TedMenuScreenWidget.GoBack
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// bool&                                   bFoundWidgetWithGoBackPriority                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMenuScreenWidget::GoBack(bool& bFoundWidgetWithGoBackPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenWidget", "GoBack");

	Params::TedMenuScreenWidget_GoBack Parms{};

	Parms.bFoundWidgetWithGoBackPriority = bFoundWidgetWithGoBackPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	bFoundWidgetWithGoBackPriority = Parms.bFoundWidgetWithGoBackPriority;
}


// Function Tempest.TedMenuScreenWidget.OnClose
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// const class UObject*                    InContext                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInInstant                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMenuScreenWidget::OnClose(const class UObject* InContext, bool bInInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenWidget", "OnClose");

	Params::TedMenuScreenWidget_OnClose Parms{};

	Parms.InContext = InContext;
	Parms.bInInstant = bInInstant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMenuScreenWidget.OnOpen
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// const class UObject*                    InContext                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInInstant                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMenuScreenWidget::OnOpen(const class UObject* InContext, bool bInInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenWidget", "OnOpen");

	Params::TedMenuScreenWidget_OnOpen Parms{};

	Parms.InContext = InContext;
	Parms.bInInstant = bInInstant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMenuScreenWidget.OnWidgetHiddenOnGoBack
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UWidget*                          InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8                             InPriority                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMenuScreenWidget::OnWidgetHiddenOnGoBack(class UWidget* InWidget, const uint8 InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenWidget", "OnWidgetHiddenOnGoBack");

	Params::TedMenuScreenWidget_OnWidgetHiddenOnGoBack Parms{};

	Parms.InWidget = InWidget;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMenuScreenWidget.ShowCosmeticCinematicsBars
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              ShowBar                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMenuScreenWidget::ShowCosmeticCinematicsBars(const bool ShowBar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenWidget", "ShowCosmeticCinematicsBars");

	Params::TedMenuScreenWidget_ShowCosmeticCinematicsBars Parms{};

	Parms.ShowBar = ShowBar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMenuScreenWidget.CanClose
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// const class UObject*                    InContext                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMenuScreenWidget::CanClose(const class UObject* InContext) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenWidget", "CanClose");

	Params::TedMenuScreenWidget_CanClose Parms{};

	Parms.InContext = InContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMenuScreenWidget.CanGoBack
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMenuScreenWidget::CanGoBack() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenWidget", "CanGoBack");

	Params::TedMenuScreenWidget_CanGoBack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMenuScreenWidget.CanOpen
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// const class UObject*                    InContext                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMenuScreenWidget::CanOpen(const class UObject* InContext) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenWidget", "CanOpen");

	Params::TedMenuScreenWidget_CanOpen Parms{};

	Parms.InContext = InContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFactionCampaignWidget.DescribeDifficultyOptionsForPopup
// (Final, Native, Public)
// Parameters:
// const int32                             Option                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedFactionCampaignWidget::DescribeDifficultyOptionsForPopup(const int32 Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedFactionCampaignWidget", "DescribeDifficultyOptionsForPopup");

	Params::TedFactionCampaignWidget_DescribeDifficultyOptionsForPopup Parms{};

	Parms.Option = Option;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedFactionCampaignWidget.HandlePopupCalled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPopupAction                            Action                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedFactionCampaignWidget::HandlePopupCalled(EPopupAction Action)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedFactionCampaignWidget", "HandlePopupCalled");

	Params::TedFactionCampaignWidget_HandlePopupCalled Parms{};

	Parms.Action = Action;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedFactionCampaignWidget.HandleStartCampaignButtonPressed
// (Final, Native, Public, BlueprintCallable)

void UTedFactionCampaignWidget::HandleStartCampaignButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedFactionCampaignWidget", "HandleStartCampaignButtonPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedFactionCampaignWidget.OnButtonsPanelSlotAction
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedFactionCampaignWidget::OnButtonsPanelSlotAction(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedFactionCampaignWidget", "OnButtonsPanelSlotAction");

	Params::TedFactionCampaignWidget_OnButtonsPanelSlotAction Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedFactionCampaignWidget.OnCreateCampaignClicked
// (Final, Native, Public)
// Parameters:
// int32                                   Idx                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedFactionCampaignWidget::OnCreateCampaignClicked(int32 Idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedFactionCampaignWidget", "OnCreateCampaignClicked");

	Params::TedFactionCampaignWidget_OnCreateCampaignClicked Parms{};

	Parms.Idx = Idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedFactionCampaignWidget.OnDeleteCampaignClicked
// (Final, Native, Public)
// Parameters:
// int32                                   Idx                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedFactionCampaignWidget::OnDeleteCampaignClicked(int32 Idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedFactionCampaignWidget", "OnDeleteCampaignClicked");

	Params::TedFactionCampaignWidget_OnDeleteCampaignClicked Parms{};

	Parms.Idx = Idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedFactionCampaignWidget.OnDeleteSaveClicked
// (Final, Native, Public)
// Parameters:
// int32                                   PopupButtonIdx                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedFactionCampaignWidget::OnDeleteSaveClicked(int32 PopupButtonIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedFactionCampaignWidget", "OnDeleteSaveClicked");

	Params::TedFactionCampaignWidget_OnDeleteSaveClicked Parms{};

	Parms.PopupButtonIdx = PopupButtonIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedFactionCampaignWidget.OnRenameCampaignClicked
// (Final, Native, Public)
// Parameters:
// int32                                   Idx                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedFactionCampaignWidget::OnRenameCampaignClicked(int32 Idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedFactionCampaignWidget", "OnRenameCampaignClicked");

	Params::TedFactionCampaignWidget_OnRenameCampaignClicked Parms{};

	Parms.Idx = Idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedFactionCampaignWidget.OnSaveSlotAction
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedFactionCampaignWidget::OnSaveSlotAction(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedFactionCampaignWidget", "OnSaveSlotAction");

	Params::TedFactionCampaignWidget_OnSaveSlotAction Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedFactionCampaignWidget.PopupCancel
// (Final, Native, Public)
// Parameters:
// const int32                             Idx                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedFactionCampaignWidget::PopupCancel(const int32 Idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedFactionCampaignWidget", "PopupCancel");

	Params::TedFactionCampaignWidget_PopupCancel Parms{};

	Parms.Idx = Idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedFactionCampaignWidget.AreThereValidCampaignSlots
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedFactionCampaignWidget::AreThereValidCampaignSlots() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedFactionCampaignWidget", "AreThereValidCampaignSlots");

	Params::TedFactionCampaignWidget_AreThereValidCampaignSlots Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUnitMovementComponent.CalcVelocity
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Friction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFluid                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BrakingDeceleration                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUnitMovementComponent::CalcVelocity(float DeltaTime, float Friction, bool bFluid, float BrakingDeceleration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitMovementComponent", "CalcVelocity");

	Params::TedUnitMovementComponent_CalcVelocity Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.Friction = Friction;
	Parms.bFluid = bFluid;
	Parms.BrakingDeceleration = BrakingDeceleration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUnitMovementComponent.DisableMovement
// (Native, Public, BlueprintCallable)

void UTedUnitMovementComponent::DisableMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitMovementComponent", "DisableMovement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUnitMovementComponent.SetMovementMode
// (Native, Public, BlueprintCallable)
// Parameters:
// EMovementMode                           NewMovementMode                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   NewCustomMode                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUnitMovementComponent::SetMovementMode(EMovementMode NewMovementMode, uint8 NewCustomMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitMovementComponent", "SetMovementMode");

	Params::TedUnitMovementComponent_SetMovementMode Parms{};

	Parms.NewMovementMode = NewMovementMode;
	Parms.NewCustomMode = NewCustomMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUnitMovementComponent.GetCurrentAcceleration
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UTedUnitMovementComponent::GetCurrentAcceleration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitMovementComponent", "GetCurrentAcceleration");

	Params::TedUnitMovementComponent_GetCurrentAcceleration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUnitMovementComponent.GetMaxAcceleration
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedUnitMovementComponent::GetMaxAcceleration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitMovementComponent", "GetMaxAcceleration");

	Params::TedUnitMovementComponent_GetMaxAcceleration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUnitMovementComponent.GetMaxBrakingDeceleration
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedUnitMovementComponent::GetMaxBrakingDeceleration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitMovementComponent", "GetMaxBrakingDeceleration");

	Params::TedUnitMovementComponent_GetMaxBrakingDeceleration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUnitMovementComponent.GetMovementMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EMovementMode                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMovementMode UTedUnitMovementComponent::GetMovementMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitMovementComponent", "GetMovementMode");

	Params::TedUnitMovementComponent_GetMovementMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUnitMovementComponent.GetUnitOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedUnitBase*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedUnitBase* UTedUnitMovementComponent::GetUnitOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitMovementComponent", "GetUnitOwner");

	Params::TedUnitMovementComponent_GetUnitOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.FactionSelectionMenuScreenWidget.CacheSelectedCampaign
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const class UTedCampaignInfo*           InCampaign                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFactionSelectionMenuScreenWidget::CacheSelectedCampaign(const class UTedCampaignInfo* InCampaign)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FactionSelectionMenuScreenWidget", "CacheSelectedCampaign");

	Params::FactionSelectionMenuScreenWidget_CacheSelectedCampaign Parms{};

	Parms.InCampaign = InCampaign;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.FactionSelectionMenuScreenWidget.CacheSelectedDifficulty
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const ETedGameDifficulty                InDifficulty                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFactionSelectionMenuScreenWidget::CacheSelectedDifficulty(const ETedGameDifficulty InDifficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FactionSelectionMenuScreenWidget", "CacheSelectedDifficulty");

	Params::FactionSelectionMenuScreenWidget_CacheSelectedDifficulty Parms{};

	Parms.InDifficulty = InDifficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.FactionSelectionMenuScreenWidget.GetSelectedCampaign
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedCampaignInfo*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedCampaignInfo* UFactionSelectionMenuScreenWidget::GetSelectedCampaign() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FactionSelectionMenuScreenWidget", "GetSelectedCampaign");

	Params::FactionSelectionMenuScreenWidget_GetSelectedCampaign Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.FactionSelectionMenuScreenWidget.WasAnyCampaignStarted
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFactionSelectionMenuScreenWidget::WasAnyCampaignStarted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FactionSelectionMenuScreenWidget", "WasAnyCampaignStarted");

	Params::FactionSelectionMenuScreenWidget_WasAnyCampaignStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.FactionSelectionMenuScreenWidget.WasCampaignStarted
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedCampaignInfo*           InCampaign                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFactionSelectionMenuScreenWidget::WasCampaignStarted(const class UTedCampaignInfo* InCampaign) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FactionSelectionMenuScreenWidget", "WasCampaignStarted");

	Params::FactionSelectionMenuScreenWidget_WasCampaignStarted Parms{};

	Parms.InCampaign = InCampaign;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.FoliageInteractionManager.OnRep_FoliageChannelData
// (Final, Native, Protected)

void AFoliageInteractionManager::OnRep_FoliageChannelData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FoliageInteractionManager", "OnRep_FoliageChannelData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedHUDInstancedBarWidget.ColorLookupResolved
// (Final, Native, Protected)
// Parameters:
// const class URTSColorSubsystem*         InSubsystem                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedHUDInstancedBarWidget::ColorLookupResolved(const class URTSColorSubsystem* InSubsystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHUDInstancedBarWidget", "ColorLookupResolved");

	Params::TedHUDInstancedBarWidget_ColorLookupResolved Parms{};

	Parms.InSubsystem = InSubsystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedImageSequenceSource.GetSound
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USoundBase*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USoundBase* UTedImageSequenceSource::GetSound() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedImageSequenceSource", "GetSound");

	Params::TedImageSequenceSource_GetSound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameMode_SP.OnSpMatchEnded
// (Event, Public, BlueprintEvent)

void ATedGameMode_SP::OnSpMatchEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameMode_SP", "OnSpMatchEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.GEEC_RestoreHealthOnFatalDamage.OnPawnTakeAnyDamage
// (Final, Native, Protected)
// Parameters:
// class AActor*                           DamagedActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UDamageType*                DamageType                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      InstigatedBy                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGEEC_RestoreHealthOnFatalDamage::OnPawnTakeAnyDamage(class AActor* DamagedActor, float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GEEC_RestoreHealthOnFatalDamage", "OnPawnTakeAnyDamage");

	Params::GEEC_RestoreHealthOnFatalDamage_OnPawnTakeAnyDamage Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMoviePlayerWidgetV2.Clear
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMoviePlayerWidgetV2::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMoviePlayerWidgetV2", "Clear");

	Params::TedMoviePlayerWidgetV2_Clear Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMoviePlayerWidgetV2.Finish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMoviePlayerWidgetV2::Finish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMoviePlayerWidgetV2", "Finish");

	Params::TedMoviePlayerWidgetV2_Finish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMoviePlayerWidgetV2.K2_OnFinish
// (Event, Protected, BlueprintEvent)
// Parameters:
// const class UFileMediaSource*           InMovie                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMoviePlayerWidgetV2::K2_OnFinish(const class UFileMediaSource* InMovie)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMoviePlayerWidgetV2", "K2_OnFinish");

	Params::TedMoviePlayerWidgetV2_K2_OnFinish Parms{};

	Parms.InMovie = InMovie;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedMoviePlayerWidgetV2.K2_OnPause
// (Event, Protected, BlueprintEvent)
// Parameters:
// const class UFileMediaSource*           InMovie                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMoviePlayerWidgetV2::K2_OnPause(const class UFileMediaSource* InMovie)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMoviePlayerWidgetV2", "K2_OnPause");

	Params::TedMoviePlayerWidgetV2_K2_OnPause Parms{};

	Parms.InMovie = InMovie;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedMoviePlayerWidgetV2.K2_OnResume
// (Event, Protected, BlueprintEvent)
// Parameters:
// const class UFileMediaSource*           InMovie                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMoviePlayerWidgetV2::K2_OnResume(const class UFileMediaSource* InMovie)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMoviePlayerWidgetV2", "K2_OnResume");

	Params::TedMoviePlayerWidgetV2_K2_OnResume Parms{};

	Parms.InMovie = InMovie;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedMoviePlayerWidgetV2.K2_OnStart
// (Event, Protected, BlueprintEvent)
// Parameters:
// const class UFileMediaSource*           InMovie                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMoviePlayerWidgetV2::K2_OnStart(const class UFileMediaSource* InMovie)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMoviePlayerWidgetV2", "K2_OnStart");

	Params::TedMoviePlayerWidgetV2_K2_OnStart Parms{};

	Parms.InMovie = InMovie;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedMoviePlayerWidgetV2.K2_Start
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const class UFileMediaSource*           InMovie                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInLoop                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInSilent                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedMovieGamePauseInteraction     InPauseInteraction                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedMoviePlayerConfig*      InConfigOverride                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMoviePlayerWidgetV2::K2_Start(const class UFileMediaSource* InMovie, const bool bInLoop, const bool bInSilent, const ETedMovieGamePauseInteraction InPauseInteraction, const class UTedMoviePlayerConfig* InConfigOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMoviePlayerWidgetV2", "K2_Start");

	Params::TedMoviePlayerWidgetV2_K2_Start Parms{};

	Parms.InMovie = InMovie;
	Parms.bInLoop = bInLoop;
	Parms.bInSilent = bInSilent;
	Parms.InPauseInteraction = InPauseInteraction;
	Parms.InConfigOverride = InConfigOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMoviePlayerWidgetV2.K2_StartThemed
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const struct FTedThemeMovie&            InMovie                                                (ConstParm, Parm, NativeAccessSpecifierPublic)
// const bool                              bInLoop                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInSilent                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedMovieGamePauseInteraction     InPauseInteraction                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedMoviePlayerConfig*      InConfigOverride                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMoviePlayerWidgetV2::K2_StartThemed(const struct FTedThemeMovie& InMovie, const bool bInLoop, const bool bInSilent, const ETedMovieGamePauseInteraction InPauseInteraction, const class UTedMoviePlayerConfig* InConfigOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMoviePlayerWidgetV2", "K2_StartThemed");

	Params::TedMoviePlayerWidgetV2_K2_StartThemed Parms{};

	Parms.InMovie = std::move(InMovie);
	Parms.bInLoop = bInLoop;
	Parms.bInSilent = bInSilent;
	Parms.InPauseInteraction = InPauseInteraction;
	Parms.InConfigOverride = InConfigOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMoviePlayerWidgetV2.Pause
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMoviePlayerWidgetV2::Pause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMoviePlayerWidgetV2", "Pause");

	Params::TedMoviePlayerWidgetV2_Pause Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMoviePlayerWidgetV2.Resume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMoviePlayerWidgetV2::Resume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMoviePlayerWidgetV2", "Resume");

	Params::TedMoviePlayerWidgetV2_Resume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMoviePlayerWidgetV2.DetermineBrush
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSlateBrush                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSlateBrush UTedMoviePlayerWidgetV2::DetermineBrush() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMoviePlayerWidgetV2", "DetermineBrush");

	Params::TedMoviePlayerWidgetV2_DetermineBrush Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMoviePlayerWidgetV2.DetermineVisibility
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedMoviePlayerWidgetV2::DetermineVisibility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMoviePlayerWidgetV2", "DetermineVisibility");

	Params::TedMoviePlayerWidgetV2_DetermineVisibility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMoviePlayerWidgetV2.GetMovieMaterialMID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* UTedMoviePlayerWidgetV2::GetMovieMaterialMID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMoviePlayerWidgetV2", "GetMovieMaterialMID");

	Params::TedMoviePlayerWidgetV2_GetMovieMaterialMID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMoviePlayerWidgetV2.GetStartedMovie
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UFileMediaSource*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UFileMediaSource* UTedMoviePlayerWidgetV2::GetStartedMovie() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMoviePlayerWidgetV2", "GetStartedMovie");

	Params::TedMoviePlayerWidgetV2_GetStartedMovie Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMoviePlayerWidgetV2.IsPaused
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMoviePlayerWidgetV2::IsPaused() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMoviePlayerWidgetV2", "IsPaused");

	Params::TedMoviePlayerWidgetV2_IsPaused Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMoviePlayerWidgetV2.IsPlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMoviePlayerWidgetV2::IsPlaying() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMoviePlayerWidgetV2", "IsPlaying");

	Params::TedMoviePlayerWidgetV2_IsPlaying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMoviePlayerWidgetV2.IsPlayingEditorPreview
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMoviePlayerWidgetV2::IsPlayingEditorPreview() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMoviePlayerWidgetV2", "IsPlayingEditorPreview");

	Params::TedMoviePlayerWidgetV2_IsPlayingEditorPreview Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMoviePlayerWidgetV2.IsStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMoviePlayerWidgetV2::IsStarted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMoviePlayerWidgetV2", "IsStarted");

	Params::TedMoviePlayerWidgetV2_IsStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.HintsSettings.GetHintMaxLifetime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHintsSettings::GetHintMaxLifetime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HintsSettings", "GetHintMaxLifetime");

	Params::HintsSettings_GetHintMaxLifetime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.HintsSettings.GetWorldDisplayDefaultClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class ATedWorldHintActor>   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class ATedWorldHintActor> UHintsSettings::GetWorldDisplayDefaultClass() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HintsSettings", "GetWorldDisplayDefaultClass");

	Params::HintsSettings_GetWorldDisplayDefaultClass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGenericDataContentPanel.AddContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTedGenericDataContainer&  InEntry                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedGenericDataContentPanel::AddContent(const struct FTedGenericDataContainer& InEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGenericDataContentPanel", "AddContent");

	Params::TedGenericDataContentPanel_AddContent Parms{};

	Parms.InEntry = std::move(InEntry);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGenericDataContentPanel.SetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FTedGenericDataContainer>&InContent                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedGenericDataContentPanel::SetContent(const TArray<struct FTedGenericDataContainer>& InContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGenericDataContentPanel", "SetContent");

	Params::TedGenericDataContentPanel_SetContent Parms{};

	Parms.InContent = std::move(InContent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGenericDataContentPanel.GetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedGenericDataContainer*        OutContent                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGenericDataContentPanel::GetContent(const int32 InSlotIndex, struct FTedGenericDataContainer* OutContent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGenericDataContentPanel", "GetContent");

	Params::TedGenericDataContentPanel_GetContent Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutContent != nullptr)
		*OutContent = std::move(Parms.OutContent);

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerProfileLeaderboardPositionsPanel.GetSlotContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32                             SlotIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedFaction*                            OutFaction                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutLeaderboardPos1v1                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutLeaderboardPos2v2                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutRating1v1                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutRating2v2                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerProfileLeaderboardPositionsPanel::GetSlotContent(const int32 SlotIndex, ETedFaction* OutFaction, int32* OutLeaderboardPos1v1, int32* OutLeaderboardPos2v2, int32* OutRating1v1, int32* OutRating2v2, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerProfileLeaderboardPositionsPanel", "GetSlotContent");

	Params::TedPlayerProfileLeaderboardPositionsPanel_GetSlotContent Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFaction != nullptr)
		*OutFaction = Parms.OutFaction;

	if (OutLeaderboardPos1v1 != nullptr)
		*OutLeaderboardPos1v1 = Parms.OutLeaderboardPos1v1;

	if (OutLeaderboardPos2v2 != nullptr)
		*OutLeaderboardPos2v2 = Parms.OutLeaderboardPos2v2;

	if (OutRating1v1 != nullptr)
		*OutRating1v1 = Parms.OutRating1v1;

	if (OutRating2v2 != nullptr)
		*OutRating2v2 = Parms.OutRating2v2;

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function Tempest.TedCommandCompoundScreen.GetEquipmentPointsValueText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const int32                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInGroupped                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedCommandCompoundScreen::GetEquipmentPointsValueText(const int32 InValue, const bool bInGroupped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedCommandCompoundScreen", "GetEquipmentPointsValueText");

	Params::TedCommandCompoundScreen_GetEquipmentPointsValueText Parms{};

	Parms.InValue = InValue;
	Parms.bInGroupped = bInGroupped;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundScreen.GetRemainingDoctrinePoints
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommandCompoundScreen::GetRemainingDoctrinePoints(const class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedCommandCompoundScreen", "GetRemainingDoctrinePoints");

	Params::TedCommandCompoundScreen_GetRemainingDoctrinePoints Parms{};

	Parms.InWorldContext = InWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundScreen.GetRemainingDoctrineResetPoints
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommandCompoundScreen::GetRemainingDoctrineResetPoints(const class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedCommandCompoundScreen", "GetRemainingDoctrineResetPoints");

	Params::TedCommandCompoundScreen_GetRemainingDoctrineResetPoints Parms{};

	Parms.InWorldContext = InWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundScreen.GetRemainingEquipmentPoints
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommandCompoundScreen::GetRemainingEquipmentPoints(const class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedCommandCompoundScreen", "GetRemainingEquipmentPoints");

	Params::TedCommandCompoundScreen_GetRemainingEquipmentPoints Parms{};

	Parms.InWorldContext = InWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundScreen.GetRemainingEquipmentResetPoints
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommandCompoundScreen::GetRemainingEquipmentResetPoints(const class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedCommandCompoundScreen", "GetRemainingEquipmentResetPoints");

	Params::TedCommandCompoundScreen_GetRemainingEquipmentResetPoints Parms{};

	Parms.InWorldContext = InWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundScreen.GetRemainingEquipmentSpace
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommandCompoundScreen::GetRemainingEquipmentSpace(const class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedCommandCompoundScreen", "GetRemainingEquipmentSpace");

	Params::TedCommandCompoundScreen_GetRemainingEquipmentSpace Parms{};

	Parms.InWorldContext = InWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundScreen.GetTotalDoctrinePoints
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommandCompoundScreen::GetTotalDoctrinePoints(const class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedCommandCompoundScreen", "GetTotalDoctrinePoints");

	Params::TedCommandCompoundScreen_GetTotalDoctrinePoints Parms{};

	Parms.InWorldContext = InWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundScreen.GetTotalDoctrineResetPoints
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommandCompoundScreen::GetTotalDoctrineResetPoints(const class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedCommandCompoundScreen", "GetTotalDoctrineResetPoints");

	Params::TedCommandCompoundScreen_GetTotalDoctrineResetPoints Parms{};

	Parms.InWorldContext = InWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundScreen.GetTotalEquipmentPoints
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommandCompoundScreen::GetTotalEquipmentPoints(const class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedCommandCompoundScreen", "GetTotalEquipmentPoints");

	Params::TedCommandCompoundScreen_GetTotalEquipmentPoints Parms{};

	Parms.InWorldContext = InWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundScreen.GetTotalEquipmentResetPoints
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommandCompoundScreen::GetTotalEquipmentResetPoints(const class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedCommandCompoundScreen", "GetTotalEquipmentResetPoints");

	Params::TedCommandCompoundScreen_GetTotalEquipmentResetPoints Parms{};

	Parms.InWorldContext = InWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundScreen.GetTotalEquipmentSpace
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommandCompoundScreen::GetTotalEquipmentSpace(const class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedCommandCompoundScreen", "GetTotalEquipmentSpace");

	Params::TedCommandCompoundScreen_GetTotalEquipmentSpace Parms{};

	Parms.InWorldContext = InWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundScreen.GetUsedDoctrinePoints
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommandCompoundScreen::GetUsedDoctrinePoints(const class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedCommandCompoundScreen", "GetUsedDoctrinePoints");

	Params::TedCommandCompoundScreen_GetUsedDoctrinePoints Parms{};

	Parms.InWorldContext = InWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundScreen.GetUsedDoctrineResetPoints
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommandCompoundScreen::GetUsedDoctrineResetPoints(const class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedCommandCompoundScreen", "GetUsedDoctrineResetPoints");

	Params::TedCommandCompoundScreen_GetUsedDoctrineResetPoints Parms{};

	Parms.InWorldContext = InWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundScreen.GetUsedEquipmentPoints
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommandCompoundScreen::GetUsedEquipmentPoints(const class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedCommandCompoundScreen", "GetUsedEquipmentPoints");

	Params::TedCommandCompoundScreen_GetUsedEquipmentPoints Parms{};

	Parms.InWorldContext = InWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundScreen.GetUsedEquipmentResetPoints
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommandCompoundScreen::GetUsedEquipmentResetPoints(const class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedCommandCompoundScreen", "GetUsedEquipmentResetPoints");

	Params::TedCommandCompoundScreen_GetUsedEquipmentResetPoints Parms{};

	Parms.InWorldContext = InWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundScreen.GetUsedEquipmentSpace
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommandCompoundScreen::GetUsedEquipmentSpace(const class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedCommandCompoundScreen", "GetUsedEquipmentSpace");

	Params::TedCommandCompoundScreen_GetUsedEquipmentSpace Parms{};

	Parms.InWorldContext = InWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundScreen.HasJustPlayedLastMap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UTedGameProgressSubsystem*  GameProgress                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCommandCompoundScreen::HasJustPlayedLastMap(const class UTedGameProgressSubsystem* GameProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedCommandCompoundScreen", "HasJustPlayedLastMap");

	Params::TedCommandCompoundScreen_HasJustPlayedLastMap Parms{};

	Parms.GameProgress = GameProgress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundScreen.OnActivateNavigationSlotState
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundScreen::OnActivateNavigationSlotState(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundScreen", "OnActivateNavigationSlotState");

	Params::TedCommandCompoundScreen_OnActivateNavigationSlotState Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundScreen.OnDesktopBackgroundIntroFinished
// (Final, Native, Protected)
// Parameters:
// class UTedMoviePlayerWidgetV2*          InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UFileMediaSource*           InSource                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundScreen::OnDesktopBackgroundIntroFinished(class UTedMoviePlayerWidgetV2* InWidget, const class UFileMediaSource* InSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundScreen", "OnDesktopBackgroundIntroFinished");

	Params::TedCommandCompoundScreen_OnDesktopBackgroundIntroFinished Parms{};

	Parms.InWidget = InWidget;
	Parms.InSource = InSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundScreen.OnDesktopBackgroundRelevantWidgetAnimEnd
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UTedUserWidget*                   InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InAnimation                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundScreen::OnDesktopBackgroundRelevantWidgetAnimEnd(class UTedUserWidget* InWidget, const struct FGameplayTag& InAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundScreen", "OnDesktopBackgroundRelevantWidgetAnimEnd");

	Params::TedCommandCompoundScreen_OnDesktopBackgroundRelevantWidgetAnimEnd Parms{};

	Parms.InWidget = InWidget;
	Parms.InAnimation = std::move(InAnimation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundScreen.OnDesktopBackgroundRelevantWidgetAnimStart
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UTedUserWidget*                   InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InAnimation                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundScreen::OnDesktopBackgroundRelevantWidgetAnimStart(class UTedUserWidget* InWidget, const struct FGameplayTag& InAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundScreen", "OnDesktopBackgroundRelevantWidgetAnimStart");

	Params::TedCommandCompoundScreen_OnDesktopBackgroundRelevantWidgetAnimStart Parms{};

	Parms.InWidget = InWidget;
	Parms.InAnimation = std::move(InAnimation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundScreen.OnPageOpened
// (Event, Public, BlueprintEvent)

void UTedCommandCompoundScreen::OnPageOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundScreen", "OnPageOpened");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedCommandCompoundScreen.OpenPage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          InPage                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundScreen::OpenPage(class UWidget* InPage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundScreen", "OpenPage");

	Params::TedCommandCompoundScreen_OpenPage Parms{};

	Parms.InPage = InPage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundScreen.OpenPage_Armory
// (Final, Native, Public, BlueprintCallable)

void UTedCommandCompoundScreen::OpenPage_Armory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundScreen", "OpenPage_Armory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundScreen.OpenPage_Commissary
// (Final, Native, Public, BlueprintCallable)

void UTedCommandCompoundScreen::OpenPage_Commissary()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundScreen", "OpenPage_Commissary");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundScreen.OpenPage_Default
// (Final, Native, Public, BlueprintCallable)

void UTedCommandCompoundScreen::OpenPage_Default()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundScreen", "OpenPage_Default");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundScreen.OpenPage_Doctrine
// (Final, Native, Public, BlueprintCallable)

void UTedCommandCompoundScreen::OpenPage_Doctrine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundScreen", "OpenPage_Doctrine");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundScreen.OpenPage_MissionDescription
// (Final, Native, Public, BlueprintCallable)

void UTedCommandCompoundScreen::OpenPage_MissionDescription()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundScreen", "OpenPage_MissionDescription");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundScreen.OpenPage_MissionSelection
// (Final, Native, Public, BlueprintCallable)

void UTedCommandCompoundScreen::OpenPage_MissionSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundScreen", "OpenPage_MissionSelection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundScreen.PlayDesktopBackgroundAnim
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const ETedCommandCompoundDesktopBackgroundAnimInAnim                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundScreen::PlayDesktopBackgroundAnim(const ETedCommandCompoundDesktopBackgroundAnim InAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundScreen", "PlayDesktopBackgroundAnim");

	Params::TedCommandCompoundScreen_PlayDesktopBackgroundAnim Parms{};

	Parms.InAnim = InAnim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundScreen.StartMission
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UTedMapInfo*                MapInfo                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundScreen::StartMission(const class UTedMapInfo* MapInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundScreen", "StartMission");

	Params::TedCommandCompoundScreen_StartMission Parms{};

	Parms.MapInfo = MapInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundScreen.TransitionIntoMapScreen
// (Final, Native, Public, BlueprintCallable)

void UTedCommandCompoundScreen::TransitionIntoMapScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundScreen", "TransitionIntoMapScreen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundScreen.GatherDesktopBackgroundRelevantWidgets
// (Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class UTedUserWidget*>*          OutWidgets                                             (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UTedCommandCompoundScreen::GatherDesktopBackgroundRelevantWidgets(TArray<class UTedUserWidget*>* OutWidgets) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundScreen", "GatherDesktopBackgroundRelevantWidgets");

	Params::TedCommandCompoundScreen_GatherDesktopBackgroundRelevantWidgets Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutWidgets != nullptr)
		*OutWidgets = std::move(Parms.OutWidgets);
}


// Function Tempest.TedCommandCompoundScreen.ShouldAutoplayBriefing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedMapInfo*                      MapInfo                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCommandCompoundScreen::ShouldAutoplayBriefing(class UTedMapInfo* MapInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundScreen", "ShouldAutoplayBriefing");

	Params::TedCommandCompoundScreen_ShouldAutoplayBriefing Parms{};

	Parms.MapInfo = MapInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.LightingBPBase.CheckIfSelected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ALightingBPBase::CheckIfSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LightingBPBase", "CheckIfSelected");

	Params::LightingBPBase_CheckIfSelected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.LightingBPBase.UpdateLightPreset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ULightingPreset*                  LightPreset                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDirectionalLightComponent*       DirLight                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkyLightComponent*               SkyLight                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExponentialHeightFogComponent*   HeightFog                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALightingBPBase::UpdateLightPreset(class ULightingPreset* LightPreset, class UDirectionalLightComponent* DirLight, class USkyLightComponent* SkyLight, class UExponentialHeightFogComponent* HeightFog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LightingBPBase", "UpdateLightPreset");

	Params::LightingBPBase_UpdateLightPreset Parms{};

	Parms.LightPreset = LightPreset;
	Parms.DirLight = DirLight;
	Parms.SkyLight = SkyLight;
	Parms.HeightFog = HeightFog;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.LightingBPBase.UpdatePostProcessPreset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPostProcessPreset*               PostProcessPreset                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FPostProcessSettings&      PostProcessSettings                                    (Parm, NativeAccessSpecifierPublic)

void ALightingBPBase::UpdatePostProcessPreset(class UPostProcessPreset* PostProcessPreset, const struct FPostProcessSettings& PostProcessSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LightingBPBase", "UpdatePostProcessPreset");

	Params::LightingBPBase_UpdatePostProcessPreset Parms{};

	Parms.PostProcessPreset = PostProcessPreset;
	Parms.PostProcessSettings = std::move(PostProcessSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.LightingBPBase.UpdateSceneComponents
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ULightingPreset*                  LightPreset                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDirectionalLightComponent*       DirLight                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkyLightComponent*               SkyLight                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UExponentialHeightFogComponent*   HeightFog                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALightingBPBase::UpdateSceneComponents(class ULightingPreset* LightPreset, class UDirectionalLightComponent* DirLight, class USkyLightComponent* SkyLight, class UExponentialHeightFogComponent* HeightFog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LightingBPBase", "UpdateSceneComponents");

	Params::LightingBPBase_UpdateSceneComponents Parms{};

	Parms.LightPreset = LightPreset;
	Parms.DirLight = DirLight;
	Parms.SkyLight = SkyLight;
	Parms.HeightFog = HeightFog;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.MinimapTextureCreator.GenerateTexture
// (Final, Native, Protected, BlueprintCallable)

void AMinimapTextureCreator::GenerateTexture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapTextureCreator", "GenerateTexture");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.MinimapTextureCreator.UpdateRenderTarget
// (Final, Native, Protected, BlueprintCallable)

void AMinimapTextureCreator::UpdateRenderTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapTextureCreator", "UpdateRenderTarget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataWidget.OnConstructionQueuesChange_Handler
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UTedPlayerData*                   InPlayerData                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedPlayerDataConstructionQueues&InPrevious                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FTedPlayerDataConstructionQueues&InCurrent                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedPlayerDataWidget::OnConstructionQueuesChange_Handler(class UTedPlayerData* InPlayerData, const struct FTedPlayerDataConstructionQueues& InPrevious, const struct FTedPlayerDataConstructionQueues& InCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataWidget", "OnConstructionQueuesChange_Handler");

	Params::TedPlayerDataWidget_OnConstructionQueuesChange_Handler Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InPrevious = std::move(InPrevious);
	Parms.InCurrent = std::move(InCurrent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataWidget.OnConstructionQueuesChange_Handler_Native
// (Native, Protected, HasOutParams)
// Parameters:
// class UTedPlayerData*                   InPlayerData                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedPlayerDataConstructionQueues&InPrevious                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FTedPlayerDataConstructionQueues&InCurrent                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedPlayerDataWidget::OnConstructionQueuesChange_Handler_Native(class UTedPlayerData* InPlayerData, const struct FTedPlayerDataConstructionQueues& InPrevious, const struct FTedPlayerDataConstructionQueues& InCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataWidget", "OnConstructionQueuesChange_Handler_Native");

	Params::TedPlayerDataWidget_OnConstructionQueuesChange_Handler_Native Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InPrevious = std::move(InPrevious);
	Parms.InCurrent = std::move(InCurrent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataWidget.OnDoctrineResearchQueueChange_Handler
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UTedPlayerData*                   InPlayerData                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedDoctrineResearchQueue& InPrevious                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FTedDoctrineResearchQueue& InCurrent                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedPlayerDataWidget::OnDoctrineResearchQueueChange_Handler(class UTedPlayerData* InPlayerData, const struct FTedDoctrineResearchQueue& InPrevious, const struct FTedDoctrineResearchQueue& InCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataWidget", "OnDoctrineResearchQueueChange_Handler");

	Params::TedPlayerDataWidget_OnDoctrineResearchQueueChange_Handler Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InPrevious = std::move(InPrevious);
	Parms.InCurrent = std::move(InCurrent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataWidget.OnDoctrineResearchQueueChange_Handler_Native
// (Native, Protected, HasOutParams)
// Parameters:
// class UTedPlayerData*                   InPlayerData                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedDoctrineResearchQueue& InPrevious                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FTedDoctrineResearchQueue& InCurrent                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedPlayerDataWidget::OnDoctrineResearchQueueChange_Handler_Native(class UTedPlayerData* InPlayerData, const struct FTedDoctrineResearchQueue& InPrevious, const struct FTedDoctrineResearchQueue& InCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataWidget", "OnDoctrineResearchQueueChange_Handler_Native");

	Params::TedPlayerDataWidget_OnDoctrineResearchQueueChange_Handler_Native Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InPrevious = std::move(InPrevious);
	Parms.InCurrent = std::move(InCurrent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataWidget.OnLockedTechDataChange_Handler
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UTedPlayerData*                   InPlayerData                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedPlayerLockedTechData&  InPrevious                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FTedPlayerLockedTechData&  InCurrent                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedPlayerDataWidget::OnLockedTechDataChange_Handler(class UTedPlayerData* InPlayerData, const struct FTedPlayerLockedTechData& InPrevious, const struct FTedPlayerLockedTechData& InCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataWidget", "OnLockedTechDataChange_Handler");

	Params::TedPlayerDataWidget_OnLockedTechDataChange_Handler Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InPrevious = std::move(InPrevious);
	Parms.InCurrent = std::move(InCurrent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataWidget.OnLockedTechDataChange_Handler_Native
// (Native, Protected, HasOutParams)
// Parameters:
// class UTedPlayerData*                   InPlayerData                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedPlayerLockedTechData&  InPrevious                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FTedPlayerLockedTechData&  InCurrent                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedPlayerDataWidget::OnLockedTechDataChange_Handler_Native(class UTedPlayerData* InPlayerData, const struct FTedPlayerLockedTechData& InPrevious, const struct FTedPlayerLockedTechData& InCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataWidget", "OnLockedTechDataChange_Handler_Native");

	Params::TedPlayerDataWidget_OnLockedTechDataChange_Handler_Native Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InPrevious = std::move(InPrevious);
	Parms.InCurrent = std::move(InCurrent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataWidget.OnOwnedTagsChange_Handler
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UTedPlayerData*                   InPlayerData                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerDataWidget::OnOwnedTagsChange_Handler(class UTedPlayerData* InPlayerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataWidget", "OnOwnedTagsChange_Handler");

	Params::TedPlayerDataWidget_OnOwnedTagsChange_Handler Parms{};

	Parms.InPlayerData = InPlayerData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataWidget.OnOwnedTagsChange_Handler_Native
// (Native, Protected)
// Parameters:
// class UTedPlayerData*                   InPlayerData                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerDataWidget::OnOwnedTagsChange_Handler_Native(class UTedPlayerData* InPlayerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataWidget", "OnOwnedTagsChange_Handler_Native");

	Params::TedPlayerDataWidget_OnOwnedTagsChange_Handler_Native Parms{};

	Parms.InPlayerData = InPlayerData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataWidget.OnReplicatePlayerState_Handler
// (Final, Native, Protected)
// Parameters:
// class ATedPlayerController*             InPlayerController                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerDataWidget::OnReplicatePlayerState_Handler(class ATedPlayerController* InPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataWidget", "OnReplicatePlayerState_Handler");

	Params::TedPlayerDataWidget_OnReplicatePlayerState_Handler Parms{};

	Parms.InPlayerController = InPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataWidget.OnResourcesChange_Handler
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UTedPlayerData*                   InPlayerData                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedPlayerDataResources&   InPrevious                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FTedPlayerDataResources&   InCurrent                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTedPlayerDataWidget::OnResourcesChange_Handler(class UTedPlayerData* InPlayerData, const struct FTedPlayerDataResources& InPrevious, const struct FTedPlayerDataResources& InCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataWidget", "OnResourcesChange_Handler");

	Params::TedPlayerDataWidget_OnResourcesChange_Handler Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InPrevious = std::move(InPrevious);
	Parms.InCurrent = std::move(InCurrent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataWidget.OnResourcesChange_Handler_Native
// (Native, Protected, HasOutParams)
// Parameters:
// class UTedPlayerData*                   InPlayerData                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedPlayerDataResources&   InPrevious                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FTedPlayerDataResources&   InCurrent                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTedPlayerDataWidget::OnResourcesChange_Handler_Native(class UTedPlayerData* InPlayerData, const struct FTedPlayerDataResources& InPrevious, const struct FTedPlayerDataResources& InCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataWidget", "OnResourcesChange_Handler_Native");

	Params::TedPlayerDataWidget_OnResourcesChange_Handler_Native Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InPrevious = std::move(InPrevious);
	Parms.InCurrent = std::move(InCurrent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataWidget.OnStructuresChange_Handler
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UTedPlayerData*                   InPlayerData                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerDataWidget::OnStructuresChange_Handler(class UTedPlayerData* InPlayerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataWidget", "OnStructuresChange_Handler");

	Params::TedPlayerDataWidget_OnStructuresChange_Handler Parms{};

	Parms.InPlayerData = InPlayerData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataWidget.OnStructuresChange_Handler_Native
// (Native, Protected)
// Parameters:
// class UTedPlayerData*                   InPlayerData                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerDataWidget::OnStructuresChange_Handler_Native(class UTedPlayerData* InPlayerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataWidget", "OnStructuresChange_Handler_Native");

	Params::TedPlayerDataWidget_OnStructuresChange_Handler_Native Parms{};

	Parms.InPlayerData = InPlayerData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataWidget.OnTargetPlayerDataChange
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UTedPlayerData*                   InPrevious                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedPlayerData*                   InCurrent                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerDataWidget::OnTargetPlayerDataChange(class UTedPlayerData* InPrevious, class UTedPlayerData* InCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataWidget", "OnTargetPlayerDataChange");

	Params::TedPlayerDataWidget_OnTargetPlayerDataChange Parms{};

	Parms.InPrevious = InPrevious;
	Parms.InCurrent = InCurrent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataWidget.OnUnitsChange_Handler
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UTedPlayerData*                   InPlayerData                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerDataWidget::OnUnitsChange_Handler(class UTedPlayerData* InPlayerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataWidget", "OnUnitsChange_Handler");

	Params::TedPlayerDataWidget_OnUnitsChange_Handler Parms{};

	Parms.InPlayerData = InPlayerData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataWidget.OnUnitsChange_Handler_Native
// (Native, Protected)
// Parameters:
// class UTedPlayerData*                   InPlayerData                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerDataWidget::OnUnitsChange_Handler_Native(class UTedPlayerData* InPlayerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataWidget", "OnUnitsChange_Handler_Native");

	Params::TedPlayerDataWidget_OnUnitsChange_Handler_Native Parms{};

	Parms.InPlayerData = InPlayerData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataWidget.SetTargetPlayerData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTedPlayerData*                   InPlayerData                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerDataWidget::SetTargetPlayerData(class UTedPlayerData* InPlayerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataWidget", "SetTargetPlayerData");

	Params::TedPlayerDataWidget_SetTargetPlayerData Parms{};

	Parms.InPlayerData = InPlayerData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataWidget.GetTargetPlayerData
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedPlayerData*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedPlayerData* UTedPlayerDataWidget::GetTargetPlayerData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataWidget", "GetTargetPlayerData");

	Params::TedPlayerDataWidget_GetTargetPlayerData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAwaitingOtherPlayers.OnEndPlay
// (Final, Native, Private)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          EndPlayReason                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedAwaitingOtherPlayers::OnEndPlay(class AActor* Actor, EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAwaitingOtherPlayers", "OnEndPlay");

	Params::TedAwaitingOtherPlayers_OnEndPlay Parms{};

	Parms.Actor = Actor;
	Parms.EndPlayReason = EndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.ProfanitySettings.GetCultures
// (Final, Native, Public)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UProfanitySettings::GetCultures()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfanitySettings", "GetCultures");

	Params::ProfanitySettings_GetCultures Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.ProfanitySystem.CensorString
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    InString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          OutString                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UProfanitySystem::CensorString(const class FString& InString, class FString* OutString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfanitySystem", "CensorString");

	Params::ProfanitySystem_CensorString Parms{};

	Parms.InString = std::move(InString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutString != nullptr)
		*OutString = std::move(Parms.OutString);

	return Parms.ReturnValue;
}


// Function Tempest.ProfanitySystem.CensorText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText*                            OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UProfanitySystem::CensorText(const class FText& InText, class FText* OutText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfanitySystem", "CensorText");

	Params::ProfanitySystem_CensorText Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function Tempest.TedSettingsSlot.RefreshBackground
// (Final, Native, Protected, BlueprintCallable)

void UTedSettingsSlot::RefreshBackground()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsSlot", "RefreshBackground");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSettingsSlot.RefreshNativeStyles
// (Final, Native, Protected, BlueprintCallable)

void UTedSettingsSlot::RefreshNativeStyles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsSlot", "RefreshNativeStyles");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerControllerBase.ServerDebugAddExperience
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const float                             experience                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerControllerBase::ServerDebugAddExperience(const float experience)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerControllerBase", "ServerDebugAddExperience");

	Params::TedPlayerControllerBase_ServerDebugAddExperience Parms{};

	Parms.experience = experience;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerControllerBase.ServerDebugRestartLevel
// (Net, NetReliable, Native, Event, Public, NetServer)

void ATedPlayerControllerBase::ServerDebugRestartLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerControllerBase", "ServerDebugRestartLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerControllerBase.ServerDebugSpawnUnit
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults)
// Parameters:
// TSubclassOf<class ATedUnitBase>         UnitClass                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             NumToSpawn                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      PlayerID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerControllerBase::ServerDebugSpawnUnit(TSubclassOf<class ATedUnitBase> UnitClass, const int32 NumToSpawn, const struct FVector& Location, const ETedPlayerID PlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerControllerBase", "ServerDebugSpawnUnit");

	Params::TedPlayerControllerBase_ServerDebugSpawnUnit Parms{};

	Parms.UnitClass = UnitClass;
	Parms.NumToSpawn = NumToSpawn;
	Parms.Location = std::move(Location);
	Parms.PlayerID = PlayerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerControllerBase.ServerDebugTeleportSelectedUnits
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults)
// Parameters:
// const struct FVector2D&                 CursorLocation                                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class ATedUnitBase*>&      Units                                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ATedPlayerControllerBase::ServerDebugTeleportSelectedUnits(const struct FVector2D& CursorLocation, const TArray<class ATedUnitBase*>& Units)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerControllerBase", "ServerDebugTeleportSelectedUnits");

	Params::TedPlayerControllerBase_ServerDebugTeleportSelectedUnits Parms{};

	Parms.CursorLocation = std::move(CursorLocation);
	Parms.Units = std::move(Units);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_AddPawnGroupToSelection
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_AddPawnGroupToSelection(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_AddPawnGroupToSelection");

	Params::TedPlayerController_Action_AddPawnGroupToSelection Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_BaseCamera
// (Native, Protected)

void ATedPlayerController::Action_BaseCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_BaseCamera");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_BuildingGridSlot
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_BuildingGridSlot(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_BuildingGridSlot");

	Params::TedPlayerController_Action_BuildingGridSlot Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_Camera_Rotate_Left
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_Camera_Rotate_Left(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_Camera_Rotate_Left");

	Params::TedPlayerController_Action_Camera_Rotate_Left Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_Camera_Rotate_Right
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_Camera_Rotate_Right(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_Camera_Rotate_Right");

	Params::TedPlayerController_Action_Camera_Rotate_Right Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_ChangePrimarySelectionOrder
// (Final, Native, Protected)

void ATedPlayerController::Action_ChangePrimarySelectionOrder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_ChangePrimarySelectionOrder");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_ChangePrimarySelectionType
// (Final, Native, Protected)

void ATedPlayerController::Action_ChangePrimarySelectionType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_ChangePrimarySelectionType");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_CreatePawnGroup
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_CreatePawnGroup(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_CreatePawnGroup");

	Params::TedPlayerController_Action_CreatePawnGroup Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_CreateUniquePawnGroup
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_CreateUniquePawnGroup(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_CreateUniquePawnGroup");

	Params::TedPlayerController_Action_CreateUniquePawnGroup Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_FreeLook
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_FreeLook(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_FreeLook");

	Params::TedPlayerController_Action_FreeLook Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_IssueCommand
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_IssueCommand(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_IssueCommand");

	Params::TedPlayerController_Action_IssueCommand Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_IssueCommand_DoubleClick
// (Final, Native, Protected)

void ATedPlayerController::Action_IssueCommand_DoubleClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_IssueCommand_DoubleClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_JumpToCameraLocation
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_JumpToCameraLocation(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_JumpToCameraLocation");

	Params::TedPlayerController_Action_JumpToCameraLocation Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_Modifier_Alt
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_Modifier_Alt(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_Modifier_Alt");

	Params::TedPlayerController_Action_Modifier_Alt Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_Modifier_Ctrl
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_Modifier_Ctrl(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_Modifier_Ctrl");

	Params::TedPlayerController_Action_Modifier_Ctrl Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_Modifier_Shift
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_Modifier_Shift(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_Modifier_Shift");

	Params::TedPlayerController_Action_Modifier_Shift Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_MoveCamera
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_MoveCamera(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_MoveCamera");

	Params::TedPlayerController_Action_MoveCamera Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_MoveCameraFreeLook
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_MoveCameraFreeLook(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_MoveCameraFreeLook");

	Params::TedPlayerController_Action_MoveCameraFreeLook Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_OpenChat
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_OpenChat(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_OpenChat");

	Params::TedPlayerController_Action_OpenChat Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_PingClearSelection
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_PingClearSelection(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_PingClearSelection");

	Params::TedPlayerController_Action_PingClearSelection Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_PlacePing
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_PlacePing(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_PlacePing");

	Params::TedPlayerController_Action_PlacePing Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_RepairCommand
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_RepairCommand(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_RepairCommand");

	Params::TedPlayerController_Action_RepairCommand Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_RotateStructure
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_RotateStructure(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_RotateStructure");

	Params::TedPlayerController_Action_RotateStructure Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_Select
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_Select(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_Select");

	Params::TedPlayerController_Action_Select Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_Select_DoubleClick
// (Final, Native, Protected)

void ATedPlayerController::Action_Select_DoubleClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_Select_DoubleClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_SelectAllUnits
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_SelectAllUnits(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_SelectAllUnits");

	Params::TedPlayerController_Action_SelectAllUnits Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_SelectAllUnitsOnScreen
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_SelectAllUnitsOnScreen(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_SelectAllUnitsOnScreen");

	Params::TedPlayerController_Action_SelectAllUnitsOnScreen Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_SelectBuildingGridCategory
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         InValue                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InCategory                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_SelectBuildingGridCategory(const struct FInputActionValue& InValue, const struct FGameplayTag& InCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_SelectBuildingGridCategory");

	Params::TedPlayerController_Action_SelectBuildingGridCategory Parms{};

	Parms.InValue = std::move(InValue);
	Parms.InCategory = std::move(InCategory);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_SelectPawnGroup
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_SelectPawnGroup(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_SelectPawnGroup");

	Params::TedPlayerController_Action_SelectPawnGroup Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_SellCommand
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_SellCommand(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_SellCommand");

	Params::TedPlayerController_Action_SellCommand Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_SetRallyPoint_BuildingGridCategory
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         InValue                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InCategory                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_SetRallyPoint_BuildingGridCategory(const struct FInputActionValue& InValue, const struct FGameplayTag& InCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_SetRallyPoint_BuildingGridCategory");

	Params::TedPlayerController_Action_SetRallyPoint_BuildingGridCategory Parms{};

	Parms.InValue = std::move(InValue);
	Parms.InCategory = std::move(InCategory);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_ShowControlsInfo
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_ShowControlsInfo(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_ShowControlsInfo");

	Params::TedPlayerController_Action_ShowControlsInfo Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_SwitchChatMode
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_SwitchChatMode(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_SwitchChatMode");

	Params::TedPlayerController_Action_SwitchChatMode Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_TeleportCameraToHotspot
// (Final, Native, Protected)

void ATedPlayerController::Action_TeleportCameraToHotspot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_TeleportCameraToHotspot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_TeleportToPawnGroup
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_TeleportToPawnGroup(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_TeleportToPawnGroup");

	Params::TedPlayerController_Action_TeleportToPawnGroup Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Action_TogglePowerCommand
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionValue&         Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::Action_TogglePowerCommand(const struct FInputActionValue& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Action_TogglePowerCommand");

	Params::TedPlayerController_Action_TogglePowerCommand Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ChangePrimarySelectionType
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bPrimaryToLast                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::ChangePrimarySelectionType(bool bPrimaryToLast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ChangePrimarySelectionType");

	Params::TedPlayerController_ChangePrimarySelectionType Parms{};

	Parms.bPrimaryToLast = bPrimaryToLast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Client_MatchEnded
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// const class FString&                    InMatchID                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InEndGameFocusActor                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bIsWinner                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::Client_MatchEnded(const class FString& InMatchID, class AActor* InEndGameFocusActor, const bool bIsWinner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Client_MatchEnded");

	Params::TedPlayerController_Client_MatchEnded Parms{};

	Parms.InMatchID = std::move(InMatchID);
	Parms.InEndGameFocusActor = InEndGameFocusActor;
	Parms.bIsWinner = bIsWinner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Client_MatchStarted
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// const class FString&                    InMatchID                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::Client_MatchStarted(const class FString& InMatchID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Client_MatchStarted");

	Params::TedPlayerController_Client_MatchStarted Parms{};

	Parms.InMatchID = std::move(InMatchID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Client_ToggleWaitingForOtherPlayersPopup
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Timeout                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InMatchID                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::Client_ToggleWaitingForOtherPlayersPopup(bool bShow, float Timeout, const class FString& InMatchID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Client_ToggleWaitingForOtherPlayersPopup");

	Params::TedPlayerController_Client_ToggleWaitingForOtherPlayersPopup Parms{};

	Parms.bShow = bShow;
	Parms.Timeout = Timeout;
	Parms.InMatchID = std::move(InMatchID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ClientAcceptCommandRequest
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// const struct FTedCommandRequestID&      RequestId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::ClientAcceptCommandRequest(const struct FTedCommandRequestID& RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ClientAcceptCommandRequest");

	Params::TedPlayerController_ClientAcceptCommandRequest Parms{};

	Parms.RequestId = std::move(RequestId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ClientCommandFinished
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// const class AActor*                     CommandActor                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           Command                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CommandActorsNum                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOnTedCommandExecutedResult             Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::ClientCommandFinished(const class AActor* CommandActor, class UClass* Command, int32 CommandActorsNum, EOnTedCommandExecutedResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ClientCommandFinished");

	Params::TedPlayerController_ClientCommandFinished Parms{};

	Parms.CommandActor = CommandActor;
	Parms.Command = Command;
	Parms.CommandActorsNum = CommandActorsNum;
	Parms.Result = Result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ClientDenyCommandRequest
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// const struct FTedCommandRequestID&      RequestId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::ClientDenyCommandRequest(const struct FTedCommandRequestID& RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ClientDenyCommandRequest");

	Params::TedPlayerController_ClientDenyCommandRequest Parms{};

	Parms.RequestId = std::move(RequestId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ClientRefreshMatchHistoryData
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AActor*                           EndGameFocus                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsWinner                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::ClientRefreshMatchHistoryData(class AActor* EndGameFocus, bool bIsWinner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ClientRefreshMatchHistoryData");

	Params::TedPlayerController_ClientRefreshMatchHistoryData Parms{};

	Parms.EndGameFocus = EndGameFocus;
	Parms.bIsWinner = bIsWinner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ClientReportServerTime
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// double                                  RequestWorldTime                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  ServerTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::ClientReportServerTime(double RequestWorldTime, double ServerTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ClientReportServerTime");

	Params::TedPlayerController_ClientReportServerTime Parms{};

	Parms.RequestWorldTime = RequestWorldTime;
	Parms.ServerTime = ServerTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ClientReturnPing
// (Net, Native, Event, Public, NetClient)
// Parameters:
// double                                  Timestamp                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::ClientReturnPing(double Timestamp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ClientReturnPing");

	Params::TedPlayerController_ClientReturnPing Parms{};

	Parms.Timestamp = Timestamp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.DebugActivateUpgrade
// (Final, Exec, Native, Protected)
// Parameters:
// class FName                             UpgradeName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   OwningPlayerID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::DebugActivateUpgrade(class FName UpgradeName, bool bEnable, uint8 OwningPlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "DebugActivateUpgrade");

	Params::TedPlayerController_DebugActivateUpgrade Parms{};

	Parms.UpgradeName = UpgradeName;
	Parms.bEnable = bEnable;
	Parms.OwningPlayerID = OwningPlayerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.DebugSpawnPawn
// (Final, Exec, Native, Protected)
// Parameters:
// class FName                             PawnDefinitionID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   OwningPlayerID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::DebugSpawnPawn(class FName PawnDefinitionID, uint8 OwningPlayerID, uint8 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "DebugSpawnPawn");

	Params::TedPlayerController_DebugSpawnPawn Parms{};

	Parms.PawnDefinitionID = PawnDefinitionID;
	Parms.OwningPlayerID = OwningPlayerID;
	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ExitCurrentGame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bShutdown                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::ExitCurrentGame(const bool bShutdown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ExitCurrentGame");

	Params::TedPlayerController_ExitCurrentGame Parms{};

	Parms.bShutdown = bShutdown;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.InputRedirect
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FInputActionInstance&      InInputActionInstance                                  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// const class FName                       InAssociatedFunctionName                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InAssociatedGameplayTag                                (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::InputRedirect(const struct FInputActionInstance& InInputActionInstance, const class FName InAssociatedFunctionName, const struct FGameplayTag& InAssociatedGameplayTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "InputRedirect");

	Params::TedPlayerController_InputRedirect Parms{};

	Parms.InInputActionInstance = std::move(InInputActionInstance);
	Parms.InAssociatedFunctionName = InAssociatedFunctionName;
	Parms.InAssociatedGameplayTag = std::move(InAssociatedGameplayTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.KillAllPawns
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const TArray<class ATedPawn*>&          InPawns                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ATedPlayerController::KillAllPawns(const TArray<class ATedPawn*>& InPawns)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "KillAllPawns");

	Params::TedPlayerController_KillAllPawns Parms{};

	Parms.InPawns = std::move(InPawns);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.OnRep_SpectatorSpawnLocation
// (Final, Native, Protected)

void ATedPlayerController::OnRep_SpectatorSpawnLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "OnRep_SpectatorSpawnLocation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.PreloadAssets
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// const TArray<TSoftClassPtr<class UClass>>&Class_0                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

void ATedPlayerController::PreloadAssets(const TArray<TSoftClassPtr<class UClass>>& Class_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "PreloadAssets");

	Params::TedPlayerController_PreloadAssets Parms{};

	Parms.Class_0 = std::move(Class_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Server_PlacePing
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const struct FVector2D_NetQuantize&     InPlace                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::Server_PlacePing(const struct FVector2D_NetQuantize& InPlace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Server_PlacePing");

	Params::TedPlayerController_Server_PlacePing Parms{};

	Parms.InPlace = std::move(InPlace);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerBouncePing
// (Net, Native, Event, Public, NetServer)
// Parameters:
// double                                  Timestamp                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::ServerBouncePing(double Timestamp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerBouncePing");

	Params::TedPlayerController_ServerBouncePing Parms{};

	Parms.Timestamp = Timestamp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerDebugActivateUpgrade
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// const class UTedUpgrade*                Upgrade                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ATedPlayerState*            OwningPlayerState                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::ServerDebugActivateUpgrade(const class UTedUpgrade* Upgrade, bool bEnable, const class ATedPlayerState* OwningPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerDebugActivateUpgrade");

	Params::TedPlayerController_ServerDebugActivateUpgrade Parms{};

	Parms.Upgrade = Upgrade;
	Parms.bEnable = bEnable;
	Parms.OwningPlayerState = OwningPlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerDebugSpawnPawn
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults)
// Parameters:
// TSubclassOf<class ATedPawn>             PawnClass                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      OwningPlayerID                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::ServerDebugSpawnPawn(TSubclassOf<class ATedPawn> PawnClass, const struct FVector& Location, const ETedPlayerID OwningPlayerID, uint8 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerDebugSpawnPawn");

	Params::TedPlayerController_ServerDebugSpawnPawn Parms{};

	Parms.PawnClass = PawnClass;
	Parms.Location = std::move(Location);
	Parms.OwningPlayerID = OwningPlayerID;
	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerIssueCommandRequest
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// const struct FTedCommandRequest&        CommandRequest                                         (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void ATedPlayerController::ServerIssueCommandRequest(const struct FTedCommandRequest& CommandRequest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerIssueCommandRequest");

	Params::TedPlayerController_ServerIssueCommandRequest Parms{};

	Parms.CommandRequest = std::move(CommandRequest);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerRequestServerTime
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// double                                  RequestWorldTime                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::ServerRequestServerTime(double RequestWorldTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerRequestServerTime");

	Params::TedPlayerController_ServerRequestServerTime Parms{};

	Parms.RequestWorldTime = RequestWorldTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerSelectionChanged
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// const TArray<class ATedPawn*>&          Pawns                                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const ETedSelectionOp                   Op                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::ServerSelectionChanged(const TArray<class ATedPawn*>& Pawns, const ETedSelectionOp Op)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerSelectionChanged");

	Params::TedPlayerController_ServerSelectionChanged Parms{};

	Parms.Pawns = std::move(Pawns);
	Parms.Op = Op;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerSetAutocastCommandEnabled
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// TSubclassOf<class UTedCommand>          CommandClass                                           (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bEnabled                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::ServerSetAutocastCommandEnabled(TSubclassOf<class UTedCommand> CommandClass, const bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerSetAutocastCommandEnabled");

	Params::TedPlayerController_ServerSetAutocastCommandEnabled Parms{};

	Parms.CommandClass = CommandClass;
	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerSetIsDeliDisc
// (Net, NetReliable, Native, Event, Public, NetServer)

void ATedPlayerController::ServerSetIsDeliDisc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerSetIsDeliDisc");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerSurrender
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)

void ATedPlayerController::ServerSurrender()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerSurrender");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerUpdatePing
// (Net, Native, Event, Public, NetServer)
// Parameters:
// float                                   ExactPing                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::ServerUpdatePing(float ExactPing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerUpdatePing");

	Params::TedPlayerController_ServerUpdatePing Parms{};

	Parms.ExactPing = ExactPing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.CacheReconnectMatchConfig
// (Net, NetReliable, Native, Event, Public, NetClient, Const)
// Parameters:
// const struct FTedReconnectMatchConfig&  InRMC                                                  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::CacheReconnectMatchConfig(const struct FTedReconnectMatchConfig& InRMC) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "CacheReconnectMatchConfig");

	Params::TedPlayerController_CacheReconnectMatchConfig Parms{};

	Parms.InRMC = std::move(InRMC);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.CacheTeamID
// (Net, NetReliable, Native, Event, Public, NetClient, Const)
// Parameters:
// const ETedTeamID                        InTeamID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::CacheTeamID(const ETedTeamID InTeamID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "CacheTeamID");

	Params::TedPlayerController_CacheTeamID Parms{};

	Parms.InTeamID = InTeamID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.Client_OnPlayersRatingsUpdated
// (Net, NetReliable, Native, Event, Public, NetClient, Const)
// Parameters:
// const TArray<struct FTedLeaderboardUserRep>&InUserRatingsBeforeMatch                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<struct FTedLeaderboardUserRep>&InUserRatingsAfterMatch                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ATedPlayerController::Client_OnPlayersRatingsUpdated(const TArray<struct FTedLeaderboardUserRep>& InUserRatingsBeforeMatch, const TArray<struct FTedLeaderboardUserRep>& InUserRatingsAfterMatch) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "Client_OnPlayersRatingsUpdated");

	Params::TedPlayerController_Client_OnPlayersRatingsUpdated Parms{};

	Parms.InUserRatingsBeforeMatch = std::move(InUserRatingsBeforeMatch);
	Parms.InUserRatingsAfterMatch = std::move(InUserRatingsAfterMatch);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ClientDebugSetCVarTimers
// (Net, Native, Event, Public, NetClient, Const)
// Parameters:
// const struct FTedReconnectTimers&       InCVarTimers                                           (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::ClientDebugSetCVarTimers(const struct FTedReconnectTimers& InCVarTimers) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ClientDebugSetCVarTimers");

	Params::TedPlayerController_ClientDebugSetCVarTimers Parms{};

	Parms.InCVarTimers = std::move(InCVarTimers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.GetHoveredPawns
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TSet<class ATedPawn*>             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TSet<class ATedPawn*> ATedPlayerController::GetHoveredPawns() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "GetHoveredPawns");

	Params::TedPlayerController_GetHoveredPawns Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerController.GetPlayerData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedPlayerData*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedPlayerData* ATedPlayerController::GetPlayerData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "GetPlayerData");

	Params::TedPlayerController_GetPlayerData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerController.GetPlayerFaction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedFaction                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedFaction ATedPlayerController::GetPlayerFaction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "GetPlayerFaction");

	Params::TedPlayerController_GetPlayerFaction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerController.GetPlayerHUD
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedHUD*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedHUD* ATedPlayerController::GetPlayerHUD() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "GetPlayerHUD");

	Params::TedPlayerController_GetPlayerHUD Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerController.GetPlayerId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedPlayerID                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedPlayerID ATedPlayerController::GetPlayerId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "GetPlayerId");

	Params::TedPlayerController_GetPlayerId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerController.GetSelectedPawns
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TSet<class ATedPawn*>             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TSet<class ATedPawn*> ATedPlayerController::GetSelectedPawns() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "GetSelectedPawns");

	Params::TedPlayerController_GetSelectedPawns Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerController.GetSelectedStructures
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TSet<class ATedStructureBase*>    ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TSet<class ATedStructureBase*> ATedPlayerController::GetSelectedStructures() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "GetSelectedStructures");

	Params::TedPlayerController_GetSelectedStructures Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerController.GetSelectedUnits
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TSet<class ATedUnitBase*>         ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TSet<class ATedUnitBase*> ATedPlayerController::GetSelectedUnits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "GetSelectedUnits");

	Params::TedPlayerController_GetSelectedUnits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerController.HasAnythingSelected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPlayerController::HasAnythingSelected() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "HasAnythingSelected");

	Params::TedPlayerController_HasAnythingSelected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerController.HasMatchEnded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPlayerController::HasMatchEnded() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "HasMatchEnded");

	Params::TedPlayerController_HasMatchEnded Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerController.HasMatchStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPlayerController::HasMatchStarted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "HasMatchStarted");

	Params::TedPlayerController_HasMatchStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerController.IsOnlyASpectator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPlayerController::IsOnlyASpectator() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "IsOnlyASpectator");

	Params::TedPlayerController_IsOnlyASpectator Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerController.IsSpectator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPlayerController::IsSpectator() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "IsSpectator");

	Params::TedPlayerController_IsSpectator Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerController.IsWinner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPlayerController::IsWinner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "IsWinner");

	Params::TedPlayerController_IsWinner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerController.ServerDebugConnect
// (Net, Native, Event, Public, NetServer, Const)

void ATedPlayerController::ServerDebugConnect() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerDebugConnect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerDebugDisconnect
// (Net, Native, Event, Public, NetServer, Const)

void ATedPlayerController::ServerDebugDisconnect() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerDebugDisconnect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerDebugDisconnectPrintMark
// (Net, Native, Event, Public, NetServer, Const)

void ATedPlayerController::ServerDebugDisconnectPrintMark() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerDebugDisconnectPrintMark");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerDebugForceNetUpdatePlayerArray
// (Net, Native, Event, Public, NetServer, Const)

void ATedPlayerController::ServerDebugForceNetUpdatePlayerArray() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerDebugForceNetUpdatePlayerArray");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerDebugKillEnemyPawns
// (Net, Native, Event, Public, NetServer, Const)
// Parameters:
// const int32                             InOpt                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::ServerDebugKillEnemyPawns(const int32 InOpt) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerDebugKillEnemyPawns");

	Params::TedPlayerController_ServerDebugKillEnemyPawns Parms{};

	Parms.InOpt = InOpt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerDebugKillEnemyStructures
// (Net, Native, Event, Public, NetServer, Const)
// Parameters:
// const int32                             InOpt                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::ServerDebugKillEnemyStructures(const int32 InOpt) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerDebugKillEnemyStructures");

	Params::TedPlayerController_ServerDebugKillEnemyStructures Parms{};

	Parms.InOpt = InOpt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerDebugKillEnemyUnits
// (Net, Native, Event, Public, NetServer, Const)
// Parameters:
// const int32                             InOpt                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::ServerDebugKillEnemyUnits(const int32 InOpt) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerDebugKillEnemyUnits");

	Params::TedPlayerController_ServerDebugKillEnemyUnits Parms{};

	Parms.InOpt = InOpt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerDebugKillOwnedPawns
// (Net, Native, Event, Public, NetServer, Const)
// Parameters:
// const int32                             InOpt                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::ServerDebugKillOwnedPawns(const int32 InOpt) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerDebugKillOwnedPawns");

	Params::TedPlayerController_ServerDebugKillOwnedPawns Parms{};

	Parms.InOpt = InOpt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerDebugPrintConstructionQueues
// (Net, Native, Event, Public, NetServer, Const)

void ATedPlayerController::ServerDebugPrintConstructionQueues() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerDebugPrintConstructionQueues");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerDebugPrintOptionsString
// (Net, Native, Event, Public, NetServer, Const)

void ATedPlayerController::ServerDebugPrintOptionsString() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerDebugPrintOptionsString");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerDebugPrintPausers
// (Net, Native, Event, Public, NetServer, Const)

void ATedPlayerController::ServerDebugPrintPausers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerDebugPrintPausers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerDebugPrintPawnOwners
// (Net, Native, Event, Public, NetServer, Const)

void ATedPlayerController::ServerDebugPrintPawnOwners() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerDebugPrintPawnOwners");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerDebugPrintPlayerStates
// (Net, Native, Event, Public, NetServer, Const)
// Parameters:
// const class FString&                    FuncName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InOnlyPlayers                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InOnlyArrays                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::ServerDebugPrintPlayerStates(const class FString& FuncName, const int32 InOnlyPlayers, const int32 InOnlyArrays) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerDebugPrintPlayerStates");

	Params::TedPlayerController_ServerDebugPrintPlayerStates Parms{};

	Parms.FuncName = std::move(FuncName);
	Parms.InOnlyPlayers = InOnlyPlayers;
	Parms.InOnlyArrays = InOnlyArrays;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerDebugSetCVarTimers
// (Net, Native, Event, Public, NetServer, Const)
// Parameters:
// const struct FTedReconnectTimers&       InCVarTimers                                           (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedPlayerController::ServerDebugSetCVarTimers(const struct FTedReconnectTimers& InCVarTimers) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerDebugSetCVarTimers");

	Params::TedPlayerController_ServerDebugSetCVarTimers Parms{};

	Parms.InCVarTimers = std::move(InCVarTimers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerDebugSetNetSim
// (Net, Native, Event, Public, NetServer, Const)
// Parameters:
// const TArray<class FString>&            InArgs                                                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UWorld*                           InWorld                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::ServerDebugSetNetSim(const TArray<class FString>& InArgs, class UWorld* InWorld) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerDebugSetNetSim");

	Params::TedPlayerController_ServerDebugSetNetSim Parms{};

	Parms.InArgs = std::move(InArgs);
	Parms.InWorld = InWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerDestroyDeliDiscPlayer
// (Net, NetReliable, Native, Event, Public, NetServer, Const)
// Parameters:
// const class ATedPlayerController*       InTedPC                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::ServerDestroyDeliDiscPlayer(const class ATedPlayerController* InTedPC) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerDestroyDeliDiscPlayer");

	Params::TedPlayerController_ServerDestroyDeliDiscPlayer Parms{};

	Parms.InTedPC = InTedPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerDestroyExpiredInactivePlayers
// (Net, NetReliable, Native, Event, Public, NetServer, Const)

void ATedPlayerController::ServerDestroyExpiredInactivePlayers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerDestroyExpiredInactivePlayers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerSyncPlayerStateNetGUIDs
// (Net, NetReliable, Native, Event, Public, NetServer, Const)
// Parameters:
// const class ATedPlayerController*       InTedPC                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::ServerSyncPlayerStateNetGUIDs(const class ATedPlayerController* InTedPC) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerSyncPlayerStateNetGUIDs");

	Params::TedPlayerController_ServerSyncPlayerStateNetGUIDs Parms{};

	Parms.InTedPC = InTedPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.ServerSyncStateValidate
// (Net, NetReliable, Native, Event, Public, NetServer, Const)
// Parameters:
// const ETedReconnectState                InState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InSyncTime                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::ServerSyncStateValidate(const ETedReconnectState InState, const float InSyncTime) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "ServerSyncStateValidate");

	Params::TedPlayerController_ServerSyncStateValidate Parms{};

	Parms.InState = InState;
	Parms.InSyncTime = InSyncTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.SetReconnectState
// (Net, NetReliable, Native, Event, Public, NetClient, Const)
// Parameters:
// const ETedReconnectState                InState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::SetReconnectState(const ETedReconnectState InState) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "SetReconnectState");

	Params::TedPlayerController_SetReconnectState Parms{};

	Parms.InState = InState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.SetTimersConfig
// (Net, NetReliable, Native, Event, Public, NetClient, Const)

void ATedPlayerController::SetTimersConfig() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "SetTimersConfig");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.StartServerAckCheck
// (Net, NetReliable, Native, Event, Public, NetClient, Const)

void ATedPlayerController::StartServerAckCheck() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "StartServerAckCheck");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.SyncPlayerStateNetGUIDs
// (Net, NetReliable, Native, Event, Public, NetClient, Const)
// Parameters:
// const TArray<uint64>&                   InPlayerStateNetGUIDs                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ATedPlayerController::SyncPlayerStateNetGUIDs(const TArray<uint64>& InPlayerStateNetGUIDs) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "SyncPlayerStateNetGUIDs");

	Params::TedPlayerController_SyncPlayerStateNetGUIDs Parms{};

	Parms.InPlayerStateNetGUIDs = std::move(InPlayerStateNetGUIDs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.SyncStateExecute
// (Net, NetReliable, Native, Event, Public, NetClient, Const)
// Parameters:
// const ETedReconnectState                InState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InSyncTime                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::SyncStateExecute(const ETedReconnectState InState, const float InSyncTime) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "SyncStateExecute");

	Params::TedPlayerController_SyncStateExecute Parms{};

	Parms.InState = InState;
	Parms.InSyncTime = InSyncTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.SyncStateQuery
// (Net, NetReliable, Native, Event, Public, NetClient, Const)

void ATedPlayerController::SyncStateQuery() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "SyncStateQuery");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController.UpdateSpectatorInviteInRichPresence
// (Net, NetReliable, Native, Event, Public, NetClient, Const)
// Parameters:
// const int32                             InSpectatorsNum                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InSpectatorsMax                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController::UpdateSpectatorInviteInRichPresence(const int32 InSpectatorsNum, const int32 InSpectatorsMax) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController", "UpdateSpectatorInviteInRichPresence");

	Params::TedPlayerController_UpdateSpectatorInviteInRichPresence Parms{};

	Parms.InSpectatorsNum = InSpectatorsNum;
	Parms.InSpectatorsMax = InSpectatorsMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedBotPlayerController.GetBotPC
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      PlayerID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedBotPlayerController*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedBotPlayerController* ATedBotPlayerController::GetBotPC(const class UObject* WorldContextObject, const ETedPlayerID PlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedBotPlayerController", "GetBotPC");

	Params::TedBotPlayerController_GetBotPC Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerID = PlayerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBotPlayerController.TEMP_IssueAICommand
// (Final, Native, Static, Private, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedUnitBase*                     Unit                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedAICommandType                 CommadType                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     Target                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   TargetLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedBotPlayerController::TEMP_IssueAICommand(const class UObject* WorldContextObject, class ATedUnitBase* Unit, const ETedAICommandType CommadType, const class AActor* Target, const struct FVector& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedBotPlayerController", "TEMP_IssueAICommand");

	Params::TedBotPlayerController_TEMP_IssueAICommand Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Unit = Unit;
	Parms.CommadType = CommadType;
	Parms.Target = Target;
	Parms.TargetLocation = std::move(TargetLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedBotPlayerController.TEMP_IssueAICommandByClass
// (Final, Native, Static, Private, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedUnitBase*                     Unit                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UTedCommand>          Class_0                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     Target                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   TargetLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedBotPlayerController::TEMP_IssueAICommandByClass(const class UObject* WorldContextObject, class ATedUnitBase* Unit, TSubclassOf<class UTedCommand> Class_0, const class AActor* Target, const struct FVector& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedBotPlayerController", "TEMP_IssueAICommandByClass");

	Params::TedBotPlayerController_TEMP_IssueAICommandByClass Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Unit = Unit;
	Parms.Class_0 = Class_0;
	Parms.Target = Target;
	Parms.TargetLocation = std::move(TargetLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedBotPlayerController.TEMP_IssueBatchAICommand
// (Final, Native, Static, Private, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class ATedUnitBase*>&      Units                                                  (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const ETedAICommandType                 CommadType                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     Target                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   TargetLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedBotPlayerController::TEMP_IssueBatchAICommand(const class UObject* WorldContextObject, const TArray<class ATedUnitBase*>& Units, const ETedAICommandType CommadType, const class AActor* Target, const struct FVector& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedBotPlayerController", "TEMP_IssueBatchAICommand");

	Params::TedBotPlayerController_TEMP_IssueBatchAICommand Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Units = std::move(Units);
	Parms.CommadType = CommadType;
	Parms.Target = Target;
	Parms.TargetLocation = std::move(TargetLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedBotPlayerController.TEMP_IssueBatchAICommandByClass
// (Final, Native, Static, Private, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class ATedUnitBase*>&      Units                                                  (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TSubclassOf<class UTedCommand>          Class_0                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     Target                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   TargetLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedBotPlayerController::TEMP_IssueBatchAICommandByClass(const class UObject* WorldContextObject, const TArray<class ATedUnitBase*>& Units, TSubclassOf<class UTedCommand> Class_0, const class AActor* Target, const struct FVector& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedBotPlayerController", "TEMP_IssueBatchAICommandByClass");

	Params::TedBotPlayerController_TEMP_IssueBatchAICommandByClass Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Units = std::move(Units);
	Parms.Class_0 = Class_0;
	Parms.Target = Target;
	Parms.TargetLocation = std::move(TargetLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.ResourcesTooltipWidget.OnReplicatePlayerState_Handler
// (Final, Native, Private)
// Parameters:
// class ATedPlayerController*             InPlayerController                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UResourcesTooltipWidget::OnReplicatePlayerState_Handler(class ATedPlayerController* InPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ResourcesTooltipWidget", "OnReplicatePlayerState_Handler");

	Params::ResourcesTooltipWidget_OnReplicatePlayerState_Handler Parms{};

	Parms.InPlayerController = InPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.SkirmishAICommander.OnPawnDestroyed
// (Final, Native, Public)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkirmishAICommander::OnPawnDestroyed(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkirmishAICommander", "OnPawnDestroyed");

	Params::SkirmishAICommander_OnPawnDestroyed Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.OnRefreshPrerequisites
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const TArray<class FText>&              InNotOwnedPrerequisites                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<class FText>&              InOwnedPrerequisites                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedBuildingGridSlotTooltipDisplay::OnRefreshPrerequisites(const TArray<class FText>& InNotOwnedPrerequisites, const TArray<class FText>& InOwnedPrerequisites)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "OnRefreshPrerequisites");

	Params::TedBuildingGridSlotTooltipDisplay_OnRefreshPrerequisites Parms{};

	Parms.InNotOwnedPrerequisites = std::move(InNotOwnedPrerequisites);
	Parms.InOwnedPrerequisites = std::move(InOwnedPrerequisites);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetCostText_AdditionalCredits
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedBuildingGridSlotTooltipDisplay::GetCostText_AdditionalCredits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetCostText_AdditionalCredits");

	Params::TedBuildingGridSlotTooltipDisplay_GetCostText_AdditionalCredits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetCostText_AdditionalTime
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedBuildingGridSlotTooltipDisplay::GetCostText_AdditionalTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetCostText_AdditionalTime");

	Params::TedBuildingGridSlotTooltipDisplay_GetCostText_AdditionalTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetCostText_Credits
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedBuildingGridSlotTooltipDisplay::GetCostText_Credits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetCostText_Credits");

	Params::TedBuildingGridSlotTooltipDisplay_GetCostText_Credits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetCostText_Intel
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedBuildingGridSlotTooltipDisplay::GetCostText_Intel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetCostText_Intel");

	Params::TedBuildingGridSlotTooltipDisplay_GetCostText_Intel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetCostText_Population
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedBuildingGridSlotTooltipDisplay::GetCostText_Population() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetCostText_Population");

	Params::TedBuildingGridSlotTooltipDisplay_GetCostText_Population Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetCostText_Power
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedBuildingGridSlotTooltipDisplay::GetCostText_Power() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetCostText_Power");

	Params::TedBuildingGridSlotTooltipDisplay_GetCostText_Power Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetCostText_Time
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedBuildingGridSlotTooltipDisplay::GetCostText_Time() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetCostText_Time");

	Params::TedBuildingGridSlotTooltipDisplay_GetCostText_Time Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetCostValue_AdditionalCredits
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedBuildingGridSlotTooltipDisplay::GetCostValue_AdditionalCredits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetCostValue_AdditionalCredits");

	Params::TedBuildingGridSlotTooltipDisplay_GetCostValue_AdditionalCredits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetCostValue_AdditionalTime
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedBuildingGridSlotTooltipDisplay::GetCostValue_AdditionalTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetCostValue_AdditionalTime");

	Params::TedBuildingGridSlotTooltipDisplay_GetCostValue_AdditionalTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetCostValue_Credits
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedBuildingGridSlotTooltipDisplay::GetCostValue_Credits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetCostValue_Credits");

	Params::TedBuildingGridSlotTooltipDisplay_GetCostValue_Credits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetCostValue_Intel
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedBuildingGridSlotTooltipDisplay::GetCostValue_Intel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetCostValue_Intel");

	Params::TedBuildingGridSlotTooltipDisplay_GetCostValue_Intel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetCostValue_Time
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedBuildingGridSlotTooltipDisplay::GetCostValue_Time() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetCostValue_Time");

	Params::TedBuildingGridSlotTooltipDisplay_GetCostValue_Time Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetCostVisibility_AdditionalCredits
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedBuildingGridSlotTooltipDisplay::GetCostVisibility_AdditionalCredits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetCostVisibility_AdditionalCredits");

	Params::TedBuildingGridSlotTooltipDisplay_GetCostVisibility_AdditionalCredits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetCostVisibility_AdditionalTime
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedBuildingGridSlotTooltipDisplay::GetCostVisibility_AdditionalTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetCostVisibility_AdditionalTime");

	Params::TedBuildingGridSlotTooltipDisplay_GetCostVisibility_AdditionalTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetCostVisibility_Commando
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedBuildingGridSlotTooltipDisplay::GetCostVisibility_Commando() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetCostVisibility_Commando");

	Params::TedBuildingGridSlotTooltipDisplay_GetCostVisibility_Commando Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetCostVisibility_Credits
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedBuildingGridSlotTooltipDisplay::GetCostVisibility_Credits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetCostVisibility_Credits");

	Params::TedBuildingGridSlotTooltipDisplay_GetCostVisibility_Credits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetCostVisibility_Intel
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedBuildingGridSlotTooltipDisplay::GetCostVisibility_Intel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetCostVisibility_Intel");

	Params::TedBuildingGridSlotTooltipDisplay_GetCostVisibility_Intel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetCostVisibility_Population
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedBuildingGridSlotTooltipDisplay::GetCostVisibility_Population() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetCostVisibility_Population");

	Params::TedBuildingGridSlotTooltipDisplay_GetCostVisibility_Population Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetCostVisibility_Power
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedBuildingGridSlotTooltipDisplay::GetCostVisibility_Power() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetCostVisibility_Power");

	Params::TedBuildingGridSlotTooltipDisplay_GetCostVisibility_Power Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetCostVisibility_Specialist
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedBuildingGridSlotTooltipDisplay::GetCostVisibility_Specialist() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetCostVisibility_Specialist");

	Params::TedBuildingGridSlotTooltipDisplay_GetCostVisibility_Specialist Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetCostVisibility_Time
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedBuildingGridSlotTooltipDisplay::GetCostVisibility_Time() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetCostVisibility_Time");

	Params::TedBuildingGridSlotTooltipDisplay_GetCostVisibility_Time Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetDescription
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedBuildingGridSlotTooltipDisplay::GetDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetDescription");

	Params::TedBuildingGridSlotTooltipDisplay_GetDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetDisplayName
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedBuildingGridSlotTooltipDisplay::GetDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetDisplayName");

	Params::TedBuildingGridSlotTooltipDisplay_GetDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetIcon
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTedBuildingGridSlotTooltipDisplay::GetIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetIcon");

	Params::TedBuildingGridSlotTooltipDisplay_GetIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetIssueValue_CommandoLimitReached
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedBuildingGridSlotTooltipDisplay::GetIssueValue_CommandoLimitReached() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetIssueValue_CommandoLimitReached");

	Params::TedBuildingGridSlotTooltipDisplay_GetIssueValue_CommandoLimitReached Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetIssueValue_MissingTech
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedBuildingGridSlotTooltipDisplay::GetIssueValue_MissingTech() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetIssueValue_MissingTech");

	Params::TedBuildingGridSlotTooltipDisplay_GetIssueValue_MissingTech Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetIssueValue_NoConstruction
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedBuildingGridSlotTooltipDisplay::GetIssueValue_NoConstruction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetIssueValue_NoConstruction");

	Params::TedBuildingGridSlotTooltipDisplay_GetIssueValue_NoConstruction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetIssueValue_NoPower
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedBuildingGridSlotTooltipDisplay::GetIssueValue_NoPower() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetIssueValue_NoPower");

	Params::TedBuildingGridSlotTooltipDisplay_GetIssueValue_NoPower Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetIssueValue_PopulationFull
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedBuildingGridSlotTooltipDisplay::GetIssueValue_PopulationFull() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetIssueValue_PopulationFull");

	Params::TedBuildingGridSlotTooltipDisplay_GetIssueValue_PopulationFull Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetIssueValue_SpecialistLimitReached
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedBuildingGridSlotTooltipDisplay::GetIssueValue_SpecialistLimitReached() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetIssueValue_SpecialistLimitReached");

	Params::TedBuildingGridSlotTooltipDisplay_GetIssueValue_SpecialistLimitReached Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetIssueVisibility_CommandoLimitReached
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedBuildingGridSlotTooltipDisplay::GetIssueVisibility_CommandoLimitReached() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetIssueVisibility_CommandoLimitReached");

	Params::TedBuildingGridSlotTooltipDisplay_GetIssueVisibility_CommandoLimitReached Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetIssueVisibility_MissingIntel
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedBuildingGridSlotTooltipDisplay::GetIssueVisibility_MissingIntel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetIssueVisibility_MissingIntel");

	Params::TedBuildingGridSlotTooltipDisplay_GetIssueVisibility_MissingIntel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetIssueVisibility_MissingTech
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedBuildingGridSlotTooltipDisplay::GetIssueVisibility_MissingTech() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetIssueVisibility_MissingTech");

	Params::TedBuildingGridSlotTooltipDisplay_GetIssueVisibility_MissingTech Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetIssueVisibility_NoConstruction
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedBuildingGridSlotTooltipDisplay::GetIssueVisibility_NoConstruction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetIssueVisibility_NoConstruction");

	Params::TedBuildingGridSlotTooltipDisplay_GetIssueVisibility_NoConstruction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetIssueVisibility_NoPower
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedBuildingGridSlotTooltipDisplay::GetIssueVisibility_NoPower() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetIssueVisibility_NoPower");

	Params::TedBuildingGridSlotTooltipDisplay_GetIssueVisibility_NoPower Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetIssueVisibility_PopulationFull
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedBuildingGridSlotTooltipDisplay::GetIssueVisibility_PopulationFull() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetIssueVisibility_PopulationFull");

	Params::TedBuildingGridSlotTooltipDisplay_GetIssueVisibility_PopulationFull Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetIssueVisibility_SpecialistLimitReached
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedBuildingGridSlotTooltipDisplay::GetIssueVisibility_SpecialistLimitReached() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetIssueVisibility_SpecialistLimitReached");

	Params::TedBuildingGridSlotTooltipDisplay_GetIssueVisibility_SpecialistLimitReached Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetMissingAirPadsIssueVisibility
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedBuildingGridSlotTooltipDisplay::GetMissingAirPadsIssueVisibility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetMissingAirPadsIssueVisibility");

	Params::TedBuildingGridSlotTooltipDisplay_GetMissingAirPadsIssueVisibility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetPopulationCost
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedBuildingGridSlotTooltipDisplay::GetPopulationCost() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetPopulationCost");

	Params::TedBuildingGridSlotTooltipDisplay_GetPopulationCost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetPowerCost
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedBuildingGridSlotTooltipDisplay::GetPowerCost() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetPowerCost");

	Params::TedBuildingGridSlotTooltipDisplay_GetPowerCost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.GetShortcutText
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedBuildingGridSlotTooltipDisplay::GetShortcutText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "GetShortcutText");

	Params::TedBuildingGridSlotTooltipDisplay_GetShortcutText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotTooltipDisplay.HasPlayerInsufficientIntel
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedBuildingGridSlotTooltipDisplay::HasPlayerInsufficientIntel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotTooltipDisplay", "HasPlayerInsufficientIntel");

	Params::TedBuildingGridSlotTooltipDisplay_HasPlayerInsufficientIntel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSettingsSlot_InputAction.ClearSourceValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPlayerKeyMapping&         InValue                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSettingsSlot_InputAction::ClearSourceValue(const struct FPlayerKeyMapping& InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsSlot_InputAction", "ClearSourceValue");

	Params::TedSettingsSlot_InputAction_ClearSourceValue Parms{};

	Parms.InValue = std::move(InValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSettingsSlot_InputAction.OnTriggerMappingSlotAction
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InPanel                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InSlot                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedContentSlotAction             InAction                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSettingsSlot_InputAction::OnTriggerMappingSlotAction(class UTedContentPanelBase* InPanel, class UTedContentPanelSlotBase* InSlot, const ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsSlot_InputAction", "OnTriggerMappingSlotAction");

	Params::TedSettingsSlot_InputAction_OnTriggerMappingSlotAction Parms{};

	Parms.InPanel = InPanel;
	Parms.InSlot = InSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSettingsSlot_InputAction.SetSourceValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPlayerKeyMapping&         InValue                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSettingsSlot_InputAction::SetSourceValue(const struct FPlayerKeyMapping& InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsSlot_InputAction", "SetSourceValue");

	Params::TedSettingsSlot_InputAction_SetSourceValue Parms{};

	Parms.InValue = std::move(InValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSettingsSlot_InputAction.GetSourceValue
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const int32                             InMappingIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayerKeyMapping                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FPlayerKeyMapping UTedSettingsSlot_InputAction::GetSourceValue(const int32 InMappingIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsSlot_InputAction", "GetSourceValue");

	Params::TedSettingsSlot_InputAction_GetSourceValue Parms{};

	Parms.InMappingIndex = InMappingIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.SoftActorPtrFunctions.GetActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FSoftActorPtr&             Actor                                                  (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* USoftActorPtrFunctions::GetActor(const struct FSoftActorPtr& Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SoftActorPtrFunctions", "GetActor");

	Params::SoftActorPtrFunctions_GetActor Parms{};

	Parms.Actor = std::move(Actor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.SoftActorPtrFunctions.GetActorOfClass
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FSoftActorPtr&             Actor                                                  (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AActor>               Class_0                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor**                          Out                                                    (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USoftActorPtrFunctions::GetActorOfClass(const struct FSoftActorPtr& Actor, TSubclassOf<class AActor> Class_0, class AActor** Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SoftActorPtrFunctions", "GetActorOfClass");

	Params::SoftActorPtrFunctions_GetActorOfClass Parms{};

	Parms.Actor = std::move(Actor);
	Parms.Class_0 = Class_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function Tempest.SoftActorPtrFunctions.IsEmpty
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FSoftActorPtr&             Actor                                                  (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USoftActorPtrFunctions::IsEmpty(const struct FSoftActorPtr& Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SoftActorPtrFunctions", "IsEmpty");

	Params::SoftActorPtrFunctions_IsEmpty Parms{};

	Parms.Actor = std::move(Actor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.SoftActorPtrFunctions.MakeLiteralSoftActorPtr
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FSoftActorPtr&             Actor                                                  (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoftActorPtr*                   Out                                                    (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USoftActorPtrFunctions::MakeLiteralSoftActorPtr(const struct FSoftActorPtr& Actor, struct FSoftActorPtr* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SoftActorPtrFunctions", "MakeLiteralSoftActorPtr");

	Params::SoftActorPtrFunctions_MakeLiteralSoftActorPtr Parms{};

	Parms.Actor = std::move(Actor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function Tempest.SoftActorPtrFunctions.ToString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FSoftActorPtr&             Actor                                                  (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString USoftActorPtrFunctions::ToString(const struct FSoftActorPtr& Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SoftActorPtrFunctions", "ToString");

	Params::SoftActorPtrFunctions_ToString Parms{};

	Parms.Actor = std::move(Actor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridFactoryTypesPanel.ActivateSlotByFactoryType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              InFactoryType                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedContentSlotState              InState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInActivate                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedBuildingGridFactoryTypesPanel::ActivateSlotByFactoryType(const struct FGameplayTag& InFactoryType, const ETedContentSlotState InState, const bool bInActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridFactoryTypesPanel", "ActivateSlotByFactoryType");

	Params::TedBuildingGridFactoryTypesPanel_ActivateSlotByFactoryType Parms{};

	Parms.InFactoryType = std::move(InFactoryType);
	Parms.InState = InState;
	Parms.bInActivate = bInActivate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedBuildingGridFactoryTypesPanel.SelectFirstAvailableSlot
// (Final, Native, Public, BlueprintCallable)

void UTedBuildingGridFactoryTypesPanel::SelectFirstAvailableSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridFactoryTypesPanel", "SelectFirstAvailableSlot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedBuildingGridFactoryTypesPanel.GetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedBuildingGridFactoryTypesPanelContent*OutContent                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedBuildingGridFactoryTypesPanel::GetContent(const int32 InSlotIndex, struct FTedBuildingGridFactoryTypesPanelContent* OutContent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridFactoryTypesPanel", "GetContent");

	Params::TedBuildingGridFactoryTypesPanel_GetContent Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutContent != nullptr)
		*OutContent = std::move(Parms.OutContent);

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridFactoryTypesPanel.GetFactoryTypeIndex
// (Final, Native, Protected, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const struct FGameplayTag&              InFactoryType                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedBuildingGridFactoryTypesPanel::GetFactoryTypeIndex(const struct FGameplayTag& InFactoryType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridFactoryTypesPanel", "GetFactoryTypeIndex");

	Params::TedBuildingGridFactoryTypesPanel_GetFactoryTypeIndex Parms{};

	Parms.InFactoryType = std::move(InFactoryType);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridFactoryTypesPanel.GetSelectedContent
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// struct FTedBuildingGridFactoryTypesPanelContent*OutContent                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedBuildingGridFactoryTypesPanel::GetSelectedContent(struct FTedBuildingGridFactoryTypesPanelContent* OutContent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridFactoryTypesPanel", "GetSelectedContent");

	Params::TedBuildingGridFactoryTypesPanel_GetSelectedContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutContent != nullptr)
		*OutContent = std::move(Parms.OutContent);

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridFactoryTypesPanel.GetTargetPlayerData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedPlayerData*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedPlayerData* UTedBuildingGridFactoryTypesPanel::GetTargetPlayerData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridFactoryTypesPanel", "GetTargetPlayerData");

	Params::TedBuildingGridFactoryTypesPanel_GetTargetPlayerData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAbilityBase.ApplyCommandCooldown
// (Native, Protected, BlueprintCallable)

void UTedAbilityBase::ApplyCommandCooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbilityBase", "ApplyCommandCooldown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAbilityBase.ApplyCommandCost
// (Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bApply                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedAbilityBase::ApplyCommandCost(bool bApply)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbilityBase", "ApplyCommandCost");

	Params::TedAbilityBase_ApplyCommandCost Parms{};

	Parms.bApply = bApply;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAbilityBase.FinishCommand
// (Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedAbilityBase::FinishCommand(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbilityBase", "FinishCommand");

	Params::TedAbilityBase_FinishCommand Parms{};

	Parms.bSuccess = bSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAbilityBase.MontagePlay
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UAnimMontage*                     AnimMontage                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlayRate                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             StartSectionName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedAbilityBase::MontagePlay(class UAnimMontage* AnimMontage, float PlayRate, class FName StartSectionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbilityBase", "MontagePlay");

	Params::TedAbilityBase_MontagePlay Parms{};

	Parms.AnimMontage = AnimMontage;
	Parms.PlayRate = PlayRate;
	Parms.StartSectionName = StartSectionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAbilityBase.GetPawnsInRange
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent, Const)
// Parameters:
// const class AActor*                     AvatarActor                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Range                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedUtilsPawnFilter&       Filter                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class ATedPawn*>*                OutPawns                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedAbilityBase::GetPawnsInRange(const class AActor* AvatarActor, const float Range, const struct FTedUtilsPawnFilter& Filter, TArray<class ATedPawn*>* OutPawns, const struct FVector& Location) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbilityBase", "GetPawnsInRange");

	Params::TedAbilityBase_GetPawnsInRange Parms{};

	Parms.AvatarActor = AvatarActor;
	Parms.Range = Range;
	Parms.Filter = std::move(Filter);
	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPawns != nullptr)
		*OutPawns = std::move(Parms.OutPawns);
}


// Function Tempest.TedAbilityBase.GetTedAbilityComponentFromActorInfo
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedAbilityComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedAbilityComponent* UTedAbilityBase::GetTedAbilityComponentFromActorInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbilityBase", "GetTedAbilityComponentFromActorInfo");

	Params::TedAbilityBase_GetTedAbilityComponentFromActorInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAbilityBase.GetTedAIControllerFromActorInfo
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedAIController*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedAIController* UTedAbilityBase::GetTedAIControllerFromActorInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbilityBase", "GetTedAIControllerFromActorInfo");

	Params::TedAbilityBase_GetTedAIControllerFromActorInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAbilityBase.GetTedPawnFromActorInfo
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedPawn*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedPawn* UTedAbilityBase::GetTedPawnFromActorInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbilityBase", "GetTedPawnFromActorInfo");

	Params::TedAbilityBase_GetTedPawnFromActorInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAbilityBase.GetTedStructureFromActorInfo
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedStructureBase*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedStructureBase* UTedAbilityBase::GetTedStructureFromActorInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbilityBase", "GetTedStructureFromActorInfo");

	Params::TedAbilityBase_GetTedStructureFromActorInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAbilityBase.GetTedUnitFromActorInfo
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedUnitBase*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedUnitBase* UTedAbilityBase::GetTedUnitFromActorInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbilityBase", "GetTedUnitFromActorInfo");

	Params::TedAbilityBase_GetTedUnitFromActorInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAbilityBase.K2_IsActive
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedAbilityBase::K2_IsActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbilityBase", "K2_IsActive");

	Params::TedAbilityBase_K2_IsActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAbilityComponent.AddGameplayCueLocal
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              GameplayCueTag                                         (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayCueParameters&    GameplayCueParameters                                  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UTedAbilityComponent::AddGameplayCueLocal(const struct FGameplayTag& GameplayCueTag, const struct FGameplayCueParameters& GameplayCueParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbilityComponent", "AddGameplayCueLocal");

	Params::TedAbilityComponent_AddGameplayCueLocal Parms{};

	Parms.GameplayCueTag = std::move(GameplayCueTag);
	Parms.GameplayCueParameters = std::move(GameplayCueParameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAbilityComponent.ExecuteDamageGameplayCueLocal
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TSubclassOf<class UTedDamageType> DamageTypeClass                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayCueParameters&    GameplayCueParameters                                  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UTedAbilityComponent::ExecuteDamageGameplayCueLocal(const TSubclassOf<class UTedDamageType> DamageTypeClass, const struct FGameplayCueParameters& GameplayCueParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbilityComponent", "ExecuteDamageGameplayCueLocal");

	Params::TedAbilityComponent_ExecuteDamageGameplayCueLocal Parms{};

	Parms.DamageTypeClass = DamageTypeClass;
	Parms.GameplayCueParameters = std::move(GameplayCueParameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAbilityComponent.ExecuteGameplayCueLocal
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              GameplayCueTag                                         (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayCueParameters&    GameplayCueParameters                                  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UTedAbilityComponent::ExecuteGameplayCueLocal(const struct FGameplayTag& GameplayCueTag, const struct FGameplayCueParameters& GameplayCueParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbilityComponent", "ExecuteGameplayCueLocal");

	Params::TedAbilityComponent_ExecuteGameplayCueLocal Parms{};

	Parms.GameplayCueTag = std::move(GameplayCueTag);
	Parms.GameplayCueParameters = std::move(GameplayCueParameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAbilityComponent.RemoveGameplayCueLocal
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              GameplayCueTag                                         (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayCueParameters&    GameplayCueParameters                                  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UTedAbilityComponent::RemoveGameplayCueLocal(const struct FGameplayTag& GameplayCueTag, const struct FGameplayCueParameters& GameplayCueParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbilityComponent", "RemoveGameplayCueLocal");

	Params::TedAbilityComponent_RemoveGameplayCueLocal Parms{};

	Parms.GameplayCueTag = std::move(GameplayCueTag);
	Parms.GameplayCueParameters = std::move(GameplayCueParameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAbilityComponent.IsAbilityActive
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              AbilityTag                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bExactMatch                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedAbilityComponent::IsAbilityActive(const struct FGameplayTag& AbilityTag, const bool bExactMatch) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbilityComponent", "IsAbilityActive");

	Params::TedAbilityComponent_IsAbilityActive Parms{};

	Parms.AbilityTag = std::move(AbilityTag);
	Parms.bExactMatch = bExactMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAbilityComponent.IsAnyAbilityActive
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagContainer&     AbilityTags                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const bool                              bExactMatch                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedAbilityComponent::IsAnyAbilityActive(const struct FGameplayTagContainer& AbilityTags, const bool bExactMatch) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbilityComponent", "IsAnyAbilityActive");

	Params::TedAbilityComponent_IsAnyAbilityActive Parms{};

	Parms.AbilityTags = std::move(AbilityTags);
	Parms.bExactMatch = bExactMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAbilityComponent.MakeDamageEffectContext
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TSubclassOf<class UTedDamageType> DamageType                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEffectContextHandle     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayEffectContextHandle UTedAbilityComponent::MakeDamageEffectContext(const TSubclassOf<class UTedDamageType> DamageType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbilityComponent", "MakeDamageEffectContext");

	Params::TedAbilityComponent_MakeDamageEffectContext Parms{};

	Parms.DamageType = DamageType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAbilityHelpers.EffectContextGetDamageTypeClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayEffectContextHandle&EffectContext                                          (Parm, NativeAccessSpecifierPublic)
// TSubclassOf<class UTedDamageType>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UTedDamageType> UTedAbilityHelpers::EffectContextGetDamageTypeClass(const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedAbilityHelpers", "EffectContextGetDamageTypeClass");

	Params::TedAbilityHelpers_EffectContextGetDamageTypeClass Parms{};

	Parms.EffectContext = std::move(EffectContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAbilityHelpers.EffectContextHasDamageTypeClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayEffectContextHandle&EffectContext                                          (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedAbilityHelpers::EffectContextHasDamageTypeClass(const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedAbilityHelpers", "EffectContextHasDamageTypeClass");

	Params::TedAbilityHelpers_EffectContextHasDamageTypeClass Parms{};

	Parms.EffectContext = std::move(EffectContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAbilityHelpers.EffectContextSetDamageTypeClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayEffectContextHandle&EffectContext                                          (Parm, NativeAccessSpecifierPublic)
// TSubclassOf<class UTedDamageType>       DamageTypeClass                                        (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEffectContextHandle     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayEffectContextHandle UTedAbilityHelpers::EffectContextSetDamageTypeClass(const struct FGameplayEffectContextHandle& EffectContext, TSubclassOf<class UTedDamageType> DamageTypeClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedAbilityHelpers", "EffectContextSetDamageTypeClass");

	Params::TedAbilityHelpers_EffectContextSetDamageTypeClass Parms{};

	Parms.EffectContext = std::move(EffectContext);
	Parms.DamageTypeClass = DamageTypeClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAbilityHelpers.GetLastTagName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UTedAbilityHelpers::GetLastTagName(const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedAbilityHelpers", "GetLastTagName");

	Params::TedAbilityHelpers_GetLastTagName Parms{};

	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAbilityHelpers.GetTedAbilitySystemComponent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AActor*                     Actor                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedAbilityComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedAbilityComponent* UTedAbilityHelpers::GetTedAbilitySystemComponent(const class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedAbilityHelpers", "GetTedAbilitySystemComponent");

	Params::TedAbilityHelpers_GetTedAbilitySystemComponent Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSettingsSlot_Slider.OnEditableTextBoxChange
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const class FText&                      InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedSettingsSlot_Slider::OnEditableTextBoxChange(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsSlot_Slider", "OnEditableTextBoxChange");

	Params::TedSettingsSlot_Slider_OnEditableTextBoxChange Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSettingsSlot_Slider.OnEditableTextBoxCommited
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const class FText&                      InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSettingsSlot_Slider::OnEditableTextBoxCommited(const class FText& InText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsSlot_Slider", "OnEditableTextBoxCommited");

	Params::TedSettingsSlot_Slider_OnEditableTextBoxCommited Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSettingsSlot_Slider.OnEditableTextChange
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const class FText&                      InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedSettingsSlot_Slider::OnEditableTextChange(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsSlot_Slider", "OnEditableTextChange");

	Params::TedSettingsSlot_Slider_OnEditableTextChange Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSettingsSlot_Slider.OnEditableTextCommited
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const class FText&                      InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSettingsSlot_Slider::OnEditableTextCommited(const class FText& InText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsSlot_Slider", "OnEditableTextCommited");

	Params::TedSettingsSlot_Slider_OnEditableTextCommited Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSettingsSlot_Slider.OnSlideMouseCaptureEnd
// (Final, Native, Protected)

void UTedSettingsSlot_Slider::OnSlideMouseCaptureEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsSlot_Slider", "OnSlideMouseCaptureEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSettingsSlot_Slider.OnSlideValueChange
// (Final, Native, Protected)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSettingsSlot_Slider::OnSlideValueChange(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsSlot_Slider", "OnSlideValueChange");

	Params::TedSettingsSlot_Slider_OnSlideValueChange Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSettingsSlot_Slider.OnValueChange
// (Final, Native, Protected)
// Parameters:
// const float                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSettingsSlot_Slider::OnValueChange(const float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsSlot_Slider", "OnValueChange");

	Params::TedSettingsSlot_Slider_OnValueChange Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAbilityTask_PlayMontageAndWaitForEvent.PlayMontageAndWaitForEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                     MontageToPlay_0                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     EventTags_0                                            (Parm, NativeAccessSpecifierPublic)
// float                                   Rate_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             StartSection_0                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopWhenAbilityEnds_0                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AnimRootMotionTranslationScale_0                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedAbilityTask_PlayMontageAndWaitForEvent*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedAbilityTask_PlayMontageAndWaitForEvent* UTedAbilityTask_PlayMontageAndWaitForEvent::PlayMontageAndWaitForEvent(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class UAnimMontage* MontageToPlay_0, const struct FGameplayTagContainer& EventTags_0, float Rate_0, class FName StartSection_0, bool bStopWhenAbilityEnds_0, float AnimRootMotionTranslationScale_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedAbilityTask_PlayMontageAndWaitForEvent", "PlayMontageAndWaitForEvent");

	Params::TedAbilityTask_PlayMontageAndWaitForEvent_PlayMontageAndWaitForEvent Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.MontageToPlay_0 = MontageToPlay_0;
	Parms.EventTags_0 = std::move(EventTags_0);
	Parms.Rate_0 = Rate_0;
	Parms.StartSection_0 = StartSection_0;
	Parms.bStopWhenAbilityEnds_0 = bStopWhenAbilityEnds_0;
	Parms.AnimRootMotionTranslationScale_0 = AnimRootMotionTranslationScale_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSkirmishCreationScreen.CloseMapSelector
// (Final, Native, Protected, BlueprintCallable)

void UTedSkirmishCreationScreen::CloseMapSelector()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkirmishCreationScreen", "CloseMapSelector");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSkirmishCreationScreen.HandlePopupButtonClick_Ok
// (Final, Native, Protected)
// Parameters:
// const int32                             InButtonIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSkirmishCreationScreen::HandlePopupButtonClick_Ok(const int32 InButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkirmishCreationScreen", "HandlePopupButtonClick_Ok");

	Params::TedSkirmishCreationScreen_HandlePopupButtonClick_Ok Parms{};

	Parms.InButtonIndex = InButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSkirmishCreationScreen.Hide
// (Final, Native, Public, BlueprintCallable)

void UTedSkirmishCreationScreen::Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkirmishCreationScreen", "Hide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSkirmishCreationScreen.K2_CloseMapSelector
// (Event, Protected, BlueprintEvent)

void UTedSkirmishCreationScreen::K2_CloseMapSelector()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkirmishCreationScreen", "K2_CloseMapSelector");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedSkirmishCreationScreen.K2_OpenMapSelector
// (Event, Protected, BlueprintEvent)

void UTedSkirmishCreationScreen::K2_OpenMapSelector()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkirmishCreationScreen", "K2_OpenMapSelector");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedSkirmishCreationScreen.K2_SelectMap
// (Event, Protected, BlueprintEvent)

void UTedSkirmishCreationScreen::K2_SelectMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkirmishCreationScreen", "K2_SelectMap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedSkirmishCreationScreen.K2_SetMapSelectorFilter
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FInt32Range&               InRange                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSkirmishCreationScreen::K2_SetMapSelectorFilter(const struct FInt32Range& InRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkirmishCreationScreen", "K2_SetMapSelectorFilter");

	Params::TedSkirmishCreationScreen_K2_SetMapSelectorFilter Parms{};

	Parms.InRange = std::move(InRange);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedSkirmishCreationScreen.OnFrameButtonTriggerSlotAction
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSkirmishCreationScreen::OnFrameButtonTriggerSlotAction(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkirmishCreationScreen", "OnFrameButtonTriggerSlotAction");

	Params::TedSkirmishCreationScreen_OnFrameButtonTriggerSlotAction Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSkirmishCreationScreen.OnPlayerSettingChange
// (Final, Native, Protected)
// Parameters:
// class UTedGameCreationPlayersPanel*     InPlayersPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InContentSlotIndex                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedSessionMemberSettingKey       InKey                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InNewValue                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InOldValue                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSkirmishCreationScreen::OnPlayerSettingChange(class UTedGameCreationPlayersPanel* InPlayersPanel, const int32 InContentSlotIndex, const ETedSessionMemberSettingKey InKey, const int32 InNewValue, const int32 InOldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkirmishCreationScreen", "OnPlayerSettingChange");

	Params::TedSkirmishCreationScreen_OnPlayerSettingChange Parms{};

	Parms.InPlayersPanel = InPlayersPanel;
	Parms.InContentSlotIndex = InContentSlotIndex;
	Parms.InKey = InKey;
	Parms.InNewValue = InNewValue;
	Parms.InOldValue = InOldValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSkirmishCreationScreen.OnRequestAddBotPlayer
// (Final, Native, Protected)
// Parameters:
// class UTedGameCreationPlayersPanel*     InPlayersPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSkirmishCreationScreen::OnRequestAddBotPlayer(class UTedGameCreationPlayersPanel* InPlayersPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkirmishCreationScreen", "OnRequestAddBotPlayer");

	Params::TedSkirmishCreationScreen_OnRequestAddBotPlayer Parms{};

	Parms.InPlayersPanel = InPlayersPanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSkirmishCreationScreen.OnRequestAddHumanPlayer
// (Final, Native, Protected)
// Parameters:
// class UTedGameCreationPlayersPanel*     InPlayersPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSkirmishCreationScreen::OnRequestAddHumanPlayer(class UTedGameCreationPlayersPanel* InPlayersPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkirmishCreationScreen", "OnRequestAddHumanPlayer");

	Params::TedSkirmishCreationScreen_OnRequestAddHumanPlayer Parms{};

	Parms.InPlayersPanel = InPlayersPanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSkirmishCreationScreen.OnRequestRemovePlayer
// (Final, Native, Protected)
// Parameters:
// class UTedGameCreationPlayersPanel*     InPlayersPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InContentSlotIndex                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSkirmishCreationScreen::OnRequestRemovePlayer(class UTedGameCreationPlayersPanel* InPlayersPanel, const int32 InContentSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkirmishCreationScreen", "OnRequestRemovePlayer");

	Params::TedSkirmishCreationScreen_OnRequestRemovePlayer Parms{};

	Parms.InPlayersPanel = InPlayersPanel;
	Parms.InContentSlotIndex = InContentSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSkirmishCreationScreen.OpenLoadGameMenu
// (Final, Native, Protected, BlueprintCallable)

void UTedSkirmishCreationScreen::OpenLoadGameMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkirmishCreationScreen", "OpenLoadGameMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSkirmishCreationScreen.OpenMapSelector
// (Final, Native, Protected, BlueprintCallable)

void UTedSkirmishCreationScreen::OpenMapSelector()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkirmishCreationScreen", "OpenMapSelector");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSkirmishCreationScreen.RefreshAnySkirmishSavesAvailable
// (Final, Native, Protected)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSkirmishCreationScreen::RefreshAnySkirmishSavesAvailable(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkirmishCreationScreen", "RefreshAnySkirmishSavesAvailable");

	Params::TedSkirmishCreationScreen_RefreshAnySkirmishSavesAvailable Parms{};

	Parms.bSuccess = bSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSkirmishCreationScreen.SelectMap
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const class UTedMapInfo*                InMap                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSkirmishCreationScreen::SelectMap(const class UTedMapInfo* InMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkirmishCreationScreen", "SelectMap");

	Params::TedSkirmishCreationScreen_SelectMap Parms{};

	Parms.InMap = InMap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSkirmishCreationScreen.Show
// (Final, Native, Public, BlueprintCallable)

void UTedSkirmishCreationScreen::Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkirmishCreationScreen", "Show");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSkirmishCreationScreen.GetCurrentPlayersNum
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedSkirmishCreationScreen::GetCurrentPlayersNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkirmishCreationScreen", "GetCurrentPlayersNum");

	Params::TedSkirmishCreationScreen_GetCurrentPlayersNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSkirmishCreationScreen.GetGameSettings
// (Final, Native, Protected, BlueprintCallable, Const)
// Parameters:
// const struct FTedGameCreationSettings   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FTedGameCreationSettings UTedSkirmishCreationScreen::GetGameSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkirmishCreationScreen", "GetGameSettings");

	Params::TedSkirmishCreationScreen_GetGameSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSkirmishCreationScreen.GetGameSettingValue
// (Final, Native, Protected, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const ETedSessionSettingKey             InKey                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedSkirmishCreationScreen::GetGameSettingValue(const ETedSessionSettingKey InKey, int32* OutValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkirmishCreationScreen", "GetGameSettingValue");

	Params::TedSkirmishCreationScreen_GetGameSettingValue Parms{};

	Parms.InKey = InKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutValue != nullptr)
		*OutValue = Parms.OutValue;

	return Parms.ReturnValue;
}


// Function Tempest.TedSkirmishCreationScreen.GetMaxPlayersInGame
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedSkirmishCreationScreen::GetMaxPlayersInGame() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkirmishCreationScreen", "GetMaxPlayersInGame");

	Params::TedSkirmishCreationScreen_GetMaxPlayersInGame Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSkirmishCreationScreen.GetMaxPlayersOnCurrentMap
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedSkirmishCreationScreen::GetMaxPlayersOnCurrentMap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkirmishCreationScreen", "GetMaxPlayersOnCurrentMap");

	Params::TedSkirmishCreationScreen_GetMaxPlayersOnCurrentMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSkirmishCreationScreen.GetSelectedMap
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedMapInfo*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedMapInfo* UTedSkirmishCreationScreen::GetSelectedMap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkirmishCreationScreen", "GetSelectedMap");

	Params::TedSkirmishCreationScreen_GetSelectedMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSkirmishCreationScreen.HasGameSetting
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const ETedSessionSettingKey             InKey                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedSkirmishCreationScreen::HasGameSetting(const ETedSessionSettingKey InKey) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkirmishCreationScreen", "HasGameSetting");

	Params::TedSkirmishCreationScreen_HasGameSetting Parms{};

	Parms.InKey = InKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSkirmishCreationScreen.IsSelectingMap
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedSkirmishCreationScreen::IsSelectingMap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkirmishCreationScreen", "IsSelectingMap");

	Params::TedSkirmishCreationScreen_IsSelectingMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSkirmishCreationScreen.K2_GetDefaultMap
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// const class UTedMapInfo*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedMapInfo* UTedSkirmishCreationScreen::K2_GetDefaultMap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkirmishCreationScreen", "K2_GetDefaultMap");

	Params::TedSkirmishCreationScreen_K2_GetDefaultMap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Tempest.TedAbility_ApplyAoEGE.ApplyGEToPawnsInRange
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   EffectLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             EffectRadius                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedAbility_ApplyAoEGE::ApplyGEToPawnsInRange(const struct FVector& EffectLocation, const float EffectRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbility_ApplyAoEGE", "ApplyGEToPawnsInRange");

	Params::TedAbility_ApplyAoEGE_ApplyGEToPawnsInRange Parms{};

	Parms.EffectLocation = std::move(EffectLocation);
	Parms.EffectRadius = EffectRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAbility_Montage.HandleMontageNotifyBegin
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FName                             NotifyName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FBranchingPointNotifyPayload&BranchingPointPayload                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTedAbility_Montage::HandleMontageNotifyBegin(class FName NotifyName, const struct FBranchingPointNotifyPayload& BranchingPointPayload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbility_Montage", "HandleMontageNotifyBegin");

	Params::TedAbility_Montage_HandleMontageNotifyBegin Parms{};

	Parms.NotifyName = NotifyName;
	Parms.BranchingPointPayload = std::move(BranchingPointPayload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAbility_Montage.HandleMontageNotifyEnd
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FName                             NotifyName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FBranchingPointNotifyPayload&BranchingPointPayload                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTedAbility_Montage::HandleMontageNotifyEnd(class FName NotifyName, const struct FBranchingPointNotifyPayload& BranchingPointPayload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbility_Montage", "HandleMontageNotifyEnd");

	Params::TedAbility_Montage_HandleMontageNotifyEnd Parms{};

	Parms.NotifyName = NotifyName;
	Parms.BranchingPointPayload = std::move(BranchingPointPayload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAbility_Montage.OnMontageNotifyBegin
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedAbility_Montage::OnMontageNotifyBegin(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbility_Montage", "OnMontageNotifyBegin");

	Params::TedAbility_Montage_OnMontageNotifyBegin Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedAbility_Montage.OnMontageNotifyEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedAbility_Montage::OnMontageNotifyEnd(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbility_Montage", "OnMontageNotifyEnd");

	Params::TedAbility_Montage_OnMontageNotifyEnd Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedAbility_Montage.GetMontageData
// (Native, Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const struct FGameplayAbilityActorInfo& ActorInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FAbilityMontageData              ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAbilityMontageData UTedAbility_Montage::GetMontageData(const struct FGameplayAbilityActorInfo& ActorInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbility_Montage", "GetMontageData");

	Params::TedAbility_Montage_GetMontageData Parms{};

	Parms.ActorInfo = std::move(ActorInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAbility_Montage.K2_GetMontageData
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAbilityMontageData              ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAbilityMontageData UTedAbility_Montage::K2_GetMontageData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbility_Montage", "K2_GetMontageData");

	Params::TedAbility_Montage_K2_GetMontageData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWorkersWidget.OnCollapseButtonPanelActivateSlotState
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedWorkersWidget::OnCollapseButtonPanelActivateSlotState(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWorkersWidget", "OnCollapseButtonPanelActivateSlotState");

	Params::TedWorkersWidget_OnCollapseButtonPanelActivateSlotState Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedWorkersWidget.OnCollapseButtonPanelTriggerSlotAction
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedWorkersWidget::OnCollapseButtonPanelTriggerSlotAction(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWorkersWidget", "OnCollapseButtonPanelTriggerSlotAction");

	Params::TedWorkersWidget_OnCollapseButtonPanelTriggerSlotAction Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedWorkersWidget.OnWorkersPanelContentChange
// (Native, Protected)
// Parameters:
// class UTedContentPanelDynamic*          InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedWorkersWidget::OnWorkersPanelContentChange(class UTedContentPanelDynamic* InContentPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWorkersWidget", "OnWorkersPanelContentChange");

	Params::TedWorkersWidget_OnWorkersPanelContentChange Parms{};

	Parms.InContentPanel = InContentPanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedWorkersWidget.OnWorkersPanelTriggerSlotAction
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedWorkersWidget::OnWorkersPanelTriggerSlotAction(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWorkersWidget", "OnWorkersPanelTriggerSlotAction");

	Params::TedWorkersWidget_OnWorkersPanelTriggerSlotAction Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedWorkersWidget.RefreshPawns
// (Final, Native, Public, BlueprintCallable)

void UTedWorkersWidget::RefreshPawns()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWorkersWidget", "RefreshPawns");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedWorkersWidget.SetExpansion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bInExpanded                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedWorkersWidget::SetExpansion(const bool bInExpanded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWorkersWidget", "SetExpansion");

	Params::TedWorkersWidget_SetExpansion Parms{};

	Parms.bInExpanded = bInExpanded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedWorkersWidget.ShowResourcesAnimationStarted
// (Final, Native, Public, BlueprintCallable)

void UTedWorkersWidget::ShowResourcesAnimationStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWorkersWidget", "ShowResourcesAnimationStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedWorkersWidget.GetWorkersCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedWorkersWidget::GetWorkersCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWorkersWidget", "GetWorkersCount");

	Params::TedWorkersWidget_GetWorkersCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWorkersWidget.IsExpanded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedWorkersWidget::IsExpanded() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWorkersWidget", "IsExpanded");

	Params::TedWorkersWidget_IsExpanded Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAbility_Attack_RiotTrooper.PerformConeAttack
// (Final, Native, Protected, BlueprintCallable)

void UTedAbility_Attack_RiotTrooper::PerformConeAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbility_Attack_RiotTrooper", "PerformConeAttack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAbility_Attack_SpecialistBureau.PerformConeAttack
// (Final, Native, Protected, BlueprintCallable)

void UTedAbility_Attack_SpecialistBureau::PerformConeAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbility_Attack_SpecialistBureau", "PerformConeAttack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedResizableBox.GetBoxPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UTedResizableBox::GetBoxPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedResizableBox", "GetBoxPosition");

	Params::TedResizableBox_GetBoxPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedResizableBox.GetBoxSize
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UTedResizableBox::GetBoxSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedResizableBox", "GetBoxSize");

	Params::TedResizableBox_GetBoxSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedResizableBox.GetInnerContentDesiredSize
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UTedResizableBox::GetInnerContentDesiredSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedResizableBox", "GetInnerContentDesiredSize");

	Params::TedResizableBox_GetInnerContentDesiredSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedResizableBox.SetBoxPosition
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector2D&                 NewPosition                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedResizableBox::SetBoxPosition(const struct FVector2D& NewPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedResizableBox", "SetBoxPosition");

	Params::TedResizableBox_SetBoxPosition Parms{};

	Parms.NewPosition = std::move(NewPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedResizableBox.SetBoxSize
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector2D&                 NewSize                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedResizableBox::SetBoxSize(const struct FVector2D& NewSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedResizableBox", "SetBoxSize");

	Params::TedResizableBox_SetBoxSize Parms{};

	Parms.NewSize = std::move(NewSize);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedResizableBox.SetBoxToInnerContentDesiredSize
// (Final, Native, Public, BlueprintCallable)

void UTedResizableBox::SetBoxToInnerContentDesiredSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedResizableBox", "SetBoxToInnerContentDesiredSize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedResizableBox.SetResizingEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bEnabled                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedResizableBox::SetResizingEnabled(const bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedResizableBox", "SetResizingEnabled");

	Params::TedResizableBox_SetResizingEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedResizableBox.GetDragger
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedResizableBoxControl*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedResizableBoxControl* UTedResizableBox::GetDragger() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedResizableBox", "GetDragger");

	Params::TedResizableBox_GetDragger Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedResizableBox.GetResizeIndicator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedResizableBoxControl*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedResizableBoxControl* UTedResizableBox::GetResizeIndicator() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedResizableBox", "GetResizeIndicator");

	Params::TedResizableBox_GetResizeIndicator Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedChatPartyWidget.GetChatWindow
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UTedChatWindow*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedChatWindow* UTedChatPartyWidget::GetChatWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyWidget", "GetChatWindow");

	Params::TedChatPartyWidget_GetChatWindow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedChatPartyWidget.K2_OnGameViewportResized
// (Event, Protected, BlueprintEvent)

void UTedChatPartyWidget::K2_OnGameViewportResized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyWidget", "K2_OnGameViewportResized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedChatPartyWidget.MoveToStartPosition
// (Final, Native, Public, BlueprintCallable)

void UTedChatPartyWidget::MoveToStartPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyWidget", "MoveToStartPosition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedChatPartyWidget.OnChatMessageCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const class FText&                      TextCommitted                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             CommitMethod                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedChatPartyWidget::OnChatMessageCommitted(const class FText& TextCommitted, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyWidget", "OnChatMessageCommitted");

	Params::TedChatPartyWidget_OnChatMessageCommitted Parms{};

	Parms.TextCommitted = std::move(TextCommitted);
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedChatPartyWidget.OnChatMessageReceived
// (Native, Protected)
// Parameters:
// const struct FTedChatMessage&           Message                                                (Parm, NativeAccessSpecifierPublic)
// const int32                             position                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedChatPartyWidget::OnChatMessageReceived(const struct FTedChatMessage& Message, const int32 position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyWidget", "OnChatMessageReceived");

	Params::TedChatPartyWidget_OnChatMessageReceived Parms{};

	Parms.Message = std::move(Message);
	Parms.position = position;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedChatPartyWidget.OnChatMessageRemoved
// (Native, Protected)
// Parameters:
// const struct FTedChatMessage&           Message                                                (Parm, NativeAccessSpecifierPublic)
// const int32                             position                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedChatPartyWidget::OnChatMessageRemoved(const struct FTedChatMessage& Message, const int32 position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyWidget", "OnChatMessageRemoved");

	Params::TedChatPartyWidget_OnChatMessageRemoved Parms{};

	Parms.Message = std::move(Message);
	Parms.position = position;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedChatPartyWidget.ToggleChatDestination_TeamAll
// (Final, Native, Public, BlueprintCallable)

void UTedChatPartyWidget::ToggleChatDestination_TeamAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyWidget", "ToggleChatDestination_TeamAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedChatPartyWidget.GetHeader
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UTedChatPartyWidget::GetHeader() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyWidget", "GetHeader");

	Params::TedChatPartyWidget_GetHeader Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedChatPartyWidget_InGame.GetHeaderButtonsPanel
// (Event, Public, BlueprintEvent)
// Parameters:
// class UTedContentPanelInstanced*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedContentPanelInstanced* UTedChatPartyWidget_InGame::GetHeaderButtonsPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyWidget_InGame", "GetHeaderButtonsPanel");

	Params::TedChatPartyWidget_InGame_GetHeaderButtonsPanel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Tempest.TedChatPartyWidget_InGame.OnEnterPressed
// (Final, Native, Protected)

void UTedChatPartyWidget_InGame::OnEnterPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyWidget_InGame", "OnEnterPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedChatPartyWidget_InGame.OnHeaderButtonSlotAction
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedChatPartyWidget_InGame::OnHeaderButtonSlotAction(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyWidget_InGame", "OnHeaderButtonSlotAction");

	Params::TedChatPartyWidget_InGame_OnHeaderButtonSlotAction Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedChatPartyWidget_InGame.OnHeaderButtonStateActivated
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedChatPartyWidget_InGame::OnHeaderButtonStateActivated(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyWidget_InGame", "OnHeaderButtonStateActivated");

	Params::TedChatPartyWidget_InGame_OnHeaderButtonStateActivated Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAbility_CaptureStructure.CaptureStructure
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class ATedStructureBase*                Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedAbility_CaptureStructure::CaptureStructure(class ATedStructureBase* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbility_CaptureStructure", "CaptureStructure");

	Params::TedAbility_CaptureStructure_CaptureStructure Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAbility_ConsumeGarrisonedUnitBuff.OnEffectApplied
// (Event, Protected, BlueprintEvent)

void UTedAbility_ConsumeGarrisonedUnitBuff::OnEffectApplied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbility_ConsumeGarrisonedUnitBuff", "OnEffectApplied");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedMenuScreenPage.OnActivateButtonState_Handler
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMenuScreenPage::OnActivateButtonState_Handler(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenPage", "OnActivateButtonState_Handler");

	Params::TedMenuScreenPage_OnActivateButtonState_Handler Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMenuScreenPage.OnActivateTabState_Handler
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMenuScreenPage::OnActivateTabState_Handler(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenPage", "OnActivateTabState_Handler");

	Params::TedMenuScreenPage_OnActivateTabState_Handler Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMenuScreenPage.OnClose
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// const class UObject*                    InContext                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInInstant                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMenuScreenPage::OnClose(const class UObject* InContext, const bool bInInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenPage", "OnClose");

	Params::TedMenuScreenPage_OnClose Parms{};

	Parms.InContext = InContext;
	Parms.bInInstant = bInInstant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMenuScreenPage.OnInnerPanelContentChange_Handler
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelDynamic*          InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMenuScreenPage::OnInnerPanelContentChange_Handler(class UTedContentPanelDynamic* InContentPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenPage", "OnInnerPanelContentChange_Handler");

	Params::TedMenuScreenPage_OnInnerPanelContentChange_Handler Parms{};

	Parms.InContentPanel = InContentPanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMenuScreenPage.OnOpen
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// const class UObject*                    InContext                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInInstant                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMenuScreenPage::OnOpen(const class UObject* InContext, const bool bInInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenPage", "OnOpen");

	Params::TedMenuScreenPage_OnOpen Parms{};

	Parms.InContext = InContext;
	Parms.bInInstant = bInInstant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMenuScreenPage.OnRefreshBackground
// (Event, Public, BlueprintEvent)
// Parameters:
// const class USlateBrushAsset*           InBackground                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMenuScreenPage::OnRefreshBackground(const class USlateBrushAsset* InBackground)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenPage", "OnRefreshBackground");

	Params::TedMenuScreenPage_OnRefreshBackground Parms{};

	Parms.InBackground = InBackground;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedMenuScreenPage.OnRefreshTitles
// (Event, Protected, BlueprintEvent)

void UTedMenuScreenPage::OnRefreshTitles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenPage", "OnRefreshTitles");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedMenuScreenPage.OnTriggetButtonAction_Handler
// (Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMenuScreenPage::OnTriggetButtonAction_Handler(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenPage", "OnTriggetButtonAction_Handler");

	Params::TedMenuScreenPage_OnTriggetButtonAction_Handler Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMenuScreenPage.OnTriggetTabAction_Handler
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMenuScreenPage::OnTriggetTabAction_Handler(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenPage", "OnTriggetTabAction_Handler");

	Params::TedMenuScreenPage_OnTriggetTabAction_Handler Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMenuScreenPage.SetBackground
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class USlateBrushAsset*           InBackground                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMenuScreenPage::SetBackground(const class USlateBrushAsset* InBackground)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenPage", "SetBackground");

	Params::TedMenuScreenPage_SetBackground Parms{};

	Parms.InBackground = InBackground;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMenuScreenPage.SetButtons
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class UTedUI_InstancedContent*>&InButtons                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedMenuScreenPage::SetButtons(const TArray<class UTedUI_InstancedContent*>& InButtons)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenPage", "SetButtons");

	Params::TedMenuScreenPage_SetButtons Parms{};

	Parms.InButtons = std::move(InButtons);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMenuScreenPage.SetTabs
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class UTedUI_InstancedContent*>&InTabs                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedMenuScreenPage::SetTabs(const TArray<class UTedUI_InstancedContent*>& InTabs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenPage", "SetTabs");

	Params::TedMenuScreenPage_SetTabs Parms{};

	Parms.InTabs = std::move(InTabs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMenuScreenPage.SetTitle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FText&                      InTitle                                                (ConstParm, Parm, NativeAccessSpecifierPublic)

void UTedMenuScreenPage::SetTitle(const class FText& InTitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenPage", "SetTitle");

	Params::TedMenuScreenPage_SetTitle Parms{};

	Parms.InTitle = std::move(InTitle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMenuScreenPage.SetTitles
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FText>&              InTitles                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedMenuScreenPage::SetTitles(const TArray<class FText>& InTitles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenPage", "SetTitles");

	Params::TedMenuScreenPage_SetTitles Parms{};

	Parms.InTitles = std::move(InTitles);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMenuScreenPage.GetBackground
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const class USlateBrushAsset*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class USlateBrushAsset* UTedMenuScreenPage::GetBackground() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenPage", "GetBackground");

	Params::TedMenuScreenPage_GetBackground Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMenuScreenPage.GetButtonsPanel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedContentPanelInstanced*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedContentPanelInstanced* UTedMenuScreenPage::GetButtonsPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenPage", "GetButtonsPanel");

	Params::TedMenuScreenPage_GetButtonsPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMenuScreenPage.GetTabsPanel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedContentPanelInstanced*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedContentPanelInstanced* UTedMenuScreenPage::GetTabsPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenPage", "GetTabsPanel");

	Params::TedMenuScreenPage_GetTabsPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMenuScreenPage.GetTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InIndex                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedMenuScreenPage::GetTitle(const int32 InIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenPage", "GetTitle");

	Params::TedMenuScreenPage_GetTitle Parms{};

	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMenuScreenPage.GetTitles
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const TArray<class FText>               ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class FText> UTedMenuScreenPage::GetTitles() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMenuScreenPage", "GetTitles");

	Params::TedMenuScreenPage_GetTitles Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAbility_DismantleStructure.SpawnUnit
// (Native, Protected, BlueprintCallable)
// Parameters:
// const bool                              bFinishSpawningManually                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedUnitBase*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedUnitBase* UTedAbility_DismantleStructure::SpawnUnit(const bool bFinishSpawningManually)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbility_DismantleStructure", "SpawnUnit");

	Params::TedAbility_DismantleStructure_SpawnUnit Parms{};

	Parms.bFinishSpawningManually = bFinishSpawningManually;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedChatSubsystem.AddLocalMarketingMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedChatSubsystem::AddLocalMarketingMessage(const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatSubsystem", "AddLocalMarketingMessage");

	Params::TedChatSubsystem_AddLocalMarketingMessage Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedChatSubsystem.AddLocalMessage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const EChatMessageSender                Sender                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      SenderName                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedChatSubsystem::AddLocalMessage(const EChatMessageSender Sender, const class FText& SenderName, const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatSubsystem", "AddLocalMessage");

	Params::TedChatSubsystem_AddLocalMessage Parms{};

	Parms.Sender = Sender;
	Parms.SenderName = std::move(SenderName);
	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedChatSubsystem.AddLocalSystemMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedChatSubsystem::AddLocalSystemMessage(const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatSubsystem", "AddLocalSystemMessage");

	Params::TedChatSubsystem_AddLocalSystemMessage Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedChatSubsystem.GetMessageHistory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FTedChatMessage>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FTedChatMessage> UTedChatSubsystem::GetMessageHistory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatSubsystem", "GetMessageHistory");

	Params::TedChatSubsystem_GetMessageHistory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedChatSubsystem.SendMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const EChatMessageSender                Sender                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InMessage                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedChatSubsystem::SendMessage(const EChatMessageSender Sender, const class FString& InMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatSubsystem", "SendMessage");

	Params::TedChatSubsystem_SendMessage Parms{};

	Parms.Sender = Sender;
	Parms.InMessage = std::move(InMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedChatSubsystem.SendTeamMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InMessage                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedChatSubsystem::SendTeamMessage(const class FString& InMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatSubsystem", "SendTeamMessage");

	Params::TedChatSubsystem_SendTeamMessage Parms{};

	Parms.InMessage = std::move(InMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedChatSubsystem.SendWhisper
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    DestinationPlayerId                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InMessage                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedChatSubsystem::SendWhisper(const class FString& DestinationPlayerId, const class FString& InMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatSubsystem", "SendWhisper");

	Params::TedChatSubsystem_SendWhisper Parms{};

	Parms.DestinationPlayerId = std::move(DestinationPlayerId);
	Parms.InMessage = std::move(InMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedChatSubsystem.SetSenderType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EChatMessageSender                      InSenderType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedChatSubsystem::SetSenderType(EChatMessageSender InSenderType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatSubsystem", "SetSenderType");

	Params::TedChatSubsystem_SetSenderType Parms{};

	Parms.InSenderType = InSenderType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.UIDataProvider.GetCreditsUIData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FUIData_NameAndDescription ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FUIData_NameAndDescription UUIDataProvider::GetCreditsUIData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIDataProvider", "GetCreditsUIData");

	Params::UIDataProvider_GetCreditsUIData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.UIDataProvider.GetIntelUIData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FUIData_NameAndDescription ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FUIData_NameAndDescription UUIDataProvider::GetIntelUIData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIDataProvider", "GetIntelUIData");

	Params::UIDataProvider_GetIntelUIData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.UIDataProvider.GetPlayerDataStatUIData
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const ETedPlayerDataStat                InStat                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUIData_NameAndDescription*      Out                                                    (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUIDataProvider::GetPlayerDataStatUIData(const ETedPlayerDataStat InStat, struct FUIData_NameAndDescription* Out) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIDataProvider", "GetPlayerDataStatUIData");

	Params::UIDataProvider_GetPlayerDataStatUIData Parms{};

	Parms.InStat = InStat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out != nullptr)
		*Out = std::move(Parms.Out);

	return Parms.ReturnValue;
}


// Function Tempest.UIDataProvider.GetPowerConsumptionUIData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FUIData_NameAndDescription ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FUIData_NameAndDescription UUIDataProvider::GetPowerConsumptionUIData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIDataProvider", "GetPowerConsumptionUIData");

	Params::UIDataProvider_GetPowerConsumptionUIData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.UIDataProvider.GetPowerUIData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FUIData_NameAndDescription ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FUIData_NameAndDescription UUIDataProvider::GetPowerUIData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIDataProvider", "GetPowerUIData");

	Params::UIDataProvider_GetPowerUIData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAbility_DumpResource_Harvester.OnResourceDumpFinished
// (Event, Protected, BlueprintEvent)

void UTedAbility_DumpResource_Harvester::OnResourceDumpFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbility_DumpResource_Harvester", "OnResourceDumpFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedAbility_DumpResource_Harvester.OnResourceDumpStart
// (Event, Protected, BlueprintEvent)

void UTedAbility_DumpResource_Harvester::OnResourceDumpStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbility_DumpResource_Harvester", "OnResourceDumpStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedPlayerCommand.GetCallInTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedPlayerCommand::GetCallInTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerCommand", "GetCallInTime");

	Params::TedPlayerCommand_GetCallInTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerCommand.HasCallInTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerCommand::HasCallInTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerCommand", "HasCallInTime");

	Params::TedPlayerCommand_HasCallInTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAbility_DumpResource_Refinery.OnDumpFinished
// (Event, Protected, BlueprintEvent)

void UTedAbility_DumpResource_Refinery::OnDumpFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbility_DumpResource_Refinery", "OnDumpFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedCommandCompoundMapScreenComponent.NotifyOnTrigger
// (Final, Native, Protected)

void UTedCommandCompoundMapScreenComponent::NotifyOnTrigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreenComponent", "NotifyOnTrigger");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundMapScreenComponent.OnMapScreenClosed
// (Event, Protected, BlueprintEvent)
// Parameters:
// const class UTedCommandCompoundMapScreen*InMapScreen                                            (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UObject*                    InContext                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundMapScreenComponent::OnMapScreenClosed(const class UTedCommandCompoundMapScreen* InMapScreen, const class UObject* InContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreenComponent", "OnMapScreenClosed");

	Params::TedCommandCompoundMapScreenComponent_OnMapScreenClosed Parms{};

	Parms.InMapScreen = InMapScreen;
	Parms.InContext = InContext;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedCommandCompoundMapScreenComponent.OnMapScreenOpened
// (Event, Protected, BlueprintEvent)
// Parameters:
// const class UTedCommandCompoundMapScreen*InMapScreen                                            (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UObject*                    InContext                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundMapScreenComponent::OnMapScreenOpened(const class UTedCommandCompoundMapScreen* InMapScreen, const class UObject* InContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreenComponent", "OnMapScreenOpened");

	Params::TedCommandCompoundMapScreenComponent_OnMapScreenOpened Parms{};

	Parms.InMapScreen = InMapScreen;
	Parms.InContext = InContext;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedCommandCompoundMapScreenComponent.OnSetVisibilityForStage
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const class UTedCommandCompoundMapScreen*InMapScreen                                            (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedCommandCompoundMapScreenVisibilityActionInAction                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedCommandCompoundMapScreenStage InStage                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedCommandCompoundMapScreenStageSetup&InStageSetup                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedCommandCompoundMapScreenComponent::OnSetVisibilityForStage(const class UTedCommandCompoundMapScreen* InMapScreen, const ETedCommandCompoundMapScreenVisibilityAction InAction, const ETedCommandCompoundMapScreenStage InStage, const struct FTedCommandCompoundMapScreenStageSetup& InStageSetup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreenComponent", "OnSetVisibilityForStage");

	Params::TedCommandCompoundMapScreenComponent_OnSetVisibilityForStage Parms{};

	Parms.InMapScreen = InMapScreen;
	Parms.InAction = InAction;
	Parms.InStage = InStage;
	Parms.InStageSetup = std::move(InStageSetup);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedCommandCompoundMapScreenComponent.GetAnimDebugString
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWidgetAnimation*                 InAnimation                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTedCommandCompoundMapScreenComponent::GetAnimDebugString(class UWidgetAnimation* InAnimation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreenComponent", "GetAnimDebugString");

	Params::TedCommandCompoundMapScreenComponent_GetAnimDebugString Parms{};

	Parms.InAnimation = InAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundMapScreenComponent.GetComponentType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedCommandCompoundMapScreenComponent::GetComponentType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreenComponent", "GetComponentType");

	Params::TedCommandCompoundMapScreenComponent_GetComponentType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundMapScreenComponent.OnAppendDebugStrings
// (Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const class FString&                    InPrefix                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>&                  Out                                                    (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedCommandCompoundMapScreenComponent::OnAppendDebugStrings(const class FString& InPrefix, TArray<class FString>& Out) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreenComponent", "OnAppendDebugStrings");

	Params::TedCommandCompoundMapScreenComponent_OnAppendDebugStrings Parms{};

	Parms.InPrefix = std::move(InPrefix);
	Parms.Out = std::move(Out);

	UObject::ProcessEvent(Func, &Parms);

	Out = std::move(Parms.Out);
}


// Function Tempest.TedCommandCompoundMapScreenComponent_Missions.GetRelevantMissionDetailsDataBoxTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTedCommandCompoundMapScreenComponent_Missions::GetRelevantMissionDetailsDataBoxTexture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreenComponent_Missions", "GetRelevantMissionDetailsDataBoxTexture");

	Params::TedCommandCompoundMapScreenComponent_Missions_GetRelevantMissionDetailsDataBoxTexture Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundMapScreenComponent_Missions.GetRelevantMissionDetailsTextBoxTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTedCommandCompoundMapScreenComponent_Missions::GetRelevantMissionDetailsTextBoxTexture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreenComponent_Missions", "GetRelevantMissionDetailsTextBoxTexture");

	Params::TedCommandCompoundMapScreenComponent_Missions_GetRelevantMissionDetailsTextBoxTexture Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundMapScreenComponent_Missions.GetRelevantMissionDetailsVO
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USoundBase*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USoundBase* UTedCommandCompoundMapScreenComponent_Missions::GetRelevantMissionDetailsVO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreenComponent_Missions", "GetRelevantMissionDetailsVO");

	Params::TedCommandCompoundMapScreenComponent_Missions_GetRelevantMissionDetailsVO Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundMapScreenComponent_Missions.GetRelevantMissionDetailsText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedCommandCompoundMapScreenComponent_Missions::GetRelevantMissionDetailsText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreenComponent_Missions", "GetRelevantMissionDetailsText");

	Params::TedCommandCompoundMapScreenComponent_Missions_GetRelevantMissionDetailsText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundMapScreenComponent_Missions.GetRelevantMissionMovie
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const ETedCommandCompoundMapScreenMovieTypeInType                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UFileMediaSource*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UFileMediaSource* UTedCommandCompoundMapScreenComponent_Missions::GetRelevantMissionMovie(const ETedCommandCompoundMapScreenMovieType InType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreenComponent_Missions", "GetRelevantMissionMovie");

	Params::TedCommandCompoundMapScreenComponent_Missions_GetRelevantMissionMovie Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAbility_HarvestResource_Harvester.OnHarvestingFinish
// (Event, Protected, BlueprintEvent)

void UTedAbility_HarvestResource_Harvester::OnHarvestingFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbility_HarvestResource_Harvester", "OnHarvestingFinish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedAbility_HarvestResource_Harvester.OnHarvestingStart
// (Event, Protected, BlueprintEvent)

void UTedAbility_HarvestResource_Harvester::OnHarvestingStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbility_HarvestResource_Harvester", "OnHarvestingStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedCommandCompoundDialoguePanel.GetDialogueReadState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ETedContentSlotState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedContentSlotState UTedCommandCompoundDialoguePanel::GetDialogueReadState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedCommandCompoundDialoguePanel", "GetDialogueReadState");

	Params::TedCommandCompoundDialoguePanel_GetDialogueReadState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundDialoguePanel.PlayIntroResponse
// (Final, Native, Protected, BlueprintCallable)

void UTedCommandCompoundDialoguePanel::PlayIntroResponse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundDialoguePanel", "PlayIntroResponse");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundDialoguePanel.SetBriefing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UTedBriefing*               InBriefing                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundDialoguePanel::SetBriefing(const class UTedBriefing* InBriefing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundDialoguePanel", "SetBriefing");

	Params::TedCommandCompoundDialoguePanel_SetBriefing Parms{};

	Parms.InBriefing = InBriefing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundDialoguePanel.SetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FTedDialogueLine>&  InContent                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedCommandCompoundDialoguePanel::SetContent(const TArray<struct FTedDialogueLine>& InContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundDialoguePanel", "SetContent");

	Params::TedCommandCompoundDialoguePanel_SetContent Parms{};

	Parms.InContent = std::move(InContent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundDialoguePanel.GetBriefing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedBriefing*               ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedBriefing* UTedCommandCompoundDialoguePanel::GetBriefing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundDialoguePanel", "GetBriefing");

	Params::TedCommandCompoundDialoguePanel_GetBriefing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundDialoguePanel.GetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const int32                             InContentIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedDialogueLine*                OutContent                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCommandCompoundDialoguePanel::GetContent(const int32 InContentIndex, struct FTedDialogueLine* OutContent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundDialoguePanel", "GetContent");

	Params::TedCommandCompoundDialoguePanel_GetContent Parms{};

	Parms.InContentIndex = InContentIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutContent != nullptr)
		*OutContent = std::move(Parms.OutContent);

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundDialoguePanel.GetContentIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommandCompoundDialoguePanel::GetContentIndex(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundDialoguePanel", "GetContentIndex");

	Params::TedCommandCompoundDialoguePanel_GetContentIndex Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundDialoguePanel.GetPlayingResponseIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommandCompoundDialoguePanel::GetPlayingResponseIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundDialoguePanel", "GetPlayingResponseIndex");

	Params::TedCommandCompoundDialoguePanel_GetPlayingResponseIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundDialoguePanel.GetSlotIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InContentIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommandCompoundDialoguePanel::GetSlotIndex(const int32 InContentIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundDialoguePanel", "GetSlotIndex");

	Params::TedCommandCompoundDialoguePanel_GetSlotIndex Parms{};

	Parms.InContentIndex = InContentIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundDialoguePanel.IsFinishingOption
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InContentIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCommandCompoundDialoguePanel::IsFinishingOption(const int32 InContentIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundDialoguePanel", "IsFinishingOption");

	Params::TedCommandCompoundDialoguePanel_IsFinishingOption Parms{};

	Parms.InContentIndex = InContentIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundDialoguePanel.IsPlayingResponse
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCommandCompoundDialoguePanel::IsPlayingResponse() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundDialoguePanel", "IsPlayingResponse");

	Params::TedCommandCompoundDialoguePanel_IsPlayingResponse Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundDialoguePanel.IsPlayingResponseOfType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const ETedDialogueLineType              InType                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCommandCompoundDialoguePanel::IsPlayingResponseOfType(const ETedDialogueLineType InType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundDialoguePanel", "IsPlayingResponseOfType");

	Params::TedCommandCompoundDialoguePanel_IsPlayingResponseOfType Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAbility_LayMines.LayMinefield
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   InLocation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedAbility_LayMines::LayMinefield(const struct FVector& InLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbility_LayMines", "LayMinefield");

	Params::TedAbility_LayMines_LayMinefield Parms{};

	Parms.InLocation = std::move(InLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.Objective_ListAvailable
// (Final, Exec, Native, Static, Public)
// Parameters:
// const bool                              bLog                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UTedObjectiveObj*>         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UTedObjectiveObj*> UTedCheatManager::Objective_ListAvailable(const bool bLog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedCheatManager", "Objective_ListAvailable");

	Params::TedCheatManager_Objective_ListAvailable Parms{};

	Parms.bLog = bLog;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCheatManager.ActivateAllySpectatorUI
// (Final, Exec, Native, Public)

void UTedCheatManager::ActivateAllySpectatorUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "ActivateAllySpectatorUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.AddCash
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::AddCash(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "AddCash");

	Params::TedCheatManager_AddCash Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.AddCashCap
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::AddCashCap(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "AddCashCap");

	Params::TedCheatManager_AddCashCap Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.AddIntel
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::AddIntel(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "AddIntel");

	Params::TedCheatManager_AddIntel Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.AddPower
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::AddPower(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "AddPower");

	Params::TedCheatManager_AddPower Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.BlockBotUnitDamage
// (Final, Exec, Native, Public)

void UTedCheatManager::BlockBotUnitDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "BlockBotUnitDamage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.BlockPlayerUnitDamage
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::BlockPlayerUnitDamage(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "BlockPlayerUnitDamage");

	Params::TedCheatManager_BlockPlayerUnitDamage Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.ChangeDifficulty
// (Final, Exec, Native, Public)
// Parameters:
// uint8                                   InDifficulty                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::ChangeDifficulty(uint8 InDifficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "ChangeDifficulty");

	Params::TedCheatManager_ChangeDifficulty Parms{};

	Parms.InDifficulty = InDifficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.CloseMenuScreen
// (Final, Exec, Native, Public)

void UTedCheatManager::CloseMenuScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "CloseMenuScreen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.CopyHydraInfoToClipboard
// (Final, Exec, Native, Public)

void UTedCheatManager::CopyHydraInfoToClipboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "CopyHydraInfoToClipboard");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DeactivateSpectatorUI
// (Final, Exec, Native, Public)

void UTedCheatManager::DeactivateSpectatorUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DeactivateSpectatorUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DealDamageToSelectedPawns
// (Final, Exec, Native, Public)
// Parameters:
// float                                   DamageAmount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::DealDamageToSelectedPawns(float DamageAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DealDamageToSelectedPawns");

	Params::TedCheatManager_DealDamageToSelectedPawns Parms{};

	Parms.DamageAmount = DamageAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugAddExperience
// (Final, Exec, Native, Public)
// Parameters:
// const float                             experience                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::DebugAddExperience(const float experience)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugAddExperience");

	Params::TedCheatManager_DebugAddExperience Parms{};

	Parms.experience = experience;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugAutosave
// (Final, Exec, Native, Public)

void UTedCheatManager::DebugAutosave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugAutosave");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugCamera
// (Final, Exec, Native, Public)

void UTedCheatManager::DebugCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugCamera");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugConstructBlueprintWidget
// (Final, Exec, Native, Public)
// Parameters:
// const class FString&                    WidgetPath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ZOrder                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::DebugConstructBlueprintWidget(const class FString& WidgetPath, int32 ZOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugConstructBlueprintWidget");

	Params::TedCheatManager_DebugConstructBlueprintWidget Parms{};

	Parms.WidgetPath = std::move(WidgetPath);
	Parms.ZOrder = ZOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugDestroySelectedPawns
// (Final, Exec, Native, Public)

void UTedCheatManager::DebugDestroySelectedPawns()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugDestroySelectedPawns");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugEndMission
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bVictory                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::DebugEndMission(bool bVictory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugEndMission");

	Params::TedCheatManager_DebugEndMission Parms{};

	Parms.bVictory = bVictory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugKillSelectedPawns
// (Final, Exec, Native, Public)

void UTedCheatManager::DebugKillSelectedPawns()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugKillSelectedPawns");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugLogUnitNames
// (Final, Exec, Native, Public)

void UTedCheatManager::DebugLogUnitNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugLogUnitNames");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugPlayFullscreenMovie
// (Final, Exec, Native, Public)
// Parameters:
// const class FString&                    InAssetName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::DebugPlayFullscreenMovie(const class FString& InAssetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugPlayFullscreenMovie");

	Params::TedCheatManager_DebugPlayFullscreenMovie Parms{};

	Parms.InAssetName = std::move(InAssetName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugPlayMissionDialogue
// (Final, Exec, Native, Public)
// Parameters:
// const class FString&                    InAssetName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::DebugPlayMissionDialogue(const class FString& InAssetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugPlayMissionDialogue");

	Params::TedCheatManager_DebugPlayMissionDialogue Parms{};

	Parms.InAssetName = std::move(InAssetName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugPlayMovie
// (Final, Exec, Native, Public)
// Parameters:
// const class FString&                    InAssetName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedMovieType                     InMovieType                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInSilent                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInLoop                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InFadeIn                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InFadeOut                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedMovieGamePauseInteraction     InPauseInteraction                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::DebugPlayMovie(const class FString& InAssetName, const ETedMovieType InMovieType, const bool bInSilent, const bool bInLoop, const float InFadeIn, const float InFadeOut, const ETedMovieGamePauseInteraction InPauseInteraction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugPlayMovie");

	Params::TedCheatManager_DebugPlayMovie Parms{};

	Parms.InAssetName = std::move(InAssetName);
	Parms.InMovieType = InMovieType;
	Parms.bInSilent = bInSilent;
	Parms.bInLoop = bInLoop;
	Parms.InFadeIn = InFadeIn;
	Parms.InFadeOut = InFadeOut;
	Parms.InPauseInteraction = InPauseInteraction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugQuicksave
// (Final, Exec, Native, Public)

void UTedCheatManager::DebugQuicksave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugQuicksave");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugRemoveBlueprintWidget
// (Final, Exec, Native, Public)

void UTedCheatManager::DebugRemoveBlueprintWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugRemoveBlueprintWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugRestartLevel
// (Final, Exec, Native, Public)

void UTedCheatManager::DebugRestartLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugRestartLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugSetActorComponentTickEnabled
// (Final, Exec, Native, Public)
// Parameters:
// TSubclassOf<class AActor>               ActorClass                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UActorComponent>      ComponentClass                                         (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::DebugSetActorComponentTickEnabled(TSubclassOf<class AActor> ActorClass, TSubclassOf<class UActorComponent> ComponentClass, bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugSetActorComponentTickEnabled");

	Params::TedCheatManager_DebugSetActorComponentTickEnabled Parms{};

	Parms.ActorClass = ActorClass;
	Parms.ComponentClass = ComponentClass;
	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugSetActorTickEnabled
// (Final, Exec, Native, Public)
// Parameters:
// TSubclassOf<class AActor>               ActorClass                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::DebugSetActorTickEnabled(TSubclassOf<class AActor> ActorClass, bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugSetActorTickEnabled");

	Params::TedCheatManager_DebugSetActorTickEnabled Parms{};

	Parms.ActorClass = ActorClass;
	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugSetAllowPlayerCommands
// (Final, Exec, Native, Public)
// Parameters:
// const uint8                             PlayerID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bAllow                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::DebugSetAllowPlayerCommands(const uint8 PlayerID, const bool bAllow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugSetAllowPlayerCommands");

	Params::TedCheatManager_DebugSetAllowPlayerCommands Parms{};

	Parms.PlayerID = PlayerID;
	Parms.bAllow = bAllow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugSetComponentTickEnabled
// (Final, Exec, Native, Public)
// Parameters:
// TSubclassOf<class UActorComponent>      ComponentClass                                         (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::DebugSetComponentTickEnabled(TSubclassOf<class UActorComponent> ComponentClass, bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugSetComponentTickEnabled");

	Params::TedCheatManager_DebugSetComponentTickEnabled Parms{};

	Parms.ComponentClass = ComponentClass;
	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugSetLockedSupportPower
// (Final, Exec, Native, Public)
// Parameters:
// const uint8                             PlayerID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bLock                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    SupportPowerCommandType                                (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::DebugSetLockedSupportPower(const uint8 PlayerID, const bool bLock, const class FString& SupportPowerCommandType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugSetLockedSupportPower");

	Params::TedCheatManager_DebugSetLockedSupportPower Parms{};

	Parms.PlayerID = PlayerID;
	Parms.bLock = bLock;
	Parms.SupportPowerCommandType = std::move(SupportPowerCommandType);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugSoundCues
// (Final, Exec, Native, Public)

void UTedCheatManager::DebugSoundCues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugSoundCues");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugSoundMixes
// (Final, Exec, Native, Public)

void UTedCheatManager::DebugSoundMixes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugSoundMixes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugSoundReverb
// (Final, Exec, Native, Public)

void UTedCheatManager::DebugSoundReverb()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugSoundReverb");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugSoundWaves
// (Final, Exec, Native, Public)

void UTedCheatManager::DebugSoundWaves()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugSoundWaves");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugSpawnUnit
// (Final, Exec, Native, Public)
// Parameters:
// TSoftClassPtr<class UClass>             UnitClass                                              (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             NumToSpawn                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedPlayerID                            PlayerID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::DebugSpawnUnit(TSoftClassPtr<class UClass> UnitClass, const int32 NumToSpawn, ETedPlayerID PlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugSpawnUnit");

	Params::TedCheatManager_DebugSpawnUnit Parms{};

	Parms.UnitClass = UnitClass;
	Parms.NumToSpawn = NumToSpawn;
	Parms.PlayerID = PlayerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugSpawnUnitByName
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             UnitName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             NumToSpawn                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      PlayerID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::DebugSpawnUnitByName(class FName UnitName, const int32 NumToSpawn, const ETedPlayerID PlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugSpawnUnitByName");

	Params::TedCheatManager_DebugSpawnUnitByName Parms{};

	Parms.UnitName = UnitName;
	Parms.NumToSpawn = NumToSpawn;
	Parms.PlayerID = PlayerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugSpawnUnitDistributed
// (Final, Exec, Native, Public)
// Parameters:
// TSoftClassPtr<class UClass>             UnitClass                                              (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             NumToSpawn                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RandomSeed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedPlayerID                            PlayerID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::DebugSpawnUnitDistributed(TSoftClassPtr<class UClass> UnitClass, const int32 NumToSpawn, int32 RandomSeed, ETedPlayerID PlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugSpawnUnitDistributed");

	Params::TedCheatManager_DebugSpawnUnitDistributed Parms{};

	Parms.UnitClass = UnitClass;
	Parms.NumToSpawn = NumToSpawn;
	Parms.RandomSeed = RandomSeed;
	Parms.PlayerID = PlayerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugTeleportSelectedUnits
// (Final, Exec, Native, Public)

void UTedCheatManager::DebugTeleportSelectedUnits()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugTeleportSelectedUnits");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugToggleShowDebug_Movies
// (Final, Exec, Native, Public)

void UTedCheatManager::DebugToggleShowDebug_Movies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugToggleShowDebug_Movies");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DebugToggleShowDebugCategory
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             Category                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::DebugToggleShowDebugCategory(class FName Category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DebugToggleShowDebugCategory");

	Params::TedCheatManager_DebugToggleShowDebugCategory Parms{};

	Parms.Category = Category;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.DisableFogOfWar
// (Final, Exec, Native, Public)

void UTedCheatManager::DisableFogOfWar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "DisableFogOfWar");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.FreeProduction
// (Final, Exec, Native, Public)

void UTedCheatManager::FreeProduction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "FreeProduction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.IgnoreBuildPrerequisites
// (Final, Exec, Native, Public)

void UTedCheatManager::IgnoreBuildPrerequisites()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "IgnoreBuildPrerequisites");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.IgnoreBuildRadius
// (Final, Exec, Native, Public)

void UTedCheatManager::IgnoreBuildRadius()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "IgnoreBuildRadius");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.InstantProduction
// (Final, Exec, Native, Public)

void UTedCheatManager::InstantProduction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "InstantProduction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.InstantUpgrades
// (Final, Exec, Native, Public)

void UTedCheatManager::InstantUpgrades()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "InstantUpgrades");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.KillUnitsOnScreen
// (Final, Exec, Native, Public)
// Parameters:
// const EKillAllPawns                     Type                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              IncludeStructures                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::KillUnitsOnScreen(const EKillAllPawns Type, const bool IncludeStructures)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "KillUnitsOnScreen");

	Params::TedCheatManager_KillUnitsOnScreen Parms{};

	Parms.Type = Type;
	Parms.IncludeStructures = IncludeStructures;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.LoadGame
// (Final, Exec, Native, Public)
// Parameters:
// const class FName                       SlotName                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ProfileName                                            (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    SubDir                                                 (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::LoadGame(const class FName SlotName, const class FString& ProfileName, const class FString& SubDir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "LoadGame");

	Params::TedCheatManager_LoadGame Parms{};

	Parms.SlotName = SlotName;
	Parms.ProfileName = std::move(ProfileName);
	Parms.SubDir = std::move(SubDir);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.MakeSelectedPawnsInvincible
// (Final, Exec, Native, Public)

void UTedCheatManager::MakeSelectedPawnsInvincible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "MakeSelectedPawnsInvincible");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.MakeShitloadOfSaves
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::MakeShitloadOfSaves(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "MakeShitloadOfSaves");

	Params::TedCheatManager_MakeShitloadOfSaves Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.Objective_Activate
// (Final, Exec, Native, Public)
// Parameters:
// const class FString&                    InObjectiveSubstring                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::Objective_Activate(const class FString& InObjectiveSubstring)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "Objective_Activate");

	Params::TedCheatManager_Objective_Activate Parms{};

	Parms.InObjectiveSubstring = std::move(InObjectiveSubstring);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.Objective_Deactivate
// (Final, Exec, Native, Public)
// Parameters:
// const class FString&                    InObjectiveSubstring                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::Objective_Deactivate(const class FString& InObjectiveSubstring)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "Objective_Deactivate");

	Params::TedCheatManager_Objective_Deactivate Parms{};

	Parms.InObjectiveSubstring = std::move(InObjectiveSubstring);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.Objective_Fail
// (Final, Exec, Native, Public)
// Parameters:
// const class FString&                    InObjectiveSubstring                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::Objective_Fail(const class FString& InObjectiveSubstring)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "Objective_Fail");

	Params::TedCheatManager_Objective_Fail Parms{};

	Parms.InObjectiveSubstring = std::move(InObjectiveSubstring);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.Objective_Succeed
// (Final, Exec, Native, Public)
// Parameters:
// const class FString&                    InObjectiveSubstring                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::Objective_Succeed(const class FString& InObjectiveSubstring)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "Objective_Succeed");

	Params::TedCheatManager_Objective_Succeed Parms{};

	Parms.InObjectiveSubstring = std::move(InObjectiveSubstring);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.OpenMenuScreen
// (Final, Exec, Native, Public)
// Parameters:
// const class FString&                    ScreenSubstring                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::OpenMenuScreen(const class FString& ScreenSubstring)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "OpenMenuScreen");

	Params::TedCheatManager_OpenMenuScreen Parms{};

	Parms.ScreenSubstring = std::move(ScreenSubstring);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.PrintAllAchievements
// (Final, Exec, Native, Public)

void UTedCheatManager::PrintAllAchievements()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "PrintAllAchievements");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.ResetAllAchievements
// (Final, Exec, Native, Public)

void UTedCheatManager::ResetAllAchievements()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "ResetAllAchievements");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.SaveGame
// (Final, Exec, Native, Public)
// Parameters:
// const class FName                       SlotName                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::SaveGame(const class FName SlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "SaveGame");

	Params::TedCheatManager_SaveGame Parms{};

	Parms.SlotName = SlotName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.ServerDebugAddExperience
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const float                             experience                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::ServerDebugAddExperience(const float experience)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "ServerDebugAddExperience");

	Params::TedCheatManager_ServerDebugAddExperience Parms{};

	Parms.experience = experience;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.ServerDebugRestartLevel
// (Net, NetReliable, Native, Event, Public, NetServer)

void UTedCheatManager::ServerDebugRestartLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "ServerDebugRestartLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.ServerDebugSpawnUnit
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults)
// Parameters:
// TSubclassOf<class ATedUnitBase>         UnitClass                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumToSpawn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      PlayerID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::ServerDebugSpawnUnit(TSubclassOf<class ATedUnitBase> UnitClass, int32 NumToSpawn, const struct FVector& Location, const ETedPlayerID PlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "ServerDebugSpawnUnit");

	Params::TedCheatManager_ServerDebugSpawnUnit Parms{};

	Parms.UnitClass = UnitClass;
	Parms.NumToSpawn = NumToSpawn;
	Parms.Location = std::move(Location);
	Parms.PlayerID = PlayerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.ServerDebugTeleportSelectedUnits
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults)
// Parameters:
// const struct FVector2D&                 CursorLocation                                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class ATedUnitBase*>&      Units                                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedCheatManager::ServerDebugTeleportSelectedUnits(const struct FVector2D& CursorLocation, const TArray<class ATedUnitBase*>& Units)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "ServerDebugTeleportSelectedUnits");

	Params::TedCheatManager_ServerDebugTeleportSelectedUnits Parms{};

	Parms.CursorLocation = std::move(CursorLocation);
	Parms.Units = std::move(Units);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.SetMinimapState
// (Final, Exec, Native, Public)
// Parameters:
// uint8                                   InMode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::SetMinimapState(uint8 InMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "SetMinimapState");

	Params::TedCheatManager_SetMinimapState Parms{};

	Parms.InMode = InMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.SetUnitCardWeaponWidth
// (Final, Exec, Native, Public)
// Parameters:
// const int32                             FixedWidth                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::SetUnitCardWeaponWidth(const int32 FixedWidth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "SetUnitCardWeaponWidth");

	Params::TedCheatManager_SetUnitCardWeaponWidth Parms{};

	Parms.FixedWidth = FixedWidth;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.SetUnitCardWeaponWidthRange
// (Final, Exec, Native, Public)
// Parameters:
// const int32                             min_0                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             max_0                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCheatManager::SetUnitCardWeaponWidthRange(const int32 min_0, const int32 max_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "SetUnitCardWeaponWidthRange");

	Params::TedCheatManager_SetUnitCardWeaponWidthRange Parms{};

	Parms.min_0 = min_0;
	Parms.max_0 = max_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.ToggleGameMenuScreen
// (Final, Exec, Native, Public)

void UTedCheatManager::ToggleGameMenuScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "ToggleGameMenuScreen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCheatManager.TopDownCamera
// (Final, Exec, Native, Public)

void UTedCheatManager::TopDownCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCheatManager", "TopDownCamera");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundNavigation.ActivateTabSlotStateByPage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          InPage                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedContentSlotState              InState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInActivate                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundNavigation::ActivateTabSlotStateByPage(class UWidget* InPage, const ETedContentSlotState InState, const bool bInActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundNavigation", "ActivateTabSlotStateByPage");

	Params::TedCommandCompoundNavigation_ActivateTabSlotStateByPage Parms{};

	Parms.InPage = InPage;
	Parms.InState = InState;
	Parms.bInActivate = bInActivate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundNavigation.OnActivateTabSlotStateHandler
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundNavigation::OnActivateTabSlotStateHandler(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundNavigation", "OnActivateTabSlotStateHandler");

	Params::TedCommandCompoundNavigation_OnActivateTabSlotStateHandler Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundNavigation.OnTriggerTabSlotActionHandler
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundNavigation::OnTriggerTabSlotActionHandler(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundNavigation", "OnTriggerTabSlotActionHandler");

	Params::TedCommandCompoundNavigation_OnTriggerTabSlotActionHandler Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundNavigation.GetSelectedTabIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommandCompoundNavigation::GetSelectedTabIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundNavigation", "GetSelectedTabIndex");

	Params::TedCommandCompoundNavigation_GetSelectedTabIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundNavigation.GetSelectedTabPage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UTedCommandCompoundNavigation::GetSelectedTabPage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundNavigation", "GetSelectedTabPage");

	Params::TedCommandCompoundNavigation_GetSelectedTabPage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundNavigation.GetSelectedTabSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedContentPanelSlotBase*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedContentPanelSlotBase* UTedCommandCompoundNavigation::GetSelectedTabSlot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundNavigation", "GetSelectedTabSlot");

	Params::TedCommandCompoundNavigation_GetSelectedTabSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundNavigation.GetTabPage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InTabIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UTedCommandCompoundNavigation::GetTabPage(const int32 InTabIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundNavigation", "GetTabPage");

	Params::TedCommandCompoundNavigation_GetTabPage Parms{};

	Parms.InTabIndex = InTabIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundNavigation.GetTabsPanel
// (Final, Native, Public, Const)
// Parameters:
// class UTedContentPanelBase*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedContentPanelBase* UTedCommandCompoundNavigation::GetTabsPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundNavigation", "GetTabsPanel");

	Params::TedCommandCompoundNavigation_GetTabsPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundNavigation.HandleDisabled
// (Final, Native, Private, BlueprintCallable, Const)
// Parameters:
// const bool                              bInActivated                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedContentPanelSlotBase*   InSlot                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundNavigation::HandleDisabled(const bool bInActivated, const class UTedContentPanelSlotBase* InSlot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundNavigation", "HandleDisabled");

	Params::TedCommandCompoundNavigation_HandleDisabled Parms{};

	Parms.bInActivated = bInActivated;
	Parms.InSlot = InSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController_Spectator.Action_SelectPlayerView
// (Final, Native, Public)

void ATedPlayerController_Spectator::Action_SelectPlayerView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController_Spectator", "Action_SelectPlayerView");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController_Spectator.Action_SwapTeams
// (Final, Native, Public)

void ATedPlayerController_Spectator::Action_SwapTeams()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController_Spectator", "Action_SwapTeams");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController_Spectator.Server_R_SwapTeams
// (Net, NetReliable, Native, Event, Public, NetServer)

void ATedPlayerController_Spectator::Server_R_SwapTeams()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController_Spectator", "Server_R_SwapTeams");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController_Spectator.ReturnToMainMenu
// (Net, NetReliable, Native, Event, Public, NetClient, Const)

void ATedPlayerController_Spectator::ReturnToMainMenu() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController_Spectator", "ReturnToMainMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAbility_Sacrifice.SacrificePawn
// (Final, Native, Protected, BlueprintCallable)

void UTedAbility_Sacrifice::SacrificePawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbility_Sacrifice", "SacrificePawn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundLoadoutSocketSlot.OnActivateSlotState
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundLoadoutSocketSlot::OnActivateSlotState(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundLoadoutSocketSlot", "OnActivateSlotState");

	Params::TedCommandCompoundLoadoutSocketSlot_OnActivateSlotState Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundLoadoutSocketSlot.OnContentPanelChange
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelDynamic*          InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundLoadoutSocketSlot::OnContentPanelChange(class UTedContentPanelDynamic* InContentPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundLoadoutSocketSlot", "OnContentPanelChange");

	Params::TedCommandCompoundLoadoutSocketSlot_OnContentPanelChange Parms{};

	Parms.InContentPanel = InContentPanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundLoadoutSocketSlot.SetTargetContentPanel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTedContentPanelBase*             InTargetPanel                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundLoadoutSocketSlot::SetTargetContentPanel(class UTedContentPanelBase* InTargetPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundLoadoutSocketSlot", "SetTargetContentPanel");

	Params::TedCommandCompoundLoadoutSocketSlot_SetTargetContentPanel Parms{};

	Parms.InTargetPanel = InTargetPanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundLoadoutSocketSlot.SetTargetContentSlotIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const uint8                             InTargetIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundLoadoutSocketSlot::SetTargetContentSlotIndex(const uint8 InTargetIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundLoadoutSocketSlot", "SetTargetContentSlotIndex");

	Params::TedCommandCompoundLoadoutSocketSlot_SetTargetContentSlotIndex Parms{};

	Parms.InTargetIndex = InTargetIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundLoadoutSocketSlot.GetSocketRootPanel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPanelWidget*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPanelWidget* UTedCommandCompoundLoadoutSocketSlot::GetSocketRootPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundLoadoutSocketSlot", "GetSocketRootPanel");

	Params::TedCommandCompoundLoadoutSocketSlot_GetSocketRootPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundLoadoutSocketSlot.GetTargetContentPanel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedContentPanelBase*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedContentPanelBase* UTedCommandCompoundLoadoutSocketSlot::GetTargetContentPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundLoadoutSocketSlot", "GetTargetContentPanel");

	Params::TedCommandCompoundLoadoutSocketSlot_GetTargetContentPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundLoadoutSocketSlot.GetTargetContentSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedContentPanelSlotBase*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedContentPanelSlotBase* UTedCommandCompoundLoadoutSocketSlot::GetTargetContentSlot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundLoadoutSocketSlot", "GetTargetContentSlot");

	Params::TedCommandCompoundLoadoutSocketSlot_GetTargetContentSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundLoadoutSocketSlot.GetTargetContentSlotIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommandCompoundLoadoutSocketSlot::GetTargetContentSlotIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundLoadoutSocketSlot", "GetTargetContentSlotIndex");

	Params::TedCommandCompoundLoadoutSocketSlot_GetTargetContentSlotIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAbility_SpawnUnit.ReceiveSpawnedUnit
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ATedUnitBase*                     Unit                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedAbility_SpawnUnit::ReceiveSpawnedUnit(class ATedUnitBase* Unit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbility_SpawnUnit", "ReceiveSpawnedUnit");

	Params::TedAbility_SpawnUnit_ReceiveSpawnedUnit Parms{};

	Parms.Unit = Unit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedAbility_SpawnUnit.SpawnUnits
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector2D&                 LocationOverride                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedAbility_SpawnUnit::SpawnUnits(const struct FVector2D& LocationOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbility_SpawnUnit", "SpawnUnits");

	Params::TedAbility_SpawnUnit_SpawnUnits Parms{};

	Parms.LocationOverride = std::move(LocationOverride);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAbility_SpawnUnit.GetUnitToSpawnData
// (Native, Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const struct FGameplayAbilityActorInfo& ActorInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// TArray<struct FUnitToSpawnData>         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FUnitToSpawnData> UTedAbility_SpawnUnit::GetUnitToSpawnData(const struct FGameplayAbilityActorInfo& ActorInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbility_SpawnUnit", "GetUnitToSpawnData");

	Params::TedAbility_SpawnUnit_GetUnitToSpawnData Parms{};

	Parms.ActorInfo = std::move(ActorInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSelectionDetailsController.K2_OnMultiSelectionOwnershipChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ATedPawn*                         InSelectedPawn                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSelectionDetailsController::K2_OnMultiSelectionOwnershipChange(class ATedPawn* InSelectedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsController", "K2_OnMultiSelectionOwnershipChange");

	Params::TedSelectionDetailsController_K2_OnMultiSelectionOwnershipChange Parms{};

	Parms.InSelectedPawn = InSelectedPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedSelectionDetailsController.K2_OnSelectionChange
// (Event, Protected, BlueprintEvent)

void UTedSelectionDetailsController::K2_OnSelectionChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsController", "K2_OnSelectionChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedSelectionDetailsController.K2_OnSingleSelectionOwnershipChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ATedPawn*                         InSelectedPawn                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSelectionDetailsController::K2_OnSingleSelectionOwnershipChange(class ATedPawn* InSelectedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsController", "K2_OnSingleSelectionOwnershipChange");

	Params::TedSelectionDetailsController_K2_OnSingleSelectionOwnershipChange Parms{};

	Parms.InSelectedPawn = InSelectedPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedSelectionDetailsController.GetFirstSelectedPawn
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const class ATedPawn*                   ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class ATedPawn* UTedSelectionDetailsController::GetFirstSelectedPawn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsController", "GetFirstSelectedPawn");

	Params::TedSelectionDetailsController_GetFirstSelectedPawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSelectionDetailsController.GetPlayerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedPlayerController*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedPlayerController* UTedSelectionDetailsController::GetPlayerController() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsController", "GetPlayerController");

	Params::TedSelectionDetailsController_GetPlayerController Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSelectionDetailsController.GetSelectedPawns
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const TArray<class ATedPawn*>           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class ATedPawn*> UTedSelectionDetailsController::GetSelectedPawns() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsController", "GetSelectedPawns");

	Params::TedSelectionDetailsController_GetSelectedPawns Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSelectionDetailsController.GetSelectionSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedSelectionDetailsController::GetSelectionSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsController", "GetSelectionSize");

	Params::TedSelectionDetailsController_GetSelectionSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSelectionDetailsController.IsAnythingSelected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedSelectionDetailsController::IsAnythingSelected() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsController", "IsAnythingSelected");

	Params::TedSelectionDetailsController_IsAnythingSelected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSelectionDetailsController.IsMultiSelection
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedSelectionDetailsController::IsMultiSelection() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsController", "IsMultiSelection");

	Params::TedSelectionDetailsController_IsMultiSelection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSelectionDetailsController.IsSingleSelection
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedSelectionDetailsController::IsSingleSelection() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsController", "IsSingleSelection");

	Params::TedSelectionDetailsController_IsSingleSelection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAbility_Stealth.EnableStealth
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const bool                              bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedAbility_Stealth::EnableStealth(const bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbility_Stealth", "EnableStealth");

	Params::TedAbility_Stealth_EnableStealth Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAbility_TeleportUnit.Teleport
// (Final, Native, Protected, BlueprintCallable)

void UTedAbility_TeleportUnit::Teleport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbility_TeleportUnit", "Teleport");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAbility_TempestChargeOverflow.OnTakeAnyDamage
// (Final, Native, Protected)
// Parameters:
// class AActor*                           DamagedActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UDamageType*                DamageType                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      InstigatedBy                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedAbility_TempestChargeOverflow::OnTakeAnyDamage(class AActor* DamagedActor, float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbility_TempestChargeOverflow", "OnTakeAnyDamage");

	Params::TedAbility_TempestChargeOverflow_OnTakeAnyDamage Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSelectionDetails_InfoSlots_Slot_Attack.OnContextChange
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelStatic*           InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          InPrevContext                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          InNewContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSelectionDetails_InfoSlots_Slot_Attack::OnContextChange(class UTedContentPanelStatic* InContentPanel, class UObject* InPrevContext, class UObject* InNewContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetails_InfoSlots_Slot_Attack", "OnContextChange");

	Params::TedSelectionDetails_InfoSlots_Slot_Attack_OnContextChange Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InPrevContext = InPrevContext;
	Parms.InNewContext = InNewContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSelectionDetails_InfoSlots_Slot_Attack.RefreshDisabledState
// (Final, Native, Public, BlueprintCallable)

void UTedSelectionDetails_InfoSlots_Slot_Attack::RefreshDisabledState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetails_InfoSlots_Slot_Attack", "RefreshDisabledState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSelectionDetails_InfoSlots_Slot_Attack.GetContextPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedPawn*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedPawn* UTedSelectionDetails_InfoSlots_Slot_Attack::GetContextPawn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetails_InfoSlots_Slot_Attack", "GetContextPawn");

	Params::TedSelectionDetails_InfoSlots_Slot_Attack_GetContextPawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAbility_UnloadPawns.UnloadPawns
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector2D&                 LocationOverride                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedAbility_UnloadPawns::UnloadPawns(const struct FVector2D& LocationOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAbility_UnloadPawns", "UnloadPawns");

	Params::TedAbility_UnloadPawns_UnloadPawns Parms{};

	Parms.LocationOverride = std::move(LocationOverride);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedDoctrineSlotTooltip.GetDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedDoctrineSlotTooltip::GetDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrineSlotTooltip", "GetDescription");

	Params::TedDoctrineSlotTooltip_GetDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrineSlotTooltip.GetDoctrineSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedDoctrineSlot*           ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedDoctrineSlot* UTedDoctrineSlotTooltip::GetDoctrineSlot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrineSlotTooltip", "GetDoctrineSlot");

	Params::TedDoctrineSlotTooltip_GetDoctrineSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrineSlotTooltip.GetIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTedDoctrineSlotTooltip::GetIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrineSlotTooltip", "GetIcon");

	Params::TedDoctrineSlotTooltip_GetIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrineSlotTooltip.GetOnSellRefundedCredits
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedDoctrineSlotTooltip::GetOnSellRefundedCredits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrineSlotTooltip", "GetOnSellRefundedCredits");

	Params::TedDoctrineSlotTooltip_GetOnSellRefundedCredits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrineSlotTooltip.GetResearchCostCredits
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedDoctrineSlotTooltip::GetResearchCostCredits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrineSlotTooltip", "GetResearchCostCredits");

	Params::TedDoctrineSlotTooltip_GetResearchCostCredits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrineSlotTooltip.GetResearchTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedDoctrineSlotTooltip::GetResearchTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrineSlotTooltip", "GetResearchTime");

	Params::TedDoctrineSlotTooltip_GetResearchTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrineSlotTooltip.GetTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedDoctrineSlotTooltip::GetTitle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrineSlotTooltip", "GetTitle");

	Params::TedDoctrineSlotTooltip_GetTitle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrineSlotTooltip.IsResearchRelevant
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedDoctrineSlotTooltip::IsResearchRelevant() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrineSlotTooltip", "IsResearchRelevant");

	Params::TedDoctrineSlotTooltip_IsResearchRelevant Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSettingsScreen.GoBack
// (Final, Native, Public, BlueprintCallable)

void UTedSettingsScreen::GoBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsScreen", "GoBack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSettingsScreen.Hide
// (Final, Native, Public, BlueprintCallable)

void UTedSettingsScreen::Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsScreen", "Hide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSettingsScreen.K2_OnActivateTabState
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UTedContentPanelBase*             InPanel                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InSlot                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedContentSlotState              InState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInActivated                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSettingsScreen::K2_OnActivateTabState(class UTedContentPanelBase* InPanel, class UTedContentPanelSlotBase* InSlot, const ETedContentSlotState InState, const bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsScreen", "K2_OnActivateTabState");

	Params::TedSettingsScreen_K2_OnActivateTabState Parms{};

	Parms.InPanel = InPanel;
	Parms.InSlot = InSlot;
	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedSettingsScreen.K2_OnGoBack
// (Event, Protected, BlueprintEvent)

void UTedSettingsScreen::K2_OnGoBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsScreen", "K2_OnGoBack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedSettingsScreen.OnActivateTabState
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InPanel                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InSlot                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedContentSlotState              InState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInActivated                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSettingsScreen::OnActivateTabState(class UTedContentPanelBase* InPanel, class UTedContentPanelSlotBase* InSlot, const ETedContentSlotState InState, const bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsScreen", "OnActivateTabState");

	Params::TedSettingsScreen_OnActivateTabState Parms{};

	Parms.InPanel = InPanel;
	Parms.InSlot = InSlot;
	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSettingsScreen.Show
// (Final, Native, Public, BlueprintCallable)

void UTedSettingsScreen::Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsScreen", "Show");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandsTooltipDisplay.OnRefreshRequirements
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const TArray<class FText>&              InNotOwnedRequirements                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<class FText>&              InOwnedRequirements                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedCommandsTooltipDisplay::OnRefreshRequirements(const TArray<class FText>& InNotOwnedRequirements, const TArray<class FText>& InOwnedRequirements)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "OnRefreshRequirements");

	Params::TedCommandsTooltipDisplay_OnRefreshRequirements Parms{};

	Parms.InNotOwnedRequirements = std::move(InNotOwnedRequirements);
	Parms.InOwnedRequirements = std::move(InOwnedRequirements);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedCommandsTooltipDisplay.GetAltShortcutText_Hint
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedCommandsTooltipDisplay::GetAltShortcutText_Hint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetAltShortcutText_Hint");

	Params::TedCommandsTooltipDisplay_GetAltShortcutText_Hint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetAltShortcutVisibility_HasAutoCast
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedCommandsTooltipDisplay::GetAltShortcutVisibility_HasAutoCast() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetAltShortcutVisibility_HasAutoCast");

	Params::TedCommandsTooltipDisplay_GetAltShortcutVisibility_HasAutoCast Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetCommandCDO
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedCommand*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedCommand* UTedCommandsTooltipDisplay::GetCommandCDO() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetCommandCDO");

	Params::TedCommandsTooltipDisplay_GetCommandCDO Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetCommandsPanel
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedCommandsPanel*          ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedCommandsPanel* UTedCommandsTooltipDisplay::GetCommandsPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetCommandsPanel");

	Params::TedCommandsTooltipDisplay_GetCommandsPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetCostText_Credits
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedCommandsTooltipDisplay::GetCostText_Credits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetCostText_Credits");

	Params::TedCommandsTooltipDisplay_GetCostText_Credits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetCostText_Intel
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedCommandsTooltipDisplay::GetCostText_Intel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetCostText_Intel");

	Params::TedCommandsTooltipDisplay_GetCostText_Intel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetCostText_Population
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedCommandsTooltipDisplay::GetCostText_Population() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetCostText_Population");

	Params::TedCommandsTooltipDisplay_GetCostText_Population Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetCostText_Power
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedCommandsTooltipDisplay::GetCostText_Power() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetCostText_Power");

	Params::TedCommandsTooltipDisplay_GetCostText_Power Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetCostText_Time
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedCommandsTooltipDisplay::GetCostText_Time() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetCostText_Time");

	Params::TedCommandsTooltipDisplay_GetCostText_Time Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetCostValue_Credits
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommandsTooltipDisplay::GetCostValue_Credits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetCostValue_Credits");

	Params::TedCommandsTooltipDisplay_GetCostValue_Credits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetCostValue_Intel
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommandsTooltipDisplay::GetCostValue_Intel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetCostValue_Intel");

	Params::TedCommandsTooltipDisplay_GetCostValue_Intel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetCostValue_Time
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedCommandsTooltipDisplay::GetCostValue_Time() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetCostValue_Time");

	Params::TedCommandsTooltipDisplay_GetCostValue_Time Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetCostVisibility_Credits
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedCommandsTooltipDisplay::GetCostVisibility_Credits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetCostVisibility_Credits");

	Params::TedCommandsTooltipDisplay_GetCostVisibility_Credits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetCostVisibility_Intel
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedCommandsTooltipDisplay::GetCostVisibility_Intel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetCostVisibility_Intel");

	Params::TedCommandsTooltipDisplay_GetCostVisibility_Intel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetCostVisibility_Population
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedCommandsTooltipDisplay::GetCostVisibility_Population() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetCostVisibility_Population");

	Params::TedCommandsTooltipDisplay_GetCostVisibility_Population Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetCostVisibility_Power
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedCommandsTooltipDisplay::GetCostVisibility_Power() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetCostVisibility_Power");

	Params::TedCommandsTooltipDisplay_GetCostVisibility_Power Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetCostVisibility_Time
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedCommandsTooltipDisplay::GetCostVisibility_Time() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetCostVisibility_Time");

	Params::TedCommandsTooltipDisplay_GetCostVisibility_Time Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetDescription
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedCommandsTooltipDisplay::GetDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetDescription");

	Params::TedCommandsTooltipDisplay_GetDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetDisplayName
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedCommandsTooltipDisplay::GetDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetDisplayName");

	Params::TedCommandsTooltipDisplay_GetDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetIcon
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTedCommandsTooltipDisplay::GetIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetIcon");

	Params::TedCommandsTooltipDisplay_GetIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetIssueValue_AbilityBlocked
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCommandsTooltipDisplay::GetIssueValue_AbilityBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetIssueValue_AbilityBlocked");

	Params::TedCommandsTooltipDisplay_GetIssueValue_AbilityBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetIssueValue_DisabledInfo
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCommandsTooltipDisplay::GetIssueValue_DisabledInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetIssueValue_DisabledInfo");

	Params::TedCommandsTooltipDisplay_GetIssueValue_DisabledInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetIssueValue_LowPower
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCommandsTooltipDisplay::GetIssueValue_LowPower() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetIssueValue_LowPower");

	Params::TedCommandsTooltipDisplay_GetIssueValue_LowPower Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetIssueValue_MissingPlayerTags
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCommandsTooltipDisplay::GetIssueValue_MissingPlayerTags() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetIssueValue_MissingPlayerTags");

	Params::TedCommandsTooltipDisplay_GetIssueValue_MissingPlayerTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetIssueValue_PopulationFull
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCommandsTooltipDisplay::GetIssueValue_PopulationFull() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetIssueValue_PopulationFull");

	Params::TedCommandsTooltipDisplay_GetIssueValue_PopulationFull Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetIssueVisibility_AbilityBlocked
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedCommandsTooltipDisplay::GetIssueVisibility_AbilityBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetIssueVisibility_AbilityBlocked");

	Params::TedCommandsTooltipDisplay_GetIssueVisibility_AbilityBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetIssueVisibility_DisabledInfo
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedCommandsTooltipDisplay::GetIssueVisibility_DisabledInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetIssueVisibility_DisabledInfo");

	Params::TedCommandsTooltipDisplay_GetIssueVisibility_DisabledInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetIssueVisibility_InsufficientCredits
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedCommandsTooltipDisplay::GetIssueVisibility_InsufficientCredits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetIssueVisibility_InsufficientCredits");

	Params::TedCommandsTooltipDisplay_GetIssueVisibility_InsufficientCredits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetIssueVisibility_InsufficientIntel
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedCommandsTooltipDisplay::GetIssueVisibility_InsufficientIntel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetIssueVisibility_InsufficientIntel");

	Params::TedCommandsTooltipDisplay_GetIssueVisibility_InsufficientIntel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetIssueVisibility_LowPower
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedCommandsTooltipDisplay::GetIssueVisibility_LowPower() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetIssueVisibility_LowPower");

	Params::TedCommandsTooltipDisplay_GetIssueVisibility_LowPower Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetIssueVisibility_MissingPlayerTags
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedCommandsTooltipDisplay::GetIssueVisibility_MissingPlayerTags() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetIssueVisibility_MissingPlayerTags");

	Params::TedCommandsTooltipDisplay_GetIssueVisibility_MissingPlayerTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetIssueVisibility_PopulationFull
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedCommandsTooltipDisplay::GetIssueVisibility_PopulationFull() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetIssueVisibility_PopulationFull");

	Params::TedCommandsTooltipDisplay_GetIssueVisibility_PopulationFull Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetPopulationCost
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommandsTooltipDisplay::GetPopulationCost() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetPopulationCost");

	Params::TedCommandsTooltipDisplay_GetPopulationCost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetPowerCost
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommandsTooltipDisplay::GetPowerCost() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetPowerCost");

	Params::TedCommandsTooltipDisplay_GetPowerCost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetShortcutText
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedCommandsTooltipDisplay::GetShortcutText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetShortcutText");

	Params::TedCommandsTooltipDisplay_GetShortcutText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.GetValue_DisabledInfo
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

const class FText UTedCommandsTooltipDisplay::GetValue_DisabledInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "GetValue_DisabledInfo");

	Params::TedCommandsTooltipDisplay_GetValue_DisabledInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.HasPlayerInsufficientCredits
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCommandsTooltipDisplay::HasPlayerInsufficientCredits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "HasPlayerInsufficientCredits");

	Params::TedCommandsTooltipDisplay_HasPlayerInsufficientCredits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltipDisplay.HasPlayerInsufficientIntel
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCommandsTooltipDisplay::HasPlayerInsufficientIntel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltipDisplay", "HasPlayerInsufficientIntel");

	Params::TedCommandsTooltipDisplay_HasPlayerInsufficientIntel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPopup.CanHide
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPopup::CanHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPopup", "CanHide");

	Params::TedPopup_CanHide Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPopup.CollapseAllSpacerWidgets
// (Event, Public, BlueprintEvent)

void UTedPopup::CollapseAllSpacerWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPopup", "CollapseAllSpacerWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedPopup.HideError
// (Native, Public, BlueprintCallable)

void UTedPopup::HideError()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPopup", "HideError");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPopup.K2_OnErrorShown
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      ErrorMessage                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedPopup::K2_OnErrorShown(const class FText& ErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPopup", "K2_OnErrorShown");

	Params::TedPopup_K2_OnErrorShown Parms{};

	Parms.ErrorMessage = std::move(ErrorMessage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedPopup.K2_OnHide
// (Event, Public, BlueprintEvent)

void UTedPopup::K2_OnHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPopup", "K2_OnHide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedPopup.K2_OnShow
// (Event, Public, BlueprintEvent)

void UTedPopup::K2_OnShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPopup", "K2_OnShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedPopup.SetIdentifier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InIdentifier                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPopup::SetIdentifier(class FName InIdentifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPopup", "SetIdentifier");

	Params::TedPopup_SetIdentifier Parms{};

	Parms.InIdentifier = InIdentifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPopup.ShowError
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      ErrorMessage                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedPopup::ShowError(const class FText& ErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPopup", "ShowError");

	Params::TedPopup_ShowError Parms{};

	Parms.ErrorMessage = std::move(ErrorMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPopup.GetBodyText
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedPopup::GetBodyText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPopup", "GetBodyText");

	Params::TedPopup_GetBodyText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPopup.GetDropDownTitleText
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedPopup::GetDropDownTitleText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPopup", "GetDropDownTitleText");

	Params::TedPopup_GetDropDownTitleText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPopup.GetHeaderText
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedPopup::GetHeaderText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPopup", "GetHeaderText");

	Params::TedPopup_GetHeaderText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPopup.GetIdentifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UTedPopup::GetIdentifier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPopup", "GetIdentifier");

	Params::TedPopup_GetIdentifier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedConformationBase.ChangeState
// (Final, BlueprintAuthorityOnly, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           InInstigator                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InState                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InDelay                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedConformationBase::ChangeState(class AActor* InInstigator, const struct FGameplayTag& InState, const float InValue, const float InDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedConformationBase", "ChangeState");

	Params::TedConformationBase_ChangeState Parms{};

	Parms.InInstigator = InInstigator;
	Parms.InState = std::move(InState);
	Parms.InValue = InValue;
	Parms.InDelay = InDelay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedConformationBase.HidePreview
// (BlueprintCosmetic, Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ATedConformationBase::HidePreview()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedConformationBase", "HidePreview");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedConformationBase.K2_ChangeState
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)
// Parameters:
// class AActor*                           InInstigator                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InState                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InDelay                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedConformationBase::K2_ChangeState(class AActor* InInstigator, const struct FGameplayTag& InState, const float InValue, const float InDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedConformationBase", "K2_ChangeState");

	Params::TedConformationBase_K2_ChangeState Parms{};

	Parms.InInstigator = InInstigator;
	Parms.InState = std::move(InState);
	Parms.InValue = InValue;
	Parms.InDelay = InDelay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedConformationBase.K2_RequestChangeState
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InInstigator                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InState                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedConformationBase::K2_RequestChangeState(class AActor* InInstigator, const struct FGameplayTag& InState, const float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedConformationBase", "K2_RequestChangeState");

	Params::TedConformationBase_K2_RequestChangeState Parms{};

	Parms.InInstigator = InInstigator;
	Parms.InState = std::move(InState);
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedConformationBase.K2_ShowPreview
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// const class AActor*                     InInstigator                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InState                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedConformationBase::K2_ShowPreview(const class AActor* InInstigator, const struct FGameplayTag& InState, const float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedConformationBase", "K2_ShowPreview");

	Params::TedConformationBase_K2_ShowPreview Parms{};

	Parms.InInstigator = InInstigator;
	Parms.InState = std::move(InState);
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedConformationBase.OnRep_CurrentStates
// (Native, Protected)

void ATedConformationBase::OnRep_CurrentStates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedConformationBase", "OnRep_CurrentStates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedConformationBase.OnRequestChangeState
// (BlueprintAuthorityOnly, Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class AActor*                           InInstigator                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InState                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedConformationBase::OnRequestChangeState(class AActor* InInstigator, const struct FGameplayTag& InState, const float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedConformationBase", "OnRequestChangeState");

	Params::TedConformationBase_OnRequestChangeState Parms{};

	Parms.InInstigator = InInstigator;
	Parms.InState = std::move(InState);
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedConformationBase.OnStateChangeCosmetic
// (BlueprintCosmetic, Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              InState                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedConformationBase::OnStateChangeCosmetic(const struct FGameplayTag& InState, const float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedConformationBase", "OnStateChangeCosmetic");

	Params::TedConformationBase_OnStateChangeCosmetic Parms{};

	Parms.InState = std::move(InState);
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedConformationBase.RequestChangeState
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           InInstigator                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InState                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedConformationBase::RequestChangeState(class AActor* InInstigator, const struct FGameplayTag& InState, const float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedConformationBase", "RequestChangeState");

	Params::TedConformationBase_RequestChangeState Parms{};

	Parms.InInstigator = InInstigator;
	Parms.InState = std::move(InState);
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedConformationBase.SetDestroyedMeshOnVisibilityChange
// (Event, Public, BlueprintEvent)

void ATedConformationBase::SetDestroyedMeshOnVisibilityChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedConformationBase", "SetDestroyedMeshOnVisibilityChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedConformationBase.ShowPreview
// (BlueprintCosmetic, Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class AActor*                     InInstigator                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InState                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedConformationBase::ShowPreview(const class AActor* InInstigator, const struct FGameplayTag& InState, const float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedConformationBase", "ShowPreview");

	Params::TedConformationBase_ShowPreview Parms{};

	Parms.InInstigator = InInstigator;
	Parms.InState = std::move(InState);
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedConformationBase.CanChangeState
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// const class AActor*                     InInstigator                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InState                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedConformationBase::CanChangeState(const class AActor* InInstigator, const struct FGameplayTag& InState, const float InValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedConformationBase", "CanChangeState");

	Params::TedConformationBase_CanChangeState Parms{};

	Parms.InInstigator = InInstigator;
	Parms.InState = std::move(InState);
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedConformationBase.GetConformationPreviewMesh
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FTransform*                      Offset                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UStreamableRenderAsset*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UStreamableRenderAsset* ATedConformationBase::GetConformationPreviewMesh(struct FTransform* Offset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedConformationBase", "GetConformationPreviewMesh");

	Params::TedConformationBase_GetConformationPreviewMesh Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Offset != nullptr)
		*Offset = std::move(Parms.Offset);

	return Parms.ReturnValue;
}


// Function Tempest.TedConformationBase.GetLocationsForActivator
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<struct FVector>*                 OutLocations                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void ATedConformationBase::GetLocationsForActivator(TArray<struct FVector>* OutLocations) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedConformationBase", "GetLocationsForActivator");

	Params::TedConformationBase_GetLocationsForActivator Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLocations != nullptr)
		*OutLocations = std::move(Parms.OutLocations);
}


// Function Tempest.TedConformationBase.GetNavAreaModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UNavModifierComponent*            ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNavModifierComponent* ATedConformationBase::GetNavAreaModifier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedConformationBase", "GetNavAreaModifier");

	Params::TedConformationBase_GetNavAreaModifier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedConformationBase.GetStateCurve
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const struct FGameplayTag&              InState                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRepCurve_Float*                 OutData                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedConformationBase::GetStateCurve(const struct FGameplayTag& InState, struct FRepCurve_Float* OutData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedConformationBase", "GetStateCurve");

	Params::TedConformationBase_GetStateCurve Parms{};

	Parms.InState = std::move(InState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function Tempest.TedConformationBase.GetStateValue
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const struct FGameplayTag&              InState                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ATedConformationBase::GetStateValue(const struct FGameplayTag& InState) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedConformationBase", "GetStateValue");

	Params::TedConformationBase_GetStateValue Parms{};

	Parms.InState = std::move(InState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedConformationBase.HasBegunPlay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedConformationBase::HasBegunPlay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedConformationBase", "HasBegunPlay");

	Params::TedConformationBase_HasBegunPlay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedConformationBase.IsStateChangeInProgress
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              InState                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedConformationBase::IsStateChangeInProgress(const struct FGameplayTag& InState) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedConformationBase", "IsStateChangeInProgress");

	Params::TedConformationBase_IsStateChangeInProgress Parms{};

	Parms.InState = std::move(InState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedConformationBase.IsStateSupported
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              InState                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedConformationBase::IsStateSupported(const struct FGameplayTag& InState) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedConformationBase", "IsStateSupported");

	Params::TedConformationBase_IsStateSupported Parms{};

	Parms.InState = std::move(InState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedConformationBase.K2_CanChangeState
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const class AActor*                     InInstigator                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InState                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedConformationBase::K2_CanChangeState(const class AActor* InInstigator, const struct FGameplayTag& InState, const float InValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedConformationBase", "K2_CanChangeState");

	Params::TedConformationBase_K2_CanChangeState Parms{};

	Parms.InInstigator = InInstigator;
	Parms.InState = std::move(InState);
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedConformationBase.K2_GetStateCurve
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const struct FGameplayTag&              InState                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRepCurve_Float*                 OutData                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedConformationBase::K2_GetStateCurve(const struct FGameplayTag& InState, struct FRepCurve_Float* OutData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedConformationBase", "K2_GetStateCurve");

	Params::TedConformationBase_K2_GetStateCurve Parms{};

	Parms.InState = std::move(InState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function Tempest.TedConformationBase.K2_GetStateValue
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const struct FGameplayTag&              InState                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ATedConformationBase::K2_GetStateValue(const struct FGameplayTag& InState) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedConformationBase", "K2_GetStateValue");

	Params::TedConformationBase_K2_GetStateValue Parms{};

	Parms.InState = std::move(InState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandVisualActor.DestroyActorDelayed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const float                             DelayOverride                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedCommandVisualActor::DestroyActorDelayed(const float DelayOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandVisualActor", "DestroyActorDelayed");

	Params::TedCommandVisualActor_DestroyActorDelayed Parms{};

	Parms.DelayOverride = DelayOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandVisualActor.OnRep_Visibility
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FTedVisibility&            OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ATedCommandVisualActor::OnRep_Visibility(const struct FTedVisibility& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandVisualActor", "OnRep_Visibility");

	Params::TedCommandVisualActor_OnRep_Visibility Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandVisualActor.GetCommandRange
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ATedCommandVisualActor::GetCommandRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandVisualActor", "GetCommandRange");

	Params::TedCommandVisualActor_GetCommandRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandVisualActor.GetOwningPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedPlayerState*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedPlayerState* ATedCommandVisualActor::GetOwningPlayerState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandVisualActor", "GetOwningPlayerState");

	Params::TedCommandVisualActor_GetOwningPlayerState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsPanel.GetAlternatingActiveSlotState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ETedContentSlotState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedContentSlotState UTedCommandsPanel::GetAlternatingActiveSlotState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedCommandsPanel", "GetAlternatingActiveSlotState");

	Params::TedCommandsPanel_GetAlternatingActiveSlotState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsPanel.GetAutocastSlotState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ETedContentSlotState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedContentSlotState UTedCommandsPanel::GetAutocastSlotState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedCommandsPanel", "GetAutocastSlotState");

	Params::TedCommandsPanel_GetAutocastSlotState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsPanel.GetDurationActiveSlotState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ETedContentSlotState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedContentSlotState UTedCommandsPanel::GetDurationActiveSlotState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedCommandsPanel", "GetDurationActiveSlotState");

	Params::TedCommandsPanel_GetDurationActiveSlotState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsPanel.GetMissingPrerequisitesSlotState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ETedContentSlotState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedContentSlotState UTedCommandsPanel::GetMissingPrerequisitesSlotState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedCommandsPanel", "GetMissingPrerequisitesSlotState");

	Params::TedCommandsPanel_GetMissingPrerequisitesSlotState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsPanel.GetContentIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UTedCommand>          InContent                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommandsPanel::GetContentIndex(TSubclassOf<class UTedCommand> InContent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsPanel", "GetContentIndex");

	Params::TedCommandsPanel_GetContentIndex Parms{};

	Parms.InContent = InContent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsPanel.GetCooldown
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutCooldownAlpha                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutDuration                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCommandsPanel::GetCooldown(const int32 InSlotIndex, float* OutCooldownAlpha, float* OutDuration) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsPanel", "GetCooldown");

	Params::TedCommandsPanel_GetCooldown Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCooldownAlpha != nullptr)
		*OutCooldownAlpha = Parms.OutCooldownAlpha;

	if (OutDuration != nullptr)
		*OutDuration = Parms.OutDuration;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsPanel.GetShortcut
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInputChord*                     OutShortcut                                            (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCommandsPanel::GetShortcut(const int32 InSlotIndex, struct FInputChord* OutShortcut) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsPanel", "GetShortcut");

	Params::TedCommandsPanel_GetShortcut Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutShortcut != nullptr)
		*OutShortcut = std::move(Parms.OutShortcut);

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsPanel.GetSlotContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UTedCommand>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UTedCommand> UTedCommandsPanel::GetSlotContent(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsPanel", "GetSlotContent");

	Params::TedCommandsPanel_GetSlotContent Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsPanel.GetSlotContentByMappingName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FName&                      MappingName                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UTedCommand>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UTedCommand> UTedCommandsPanel::GetSlotContentByMappingName(const class FName& MappingName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsPanel", "GetSlotContentByMappingName");

	Params::TedCommandsPanel_GetSlotContentByMappingName Parms{};

	Parms.MappingName = MappingName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsPanel.GetSlotContentCDO
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedCommand*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedCommand* UTedCommandsPanel::GetSlotContentCDO(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsPanel", "GetSlotContentCDO");

	Params::TedCommandsPanel_GetSlotContentCDO Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsPanel.GetSlotContentUIData
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D**                      OutIcon                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText*                            OutName                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// class FText*                            OutDescription                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCommandsPanel::GetSlotContentUIData(const int32 InSlotIndex, class UTexture2D** OutIcon, class FText* OutName, class FText* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsPanel", "GetSlotContentUIData");

	Params::TedCommandsPanel_GetSlotContentUIData Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutIcon != nullptr)
		*OutIcon = Parms.OutIcon;

	if (OutName != nullptr)
		*OutName = std::move(Parms.OutName);

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function Tempest.TedCompletedStructuresSlot.GetParentPanel
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedCompletedStructuresPanel*     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedCompletedStructuresPanel* UTedCompletedStructuresSlot::GetParentPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCompletedStructuresSlot", "GetParentPanel");

	Params::TedCompletedStructuresSlot_GetParentPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapInfo.GetMapInfoByNameSafe
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      InMapInfoName                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedMapInfo*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedMapInfo* UTedMapInfo::GetMapInfoByNameSafe(const class FName& InMapInfoName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedMapInfo", "GetMapInfoByNameSafe");

	Params::TedMapInfo_GetMapInfoByNameSafe Parms{};

	Parms.InMapInfoName = InMapInfoName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapInfo.K2_GetCurrentMapInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedMapInfo*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedMapInfo* UTedMapInfo::K2_GetCurrentMapInfo(const class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedMapInfo", "K2_GetCurrentMapInfo");

	Params::TedMapInfo_K2_GetCurrentMapInfo Parms{};

	Parms.InWorldContext = InWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapInfo.GetCampaignSlotThumbnail
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTedMapInfo::GetCampaignSlotThumbnail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfo", "GetCampaignSlotThumbnail");

	Params::TedMapInfo_GetCampaignSlotThumbnail Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapInfo.GetAmountOfMainObjectives
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedMapInfo::GetAmountOfMainObjectives() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfo", "GetAmountOfMainObjectives");

	Params::TedMapInfo_GetAmountOfMainObjectives Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapInfo.GetAmountOfSecondaryObjectives
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedMapInfo::GetAmountOfSecondaryObjectives() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfo", "GetAmountOfSecondaryObjectives");

	Params::TedMapInfo_GetAmountOfSecondaryObjectives Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapInfo.GetBotPlayersNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedMapInfo::GetBotPlayersNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfo", "GetBotPlayersNum");

	Params::TedMapInfo_GetBotPlayersNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapInfo.GetBriefing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedBriefing*               ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedBriefing* UTedMapInfo::GetBriefing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfo", "GetBriefing");

	Params::TedMapInfo_GetBriefing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapInfo.GetCachedWorldBounds
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FBox                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

const struct FBox UTedMapInfo::GetCachedWorldBounds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfo", "GetCachedWorldBounds");

	Params::TedMapInfo_GetCachedWorldBounds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapInfo.GetDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedMapInfo::GetDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfo", "GetDescription");

	Params::TedMapInfo_GetDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapInfo.GetDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedMapInfo::GetDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfo", "GetDisplayName");

	Params::TedMapInfo_GetDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapInfo.GetHumanPlayerSlots
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<struct FTedPlayerSlot>*          OutSlots                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMapInfo::GetHumanPlayerSlots(TArray<struct FTedPlayerSlot>* OutSlots) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfo", "GetHumanPlayerSlots");

	Params::TedMapInfo_GetHumanPlayerSlots Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSlots != nullptr)
		*OutSlots = std::move(Parms.OutSlots);

	return Parms.ReturnValue;
}


// Function Tempest.TedMapInfo.GetHumanPlayersNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedMapInfo::GetHumanPlayersNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfo", "GetHumanPlayersNum");

	Params::TedMapInfo_GetHumanPlayersNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapInfo.GetLocation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedMapInfo::GetLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfo", "GetLocation");

	Params::TedMapInfo_GetLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapInfo.GetMapRequisitionPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedGameDifficulty                      Difficulty                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedMapInfo::GetMapRequisitionPoints(ETedGameDifficulty Difficulty) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfo", "GetMapRequisitionPoints");

	Params::TedMapInfo_GetMapRequisitionPoints Parms{};

	Parms.Difficulty = Difficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapInfo.GetMapScreenSetup
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedCommandCompoundMapScreenSetup*ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedCommandCompoundMapScreenSetup* UTedMapInfo::GetMapScreenSetup() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfo", "GetMapScreenSetup");

	Params::TedMapInfo_GetMapScreenSetup Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapInfo.GetMinimap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTedMapInfo::GetMinimap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfo", "GetMinimap");

	Params::TedMapInfo_GetMinimap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapInfo.GetPlayersNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedMapInfo::GetPlayersNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfo", "GetPlayersNum");

	Params::TedMapInfo_GetPlayersNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapInfo.IsFinale
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMapInfo::IsFinale() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfo", "IsFinale");

	Params::TedMapInfo_IsFinale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAchievementSubsystem.AddAchievementValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TSubclassOf<class UTedAchievementEntry>&AchievementClass                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedAchievementSubsystem::AddAchievementValue(const TSubclassOf<class UTedAchievementEntry>& AchievementClass, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAchievementSubsystem", "AddAchievementValue");

	Params::TedAchievementSubsystem_AddAchievementValue Parms{};

	Parms.AchievementClass = AchievementClass;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAchievementSubsystem.SetAchievementValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TSubclassOf<class UTedAchievementEntry>&AchievementClass                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedAchievementSubsystem::SetAchievementValue(const TSubclassOf<class UTedAchievementEntry>& AchievementClass, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAchievementSubsystem", "SetAchievementValue");

	Params::TedAchievementSubsystem_SetAchievementValue Parms{};

	Parms.AchievementClass = AchievementClass;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAchievementSubsystem.UnlockAchievement
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TSubclassOf<class UTedAchievementEntry>&AchievementClass                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedAchievementSubsystem::UnlockAchievement(const TSubclassOf<class UTedAchievementEntry>& AchievementClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAchievementSubsystem", "UnlockAchievement");

	Params::TedAchievementSubsystem_UnlockAchievement Parms{};

	Parms.AchievementClass = AchievementClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUnitQueueInterface.CanEnqueue
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class ATedUnitBase*               Unit                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITedUnitQueueInterface::CanEnqueue(const class ATedUnitBase* Unit) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("TedUnitQueueInterface", "CanEnqueue");

	Params::TedUnitQueueInterface_CanEnqueue Parms{};

	Parms.Unit = Unit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUnitQueueInterface.IsQueued
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class ATedUnitBase*               Unit                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITedUnitQueueInterface::IsQueued(const class ATedUnitBase* Unit) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("TedUnitQueueInterface", "IsQueued");

	Params::TedUnitQueueInterface_IsQueued Parms{};

	Parms.Unit = Unit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureNeighborBase.K2_OnRefreshConnections
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FTedStructureConnection&   InPreset                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATedStructureNeighborBase::K2_OnRefreshConnections(const struct FTedStructureConnection& InPreset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureNeighborBase", "K2_OnRefreshConnections");

	Params::TedStructureNeighborBase_K2_OnRefreshConnections Parms{};

	Parms.InPreset = std::move(InPreset);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedStructureNeighborBase.K2_OnStartProceduralAnim
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const ETedNeighborAnim                  Anim                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedStructureNeighborBase::K2_OnStartProceduralAnim(const ETedNeighborAnim Anim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureNeighborBase", "K2_OnStartProceduralAnim");

	Params::TedStructureNeighborBase_K2_OnStartProceduralAnim Parms{};

	Parms.Anim = Anim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedStructureNeighborBase.OnRep_ConnectionsState
// (Final, Native, Protected)

void ATedStructureNeighborBase::OnRep_ConnectionsState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureNeighborBase", "OnRep_ConnectionsState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructureNeighborBase.OnRep_Neighbors
// (Native, Protected)

void ATedStructureNeighborBase::OnRep_Neighbors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureNeighborBase", "OnRep_Neighbors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructureNeighborBase.OnRep_PlayingNeighborAnim
// (Final, Native, Protected)

void ATedStructureNeighborBase::OnRep_PlayingNeighborAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureNeighborBase", "OnRep_PlayingNeighborAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedActorTagFunctionLibrary.AddActorToActorTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedActorTagFunctionLibrary::AddActorToActorTag(const class UObject* InWorldContext, class AActor* Actor, const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedActorTagFunctionLibrary", "AddActorToActorTag");

	Params::TedActorTagFunctionLibrary_AddActorToActorTag Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.Actor = Actor;
	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedActorTagFunctionLibrary.ClearActorsUnderActorTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedActorTagFunctionLibrary::ClearActorsUnderActorTag(const class UObject* InWorldContext, const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedActorTagFunctionLibrary", "ClearActorsUnderActorTag");

	Params::TedActorTagFunctionLibrary_ClearActorsUnderActorTag Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedActorTagFunctionLibrary.GetActorByActorTag
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AActor>               Class_0                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UTedActorTagFunctionLibrary::GetActorByActorTag(const class UObject* InWorldContext, const struct FGameplayTag& Tag, TSubclassOf<class AActor> Class_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedActorTagFunctionLibrary", "GetActorByActorTag");

	Params::TedActorTagFunctionLibrary_GetActorByActorTag Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.Tag = std::move(Tag);
	Parms.Class_0 = Class_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedActorTagFunctionLibrary.GetActorsByActorTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AActor>               Class_0                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>*                  OutActors                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedActorTagFunctionLibrary::GetActorsByActorTag(const class UObject* InWorldContext, const struct FGameplayTag& Tag, TSubclassOf<class AActor> Class_0, TArray<class AActor*>* OutActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedActorTagFunctionLibrary", "GetActorsByActorTag");

	Params::TedActorTagFunctionLibrary_GetActorsByActorTag Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.Tag = std::move(Tag);
	Parms.Class_0 = Class_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutActors != nullptr)
		*OutActors = std::move(Parms.OutActors);

	return Parms.ReturnValue;
}


// Function Tempest.TedActorTagFunctionLibrary.GetActorsByActorTags
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     Tags                                                   (Parm, NativeAccessSpecifierPublic)
// TSubclassOf<class AActor>               Class_0                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>*                  OutActors                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedActorTagFunctionLibrary::GetActorsByActorTags(const class UObject* InWorldContext, const struct FGameplayTagContainer& Tags, TSubclassOf<class AActor> Class_0, TArray<class AActor*>* OutActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedActorTagFunctionLibrary", "GetActorsByActorTags");

	Params::TedActorTagFunctionLibrary_GetActorsByActorTags Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.Tags = std::move(Tags);
	Parms.Class_0 = Class_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutActors != nullptr)
		*OutActors = std::move(Parms.OutActors);

	return Parms.ReturnValue;
}


// Function Tempest.TedActorTagFunctionLibrary.GetActorsByActorTagTree
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AActor>               Class_0                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>*                  OutActors                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedActorTagFunctionLibrary::GetActorsByActorTagTree(const class UObject* InWorldContext, const struct FGameplayTag& Tag, TSubclassOf<class AActor> Class_0, TArray<class AActor*>* OutActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedActorTagFunctionLibrary", "GetActorsByActorTagTree");

	Params::TedActorTagFunctionLibrary_GetActorsByActorTagTree Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.Tag = std::move(Tag);
	Parms.Class_0 = Class_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutActors != nullptr)
		*OutActors = std::move(Parms.OutActors);

	return Parms.ReturnValue;
}


// Function Tempest.TedActorTagFunctionLibrary.GetActorTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag*                    OutTag                                                 (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedActorTagFunctionLibrary::GetActorTag(const class UObject* InWorldContext, class AActor* Actor, struct FGameplayTag* OutTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedActorTagFunctionLibrary", "GetActorTag");

	Params::TedActorTagFunctionLibrary_GetActorTag Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTag != nullptr)
		*OutTag = std::move(Parms.OutTag);
}


// Function Tempest.TedActorTagFunctionLibrary.OnAddActorToActorTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedActorTagEventAction           Action                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGameplayTag& InActorTag, class AActor* InActor, class AActor* InSecondActor)>Handler                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedActorTagFunctionLibrary::OnAddActorToActorTag(const class UObject* InWorldContext, const ETedActorTagEventAction Action, const struct FGameplayTag& Tag, TDelegate<void(const struct FGameplayTag& InActorTag, class AActor* InActor, class AActor* InSecondActor)> Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedActorTagFunctionLibrary", "OnAddActorToActorTag");

	Params::TedActorTagFunctionLibrary_OnAddActorToActorTag Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.Action = Action;
	Parms.Tag = std::move(Tag);
	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedActorTagFunctionLibrary.OnRemoveActorFromActorTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedActorTagEventAction           Action                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGameplayTag& InActorTag, class AActor* InActor, class AActor* InSecondActor)>Handler                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedActorTagFunctionLibrary::OnRemoveActorFromActorTag(const class UObject* InWorldContext, const ETedActorTagEventAction Action, const struct FGameplayTag& Tag, TDelegate<void(const struct FGameplayTag& InActorTag, class AActor* InActor, class AActor* InSecondActor)> Handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedActorTagFunctionLibrary", "OnRemoveActorFromActorTag");

	Params::TedActorTagFunctionLibrary_OnRemoveActorFromActorTag Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.Action = Action;
	Parms.Tag = std::move(Tag);
	Parms.Handler = Handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedActorTagFunctionLibrary.RemoveActorFromActorTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedActorTagFunctionLibrary::RemoveActorFromActorTag(const class UObject* InWorldContext, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedActorTagFunctionLibrary", "RemoveActorFromActorTag");

	Params::TedActorTagFunctionLibrary_RemoveActorFromActorTag Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedActorTagFunctionLibrary.SetActorUnderActorTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedActorTagFunctionLibrary::SetActorUnderActorTag(const class UObject* InWorldContext, const struct FGameplayTag& Tag, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedActorTagFunctionLibrary", "SetActorUnderActorTag");

	Params::TedActorTagFunctionLibrary_SetActorUnderActorTag Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.Tag = std::move(Tag);
	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedActorTagSubsystem.K2_ActorHasAllMatchingGameplayTags
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     GameplayTags                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedActorTagSubsystem::K2_ActorHasAllMatchingGameplayTags(class AActor* Actor, const struct FGameplayTagContainer& GameplayTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedActorTagSubsystem", "K2_ActorHasAllMatchingGameplayTags");

	Params::TedActorTagSubsystem_K2_ActorHasAllMatchingGameplayTags Parms{};

	Parms.Actor = Actor;
	Parms.GameplayTags = std::move(GameplayTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedActorTagSubsystem.K2_ActorHasAnyMatchingGameplayTags
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     GameplayTags                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedActorTagSubsystem::K2_ActorHasAnyMatchingGameplayTags(class AActor* Actor, const struct FGameplayTagContainer& GameplayTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedActorTagSubsystem", "K2_ActorHasAnyMatchingGameplayTags");

	Params::TedActorTagSubsystem_K2_ActorHasAnyMatchingGameplayTags Parms{};

	Parms.Actor = Actor;
	Parms.GameplayTags = std::move(GameplayTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedActorTagSubsystem.K2_ActorHasMatchingGameplayTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              GameplayTag                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedActorTagSubsystem::K2_ActorHasMatchingGameplayTag(class AActor* Actor, const struct FGameplayTag& GameplayTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedActorTagSubsystem", "K2_ActorHasMatchingGameplayTag");

	Params::TedActorTagSubsystem_K2_ActorHasMatchingGameplayTag Parms{};

	Parms.Actor = Actor;
	Parms.GameplayTag = std::move(GameplayTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedActorTagSubsystem.OnActorEndPlay
// (Final, Native, Protected)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          InEndPlayReason                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedActorTagSubsystem::OnActorEndPlay(class AActor* InActor, EEndPlayReason InEndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedActorTagSubsystem", "OnActorEndPlay");

	Params::TedActorTagSubsystem_OnActorEndPlay Parms{};

	Parms.InActor = InActor;
	Parms.InEndPlayReason = InEndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconPlayerState.OnRep_Admin
// (Final, Native, Protected)

void ATedLobbyBeaconPlayerState::OnRep_Admin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconPlayerState", "OnRep_Admin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconPlayerState.OnRep_HydraId
// (Final, Native, Protected)

void ATedLobbyBeaconPlayerState::OnRep_HydraId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconPlayerState", "OnRep_HydraId");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconPlayerState.GetUniqueId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FUniqueNetIdRepl           ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FUniqueNetIdRepl ATedLobbyBeaconPlayerState::GetUniqueId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconPlayerState", "GetUniqueId");

	Params::TedLobbyBeaconPlayerState_GetUniqueId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCompletedStructuresController.OnPanelContentChange
// (Final, Native, Private)
// Parameters:
// class UTedContentPanelDynamic*          InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCompletedStructuresController::OnPanelContentChange(class UTedContentPanelDynamic* InContentPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCompletedStructuresController", "OnPanelContentChange");

	Params::TedCompletedStructuresController_OnPanelContentChange Parms{};

	Parms.InContentPanel = InContentPanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCompletedStructuresController.OnPanelTriggerSlotAction
// (Final, Native, Private)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCompletedStructuresController::OnPanelTriggerSlotAction(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCompletedStructuresController", "OnPanelTriggerSlotAction");

	Params::TedCompletedStructuresController_OnPanelTriggerSlotAction Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCompletedStructuresController.Refresh
// (Final, Native, Private)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCompletedStructuresController::Refresh(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCompletedStructuresController", "Refresh");

	Params::TedCompletedStructuresController_Refresh Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCompletedStructuresController.ToggleExpansionButtonVisibility
// (Final, Native, Private)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCompletedStructuresController::ToggleExpansionButtonVisibility(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCompletedStructuresController", "ToggleExpansionButtonVisibility");

	Params::TedCompletedStructuresController_ToggleExpansionButtonVisibility Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAIController.PauseLogic
// (Final, Native, Public, BlueprintCallable)

void ATedAIController::PauseLogic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAIController", "PauseLogic");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAIController.ResumeLogic
// (Final, Native, Public, BlueprintCallable)

void ATedAIController::ResumeLogic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAIController", "ResumeLogic");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAIController.StopBehaviorTree
// (Final, Native, Public, BlueprintCallable)

void ATedAIController::StopBehaviorTree()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAIController", "StopBehaviorTree");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAIController.GetCommandTargetActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* ATedAIController::GetCommandTargetActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAIController", "GetCommandTargetActor");

	Params::TedAIController_GetCommandTargetActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAIController.GetCommandTargetLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ATedAIController::GetCommandTargetLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAIController", "GetCommandTargetLocation");

	Params::TedAIController_GetCommandTargetLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAIController.GetCurrentCommandWithBehavior
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UTedPawnCommandWithBehavior>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UTedPawnCommandWithBehavior> ATedAIController::GetCurrentCommandWithBehavior() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAIController", "GetCurrentCommandWithBehavior");

	Params::TedAIController_GetCurrentCommandWithBehavior Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAIController.GetLeashLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ATedAIController::GetLeashLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAIController", "GetLeashLocation");

	Params::TedAIController_GetLeashLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAIController.GetUtilityAIBrain
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UUtilityAIBrain*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUtilityAIBrain* ATedAIController::GetUtilityAIBrain() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAIController", "GetUtilityAIBrain");

	Params::TedAIController_GetUtilityAIBrain Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAIController.IsCommandTargetLocationSet
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedAIController::IsCommandTargetLocationSet() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAIController", "IsCommandTargetLocationSet");

	Params::TedAIController_IsCommandTargetLocationSet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAIController.IsExecutingCommandWithBehavior
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UTedPawnCommandWithBehavior>Command                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedAIController::IsExecutingCommandWithBehavior(TSubclassOf<class UTedPawnCommandWithBehavior> Command) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAIController", "IsExecutingCommandWithBehavior");

	Params::TedAIController_IsExecutingCommandWithBehavior Parms{};

	Parms.Command = Command;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAIController.IsLogicPaused
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedAIController::IsLogicPaused() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAIController", "IsLogicPaused");

	Params::TedAIController_IsLogicPaused Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStatusPanelTooltip.GetTargetStatusPanel
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedStatusPanel*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedStatusPanel* UTedStatusPanelTooltip::GetTargetStatusPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStatusPanelTooltip", "GetTargetStatusPanel");

	Params::TedStatusPanelTooltip_GetTargetStatusPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStatusPanelTooltip.GetTargetStatusSlot
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedStatusSlot*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedStatusSlot* UTedStatusPanelTooltip::GetTargetStatusSlot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStatusPanelTooltip", "GetTargetStatusSlot");

	Params::TedStatusPanelTooltip_GetTargetStatusSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUnitBase.EnableOutline
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bEnabled                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedUnitBase::EnableOutline(const bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitBase", "EnableOutline");

	Params::TedUnitBase_EnableOutline Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUnitBase.K2_OnRep_IsStealthed
// (Event, Protected, BlueprintEvent)

void ATedUnitBase::K2_OnRep_IsStealthed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitBase", "K2_OnRep_IsStealthed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedUnitBase.OnRep_IsStealthed
// (Final, Native, Protected)

void ATedUnitBase::OnRep_IsStealthed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitBase", "OnRep_IsStealthed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUnitBase.OnVetiDomeDeactivated
// (Final, Native, Protected)

void ATedUnitBase::OnVetiDomeDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitBase", "OnVetiDomeDeactivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUnitBase.ReceiveBeginMovement
// (Event, Protected, BlueprintEvent)

void ATedUnitBase::ReceiveBeginMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitBase", "ReceiveBeginMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedUnitBase.ReceiveEndMovement
// (Event, Protected, BlueprintEvent)

void ATedUnitBase::ReceiveEndMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitBase", "ReceiveEndMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedUnitBase.ReceiveTickMovement
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   Speed                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxSpeed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedUnitBase::ReceiveTickMovement(float Speed, float MaxSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitBase", "ReceiveTickMovement");

	Params::TedUnitBase_ReceiveTickMovement Parms{};

	Parms.Speed = Speed;
	Parms.MaxSpeed = MaxSpeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedUnitBase.SetFollowUnit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ATedUnitBase*                     InUnit                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InFollowUnitSpeedAdjustmentDistanceOverride            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedUnitBase::SetFollowUnit(class ATedUnitBase* InUnit, const float InFollowUnitSpeedAdjustmentDistanceOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitBase", "SetFollowUnit");

	Params::TedUnitBase_SetFollowUnit Parms{};

	Parms.InUnit = InUnit;
	Parms.InFollowUnitSpeedAdjustmentDistanceOverride = InFollowUnitSpeedAdjustmentDistanceOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUnitBase.GetDefaultNavigationFilterClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UNavigationQueryFilter>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UNavigationQueryFilter> ATedUnitBase::GetDefaultNavigationFilterClass() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitBase", "GetDefaultNavigationFilterClass");

	Params::TedUnitBase_GetDefaultNavigationFilterClass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUnitBase.GetDefinitionAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedUnitDefinitionAsset*    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedUnitDefinitionAsset* ATedUnitBase::GetDefinitionAsset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitBase", "GetDefinitionAsset");

	Params::TedUnitBase_GetDefinitionAsset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUnitBase.GetFollowUnit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedUnitBase*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedUnitBase* ATedUnitBase::GetFollowUnit() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitBase", "GetFollowUnit");

	Params::TedUnitBase_GetFollowUnit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUnitBase.GetNavFilterSelector
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedNavFilterSelector*      ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedNavFilterSelector* ATedUnitBase::GetNavFilterSelector() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitBase", "GetNavFilterSelector");

	Params::TedUnitBase_GetNavFilterSelector Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUnitBase.IsStealthEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedUnitBase::IsStealthEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitBase", "IsStealthEnabled");

	Params::TedUnitBase_IsStealthEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUnitBase.UpdateOutline
// (Final, Native, Public, Const)
// Parameters:
// const class URTSColorSubsystem*         InRTSColorSubsystem                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedUnitBase::UpdateOutline(const class URTSColorSubsystem* InRTSColorSubsystem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitBase", "UpdateOutline");

	Params::TedUnitBase_UpdateOutline Parms{};

	Parms.InRTSColorSubsystem = InRTSColorSubsystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedVehicle.OnDeployedStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              CallbackTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedVehicle::OnDeployedStateChanged(const struct FGameplayTag& CallbackTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedVehicle", "OnDeployedStateChanged");

	Params::TedVehicle_OnDeployedStateChanged Parms{};

	Parms.CallbackTag = std::move(CallbackTag);
	Parms.NewCount = NewCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedVehicle.SetDrivingInReverse
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bReverse                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedVehicle::SetDrivingInReverse(bool bReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedVehicle", "SetDrivingInReverse");

	Params::TedVehicle_SetDrivingInReverse Parms{};

	Parms.bReverse = bReverse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedVehicle.IsDrivingInReverse
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedVehicle::IsDrivingInReverse() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedVehicle", "IsDrivingInReverse");

	Params::TedVehicle_IsDrivingInReverse Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedVehicle.K2_GetSelectionMIDs
// (Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class UMaterialInstanceDynamic*>*OutSelectionMIDs                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void ATedVehicle::K2_GetSelectionMIDs(TArray<class UMaterialInstanceDynamic*>* OutSelectionMIDs) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedVehicle", "K2_GetSelectionMIDs");

	Params::TedVehicle_K2_GetSelectionMIDs Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutSelectionMIDs != nullptr)
		*OutSelectionMIDs = std::move(Parms.OutSelectionMIDs);
}


// Function Tempest.TedVehicle.SpawnWreck
// (Final, Native, Protected, Const)

void ATedVehicle::SpawnWreck() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedVehicle", "SpawnWreck");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCursorWidget.GetNewSoftwareCursorVisibility
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedCursorWidget::GetNewSoftwareCursorVisibility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCursorWidget", "GetNewSoftwareCursorVisibility");

	Params::TedCursorWidget_GetNewSoftwareCursorVisibility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCursorWidget.GetOldSoftwareCursorVisibility
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedCursorWidget::GetOldSoftwareCursorVisibility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCursorWidget", "GetOldSoftwareCursorVisibility");

	Params::TedCursorWidget_GetOldSoftwareCursorVisibility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAircraft.OnRep_CurrentFlightState
// (Final, Native, Protected)

void ATedAircraft::OnRep_CurrentFlightState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAircraft", "OnRep_CurrentFlightState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAircraft.ReceiveAircraftFlightStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// ETedAircraftFlightState                 NewFlightState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedAircraft::ReceiveAircraftFlightStateChanged(ETedAircraftFlightState NewFlightState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAircraft", "ReceiveAircraftFlightStateChanged");

	Params::TedAircraft_ReceiveAircraftFlightStateChanged Parms{};

	Parms.NewFlightState = NewFlightState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedAircraft.GetBodyTransform
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform*                      OutTransform                                           (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedAircraft::GetBodyTransform(struct FTransform* OutTransform) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAircraft", "GetBodyTransform");

	Params::TedAircraft_GetBodyTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTransform != nullptr)
		*OutTransform = std::move(Parms.OutTransform);
}


// Function Tempest.TedAircraft.GetCurrentAirpad
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedStructureBase*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedStructureBase* ATedAircraft::GetCurrentAirpad() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAircraft", "GetCurrentAirpad");

	Params::TedAircraft_GetCurrentAirpad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAircraft.GetLandingTransform
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform*                      OutTransform                                           (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedAircraft::GetLandingTransform(struct FTransform* OutTransform) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAircraft", "GetLandingTransform");

	Params::TedAircraft_GetLandingTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTransform != nullptr)
		*OutTransform = std::move(Parms.OutTransform);
}


// Function Tempest.TedAircraft.GetParentAirpad
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedStructureBase*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedStructureBase* ATedAircraft::GetParentAirpad() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAircraft", "GetParentAirpad");

	Params::TedAircraft_GetParentAirpad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAircraft.IsAirborne
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedAircraft::IsAirborne() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAircraft", "IsAirborne");

	Params::TedAircraft_IsAirborne Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAircraft.IsLanding
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedAircraft::IsLanding() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAircraft", "IsLanding");

	Params::TedAircraft_IsLanding Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAircraft.IsTakingOff
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedAircraft::IsTakingOff() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAircraft", "IsTakingOff");

	Params::TedAircraft_IsTakingOff Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAircraft.IsVTOL
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedAircraft::IsVTOL() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAircraft", "IsVTOL");

	Params::TedAircraft_IsVTOL Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAircraft.RearmsAtAirpad
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedAircraft::RearmsAtAirpad() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAircraft", "RearmsAtAirpad");

	Params::TedAircraft_RearmsAtAirpad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAircraftMovementComponent.OnRep_bIsAirborne
// (Final, Native, Public)

void UTedAircraftMovementComponent::OnRep_bIsAirborne()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAircraftMovementComponent", "OnRep_bIsAirborne");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAircraftMovementComponent.SetBodyTransform
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FTransform&                InTransform                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedAircraftMovementComponent::SetBodyTransform(const struct FTransform& InTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAircraftMovementComponent", "SetBodyTransform");

	Params::TedAircraftMovementComponent_SetBodyTransform Parms{};

	Parms.InTransform = std::move(InTransform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAircraftMovementComponent.GetBodyTransform
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform*                      OutTransform                                           (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedAircraftMovementComponent::GetBodyTransform(struct FTransform* OutTransform) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAircraftMovementComponent", "GetBodyTransform");

	Params::TedAircraftMovementComponent_GetBodyTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTransform != nullptr)
		*OutTransform = std::move(Parms.OutTransform);
}


// Function Tempest.TedAircraftMovementComponent.GetHTOLSpline
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USplineComponent*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USplineComponent* UTedAircraftMovementComponent::GetHTOLSpline() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAircraftMovementComponent", "GetHTOLSpline");

	Params::TedAircraftMovementComponent_GetHTOLSpline Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAircraftMovementComponent.GetLandingTransform
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform*                      OutTransform                                           (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedAircraftMovementComponent::GetLandingTransform(struct FTransform* OutTransform) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAircraftMovementComponent", "GetLandingTransform");

	Params::TedAircraftMovementComponent_GetLandingTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTransform != nullptr)
		*OutTransform = std::move(Parms.OutTransform);
}


// Function Tempest.TedAircraftMovementComponent.GetTakeOffAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UTedAbilityBase>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UTedAbilityBase> UTedAircraftMovementComponent::GetTakeOffAbility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAircraftMovementComponent", "GetTakeOffAbility");

	Params::TedAircraftMovementComponent_GetTakeOffAbility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAircraftMovementComponent.IsAirborne
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedAircraftMovementComponent::IsAirborne() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAircraftMovementComponent", "IsAirborne");

	Params::TedAircraftMovementComponent_IsAirborne Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAircraftMovementComponent.IsAirborneOnSpawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedAircraftMovementComponent::IsAirborneOnSpawn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAircraftMovementComponent", "IsAirborneOnSpawn");

	Params::TedAircraftMovementComponent_IsAirborneOnSpawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAircraftMovementComponent.IsLanding
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedAircraftMovementComponent::IsLanding() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAircraftMovementComponent", "IsLanding");

	Params::TedAircraftMovementComponent_IsLanding Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAircraftMovementComponent.IsTakingOff
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedAircraftMovementComponent::IsTakingOff() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAircraftMovementComponent", "IsTakingOff");

	Params::TedAircraftMovementComponent_IsTakingOff Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAircraftMovementComponent.IsVTOL
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedAircraftMovementComponent::IsVTOL() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAircraftMovementComponent", "IsVTOL");

	Params::TedAircraftMovementComponent_IsVTOL Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAirpadInterface.GetAirpadTransform
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class ATedAircraft*               Aircraft                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform*                      OutTransform                                           (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITedAirpadInterface::GetAirpadTransform(const class ATedAircraft* Aircraft, struct FTransform* OutTransform) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("TedAirpadInterface", "GetAirpadTransform");

	Params::TedAirpadInterface_GetAirpadTransform Parms{};

	Parms.Aircraft = Aircraft;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTransform != nullptr)
		*OutTransform = std::move(Parms.OutTransform);

	return Parms.ReturnValue;
}


// Function Tempest.TedAirpadInterface.GetFreeAirpadId
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 ITedAirpadInterface::GetFreeAirpadId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("TedAirpadInterface", "GetFreeAirpadId");

	Params::TedAirpadInterface_GetFreeAirpadId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAirpadInterface.GetHTOLSpline
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USplineComponent*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USplineComponent* ITedAirpadInterface::GetHTOLSpline() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("TedAirpadInterface", "GetHTOLSpline");

	Params::TedAirpadInterface_GetHTOLSpline Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAirpadInterface.GetLandingApproachLocation
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class ATedAircraft*               Aircraft                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         OutLandingApproach                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITedAirpadInterface::GetLandingApproachLocation(const class ATedAircraft* Aircraft, struct FVector* OutLandingApproach) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("TedAirpadInterface", "GetLandingApproachLocation");

	Params::TedAirpadInterface_GetLandingApproachLocation Parms{};

	Parms.Aircraft = Aircraft;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLandingApproach != nullptr)
		*OutLandingApproach = std::move(Parms.OutLandingApproach);

	return Parms.ReturnValue;
}


// Function Tempest.TedAirpadInterface.IsParentToAircraft
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class ATedAircraft*               Aircraft                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITedAirpadInterface::IsParentToAircraft(const class ATedAircraft* Aircraft) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("TedAirpadInterface", "IsParentToAircraft");

	Params::TedAirpadInterface_IsParentToAircraft Parms{};

	Parms.Aircraft = Aircraft;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAirpadInterface.K2_GetRegisteredAircraft
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class ATedAircraft*>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ATedAircraft*> ITedAirpadInterface::K2_GetRegisteredAircraft() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("TedAirpadInterface", "K2_GetRegisteredAircraft");

	Params::TedAirpadInterface_K2_GetRegisteredAircraft Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCursorState.CalculateFlipbookParams
// (Final, Native, Static, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class UTexture2D*                       InTexture                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InDisplaySize                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutColumns                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutRows                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCursorState::CalculateFlipbookParams(class UTexture2D* InTexture, const int32 InDisplaySize, int32* OutColumns, int32* OutRows)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedCursorState", "CalculateFlipbookParams");

	Params::TedCursorState_CalculateFlipbookParams Parms{};

	Parms.InTexture = InTexture;
	Parms.InDisplaySize = InDisplaySize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutColumns != nullptr)
		*OutColumns = Parms.OutColumns;

	if (OutRows != nullptr)
		*OutRows = Parms.OutRows;

	return Parms.ReturnValue;
}


// Function Tempest.TedCursorState.GetCursorAttitude
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// ERTSAttitudeType*                       Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCursorState::GetCursorAttitude(ERTSAttitudeType* Out) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCursorState", "GetCursorAttitude");

	Params::TedCursorState_GetCursorAttitude Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out != nullptr)
		*Out = Parms.Out;

	return Parms.ReturnValue;
}


// Function Tempest.TedCursorState.GetPlayerController
// (Final, Native, Protected, BlueprintCallable, Const)
// Parameters:
// class APlayerController*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APlayerController* UTedCursorState::GetPlayerController() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCursorState", "GetPlayerController");

	Params::TedCursorState_GetPlayerController Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCursorState_Command.GetCommandCursor
// (Final, Native, Protected, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const struct FTedCursorDisplayData&     InData                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTedCursorState_Command::GetCommandCursor(const struct FTedCursorDisplayData& InData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCursorState_Command", "GetCommandCursor");

	Params::TedCursorState_Command_GetCommandCursor Parms{};

	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAmmoVisualActor.K2_OnAmmoConsumed
// (Event, Protected, BlueprintEvent)

void ATedAmmoVisualActor::K2_OnAmmoConsumed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAmmoVisualActor", "K2_OnAmmoConsumed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedAmmoVisualActor.K2_OnAmmoRecharged
// (Event, Protected, BlueprintEvent)

void ATedAmmoVisualActor::K2_OnAmmoRecharged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAmmoVisualActor", "K2_OnAmmoRecharged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedAmmoVisualActor.K2_OnAmmoRecharging
// (Event, Protected, BlueprintEvent)

void ATedAmmoVisualActor::K2_OnAmmoRecharging()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAmmoVisualActor", "K2_OnAmmoRecharging");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedAmmoVisualActor.K2_OnVisibilityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bNewVisible                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedAmmoVisualActor::K2_OnVisibilityChanged(bool bNewVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAmmoVisualActor", "K2_OnVisibilityChanged");

	Params::TedAmmoVisualActor_K2_OnVisibilityChanged Parms{};

	Parms.bNewVisible = bNewVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedAmmoVisualActor.IsRecharging
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedAmmoVisualActor::IsRecharging() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAmmoVisualActor", "IsRecharging");

	Params::TedAmmoVisualActor_IsRecharging Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureFactoryTypesSlot.GetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag*                    OutContent                                             (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedStructureFactoryTypesSlot::GetContent(struct FGameplayTag* OutContent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureFactoryTypesSlot", "GetContent");

	Params::TedStructureFactoryTypesSlot_GetContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutContent != nullptr)
		*OutContent = std::move(Parms.OutContent);

	return Parms.ReturnValue;
}


// Function Tempest.TedCustomUpgradeLogic.K2_ApplyUpgrade
// (Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const struct FTedActiveUpgrade&         InActiveUpgrade                                        (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCustomUpgradeLogic::K2_ApplyUpgrade(const struct FTedActiveUpgrade& InActiveUpgrade) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCustomUpgradeLogic", "K2_ApplyUpgrade");

	Params::TedCustomUpgradeLogic_K2_ApplyUpgrade Parms{};

	Parms.InActiveUpgrade = std::move(InActiveUpgrade);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedCustomUpgradeLogic.K2_IsApplicableToPawn
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const class ATedPawn*                   InPawn                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCustomUpgradeLogic::K2_IsApplicableToPawn(const class ATedPawn* InPawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCustomUpgradeLogic", "K2_IsApplicableToPawn");

	Params::TedCustomUpgradeLogic_K2_IsApplicableToPawn Parms{};

	Parms.InPawn = InPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCustomUpgradeLogic.K2_RemoveUpgrade
// (Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const struct FTedActiveUpgrade&         InActiveUpgrade                                        (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCustomUpgradeLogic::K2_RemoveUpgrade(const struct FTedActiveUpgrade& InActiveUpgrade) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCustomUpgradeLogic", "K2_RemoveUpgrade");

	Params::TedCustomUpgradeLogic_K2_RemoveUpgrade Parms{};

	Parms.InActiveUpgrade = std::move(InActiveUpgrade);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedCustomUpgradeLogic.K2_TryApplyToPawn
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ATedPawn*                         InPawn                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCustomUpgradeLogic::K2_TryApplyToPawn(class ATedPawn* InPawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCustomUpgradeLogic", "K2_TryApplyToPawn");

	Params::TedCustomUpgradeLogic_K2_TryApplyToPawn Parms{};

	Parms.InPawn = InPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCustomUpgradeLogic.K2_TryRemoveFromPawn
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ATedPawn*                         InPawn                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCustomUpgradeLogic::K2_TryRemoveFromPawn(class ATedPawn* InPawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCustomUpgradeLogic", "K2_TryRemoveFromPawn");

	Params::TedCustomUpgradeLogic_K2_TryRemoveFromPawn Parms{};

	Parms.InPawn = InPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAnimInstance_Structure.PlayFinishingConstruction
// (Final, Native, Protected)

void UTedAnimInstance_Structure::PlayFinishingConstruction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAnimInstance_Structure", "PlayFinishingConstruction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedDamageType.GetGameplayCueTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayCueTag            ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FGameplayCueTag UTedDamageType::GetGameplayCueTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDamageType", "GetGameplayCueTag");

	Params::TedDamageType_GetGameplayCueTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDifficultyLibrary.DelayWithDifficulty
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             MultiplierPreset                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& LatentSaveGameData                                     (Parm, NativeAccessSpecifierPublic)

void UTedDifficultyLibrary::DelayWithDifficulty(const class UObject* WorldContextObject, float Duration, class FName MultiplierPreset, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& LatentSaveGameData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedDifficultyLibrary", "DelayWithDifficulty");

	Params::TedDifficultyLibrary_DelayWithDifficulty Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Duration = Duration;
	Parms.MultiplierPreset = MultiplierPreset;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.LatentSaveGameData = std::move(LatentSaveGameData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSaveLoadMenuScreen.GoBack
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UTedSaveLoadMenuScreen::GoBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSaveLoadMenuScreen", "GoBack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSaveLoadMenuScreen.OnMenuVisibilityChanged
// (Final, Native, Protected)
// Parameters:
// ESlateVisibility                        NewVisibility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSaveLoadMenuScreen::OnMenuVisibilityChanged(ESlateVisibility NewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSaveLoadMenuScreen", "OnMenuVisibilityChanged");

	Params::TedSaveLoadMenuScreen_OnMenuVisibilityChanged Parms{};

	Parms.NewVisibility = NewVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSaveLoadMenuScreen.OnPopupDeleteSlotButtonClicked
// (Final, Native, Public, BlueprintCallable)

void UTedSaveLoadMenuScreen::OnPopupDeleteSlotButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSaveLoadMenuScreen", "OnPopupDeleteSlotButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSaveLoadMenuScreen.WillHandleGoBackEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedSaveLoadMenuScreen::WillHandleGoBackEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSaveLoadMenuScreen", "WillHandleGoBackEvent");

	Params::TedSaveLoadMenuScreen_WillHandleGoBackEvent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDefinitionPanel.K2_SetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class UTedDefinitionAsset*>&InContent                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedDefinitionPanel::K2_SetContent(const TArray<class UTedDefinitionAsset*>& InContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionPanel", "K2_SetContent");

	Params::TedDefinitionPanel_K2_SetContent Parms{};

	Parms.InContent = std::move(InContent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedDefinitionPanel.K2_SetContentAndContext
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class UTedDefinitionAsset*>&InContent                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class ATedPlayerState*                  InContext                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedDefinitionPanel::K2_SetContentAndContext(const TArray<class UTedDefinitionAsset*>& InContent, class ATedPlayerState* InContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionPanel", "K2_SetContentAndContext");

	Params::TedDefinitionPanel_K2_SetContentAndContext Parms{};

	Parms.InContent = std::move(InContent);
	Parms.InContext = InContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedDefinitionPanel.SetDefinitionContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ATedPlayerState*                  InContext                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedDefinitionPanel::SetDefinitionContext(class ATedPlayerState* InContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionPanel", "SetDefinitionContext");

	Params::TedDefinitionPanel_SetDefinitionContext Parms{};

	Parms.InContext = InContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedDefinitionPanel.GetContentDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedDefinitionAsset*        ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedDefinitionAsset* UTedDefinitionPanel::GetContentDefinition(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionPanel", "GetContentDefinition");

	Params::TedDefinitionPanel_GetContentDefinition Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDefinitionPanel.GetContentDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedDefinitionPanel::GetContentDescription(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionPanel", "GetContentDescription");

	Params::TedDefinitionPanel_GetContentDescription Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDefinitionPanel.GetContentDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedDefinitionPanel::GetContentDisplayName(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionPanel", "GetContentDisplayName");

	Params::TedDefinitionPanel_GetContentDisplayName Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDefinitionPanel.GetContentIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTedDefinitionPanel::GetContentIcon(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionPanel", "GetContentIcon");

	Params::TedDefinitionPanel_GetContentIcon Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDefinitionPanel.GetDefinitionContext
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedPlayerState*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedPlayerState* UTedDefinitionPanel::GetDefinitionContext() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionPanel", "GetDefinitionContext");

	Params::TedDefinitionPanel_GetDefinitionContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAnnouncement.OnAnnouncementPlay
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// const class ATedPlayerController*       OwningPC                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UObject*                    OptionalObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedAnnouncement::OnAnnouncementPlay(const class ATedPlayerController* OwningPC, const class UObject* OptionalObject) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAnnouncement", "OnAnnouncementPlay");

	Params::TedAnnouncement_OnAnnouncementPlay Parms{};

	Parms.OwningPC = OwningPC;
	Parms.OptionalObject = OptionalObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedScoreScreenHeadersPanel.GetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedTableHeaderContent*          OutContent                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedScoreScreenHeadersPanel::GetContent(const int32 InSlotIndex, struct FTedTableHeaderContent* OutContent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreScreenHeadersPanel", "GetContent");

	Params::TedScoreScreenHeadersPanel_GetContent Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutContent != nullptr)
		*OutContent = std::move(Parms.OutContent);

	return Parms.ReturnValue;
}


// Function Tempest.TedScoreScreenHeadersPanel.GetContentByState
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const ETedContentSlotState              InState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InIndex                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedTableHeaderContent*          OutContent                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedScoreScreenHeadersPanel::GetContentByState(const ETedContentSlotState InState, const int32 InIndex, struct FTedTableHeaderContent* OutContent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreScreenHeadersPanel", "GetContentByState");

	Params::TedScoreScreenHeadersPanel_GetContentByState Parms{};

	Parms.InState = InState;
	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutContent != nullptr)
		*OutContent = std::move(Parms.OutContent);

	return Parms.ReturnValue;
}


// Function Tempest.TedScoreScreenHeadersPanel.IsSorting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedScoreScreenHeadersPanel::IsSorting() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreScreenHeadersPanel", "IsSorting");

	Params::TedScoreScreenHeadersPanel_IsSorting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedScoreScreenHeadersPanel.IsSortingEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedScoreScreenHeadersPanel::IsSortingEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreScreenHeadersPanel", "IsSortingEnabled");

	Params::TedScoreScreenHeadersPanel_IsSortingEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedScoreScreenHeadersPanel.IsSortingInAscendingOrder
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedScoreScreenHeadersPanel::IsSortingInAscendingOrder() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreScreenHeadersPanel", "IsSortingInAscendingOrder");

	Params::TedScoreScreenHeadersPanel_IsSortingInAscendingOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAnnouncer.OnAnnouncementFinished
// (Final, Native, Protected)

void UTedAnnouncer::OnAnnouncementFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAnnouncer", "OnAnnouncementFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAnnouncer.StartNextAnnouncement
// (Final, Native, Protected)
// Parameters:
// bool                                    bUseSpacing                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bSilent                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedAnnouncer::StartNextAnnouncement(bool bUseSpacing, const bool bSilent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAnnouncer", "StartNextAnnouncement");

	Params::TedAnnouncer_StartNextAnnouncement Parms{};

	Parms.bUseSpacing = bUseSpacing;
	Parms.bSilent = bSilent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedScoreScreenSlotInterface.SetAvatar
// (Event, Public, BlueprintEvent)
// Parameters:
// class UTexture2D*                       InTexture                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ITedScoreScreenSlotInterface::SetAvatar(class UTexture2D* InTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("TedScoreScreenSlotInterface", "SetAvatar");

	Params::TedScoreScreenSlotInterface_SetAvatar Parms{};

	Parms.InTexture = InTexture;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function Tempest.TedDoctrinePanel.GetDoctrineSlotState_Disabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ETedContentSlotState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedContentSlotState UTedDoctrinePanel::GetDoctrineSlotState_Disabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedDoctrinePanel", "GetDoctrineSlotState_Disabled");

	Params::TedDoctrinePanel_GetDoctrineSlotState_Disabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrinePanel.GetDoctrineSlotState_Purchased
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ETedContentSlotState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedContentSlotState UTedDoctrinePanel::GetDoctrineSlotState_Purchased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedDoctrinePanel", "GetDoctrineSlotState_Purchased");

	Params::TedDoctrinePanel_GetDoctrineSlotState_Purchased Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrinePanel.K2_SetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class UTedDoctrineDefinition*>&InContent                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedDoctrinePanel::K2_SetContent(const TArray<class UTedDoctrineDefinition*>& InContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrinePanel", "K2_SetContent");

	Params::TedDoctrinePanel_K2_SetContent Parms{};

	Parms.InContent = std::move(InContent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedDoctrinePanel.RefreshDoctrinePoints
// (Final, Native, Public, BlueprintCallable)

void UTedDoctrinePanel::RefreshDoctrinePoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrinePanel", "RefreshDoctrinePoints");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedDoctrinePanel.RefreshTreeLabel
// (Final, Native, Public, BlueprintCallable)

void UTedDoctrinePanel::RefreshTreeLabel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrinePanel", "RefreshTreeLabel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedDoctrinePanel.SetContentFromTree
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UTedDoctrineTreeDefinition* InTree                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedDoctrinePanel::SetContentFromTree(const class UTedDoctrineTreeDefinition* InTree)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrinePanel", "SetContentFromTree");

	Params::TedDoctrinePanel_SetContentFromTree Parms{};

	Parms.InTree = InTree;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedDoctrinePanel.GetContentTreeDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedDoctrinePanel::GetContentTreeDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrinePanel", "GetContentTreeDescription");

	Params::TedDoctrinePanel_GetContentTreeDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrinePanel.GetContentTreeIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTedDoctrinePanel::GetContentTreeIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrinePanel", "GetContentTreeIcon");

	Params::TedDoctrinePanel_GetContentTreeIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrinePanel.GetContentTreeTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedDoctrinePanel::GetContentTreeTitle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrinePanel", "GetContentTreeTitle");

	Params::TedDoctrinePanel_GetContentTreeTitle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrinePanel_HUD.SetTargetPlayerData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTedPlayerData*                   InPlayerData                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInRefreshContent                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedDoctrinePanel_HUD::SetTargetPlayerData(class UTedPlayerData* InPlayerData, bool bInRefreshContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrinePanel_HUD", "SetTargetPlayerData");

	Params::TedDoctrinePanel_HUD_SetTargetPlayerData Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.bInRefreshContent = bInRefreshContent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedDoctrinePanel_HUD.GetLastUnlockedSlot
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UTedDoctrineSlot*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedDoctrineSlot* UTedDoctrinePanel_HUD::GetLastUnlockedSlot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrinePanel_HUD", "GetLastUnlockedSlot");

	Params::TedDoctrinePanel_HUD_GetLastUnlockedSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrinePanel_HUD.GetTargetPlayerData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedPlayerData*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedPlayerData* UTedDoctrinePanel_HUD::GetTargetPlayerData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrinePanel_HUD", "GetTargetPlayerData");

	Params::TedDoctrinePanel_HUD_GetTargetPlayerData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrinePanel_HUD.IsLastUnlockedSlot
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedDoctrinePanel_HUD::IsLastUnlockedSlot(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrinePanel_HUD", "IsLastUnlockedSlot");

	Params::TedDoctrinePanel_HUD_IsLastUnlockedSlot Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrinePanel_HUD.IsResearched
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedDoctrinePanel_HUD::IsResearched(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrinePanel_HUD", "IsResearched");

	Params::TedDoctrinePanel_HUD_IsResearched Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrinePanel_HUD.IsResearchInProgress
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedDoctrinePanel_HUD::IsResearchInProgress(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrinePanel_HUD", "IsResearchInProgress");

	Params::TedDoctrinePanel_HUD_IsResearchInProgress Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrinePanel_HUD.IsResearchPaused
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedDoctrinePanel_HUD::IsResearchPaused(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrinePanel_HUD", "IsResearchPaused");

	Params::TedDoctrinePanel_HUD_IsResearchPaused Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrinePanel_HUD.IsResearchRelevant
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedDoctrinePanel_HUD::IsResearchRelevant() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrinePanel_HUD", "IsResearchRelevant");

	Params::TedDoctrinePanel_HUD_IsResearchRelevant Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrinePanel_HUD.IsSlotUnlocked
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedDoctrinePanel_HUD::IsSlotUnlocked(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrinePanel_HUD", "IsSlotUnlocked");

	Params::TedDoctrinePanel_HUD_IsSlotUnlocked Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDefinitionSlot.GetContentDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedDefinitionAsset*        ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedDefinitionAsset* UTedDefinitionSlot::GetContentDefinition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionSlot", "GetContentDefinition");

	Params::TedDefinitionSlot_GetContentDefinition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDefinitionSlot.GetContentDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedDefinitionSlot::GetContentDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionSlot", "GetContentDescription");

	Params::TedDefinitionSlot_GetContentDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDefinitionSlot.GetContentDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedDefinitionSlot::GetContentDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionSlot", "GetContentDisplayName");

	Params::TedDefinitionSlot_GetContentDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDefinitionSlot.GetContentIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTedDefinitionSlot::GetContentIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionSlot", "GetContentIcon");

	Params::TedDefinitionSlot_GetContentIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDefinitionSlot.GetDefinitionContext
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedPlayerState*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedPlayerState* UTedDefinitionSlot::GetDefinitionContext() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionSlot", "GetDefinitionContext");

	Params::TedDefinitionSlot_GetDefinitionContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDefinitionSlot.GetParentPanel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedDefinitionPanel*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedDefinitionPanel* UTedDefinitionSlot::GetParentPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionSlot", "GetParentPanel");

	Params::TedDefinitionSlot_GetParentPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsSlot.AreSpectatorsEnabledOnUI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsSlot::AreSpectatorsEnabledOnUI() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsSlot", "AreSpectatorsEnabledOnUI");

	Params::TedOnlineSessionsSlot_AreSpectatorsEnabledOnUI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsSlot.GetCurrentPlayers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UTedOnlineSessionsSlot::GetCurrentPlayers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsSlot", "GetCurrentPlayers");

	Params::TedOnlineSessionsSlot_GetCurrentPlayers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsSlot.GetCurrentSpectators
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UTedOnlineSessionsSlot::GetCurrentSpectators() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsSlot", "GetCurrentSpectators");

	Params::TedOnlineSessionsSlot_GetCurrentSpectators Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsSlot.GetHostName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedOnlineSessionsSlot::GetHostName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsSlot", "GetHostName");

	Params::TedOnlineSessionsSlot_GetHostName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsSlot.GetLobbyName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedOnlineSessionsSlot::GetLobbyName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsSlot", "GetLobbyName");

	Params::TedOnlineSessionsSlot_GetLobbyName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsSlot.GetMapInfo
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const class UTedMapInfo*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedMapInfo* UTedOnlineSessionsSlot::GetMapInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsSlot", "GetMapInfo");

	Params::TedOnlineSessionsSlot_GetMapInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsSlot.GetMapMinimap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTedOnlineSessionsSlot::GetMapMinimap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsSlot", "GetMapMinimap");

	Params::TedOnlineSessionsSlot_GetMapMinimap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsSlot.GetMapName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedOnlineSessionsSlot::GetMapName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsSlot", "GetMapName");

	Params::TedOnlineSessionsSlot_GetMapName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsSlot.GetMaxPlayers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UTedOnlineSessionsSlot::GetMaxPlayers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsSlot", "GetMaxPlayers");

	Params::TedOnlineSessionsSlot_GetMaxPlayers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsSlot.GetMaxSpectators
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UTedOnlineSessionsSlot::GetMaxSpectators() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsSlot", "GetMaxSpectators");

	Params::TedOnlineSessionsSlot_GetMaxSpectators Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsSlot.GetParentPanel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedOnlineSessionsPanel*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedOnlineSessionsPanel* UTedOnlineSessionsSlot::GetParentPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsSlot", "GetParentPanel");

	Params::TedOnlineSessionsSlot_GetParentPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsSlot.GetPing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedOnlineSessionsSlot::GetPing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsSlot", "GetPing");

	Params::TedOnlineSessionsSlot_GetPing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsSlot.IsPasswordProtected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsSlot::IsPasswordProtected() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsSlot", "IsPasswordProtected");

	Params::TedOnlineSessionsSlot_IsPasswordProtected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAttributePanel.SetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FTedAttributPanelContent>&InContent                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class ATedPawn*                         InContextPawn                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedAttributePanel::SetContent(const TArray<struct FTedAttributPanelContent>& InContent, class ATedPawn* InContextPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAttributePanel", "SetContent");

	Params::TedAttributePanel_SetContent Parms{};

	Parms.InContent = std::move(InContent);
	Parms.InContextPawn = InContextPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAttributePanel.SetContextPawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ATedPawn*                         InContextPawn                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInRefreshUI                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedAttributePanel::SetContextPawn(class ATedPawn* InContextPawn, const bool bInRefreshUI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAttributePanel", "SetContextPawn");

	Params::TedAttributePanel_SetContextPawn Parms{};

	Parms.InContextPawn = InContextPawn;
	Parms.bInRefreshUI = bInRefreshUI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAttributePanel.GetAttributeColor
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor*                    OutColor                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedAttributePanel::GetAttributeColor(const int32 InSlotIndex, struct FLinearColor* OutColor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAttributePanel", "GetAttributeColor");

	Params::TedAttributePanel_GetAttributeColor Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutColor != nullptr)
		*OutColor = std::move(Parms.OutColor);

	return Parms.ReturnValue;
}


// Function Tempest.TedAttributePanel.GetAttributeDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedAttributePanel::GetAttributeDisplayName(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAttributePanel", "GetAttributeDisplayName");

	Params::TedAttributePanel_GetAttributeDisplayName Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAttributePanel.GetAttributeValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInBaseOnly                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedAttributePanel::GetAttributeValue(const int32 InSlotIndex, const bool bInBaseOnly) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAttributePanel", "GetAttributeValue");

	Params::TedAttributePanel_GetAttributeValue Parms{};

	Parms.InSlotIndex = InSlotIndex;
	Parms.bInBaseOnly = bInBaseOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAttributePanel.GetContextPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedPawn*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedPawn* UTedAttributePanel::GetContextPawn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAttributePanel", "GetContextPawn");

	Params::TedAttributePanel_GetContextPawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAttributeSet.OnRep_AttackSpeedMod
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FTedGameplayAttributeData& OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedAttributeSet::OnRep_AttackSpeedMod(const struct FTedGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAttributeSet", "OnRep_AttackSpeedMod");

	Params::TedAttributeSet_OnRep_AttackSpeedMod Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAttributeSet.OnRep_AwakeningTechLevel
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FTedGameplayAttributeData& OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedAttributeSet::OnRep_AwakeningTechLevel(const struct FTedGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAttributeSet", "OnRep_AwakeningTechLevel");

	Params::TedAttributeSet_OnRep_AwakeningTechLevel Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAttributeSet.OnRep_EnlightenedSacrificed
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FTedGameplayAttributeData& OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedAttributeSet::OnRep_EnlightenedSacrificed(const struct FTedGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAttributeSet", "OnRep_EnlightenedSacrificed");

	Params::TedAttributeSet_OnRep_EnlightenedSacrificed Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAttributeSet.OnRep_FoWRadiusAttributesMultiplier
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FTedGameplayAttributeData& OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedAttributeSet::OnRep_FoWRadiusAttributesMultiplier(const struct FTedGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAttributeSet", "OnRep_FoWRadiusAttributesMultiplier");

	Params::TedAttributeSet_OnRep_FoWRadiusAttributesMultiplier Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAttributeSet.OnRep_Health
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FTedGameplayAttributeData& OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedAttributeSet::OnRep_Health(const struct FTedGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAttributeSet", "OnRep_Health");

	Params::TedAttributeSet_OnRep_Health Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAttributeSet.OnRep_HealthMax
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FTedGameplayAttributeData& OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedAttributeSet::OnRep_HealthMax(const struct FTedGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAttributeSet", "OnRep_HealthMax");

	Params::TedAttributeSet_OnRep_HealthMax Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAttributeSet.OnRep_MovementSpeedMod
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FTedGameplayAttributeData& OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedAttributeSet::OnRep_MovementSpeedMod(const struct FTedGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAttributeSet", "OnRep_MovementSpeedMod");

	Params::TedAttributeSet_OnRep_MovementSpeedMod Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedAttributeSet.OnRep_ProductionTimeMultiplier
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FTedGameplayAttributeData& OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedAttributeSet::OnRep_ProductionTimeMultiplier(const struct FTedGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAttributeSet", "OnRep_ProductionTimeMultiplier");

	Params::TedAttributeSet_OnRep_ProductionTimeMultiplier Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPassiveAbilityPanel.K2_SetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class UTedPassiveAbilityDefinitionAsset*>&InContent                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedPassiveAbilityPanel::K2_SetContent(const TArray<class UTedPassiveAbilityDefinitionAsset*>& InContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPassiveAbilityPanel", "K2_SetContent");

	Params::TedPassiveAbilityPanel_K2_SetContent Parms{};

	Parms.InContent = std::move(InContent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPassiveAbilityPanel.GetContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedPassiveAbilityDefinitionAsset*ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedPassiveAbilityDefinitionAsset* UTedPassiveAbilityPanel::GetContent(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPassiveAbilityPanel", "GetContent");

	Params::TedPassiveAbilityPanel_GetContent Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPassiveAbilityPanel.GetContentDescription
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText*                            OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPassiveAbilityPanel::GetContentDescription(const int32 InSlotIndex, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPassiveAbilityPanel", "GetContentDescription");

	Params::TedPassiveAbilityPanel_GetContentDescription Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function Tempest.TedPassiveAbilityPanel.GetContentDisplayName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText*                            OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPassiveAbilityPanel::GetContentDisplayName(const int32 InSlotIndex, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPassiveAbilityPanel", "GetContentDisplayName");

	Params::TedPassiveAbilityPanel_GetContentDisplayName Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function Tempest.TedPassiveAbilityPanel.GetContentIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTedPassiveAbilityPanel::GetContentIcon(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPassiveAbilityPanel", "GetContentIcon");

	Params::TedPassiveAbilityPanel_GetContentIcon Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAttributeSlot.GetAttributeValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedAttributeSlot::GetAttributeValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAttributeSlot", "GetAttributeValue");

	Params::TedAttributeSlot_GetAttributeValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAttributeSlot.GetAttributeDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedAttributeSlot::GetAttributeDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAttributeSlot", "GetAttributeDisplayName");

	Params::TedAttributeSlot_GetAttributeDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAttributeSlot.GetContextPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedPawn*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedPawn* UTedAttributeSlot::GetContextPawn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAttributeSlot", "GetContextPawn");

	Params::TedAttributeSlot_GetContextPawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedAttributeSlot.GetParentPanel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedAttributePanel*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedAttributePanel* UTedAttributeSlot::GetParentPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedAttributeSlot", "GetParentPanel");

	Params::TedAttributeSlot_GetParentPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBlackboardHelpers.GetBlackboardAttackGraceRange
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UBTNode*                          NodeOwner                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedBlackboardHelpers::GetBlackboardAttackGraceRange(class UBTNode* NodeOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedBlackboardHelpers", "GetBlackboardAttackGraceRange");

	Params::TedBlackboardHelpers_GetBlackboardAttackGraceRange Parms{};

	Parms.NodeOwner = NodeOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBlackboardHelpers.GetBlackboardAttackRange
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UBTNode*                          NodeOwner                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedBlackboardHelpers::GetBlackboardAttackRange(class UBTNode* NodeOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedBlackboardHelpers", "GetBlackboardAttackRange");

	Params::TedBlackboardHelpers_GetBlackboardAttackRange Parms{};

	Parms.NodeOwner = NodeOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBlackboardHelpers.GetBlackboardChaseRange
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UBTNode*                          NodeOwner                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedBlackboardHelpers::GetBlackboardChaseRange(class UBTNode* NodeOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedBlackboardHelpers", "GetBlackboardChaseRange");

	Params::TedBlackboardHelpers_GetBlackboardChaseRange Parms{};

	Parms.NodeOwner = NodeOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBlackboardHelpers.GetBlackboardCommandAbilityClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UBTNode*                          NodeOwner                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UGameplayAbility>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UGameplayAbility> UTedBlackboardHelpers::GetBlackboardCommandAbilityClass(class UBTNode* NodeOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedBlackboardHelpers", "GetBlackboardCommandAbilityClass");

	Params::TedBlackboardHelpers_GetBlackboardCommandAbilityClass Parms{};

	Parms.NodeOwner = NodeOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBlackboardHelpers.GetBlackboardCommandClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UBTNode*                          NodeOwner                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UTedCommand>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UTedCommand> UTedBlackboardHelpers::GetBlackboardCommandClass(class UBTNode* NodeOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedBlackboardHelpers", "GetBlackboardCommandClass");

	Params::TedBlackboardHelpers_GetBlackboardCommandClass Parms{};

	Parms.NodeOwner = NodeOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBlackboardHelpers.GetBlackboardLeashLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UBTNode*                          NodeOwner                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UTedBlackboardHelpers::GetBlackboardLeashLocation(class UBTNode* NodeOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedBlackboardHelpers", "GetBlackboardLeashLocation");

	Params::TedBlackboardHelpers_GetBlackboardLeashLocation Parms{};

	Parms.NodeOwner = NodeOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBlackboardHelpers.GetBlackboardPatrolLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UBTNode*                          NodeOwner                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UTedBlackboardHelpers::GetBlackboardPatrolLocation(class UBTNode* NodeOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedBlackboardHelpers", "GetBlackboardPatrolLocation");

	Params::TedBlackboardHelpers_GetBlackboardPatrolLocation Parms{};

	Parms.NodeOwner = NodeOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBlackboardHelpers.GetBlackboardTargetActor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UBTNode*                          NodeOwner                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UTedBlackboardHelpers::GetBlackboardTargetActor(class UBTNode* NodeOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedBlackboardHelpers", "GetBlackboardTargetActor");

	Params::TedBlackboardHelpers_GetBlackboardTargetActor Parms{};

	Parms.NodeOwner = NodeOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBlackboardHelpers.GetBlackboardTargetLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UBTNode*                          NodeOwner                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UTedBlackboardHelpers::GetBlackboardTargetLocation(class UBTNode* NodeOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedBlackboardHelpers", "GetBlackboardTargetLocation");

	Params::TedBlackboardHelpers_GetBlackboardTargetLocation Parms{};

	Parms.NodeOwner = NodeOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBlackboardHelpers.GetBlackBoardValueAsGameplayTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UBTNode*                          NodeOwner                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FBlackboardKeySelector&    Key                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTag*                    OutTag                                                 (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedBlackboardHelpers::GetBlackBoardValueAsGameplayTag(class UBTNode* NodeOwner, const struct FBlackboardKeySelector& Key, struct FGameplayTag* OutTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedBlackboardHelpers", "GetBlackBoardValueAsGameplayTag");

	Params::TedBlackboardHelpers_GetBlackBoardValueAsGameplayTag Parms{};

	Parms.NodeOwner = NodeOwner;
	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTag != nullptr)
		*OutTag = std::move(Parms.OutTag);
}


// Function Tempest.TedBlackboardHelpers.SetBlackBoardValueAsGameplayTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UBTNode*                          NodeOwner                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FBlackboardKeySelector&    Key                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedBlackboardHelpers::SetBlackBoardValueAsGameplayTag(class UBTNode* NodeOwner, const struct FBlackboardKeySelector& Key, const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedBlackboardHelpers", "SetBlackBoardValueAsGameplayTag");

	Params::TedBlackboardHelpers_SetBlackBoardValueAsGameplayTag Parms{};

	Parms.NodeOwner = NodeOwner;
	Parms.Key = std::move(Key);
	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedBriefing.GetDialogueLines
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const TArray<struct FTedDialogueLine>   ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FTedDialogueLine> UTedBriefing::GetDialogueLines() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBriefing", "GetDialogueLines");

	Params::TedBriefing_GetDialogueLines Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBriefing.HasDialogueLines
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedBriefing::HasDialogueLines() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBriefing", "HasDialogueLines");

	Params::TedBriefing_HasDialogueLines Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBriefing.IsFinale
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedBriefing::IsFinale() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBriefing", "IsFinale");

	Params::TedBriefing_IsFinale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridController.Factories_OnActivateSlotState
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedBuildingGridController::Factories_OnActivateSlotState(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridController", "Factories_OnActivateSlotState");

	Params::TedBuildingGridController_Factories_OnActivateSlotState Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedBuildingGridController.Factories_OnPageSwitched
// (Final, Native, Protected)

void UTedBuildingGridController::Factories_OnPageSwitched()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridController", "Factories_OnPageSwitched");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedBuildingGridController.FactoryTabs_OnActivateSlotState
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedBuildingGridController::FactoryTabs_OnActivateSlotState(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridController", "FactoryTabs_OnActivateSlotState");

	Params::TedBuildingGridController_FactoryTabs_OnActivateSlotState Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedBuildingGridController.K2_OnVisibilityChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// const ESlateVisibility                  InFrom                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ESlateVisibility                  InTo                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedBuildingGridController::K2_OnVisibilityChange(const ESlateVisibility InFrom, const ESlateVisibility InTo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridController", "K2_OnVisibilityChange");

	Params::TedBuildingGridController_K2_OnVisibilityChange Parms{};

	Parms.InFrom = InFrom;
	Parms.InTo = InTo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedBuildingGridController.ModeTabs_OnActivateSlotState
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedBuildingGridController::ModeTabs_OnActivateSlotState(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridController", "ModeTabs_OnActivateSlotState");

	Params::TedBuildingGridController_ModeTabs_OnActivateSlotState Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedBuildingGridController.IsWithinBuildTab
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedBuildingGridController::IsWithinBuildTab() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridController", "IsWithinBuildTab");

	Params::TedBuildingGridController_IsWithinBuildTab Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridController.IsWithinDoctrineTab
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedBuildingGridController::IsWithinDoctrineTab() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridController", "IsWithinDoctrineTab");

	Params::TedBuildingGridController_IsWithinDoctrineTab Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridPanel.GetMissingPrerequisitesSlotState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ETedContentSlotState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedContentSlotState UTedBuildingGridPanel::GetMissingPrerequisitesSlotState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedBuildingGridPanel", "GetMissingPrerequisitesSlotState");

	Params::TedBuildingGridPanel_GetMissingPrerequisitesSlotState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridPanel.K2_SelectFactoryTab
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              InTab                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInRefreshContent                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedBuildingGridPanel::K2_SelectFactoryTab(const struct FGameplayTag& InTab, bool bInRefreshContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridPanel", "K2_SelectFactoryTab");

	Params::TedBuildingGridPanel_K2_SelectFactoryTab Parms{};

	Parms.InTab = std::move(InTab);
	Parms.bInRefreshContent = bInRefreshContent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedBuildingGridPanel.RefreshDisabledState
// (Final, Native, Public, BlueprintCallable)

void UTedBuildingGridPanel::RefreshDisabledState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridPanel", "RefreshDisabledState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedBuildingGridPanel.SelectFactory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ATedStructureBase*                InFactory                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInRefreshContent                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedBuildingGridPanel::SelectFactory(class ATedStructureBase* InFactory, bool bInRefreshContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridPanel", "SelectFactory");

	Params::TedBuildingGridPanel_SelectFactory Parms{};

	Parms.InFactory = InFactory;
	Parms.bInRefreshContent = bInRefreshContent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedBuildingGridPanel.SetTargetPlayerData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTedPlayerData*                   InPlayerData                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInRefreshContent                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedBuildingGridPanel::SetTargetPlayerData(class UTedPlayerData* InPlayerData, bool bInRefreshContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridPanel", "SetTargetPlayerData");

	Params::TedBuildingGridPanel_SetTargetPlayerData Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.bInRefreshContent = bInRefreshContent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedBuildingGridPanel.GetSelectedFactory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedStructureBase*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedStructureBase* UTedBuildingGridPanel::GetSelectedFactory() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridPanel", "GetSelectedFactory");

	Params::TedBuildingGridPanel_GetSelectedFactory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridPanel.GetSelectedFactoryTab
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag*                    OutTab                                                 (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedBuildingGridPanel::GetSelectedFactoryTab(struct FGameplayTag* OutTab) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridPanel", "GetSelectedFactoryTab");

	Params::TedBuildingGridPanel_GetSelectedFactoryTab Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTab != nullptr)
		*OutTab = std::move(Parms.OutTab);

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridPanel.GetShortcut
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInputActionKeyMapping*          OutShortcut                                            (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedBuildingGridPanel::GetShortcut(const int32 InSlotIndex, struct FInputActionKeyMapping* OutShortcut) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridPanel", "GetShortcut");

	Params::TedBuildingGridPanel_GetShortcut Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutShortcut != nullptr)
		*OutShortcut = std::move(Parms.OutShortcut);

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridPanel.GetTargetPlayerData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedPlayerData*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedPlayerData* UTedBuildingGridPanel::GetTargetPlayerData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridPanel", "GetTargetPlayerData");

	Params::TedBuildingGridPanel_GetTargetPlayerData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridPanel.IsConstructionCompleted
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedBuildingGridPanel::IsConstructionCompleted(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridPanel", "IsConstructionCompleted");

	Params::TedBuildingGridPanel_IsConstructionCompleted Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridPanel.IsConstructionInProgress
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedBuildingGridPanel::IsConstructionInProgress(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridPanel", "IsConstructionInProgress");

	Params::TedBuildingGridPanel_IsConstructionInProgress Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridPanel.IsConstructionPaused
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedBuildingGridPanel::IsConstructionPaused(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridPanel", "IsConstructionPaused");

	Params::TedBuildingGridPanel_IsConstructionPaused Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridPanel.K2_GetContent_Structure
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// int32                                   InSlotIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ATedStructureBase>*   OutContent                                             (Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedBuildingGridPanel::K2_GetContent_Structure(int32 InSlotIndex, TSubclassOf<class ATedStructureBase>* OutContent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridPanel", "K2_GetContent_Structure");

	Params::TedBuildingGridPanel_K2_GetContent_Structure Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutContent != nullptr)
		*OutContent = Parms.OutContent;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridPanel.K2_GetContent_Unit
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// int32                                   InSlotIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ATedUnitBase>*        OutContent                                             (Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedBuildingGridPanel::K2_GetContent_Unit(int32 InSlotIndex, TSubclassOf<class ATedUnitBase>* OutContent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridPanel", "K2_GetContent_Unit");

	Params::TedBuildingGridPanel_K2_GetContent_Unit Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutContent != nullptr)
		*OutContent = Parms.OutContent;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveConditionBase.NotifyProgressChange
// (Final, Native, Protected, BlueprintCallable)

void UTedObjectiveConditionBase::NotifyProgressChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveConditionBase", "NotifyProgressChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedObjectiveConditionBase.RemoveMarker
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const class AActor*                     InActor                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedObjectiveConditionBase::RemoveMarker(const class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveConditionBase", "RemoveMarker");

	Params::TedObjectiveConditionBase_RemoveMarker Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedObjectiveConditionBase.TryAddMarker
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const class AActor*                     InActor                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedMarkerHandle                 ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTedMarkerHandle UTedObjectiveConditionBase::TryAddMarker(const class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveConditionBase", "TryAddMarker");

	Params::TedObjectiveConditionBase_TryAddMarker Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveConditionBase.CanBeDisplayedOnUI
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedObjectiveConditionBase::CanBeDisplayedOnUI() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveConditionBase", "CanBeDisplayedOnUI");

	Params::TedObjectiveConditionBase_CanBeDisplayedOnUI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveConditionBase.ExpectsRuntimeData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedObjectiveConditionBase::ExpectsRuntimeData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveConditionBase", "ExpectsRuntimeData");

	Params::TedObjectiveConditionBase_ExpectsRuntimeData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveConditionBase.GetCurrentDesiredResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EObjectiveResultWithNone                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EObjectiveResultWithNone UTedObjectiveConditionBase::GetCurrentDesiredResult() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveConditionBase", "GetCurrentDesiredResult");

	Params::TedObjectiveConditionBase_GetCurrentDesiredResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveConditionBase.GetDesiredResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const EObjectiveConditionState          InState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EObjectiveResultWithNone                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EObjectiveResultWithNone UTedObjectiveConditionBase::GetDesiredResult(const EObjectiveConditionState InState) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveConditionBase", "GetDesiredResult");

	Params::TedObjectiveConditionBase_GetDesiredResult Parms{};

	Parms.InState = InState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveConditionBase.GetState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EObjectiveConditionState                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EObjectiveConditionState UTedObjectiveConditionBase::GetState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveConditionBase", "GetState");

	Params::TedObjectiveConditionBase_GetState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveConditionBase.HasAnyDesiredResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedObjectiveConditionBase::HasAnyDesiredResult() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveConditionBase", "HasAnyDesiredResult");

	Params::TedObjectiveConditionBase_HasAnyDesiredResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveConditionBase.HasDesiredResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EObjectiveResult                        InResult                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedObjectiveConditionBase::HasDesiredResult(EObjectiveResult InResult) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveConditionBase", "HasDesiredResult");

	Params::TedObjectiveConditionBase_HasDesiredResult Parms{};

	Parms.InResult = InResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveConditionBase.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedObjectiveConditionBase::IsActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveConditionBase", "IsActive");

	Params::TedObjectiveConditionBase_IsActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveConditionBase.IsRestoringFromSave
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedObjectiveConditionBase::IsRestoringFromSave() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveConditionBase", "IsRestoringFromSave");

	Params::TedObjectiveConditionBase_IsRestoringFromSave Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveCondition_HaveResourceBase.OnPlayerResourcesChangeEvent_Handler
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UTedPlayerData*                   InPlayerData                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedPlayerDataResources&   InPrevious                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FTedPlayerDataResources&   InCurrent                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTedObjectiveCondition_HaveResourceBase::OnPlayerResourcesChangeEvent_Handler(class UTedPlayerData* InPlayerData, const struct FTedPlayerDataResources& InPrevious, const struct FTedPlayerDataResources& InCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveCondition_HaveResourceBase", "OnPlayerResourcesChangeEvent_Handler");

	Params::TedObjectiveCondition_HaveResourceBase_OnPlayerResourcesChangeEvent_Handler Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InPrevious = std::move(InPrevious);
	Parms.InCurrent = std::move(InCurrent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedBuildingGridSlotBase.OnRefresh_Common
// (Event, Protected, BlueprintEvent)
// Parameters:
// const class UTedEntityDefinitionAsset*  InDefinition                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedBuildingGridSlotBase::OnRefresh_Common(const class UTedEntityDefinitionAsset* InDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotBase", "OnRefresh_Common");

	Params::TedBuildingGridSlotBase_OnRefresh_Common Parms{};

	Parms.InDefinition = InDefinition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedBuildingGridSlotBase.OnRefresh_Empty
// (Event, Protected, BlueprintEvent)

void UTedBuildingGridSlotBase::OnRefresh_Empty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotBase", "OnRefresh_Empty");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedBuildingGridSlotBase.OnRefresh_Progress
// (Event, Protected, BlueprintEvent)
// Parameters:
// uint8                                   InQueuedCount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInPaused                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInCompleted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInRunning                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InProgress                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedBuildingGridSlotBase::OnRefresh_Progress(uint8 InQueuedCount, bool bInPaused, bool bInCompleted, bool bInRunning, float InProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotBase", "OnRefresh_Progress");

	Params::TedBuildingGridSlotBase_OnRefresh_Progress Parms{};

	Parms.InQueuedCount = InQueuedCount;
	Parms.bInPaused = bInPaused;
	Parms.bInCompleted = bInCompleted;
	Parms.bInRunning = bInRunning;
	Parms.InProgress = InProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedBuildingGridSlotBase.OnRefresh_Structure
// (Event, Protected, BlueprintEvent)
// Parameters:
// const class UTedStructureDefinitionAsset*InDefinition                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedBuildingGridSlotBase::OnRefresh_Structure(const class UTedStructureDefinitionAsset* InDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotBase", "OnRefresh_Structure");

	Params::TedBuildingGridSlotBase_OnRefresh_Structure Parms{};

	Parms.InDefinition = InDefinition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedBuildingGridSlotBase.OnRefresh_Unit
// (Event, Protected, BlueprintEvent)
// Parameters:
// const class UTedUnitDefinitionAsset*    InDefinition                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedBuildingGridSlotBase::OnRefresh_Unit(const class UTedUnitDefinitionAsset* InDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotBase", "OnRefresh_Unit");

	Params::TedBuildingGridSlotBase_OnRefresh_Unit Parms{};

	Parms.InDefinition = InDefinition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedBuildingGridSlotBase.RefreshProgress
// (Final, Native, Public, BlueprintCallable)

void UTedBuildingGridSlotBase::RefreshProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotBase", "RefreshProgress");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedBuildingGridSlotBase.GetBuildingGridPanel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedBuildingGridPanel*            ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedBuildingGridPanel* UTedBuildingGridSlotBase::GetBuildingGridPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotBase", "GetBuildingGridPanel");

	Params::TedBuildingGridSlotBase_GetBuildingGridPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotBase.GetFactory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedStructureBase*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedStructureBase* UTedBuildingGridSlotBase::GetFactory() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotBase", "GetFactory");

	Params::TedBuildingGridSlotBase_GetFactory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotBase.HasContent
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedBuildingGridSlotBase::HasContent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotBase", "HasContent");

	Params::TedBuildingGridSlotBase_HasContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotBase.IsStructure
// (Final, Native, Protected, BlueprintCallable, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedBuildingGridSlotBase::IsStructure() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotBase", "IsStructure");

	Params::TedBuildingGridSlotBase_IsStructure Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedBuildingGridSlotBase.IsUnit
// (Final, Native, Protected, BlueprintCallable, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedBuildingGridSlotBase::IsUnit() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedBuildingGridSlotBase", "IsUnit");

	Params::TedBuildingGridSlotBase_IsUnit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveCondition_KillActors.PassRuntimeData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class ATedPawn*>&          InActors                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const uint8                             InExpectedAmount                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedObjectiveCondition_KillActors::PassRuntimeData(const TArray<class ATedPawn*>& InActors, const uint8 InExpectedAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveCondition_KillActors", "PassRuntimeData");

	Params::TedObjectiveCondition_KillActors_PassRuntimeData Parms{};

	Parms.InActors = std::move(InActors);
	Parms.InExpectedAmount = InExpectedAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedChartWidgetBase.Reset
// (Final, Native, Public, BlueprintCallable)

void UTedChartWidgetBase::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChartWidgetBase", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedChartWidgetBase.RestartAnimation
// (Final, Native, Public, BlueprintCallable)

void UTedChartWidgetBase::RestartAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChartWidgetBase", "RestartAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedChartWidgetBase.SetDisplayData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTedChartDisplayData&      InData                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const bool                              bInRestartAnim                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedChartWidgetBase::SetDisplayData(const struct FTedChartDisplayData& InData, const bool bInRestartAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChartWidgetBase", "SetDisplayData");

	Params::TedChartWidgetBase_SetDisplayData Parms{};

	Parms.InData = std::move(InData);
	Parms.bInRestartAnim = bInRestartAnim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedObjectiveCondition_LosePawn.OnPawnEndPlay
// (Final, Native, Protected)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          InEndPlayReason                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedObjectiveCondition_LosePawn::OnPawnEndPlay(class AActor* InActor, EEndPlayReason InEndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveCondition_LosePawn", "OnPawnEndPlay");

	Params::TedObjectiveCondition_LosePawn_OnPawnEndPlay Parms{};

	Parms.InActor = InActor;
	Parms.InEndPlayReason = InEndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedObjectiveCondition_StructureTeam.PassRuntimeData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class ATedStructureBase*>& InStructures                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InPlayerID                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8                             InExpectedAmount                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInInverseCondition                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedObjectiveCondition_StructureTeam::PassRuntimeData(const TArray<class ATedStructureBase*>& InStructures, const ETedPlayerID InPlayerID, const uint8 InExpectedAmount, const bool bInInverseCondition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveCondition_StructureTeam", "PassRuntimeData");

	Params::TedObjectiveCondition_StructureTeam_PassRuntimeData Parms{};

	Parms.InStructures = std::move(InStructures);
	Parms.InPlayerID = InPlayerID;
	Parms.InExpectedAmount = InExpectedAmount;
	Parms.bInInverseCondition = bInInverseCondition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedChatPartyContextPanel.GetStateForUnreadMessageInContext
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ETedContentSlotState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedContentSlotState UTedChatPartyContextPanel::GetStateForUnreadMessageInContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedChatPartyContextPanel", "GetStateForUnreadMessageInContext");

	Params::TedChatPartyContextPanel_GetStateForUnreadMessageInContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedChatPartyContextPanel.CloseContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             SlotIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedChatPartyContextPanel::CloseContext(const int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyContextPanel", "CloseContext");

	Params::TedChatPartyContextPanel_CloseContext Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedChatPartyContextPanel.GetContextTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const int32                             SlotIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedChatPartyContextPanel::GetContextTitle(const int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyContextPanel", "GetContextTitle");

	Params::TedChatPartyContextPanel_GetContextTitle Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedChatPartyContextPanel.IsSlotLobbyContext
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const int32                             SlotIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedChatPartyContextPanel::IsSlotLobbyContext(const int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyContextPanel", "IsSlotLobbyContext");

	Params::TedChatPartyContextPanel_IsSlotLobbyContext Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedChatPartyContextPanel.IsSlotTeamContext
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const int32                             SlotIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedChatPartyContextPanel::IsSlotTeamContext(const int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyContextPanel", "IsSlotTeamContext");

	Params::TedChatPartyContextPanel_IsSlotTeamContext Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedChatPartyContextPanel.IsSlotWhisperContext
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const int32                             SlotIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedChatPartyContextPanel::IsSlotWhisperContext(const int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyContextPanel", "IsSlotWhisperContext");

	Params::TedChatPartyContextPanel_IsSlotWhisperContext Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedChatPartyPlayerBadge.K2_DescribeDestination
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const EChatMessageDestination&          Destination                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedChatPartyPlayerBadge::K2_DescribeDestination(const EChatMessageDestination& Destination)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyPlayerBadge", "K2_DescribeDestination");

	Params::TedChatPartyPlayerBadge_K2_DescribeDestination Parms{};

	Parms.Destination = Destination;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedChatPartyPlayerBadge.K2_DescribePreorder
// (Event, Public, BlueprintEvent)
// Parameters:
// const bool                              bPreorder                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedChatPartyPlayerBadge::K2_DescribePreorder(const bool bPreorder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyPlayerBadge", "K2_DescribePreorder");

	Params::TedChatPartyPlayerBadge_K2_DescribePreorder Parms{};

	Parms.bPreorder = bPreorder;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedChatPartyPlayerBadge.K2_DescribeSameTeam
// (Event, Public, BlueprintEvent)
// Parameters:
// const bool                              bIsSameTeam                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedChatPartyPlayerBadge::K2_DescribeSameTeam(const bool bIsSameTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyPlayerBadge", "K2_DescribeSameTeam");

	Params::TedChatPartyPlayerBadge_K2_DescribeSameTeam Parms{};

	Parms.bIsSameTeam = bIsSameTeam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedChatPartyPlayerBadge.K2_DescribeSender
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const EChatMessageSender&               Sender                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedChatPartyPlayerBadge::K2_DescribeSender(const EChatMessageSender& Sender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyPlayerBadge", "K2_DescribeSender");

	Params::TedChatPartyPlayerBadge_K2_DescribeSender Parms{};

	Parms.Sender = Sender;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedChatPartyPlayerBadge.K2_DescribeSenderName
// (Event, Public, BlueprintEvent)
// Parameters:
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedChatPartyPlayerBadge::K2_DescribeSenderName(const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyPlayerBadge", "K2_DescribeSenderName");

	Params::TedChatPartyPlayerBadge_K2_DescribeSenderName Parms{};

	Parms.Name_0 = std::move(Name_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedChatPartyPlayerBadge.K2_DescribeTimestamp
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FDateTime&                 Timestamp                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedChatPartyPlayerBadge::K2_DescribeTimestamp(const struct FDateTime& Timestamp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyPlayerBadge", "K2_DescribeTimestamp");

	Params::TedChatPartyPlayerBadge_K2_DescribeTimestamp Parms{};

	Parms.Timestamp = std::move(Timestamp);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedMovieSequencePlayerActor.K2_GetMovieSequencePlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InContextObject                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              SequenceTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedMovieSequencePlayerActor*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedMovieSequencePlayerActor* ATedMovieSequencePlayerActor::K2_GetMovieSequencePlayer(const class UObject* InContextObject, const struct FGameplayTag& SequenceTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedMovieSequencePlayerActor", "K2_GetMovieSequencePlayer");

	Params::TedMovieSequencePlayerActor_K2_GetMovieSequencePlayer Parms{};

	Parms.InContextObject = InContextObject;
	Parms.SequenceTag = std::move(SequenceTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMovieSequencePlayerActor.PlayFirstStage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedMovieSequencePlayerActor::PlayFirstStage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMovieSequencePlayerActor", "PlayFirstStage");

	Params::TedMovieSequencePlayerActor_PlayFirstStage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMovieSequencePlayerActor.PlayLastStage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedMovieSequencePlayerActor::PlayLastStage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMovieSequencePlayerActor", "PlayLastStage");

	Params::TedMovieSequencePlayerActor_PlayLastStage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMovieSequencePlayerActor.PlayNextStage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedMovieSequencePlayerActor::PlayNextStage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMovieSequencePlayerActor", "PlayNextStage");

	Params::TedMovieSequencePlayerActor_PlayNextStage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMovieSequencePlayerActor.PlayStage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InStageIndex                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedMovieSequencePlayerActor::PlayStage(const int32 InStageIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMovieSequencePlayerActor", "PlayStage");

	Params::TedMovieSequencePlayerActor_PlayStage Parms{};

	Parms.InStageIndex = InStageIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMovieSequencePlayerActor.SetPlaying
// (Final, Native, Protected)
// Parameters:
// const bool                              bInValue                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedMovieSequencePlayerActor::SetPlaying(const bool bInValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMovieSequencePlayerActor", "SetPlaying");

	Params::TedMovieSequencePlayerActor_SetPlaying Parms{};

	Parms.bInValue = bInValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMovieSequencePlayerActor.SetPlayingStage
// (Final, Native, Protected)
// Parameters:
// const int32                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedMovieSequencePlayerActor::SetPlayingStage(const int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMovieSequencePlayerActor", "SetPlayingStage");

	Params::TedMovieSequencePlayerActor_SetPlayingStage Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMovieSequencePlayerActor.GetLastStage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ATedMovieSequencePlayerActor::GetLastStage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMovieSequencePlayerActor", "GetLastStage");

	Params::TedMovieSequencePlayerActor_GetLastStage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMovieSequencePlayerActor.GetMovieConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedMoviePlayerConfig*      ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedMoviePlayerConfig* ATedMovieSequencePlayerActor::GetMovieConfig() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMovieSequencePlayerActor", "GetMovieConfig");

	Params::TedMovieSequencePlayerActor_GetMovieConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMovieSequencePlayerActor.GetPlayingStage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ATedMovieSequencePlayerActor::GetPlayingStage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMovieSequencePlayerActor", "GetPlayingStage");

	Params::TedMovieSequencePlayerActor_GetPlayingStage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMovieSequencePlayerActor.GetSequenceTags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagContainer      ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGameplayTagContainer ATedMovieSequencePlayerActor::GetSequenceTags() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMovieSequencePlayerActor", "GetSequenceTags");

	Params::TedMovieSequencePlayerActor_GetSequenceTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMovieSequencePlayerActor.GetStagesNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ATedMovieSequencePlayerActor::GetStagesNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMovieSequencePlayerActor", "GetStagesNum");

	Params::TedMovieSequencePlayerActor_GetStagesNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMovieSequencePlayerActor.IsPlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedMovieSequencePlayerActor::IsPlaying() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMovieSequencePlayerActor", "IsPlaying");

	Params::TedMovieSequencePlayerActor_IsPlaying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMovieSequencePlayerActor.IsPlayingLastStage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedMovieSequencePlayerActor::IsPlayingLastStage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMovieSequencePlayerActor", "IsPlayingLastStage");

	Params::TedMovieSequencePlayerActor_IsPlayingLastStage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedChatPartyPlayersPanel.OnPlayerActionPanelSlotAction
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedChatPartyPlayersPanel::OnPlayerActionPanelSlotAction(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyPlayersPanel", "OnPlayerActionPanelSlotAction");

	Params::TedChatPartyPlayersPanel_OnPlayerActionPanelSlotAction Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedChatPartyPlayersPanel.OnRegisterPlayerSectionSlot
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UTedContentPanelSlotBase*         ContentSlot                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedChatPartyPlayerSection&PlayerSectionHeader                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedChatPartyPlayersPanel::OnRegisterPlayerSectionSlot(class UTedContentPanelSlotBase* ContentSlot, const struct FTedChatPartyPlayerSection& PlayerSectionHeader)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyPlayersPanel", "OnRegisterPlayerSectionSlot");

	Params::TedChatPartyPlayersPanel_OnRegisterPlayerSectionSlot Parms{};

	Parms.ContentSlot = ContentSlot;
	Parms.PlayerSectionHeader = std::move(PlayerSectionHeader);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedChatPartyPlayersPanel.OnRegisterPlayerSlot
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UTedContentPanelSlotBase*         ContentSlot                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedChatPartyPlayer_BP&    Player                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedChatPartyPlayersPanel::OnRegisterPlayerSlot(class UTedContentPanelSlotBase* ContentSlot, const struct FTedChatPartyPlayer_BP& Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyPlayersPanel", "OnRegisterPlayerSlot");

	Params::TedChatPartyPlayersPanel_OnRegisterPlayerSlot Parms{};

	Parms.ContentSlot = ContentSlot;
	Parms.Player = std::move(Player);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedChatPartyPlayersPanel.GetDisplayNameForSection
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FName&                      SectionID                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedChatPartyPlayersPanel::GetDisplayNameForSection(const class FName& SectionID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyPlayersPanel", "GetDisplayNameForSection");

	Params::TedChatPartyPlayersPanel_GetDisplayNameForSection Parms{};

	Parms.SectionID = SectionID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedChatPartyPlayersPanel.GetPlayerContent
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedChatPartyPlayer_BP           ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTedChatPartyPlayer_BP UTedChatPartyPlayersPanel::GetPlayerContent(const int32 InSlotIndex, bool* bSuccess) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyPlayersPanel", "GetPlayerContent");

	Params::TedChatPartyPlayersPanel_GetPlayerContent Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	return Parms.ReturnValue;
}


// Function Tempest.TedChatPartyPlayersPanel.GetSectionContent
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedChatPartyPlayerSection       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTedChatPartyPlayerSection UTedChatPartyPlayersPanel::GetSectionContent(const int32 InSlotIndex, bool* bSuccess) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyPlayersPanel", "GetSectionContent");

	Params::TedChatPartyPlayersPanel_GetSectionContent Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	return Parms.ReturnValue;
}


// Function Tempest.TedChatPartyPlayersPanel.IsSlotIndexPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             SlotIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedChatPartyPlayersPanel::IsSlotIndexPlayer(const int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyPlayersPanel", "IsSlotIndexPlayer");

	Params::TedChatPartyPlayersPanel_IsSlotIndexPlayer Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedChatPartyPlayersPanel.IsSlotIndexSection
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             SlotIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedChatPartyPlayersPanel::IsSlotIndexSection(const int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyPlayersPanel", "IsSlotIndexSection");

	Params::TedChatPartyPlayersPanel_IsSlotIndexSection Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedChatPartyWidget_MainMenu.GetChatContextPanel
// (Event, Public, BlueprintEvent)
// Parameters:
// class UTedChatPartyContextPanel*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedChatPartyContextPanel* UTedChatPartyWidget_MainMenu::GetChatContextPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyWidget_MainMenu", "GetChatContextPanel");

	Params::TedChatPartyWidget_MainMenu_GetChatContextPanel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Tempest.TedChatPartyWidget_MainMenu.GetCollapsedPartyPlayersPanel
// (Event, Public, BlueprintEvent)
// Parameters:
// class UTedChatPartyPlayersPanel*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedChatPartyPlayersPanel* UTedChatPartyWidget_MainMenu::GetCollapsedPartyPlayersPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyWidget_MainMenu", "GetCollapsedPartyPlayersPanel");

	Params::TedChatPartyWidget_MainMenu_GetCollapsedPartyPlayersPanel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Tempest.TedChatPartyWidget_MainMenu.OnChatContextContentChange
// (Final, Native, Private)
// Parameters:
// class UTedContentPanelDynamic*          InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedChatPartyWidget_MainMenu::OnChatContextContentChange(class UTedContentPanelDynamic* InContentPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyWidget_MainMenu", "OnChatContextContentChange");

	Params::TedChatPartyWidget_MainMenu_OnChatContextContentChange Parms{};

	Parms.InContentPanel = InContentPanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedChatPartyWidget_MainMenu.OnChatContextSlotActivatedState
// (Final, Native, Private)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedChatPartyWidget_MainMenu::OnChatContextSlotActivatedState(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyWidget_MainMenu", "OnChatContextSlotActivatedState");

	Params::TedChatPartyWidget_MainMenu_OnChatContextSlotActivatedState Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedChatPartyWidget_MainMenu.OnContextsEmpty
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bEmpty                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedChatPartyWidget_MainMenu::OnContextsEmpty(bool bEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyWidget_MainMenu", "OnContextsEmpty");

	Params::TedChatPartyWidget_MainMenu_OnContextsEmpty Parms{};

	Parms.bEmpty = bEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedChatPartyWidget_MainMenu.OnMainMenuTabSelected
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UWidget*                          InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      InTabName                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedChatPartyWidget_MainMenu::OnMainMenuTabSelected(class UWidget* InWidget, const class FName& InTabName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyWidget_MainMenu", "OnMainMenuTabSelected");

	Params::TedChatPartyWidget_MainMenu_OnMainMenuTabSelected Parms{};

	Parms.InWidget = InWidget;
	Parms.InTabName = InTabName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedChatPartyWidget_MainMenu.OnPlayersChanged
// (Final, Native, Private)
// Parameters:
// class UTedContentPanelDynamic*          InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedChatPartyWidget_MainMenu::OnPlayersChanged(class UTedContentPanelDynamic* InContentPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyWidget_MainMenu", "OnPlayersChanged");

	Params::TedChatPartyWidget_MainMenu_OnPlayersChanged Parms{};

	Parms.InContentPanel = InContentPanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedChatPartyWidget_MainMenu.SetExpanded
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bExpanded                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedChatPartyWidget_MainMenu::SetExpanded(const bool bExpanded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyWidget_MainMenu", "SetExpanded");

	Params::TedChatPartyWidget_MainMenu_SetExpanded Parms{};

	Parms.bExpanded = bExpanded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedChatPartyWidget_MainMenu.TriggerExpanded
// (Final, Native, Public, BlueprintCallable)

void UTedChatPartyWidget_MainMenu::TriggerExpanded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatPartyWidget_MainMenu", "TriggerExpanded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedChatWindow.OnChatBoxTextCommitted
// (Final, Native, Public, HasOutParams)
// Parameters:
// const class FText&                      TextCommitted                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             CommitType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedChatWindow::OnChatBoxTextCommitted(const class FText& TextCommitted, ETextCommit CommitType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatWindow", "OnChatBoxTextCommitted");

	Params::TedChatWindow_OnChatBoxTextCommitted Parms{};

	Parms.TextCommitted = std::move(TextCommitted);
	Parms.CommitType = CommitType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedChatWindow.GetAllTextInChatBox
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedChatWindow::GetAllTextInChatBox() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedChatWindow", "GetAllTextInChatBox");

	Params::TedChatWindow_GetAllTextInChatBox Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCinematicBarsWidget.HideBars
// (Event, Protected, BlueprintEvent)

void UTedCinematicBarsWidget::HideBars()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCinematicBarsWidget", "HideBars");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedCinematicBarsWidget.ShowBars
// (Event, Protected, BlueprintEvent)

void UTedCinematicBarsWidget::ShowBars()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCinematicBarsWidget", "ShowBars");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedCommandCompoundArmoryScreen.K2_OnRefreshResetButtonUI
// (Event, Protected, BlueprintEvent)

void UTedCommandCompoundArmoryScreen::K2_OnRefreshResetButtonUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundArmoryScreen", "K2_OnRefreshResetButtonUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedCommandCompoundArmoryScreen.OnArmoryContentChange
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelDynamic*          InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundArmoryScreen::OnArmoryContentChange(class UTedContentPanelDynamic* InContentPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundArmoryScreen", "OnArmoryContentChange");

	Params::TedCommandCompoundArmoryScreen_OnArmoryContentChange Parms{};

	Parms.InContentPanel = InContentPanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundArmoryScreen.OnArmoryRequestBuy
// (Final, Native, Protected)
// Parameters:
// class UTedEquipmentSlot*                InEquipmentSlot                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundArmoryScreen::OnArmoryRequestBuy(class UTedEquipmentSlot* InEquipmentSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundArmoryScreen", "OnArmoryRequestBuy");

	Params::TedCommandCompoundArmoryScreen_OnArmoryRequestBuy Parms{};

	Parms.InEquipmentSlot = InEquipmentSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundArmoryScreen.OnArmoryRequestEquip
// (Final, Native, Protected)
// Parameters:
// class UTedEquipmentSlot*                InEquipmentSlot                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundArmoryScreen::OnArmoryRequestEquip(class UTedEquipmentSlot* InEquipmentSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundArmoryScreen", "OnArmoryRequestEquip");

	Params::TedCommandCompoundArmoryScreen_OnArmoryRequestEquip Parms{};

	Parms.InEquipmentSlot = InEquipmentSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundArmoryScreen.OnArmoryRequestUnequip
// (Final, Native, Protected)
// Parameters:
// class UTedEquipmentSlot*                InEquipmentSlot                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundArmoryScreen::OnArmoryRequestUnequip(class UTedEquipmentSlot* InEquipmentSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundArmoryScreen", "OnArmoryRequestUnequip");

	Params::TedCommandCompoundArmoryScreen_OnArmoryRequestUnequip Parms{};

	Parms.InEquipmentSlot = InEquipmentSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundArmoryScreen.OnCancelPurchase
// (Final, Native, Protected)
// Parameters:
// const int32                             InButtonIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundArmoryScreen::OnCancelPurchase(const int32 InButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundArmoryScreen", "OnCancelPurchase");

	Params::TedCommandCompoundArmoryScreen_OnCancelPurchase Parms{};

	Parms.InButtonIndex = InButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundArmoryScreen.OnCancelResetArmory
// (Final, Native, Protected)
// Parameters:
// const int32                             InButtonIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundArmoryScreen::OnCancelResetArmory(const int32 InButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundArmoryScreen", "OnCancelResetArmory");

	Params::TedCommandCompoundArmoryScreen_OnCancelResetArmory Parms{};

	Parms.InButtonIndex = InButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundArmoryScreen.OnConfirmPurchase
// (Final, Native, Protected)
// Parameters:
// const int32                             InButtonIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundArmoryScreen::OnConfirmPurchase(const int32 InButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundArmoryScreen", "OnConfirmPurchase");

	Params::TedCommandCompoundArmoryScreen_OnConfirmPurchase Parms{};

	Parms.InButtonIndex = InButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundArmoryScreen.OnConfirmResetArmory
// (Final, Native, Protected)
// Parameters:
// const int32                             InButtonIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundArmoryScreen::OnConfirmResetArmory(const int32 InButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundArmoryScreen", "OnConfirmResetArmory");

	Params::TedCommandCompoundArmoryScreen_OnConfirmResetArmory Parms{};

	Parms.InButtonIndex = InButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundArmoryScreen.OnPopupButton_Ok
// (Final, Native, Protected)
// Parameters:
// const int32                             InButtonIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundArmoryScreen::OnPopupButton_Ok(const int32 InButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundArmoryScreen", "OnPopupButton_Ok");

	Params::TedCommandCompoundArmoryScreen_OnPopupButton_Ok Parms{};

	Parms.InButtonIndex = InButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundArmoryScreen.OnRequestResetArmory
// (Final, Native, Protected, BlueprintCallable)

void UTedCommandCompoundArmoryScreen::OnRequestResetArmory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundArmoryScreen", "OnRequestResetArmory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundArmoryScreen.OnTriggerButtonPanelSlotAction
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundArmoryScreen::OnTriggerButtonPanelSlotAction(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundArmoryScreen", "OnTriggerButtonPanelSlotAction");

	Params::TedCommandCompoundArmoryScreen_OnTriggerButtonPanelSlotAction Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundArmoryScreen.OnTriggerLoadoutSlotAction
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundArmoryScreen::OnTriggerLoadoutSlotAction(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundArmoryScreen", "OnTriggerLoadoutSlotAction");

	Params::TedCommandCompoundArmoryScreen_OnTriggerLoadoutSlotAction Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundArmoryScreen.RefreshArmoryContent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bInImmediately                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundArmoryScreen::RefreshArmoryContent(const bool bInImmediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundArmoryScreen", "RefreshArmoryContent");

	Params::TedCommandCompoundArmoryScreen_RefreshArmoryContent Parms{};

	Parms.bInImmediately = bInImmediately;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundArmoryScreen.RefreshResetButtonUI
// (Final, Native, Protected, BlueprintCallable)

void UTedCommandCompoundArmoryScreen::RefreshResetButtonUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundArmoryScreen", "RefreshResetButtonUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundArmoryScreen.RequestBuyEquipment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTedEquipmentSlot*                InEquipmentSlot                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCommandCompoundArmoryScreen::RequestBuyEquipment(class UTedEquipmentSlot* InEquipmentSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundArmoryScreen", "RequestBuyEquipment");

	Params::TedCommandCompoundArmoryScreen_RequestBuyEquipment Parms{};

	Parms.InEquipmentSlot = InEquipmentSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundArmoryScreen.RequestEquipEquipment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UTedEquipment*              InEquipment                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCommandCompoundArmoryScreen::RequestEquipEquipment(const class UTedEquipment* InEquipment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundArmoryScreen", "RequestEquipEquipment");

	Params::TedCommandCompoundArmoryScreen_RequestEquipEquipment Parms{};

	Parms.InEquipment = InEquipment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundArmoryScreen.RequestUnequipEquipment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UTedEquipment*              InEquipment                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCommandCompoundArmoryScreen::RequestUnequipEquipment(const class UTedEquipment* InEquipment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundArmoryScreen", "RequestUnequipEquipment");

	Params::TedCommandCompoundArmoryScreen_RequestUnequipEquipment Parms{};

	Parms.InEquipment = InEquipment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundArmoryScreen.SyncArmoryWithGameProgress
// (Final, Native, Public, BlueprintCallable)

void UTedCommandCompoundArmoryScreen::SyncArmoryWithGameProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundArmoryScreen", "SyncArmoryWithGameProgress");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundArmoryScreen.SyncLoadoutWithGameProgress
// (Final, Native, Public, BlueprintCallable)

void UTedCommandCompoundArmoryScreen::SyncLoadoutWithGameProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundArmoryScreen", "SyncLoadoutWithGameProgress");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundArmoryScreen.CanBuyOrEquipSomething
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCommandCompoundArmoryScreen::CanBuyOrEquipSomething() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundArmoryScreen", "CanBuyOrEquipSomething");

	Params::TedCommandCompoundArmoryScreen_CanBuyOrEquipSomething Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundArmoryScreen.GetCurrentFaction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedFaction                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedFaction UTedCommandCompoundArmoryScreen::GetCurrentFaction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundArmoryScreen", "GetCurrentFaction");

	Params::TedCommandCompoundArmoryScreen_GetCurrentFaction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundDoctrineScreen.HandlePopupButtonClick_Ok
// (Final, Native, Protected)
// Parameters:
// const int32                             InButtonIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundDoctrineScreen::HandlePopupButtonClick_Ok(const int32 InButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundDoctrineScreen", "HandlePopupButtonClick_Ok");

	Params::TedCommandCompoundDoctrineScreen_HandlePopupButtonClick_Ok Parms{};

	Parms.InButtonIndex = InButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundDoctrineScreen.OnCancelDoctrinePurchase
// (Final, Native, Protected)
// Parameters:
// const int32                             InButtonIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundDoctrineScreen::OnCancelDoctrinePurchase(const int32 InButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundDoctrineScreen", "OnCancelDoctrinePurchase");

	Params::TedCommandCompoundDoctrineScreen_OnCancelDoctrinePurchase Parms{};

	Parms.InButtonIndex = InButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundDoctrineScreen.OnCancelResetDoctrines
// (Final, Native, Protected)
// Parameters:
// const int32                             InButtonIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundDoctrineScreen::OnCancelResetDoctrines(const int32 InButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundDoctrineScreen", "OnCancelResetDoctrines");

	Params::TedCommandCompoundDoctrineScreen_OnCancelResetDoctrines Parms{};

	Parms.InButtonIndex = InButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundDoctrineScreen.OnConfirmDoctrinePurchase
// (Final, Native, Protected)
// Parameters:
// const int32                             InButtonIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundDoctrineScreen::OnConfirmDoctrinePurchase(const int32 InButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundDoctrineScreen", "OnConfirmDoctrinePurchase");

	Params::TedCommandCompoundDoctrineScreen_OnConfirmDoctrinePurchase Parms{};

	Parms.InButtonIndex = InButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundDoctrineScreen.OnConfirmResetDoctrines
// (Final, Native, Protected)
// Parameters:
// const int32                             InButtonIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundDoctrineScreen::OnConfirmResetDoctrines(const int32 InButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundDoctrineScreen", "OnConfirmResetDoctrines");

	Params::TedCommandCompoundDoctrineScreen_OnConfirmResetDoctrines Parms{};

	Parms.InButtonIndex = InButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundDoctrineScreen.OnTriggerDoctrineSlotAction
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundDoctrineScreen::OnTriggerDoctrineSlotAction(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundDoctrineScreen", "OnTriggerDoctrineSlotAction");

	Params::TedCommandCompoundDoctrineScreen_OnTriggerDoctrineSlotAction Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundDoctrineScreen.RefreshDoctrinePoints
// (Final, Native, Protected, BlueprintCallable)

void UTedCommandCompoundDoctrineScreen::RefreshDoctrinePoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundDoctrineScreen", "RefreshDoctrinePoints");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundDoctrineScreen.RefreshDoctrineSlotsStates
// (Final, Native, Protected, BlueprintCallable)

void UTedCommandCompoundDoctrineScreen::RefreshDoctrineSlotsStates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundDoctrineScreen", "RefreshDoctrineSlotsStates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundDoctrineScreen.SyncDoctrinesWithGameProgress
// (Final, Native, Protected, BlueprintCallable)

void UTedCommandCompoundDoctrineScreen::SyncDoctrinesWithGameProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundDoctrineScreen", "SyncDoctrinesWithGameProgress");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundDoctrineScreen.CanBuyAnyNewDoctrine
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCommandCompoundDoctrineScreen::CanBuyAnyNewDoctrine() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundDoctrineScreen", "CanBuyAnyNewDoctrine");

	Params::TedCommandCompoundDoctrineScreen_CanBuyAnyNewDoctrine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundDoctrineScreen.GetRemainingDoctrinePoints
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedCommandCompoundDoctrineScreen::GetRemainingDoctrinePoints() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundDoctrineScreen", "GetRemainingDoctrinePoints");

	Params::TedCommandCompoundDoctrineScreen_GetRemainingDoctrinePoints Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineHydraAPI.DebugOnSessionControlGetDataCenters
// (Final, Native, Private, HasOutParams)
// Parameters:
// const TArray<struct FSessionControlDataCenter>&DataCenters                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EProsdkErrorCodeSessionControl          ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineHydraAPI::DebugOnSessionControlGetDataCenters(const TArray<struct FSessionControlDataCenter>& DataCenters, EProsdkErrorCodeSessionControl ResultCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineHydraAPI", "DebugOnSessionControlGetDataCenters");

	Params::TedOnlineHydraAPI_DebugOnSessionControlGetDataCenters Parms{};

	Parms.DataCenters = std::move(DataCenters);
	Parms.ResultCode = ResultCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineHydraAPI.OnClientConnectingTicket
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FClientData&               ClientData                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedOnlineHydraAPI::OnClientConnectingTicket(const struct FClientData& ClientData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineHydraAPI", "OnClientConnectingTicket");

	Params::TedOnlineHydraAPI_OnClientConnectingTicket Parms{};

	Parms.ClientData = std::move(ClientData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineHydraAPI.OnClientRatingsUpdate
// (Final, Native, Private)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EProsdkErrorCodeRatings                 ErrorCode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineHydraAPI::OnClientRatingsUpdate(int32 LocalUserNum, EProsdkErrorCodeRatings ErrorCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineHydraAPI", "OnClientRatingsUpdate");

	Params::TedOnlineHydraAPI_OnClientRatingsUpdate Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.ErrorCode = ErrorCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineHydraAPI.OnFinishSession
// (Final, Native, Private)
// Parameters:
// EProsdkErrorCodeSessionControl          ErrorCode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineHydraAPI::OnFinishSession(EProsdkErrorCodeSessionControl ErrorCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineHydraAPI", "OnFinishSession");

	Params::TedOnlineHydraAPI_OnFinishSession Parms{};

	Parms.ErrorCode = ErrorCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineHydraAPI.OnHydraClientServiceStateChanged
// (Final, Native, Private)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EProsServiceState                       State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EProsdkErrorCodeAuthorization           ErrorCode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ErrorMessage                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineHydraAPI::OnHydraClientServiceStateChanged(int32 LocalUserNum, EProsServiceState State, EProsdkErrorCodeAuthorization ErrorCode, const class FString& ErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineHydraAPI", "OnHydraClientServiceStateChanged");

	Params::TedOnlineHydraAPI_OnHydraClientServiceStateChanged Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.State = State;
	Parms.ErrorCode = ErrorCode;
	Parms.ErrorMessage = std::move(ErrorMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineHydraAPI.OnHydraGetUsersPresenceDataComplete
// (Final, Native, Private, HasOutParams)
// Parameters:
// EProsdkErrorCodePresence                ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FPresenceUsersPresence&    Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedOnlineHydraAPI::OnHydraGetUsersPresenceDataComplete(EProsdkErrorCodePresence ResultCode, const struct FPresenceUsersPresence& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineHydraAPI", "OnHydraGetUsersPresenceDataComplete");

	Params::TedOnlineHydraAPI_OnHydraGetUsersPresenceDataComplete Parms{};

	Parms.ResultCode = ResultCode;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineHydraAPI.OnHydraPresenceServiceStateChanged
// (Final, Native, Private)
// Parameters:
// int32                                   AuthorizationIndex                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EProsServiceState                       State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EProsdkErrorCodePresence                ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineHydraAPI::OnHydraPresenceServiceStateChanged(int32 AuthorizationIndex, EProsServiceState State, EProsdkErrorCodePresence ResultCode, const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineHydraAPI", "OnHydraPresenceServiceStateChanged");

	Params::TedOnlineHydraAPI_OnHydraPresenceServiceStateChanged Parms{};

	Parms.AuthorizationIndex = AuthorizationIndex;
	Parms.State = State;
	Parms.ResultCode = ResultCode;
	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineHydraAPI.OnHydraServerServiceStateChanged
// (Final, Native, Private)
// Parameters:
// EProsServiceState                       State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EProsdkErrorCodeSessionControl          ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineHydraAPI::OnHydraServerServiceStateChanged(EProsServiceState State, EProsdkErrorCodeSessionControl ResultCode, const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineHydraAPI", "OnHydraServerServiceStateChanged");

	Params::TedOnlineHydraAPI_OnHydraServerServiceStateChanged Parms{};

	Parms.State = State;
	Parms.ResultCode = ResultCode;
	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineHydraAPI.OnLeaderboardsFilteredGetWhenRatingUpdate
// (Final, Native, Private, HasOutParams)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EProsdkErrorCodeLeaderboards            ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FLeaderboardBoard>& Leaderboards                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedOnlineHydraAPI::OnLeaderboardsFilteredGetWhenRatingUpdate(int32 LocalUserNum, EProsdkErrorCodeLeaderboards ResultCode, const TArray<struct FLeaderboardBoard>& Leaderboards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineHydraAPI", "OnLeaderboardsFilteredGetWhenRatingUpdate");

	Params::TedOnlineHydraAPI_OnLeaderboardsFilteredGetWhenRatingUpdate Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.ResultCode = ResultCode;
	Parms.Leaderboards = std::move(Leaderboards);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineHydraAPI.OnMatchmakeSessionUpdated
// (Final, Native, Private, HasOutParams)
// Parameters:
// int32                                   AuthorizationIndex                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMatchmakeSessionStatus&   Status                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FMatchmakeSessionStatusUpdateReasons&Reason                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTedOnlineHydraAPI::OnMatchmakeSessionUpdated(int32 AuthorizationIndex, const struct FMatchmakeSessionStatus& Status, const struct FMatchmakeSessionStatusUpdateReasons& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineHydraAPI", "OnMatchmakeSessionUpdated");

	Params::TedOnlineHydraAPI_OnMatchmakeSessionUpdated Parms{};

	Parms.AuthorizationIndex = AuthorizationIndex;
	Parms.Status = std::move(Status);
	Parms.Reason = std::move(Reason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineHydraAPI.OnMatchmakeStartComplete
// (Final, Native, Private)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EProsdkErrorCodePresence                ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineHydraAPI::OnMatchmakeStartComplete(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineHydraAPI", "OnMatchmakeStartComplete");

	Params::TedOnlineHydraAPI_OnMatchmakeStartComplete Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.ResultCode = ResultCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineHydraAPI.OnMatchmakeStopComplete
// (Final, Native, Private)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EProsdkErrorCodePresence                ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineHydraAPI::OnMatchmakeStopComplete(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineHydraAPI", "OnMatchmakeStopComplete");

	Params::TedOnlineHydraAPI_OnMatchmakeStopComplete Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.ResultCode = ResultCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineHydraAPI.OnSessionClientAcceptResult
// (Final, Native, Private, HasOutParams)
// Parameters:
// const class FString&                    GameSessionId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSessionControlAcceptClientResult&Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EProsdkErrorCodeSessionControl          Error                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineHydraAPI::OnSessionClientAcceptResult(const class FString& GameSessionId, const struct FSessionControlAcceptClientResult& Result, EProsdkErrorCodeSessionControl Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineHydraAPI", "OnSessionClientAcceptResult");

	Params::TedOnlineHydraAPI_OnSessionClientAcceptResult Parms{};

	Parms.GameSessionId = std::move(GameSessionId);
	Parms.Result = std::move(Result);
	Parms.Error = Error;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineHydraAPI.OnSessionControlGetDataCenters
// (Final, Native, Private, HasOutParams)
// Parameters:
// const TArray<struct FSessionControlDataCenter>&DataCenters                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EProsdkErrorCodeSessionControl          ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineHydraAPI::OnSessionControlGetDataCenters(const TArray<struct FSessionControlDataCenter>& DataCenters, EProsdkErrorCodeSessionControl ResultCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineHydraAPI", "OnSessionControlGetDataCenters");

	Params::TedOnlineHydraAPI_OnSessionControlGetDataCenters Parms{};

	Parms.DataCenters = std::move(DataCenters);
	Parms.ResultCode = ResultCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineHydraAPI.OnStandaloneBrowseRequestComplete
// (Final, Native, Private, HasOutParams)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FStandaloneBrowseResult&   BrowseResult                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EProsdkErrorCodeSessionControl          ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineHydraAPI::OnStandaloneBrowseRequestComplete(int32 LocalUserNum, const struct FStandaloneBrowseResult& BrowseResult, EProsdkErrorCodeSessionControl ResultCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineHydraAPI", "OnStandaloneBrowseRequestComplete");

	Params::TedOnlineHydraAPI_OnStandaloneBrowseRequestComplete Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.BrowseResult = std::move(BrowseResult);
	Parms.ResultCode = ResultCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineHydraAPI.OnStandaloneCodeRequestComplete
// (Final, Native, Private)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    SignInCode                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EProsdkErrorCodeSessionControl          ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineHydraAPI::OnStandaloneCodeRequestComplete(int32 LocalUserNum, const class FString& SignInCode, EProsdkErrorCodeSessionControl ResultCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineHydraAPI", "OnStandaloneCodeRequestComplete");

	Params::TedOnlineHydraAPI_OnStandaloneCodeRequestComplete Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.SignInCode = std::move(SignInCode);
	Parms.ResultCode = ResultCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundMapScreen.K2_BranchStage
// (Final, Native, Static, Protected, BlueprintCallable)
// Parameters:
// const ETedCommandCompoundMapScreenStage InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedCommandCompoundMapScreenStage       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedCommandCompoundMapScreenStage UTedCommandCompoundMapScreen::K2_BranchStage(const ETedCommandCompoundMapScreenStage InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedCommandCompoundMapScreen", "K2_BranchStage");

	Params::TedCommandCompoundMapScreen_K2_BranchStage Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundMapScreen.ChangeStage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bInForward                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCommandCompoundMapScreen::ChangeStage(const bool bInForward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreen", "ChangeStage");

	Params::TedCommandCompoundMapScreen_ChangeStage Parms{};

	Parms.bInForward = bInForward;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundMapScreen.HideExitConfirmation
// (Native, Event, Protected, BlueprintEvent)

void UTedCommandCompoundMapScreen::HideExitConfirmation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreen", "HideExitConfirmation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundMapScreen.K2_OnChangeStage
// (Event, Protected, BlueprintEvent)
// Parameters:
// const ETedCommandCompoundMapScreenStage InPrevStage                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedCommandCompoundMapScreenStage InCurrent                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundMapScreen::K2_OnChangeStage(const ETedCommandCompoundMapScreenStage InPrevStage, const ETedCommandCompoundMapScreenStage InCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreen", "K2_OnChangeStage");

	Params::TedCommandCompoundMapScreen_K2_OnChangeStage Parms{};

	Parms.InPrevStage = InPrevStage;
	Parms.InCurrent = InCurrent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedCommandCompoundMapScreen.K2_OnFinished
// (Event, Protected, BlueprintEvent)

void UTedCommandCompoundMapScreen::K2_OnFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreen", "K2_OnFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedCommandCompoundMapScreen.OnButtons_Continue
// (Final, Native, Protected)
// Parameters:
// class UTedCommandCompoundMapScreenComponent*InComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundMapScreen::OnButtons_Continue(class UTedCommandCompoundMapScreenComponent* InComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreen", "OnButtons_Continue");

	Params::TedCommandCompoundMapScreen_OnButtons_Continue Parms{};

	Parms.InComponent = InComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundMapScreen.OnButtons_MainMenu
// (Final, Native, Protected)
// Parameters:
// class UTedCommandCompoundMapScreenComponent*InComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundMapScreen::OnButtons_MainMenu(class UTedCommandCompoundMapScreenComponent* InComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreen", "OnButtons_MainMenu");

	Params::TedCommandCompoundMapScreen_OnButtons_MainMenu Parms{};

	Parms.InComponent = InComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundMapScreen.OnComponentTrigger
// (Final, Native, Protected)
// Parameters:
// class UTedCommandCompoundMapScreenComponent*InComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundMapScreen::OnComponentTrigger(class UTedCommandCompoundMapScreenComponent* InComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreen", "OnComponentTrigger");

	Params::TedCommandCompoundMapScreen_OnComponentTrigger Parms{};

	Parms.InComponent = InComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundMapScreen.OnExitConfirmation_Cancel
// (Final, Native, Protected, BlueprintCallable)

void UTedCommandCompoundMapScreen::OnExitConfirmation_Cancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreen", "OnExitConfirmation_Cancel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundMapScreen.OnExitConfirmation_Exit
// (Final, Native, Protected, BlueprintCallable)

void UTedCommandCompoundMapScreen::OnExitConfirmation_Exit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreen", "OnExitConfirmation_Exit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundMapScreen.PlayMusic
// (Final, Native, Public, BlueprintCallable)

void UTedCommandCompoundMapScreen::PlayMusic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreen", "PlayMusic");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundMapScreen.SetStage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const ETedCommandCompoundMapScreenStage InStage                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCommandCompoundMapScreen::SetStage(const ETedCommandCompoundMapScreenStage InStage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreen", "SetStage");

	Params::TedCommandCompoundMapScreen_SetStage Parms{};

	Parms.InStage = InStage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundMapScreen.ShowExitConfirmation
// (Native, Event, Protected, BlueprintEvent)

void UTedCommandCompoundMapScreen::ShowExitConfirmation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreen", "ShowExitConfirmation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundMapScreen.StartMission
// (Final, Native, Public, BlueprintCallable)

void UTedCommandCompoundMapScreen::StartMission()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreen", "StartMission");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundMapScreen.StopMusic
// (Final, Native, Public, BlueprintCallable)

void UTedCommandCompoundMapScreen::StopMusic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreen", "StopMusic");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundMapScreen.GetCurrentMission
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedMapInfo*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedMapInfo* UTedCommandCompoundMapScreen::GetCurrentMission() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreen", "GetCurrentMission");

	Params::TedCommandCompoundMapScreen_GetCurrentMission Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundMapScreen.GetCurrentStage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedCommandCompoundMapScreenStage       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedCommandCompoundMapScreenStage UTedCommandCompoundMapScreen::GetCurrentStage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreen", "GetCurrentStage");

	Params::TedCommandCompoundMapScreen_GetCurrentStage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundMapScreen.K2_BranchCurrentStage
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedCommandCompoundMapScreenStage       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedCommandCompoundMapScreenStage UTedCommandCompoundMapScreen::K2_BranchCurrentStage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreen", "K2_BranchCurrentStage");

	Params::TedCommandCompoundMapScreen_K2_BranchCurrentStage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundMapScreenComponent_Buttons.CallOnContinue
// (Final, Native, Protected, BlueprintCallable)

void UTedCommandCompoundMapScreenComponent_Buttons::CallOnContinue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreenComponent_Buttons", "CallOnContinue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundMapScreenComponent_Buttons.CallOnMainMenu
// (Final, Native, Protected, BlueprintCallable)

void UTedCommandCompoundMapScreenComponent_Buttons::CallOnMainMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreenComponent_Buttons", "CallOnMainMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlinePlayerProfileWidgetContext.Get
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTedOnlinePlayerProfileWidgetContext*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedOnlinePlayerProfileWidgetContext* UTedOnlinePlayerProfileWidgetContext::Get()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedOnlinePlayerProfileWidgetContext", "Get");

	Params::TedOnlinePlayerProfileWidgetContext_Get Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundMapScreenComponent_Movie.OnMoviePlayerFinished
// (Final, Native, Protected)
// Parameters:
// class UTedMoviePlayerWidgetV2*          InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UFileMediaSource*           InMovie                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundMapScreenComponent_Movie::OnMoviePlayerFinished(class UTedMoviePlayerWidgetV2* InWidget, const class UFileMediaSource* InMovie)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMapScreenComponent_Movie", "OnMoviePlayerFinished");

	Params::TedCommandCompoundMapScreenComponent_Movie_OnMoviePlayerFinished Parms{};

	Parms.InWidget = InWidget;
	Parms.InMovie = InMovie;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundMoviePlayerContextObject.New
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UFileMediaSource*           InMovie                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInLoop                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UFileMediaSource*           InIntroAnimOverride                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedCommandCompoundMoviePlayerContextObject*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedCommandCompoundMoviePlayerContextObject* UTedCommandCompoundMoviePlayerContextObject::New(const class UFileMediaSource* InMovie, const bool bInLoop, const class UFileMediaSource* InIntroAnimOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedCommandCompoundMoviePlayerContextObject", "New");

	Params::TedCommandCompoundMoviePlayerContextObject_New Parms{};

	Parms.InMovie = InMovie;
	Parms.bInLoop = bInLoop;
	Parms.InIntroAnimOverride = InIntroAnimOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandCompoundMoviePlayer.OnContentVisibilityChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bInShow                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundMoviePlayer::OnContentVisibilityChange(const bool bInShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMoviePlayer", "OnContentVisibilityChange");

	Params::TedCommandCompoundMoviePlayer_OnContentVisibilityChange Parms{};

	Parms.bInShow = bInShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedCommandCompoundMoviePlayer.OnFrameIntroFinished
// (Final, Native, Protected)
// Parameters:
// class UTedMoviePlayerWidgetV2*          InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UFileMediaSource*           InSource                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundMoviePlayer::OnFrameIntroFinished(class UTedMoviePlayerWidgetV2* InWidget, const class UFileMediaSource* InSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMoviePlayer", "OnFrameIntroFinished");

	Params::TedCommandCompoundMoviePlayer_OnFrameIntroFinished Parms{};

	Parms.InWidget = InWidget;
	Parms.InSource = InSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundMoviePlayer.OnFrameOutroFinished
// (Final, Native, Protected)
// Parameters:
// class UTedMoviePlayerWidgetV2*          InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UFileMediaSource*           InSource                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundMoviePlayer::OnFrameOutroFinished(class UTedMoviePlayerWidgetV2* InWidget, const class UFileMediaSource* InSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMoviePlayer", "OnFrameOutroFinished");

	Params::TedCommandCompoundMoviePlayer_OnFrameOutroFinished Parms{};

	Parms.InWidget = InWidget;
	Parms.InSource = InSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundMoviePlayer.OnMainMovieFinished
// (Final, Native, Protected)
// Parameters:
// class UTedMoviePlayerWidgetV2*          InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UFileMediaSource*           InSource                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCommandCompoundMoviePlayer::OnMainMovieFinished(class UTedMoviePlayerWidgetV2* InWidget, const class UFileMediaSource* InSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMoviePlayer", "OnMainMovieFinished");

	Params::TedCommandCompoundMoviePlayer_OnMainMovieFinished Parms{};

	Parms.InWidget = InWidget;
	Parms.InSource = InSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandCompoundMoviePlayer.ShouldMovieLoop
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCommandCompoundMoviePlayer::ShouldMovieLoop() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandCompoundMoviePlayer", "ShouldMovieLoop");

	Params::TedCommandCompoundMoviePlayer_ShouldMovieLoop Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerCommand_AirDrop.CreateAirDropCommandData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class UTedPlayerCommand_AirDrop>CommandClass                                           (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayCommandDataPayload_AirDrop&Payload                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayCommandData             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayCommandData UTedPlayerCommand_AirDrop::CreateAirDropCommandData(TSubclassOf<class UTedPlayerCommand_AirDrop> CommandClass, const struct FGameplayCommandDataPayload_AirDrop& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerCommand_AirDrop", "CreateAirDropCommandData");

	Params::TedPlayerCommand_AirDrop_CreateAirDropCommandData Parms{};

	Parms.CommandClass = CommandClass;
	Parms.Payload = std::move(Payload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerCommand_AirDropVolume.CreateAirDropVolumeCommandData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class UTedPlayerCommand_AirDrop>CommandClass                                           (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayCommandDataPayload_AirDrop&Payload                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayCommandData             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayCommandData UTedPlayerCommand_AirDropVolume::CreateAirDropVolumeCommandData(TSubclassOf<class UTedPlayerCommand_AirDrop> CommandClass, const struct FGameplayCommandDataPayload_AirDrop& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerCommand_AirDropVolume", "CreateAirDropVolumeCommandData");

	Params::TedPlayerCommand_AirDropVolume_CreateAirDropVolumeCommandData Parms{};

	Parms.CommandClass = CommandClass;
	Parms.Payload = std::move(Payload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandPreview_PlaceStructure.UpdateRangeDecalData
// (Final, Native, Protected)
// Parameters:
// const TSubclassOf<class ATedStructureBase>StructureClass                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedCommandPreview_PlaceStructure::UpdateRangeDecalData(const TSubclassOf<class ATedStructureBase> StructureClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandPreview_PlaceStructure", "UpdateRangeDecalData");

	Params::TedCommandPreview_PlaceStructure_UpdateRangeDecalData Parms{};

	Parms.StructureClass = StructureClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCommandPreview_PlaceStructure.GetSkeletalMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* ATedCommandPreview_PlaceStructure::GetSkeletalMesh() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandPreview_PlaceStructure", "GetSkeletalMesh");

	Params::TedCommandPreview_PlaceStructure_GetSkeletalMesh Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandPreview_PlaceStructure.GetStaticMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UStaticMeshComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UStaticMeshComponent* ATedCommandPreview_PlaceStructure::GetStaticMesh() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandPreview_PlaceStructure", "GetStaticMesh");

	Params::TedCommandPreview_PlaceStructure_GetStaticMesh Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCommandsTooltip.Hide
// (Native, Public)

void UTedCommandsTooltip::Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCommandsTooltip", "Hide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerCommand_DoctrineBase.CreateCommandData_ResearchedDoctrine
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UTedCommand>          InCommand                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedDoctrineDefinition*     InResearchedDoctrine                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCommandData             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayCommandData UTedPlayerCommand_DoctrineBase::CreateCommandData_ResearchedDoctrine(TSubclassOf<class UTedCommand> InCommand, const class UTedDoctrineDefinition* InResearchedDoctrine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerCommand_DoctrineBase", "CreateCommandData_ResearchedDoctrine");

	Params::TedPlayerCommand_DoctrineBase_CreateCommandData_ResearchedDoctrine Parms{};

	Parms.InCommand = InCommand;
	Parms.InResearchedDoctrine = InResearchedDoctrine;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedConstructionSite.ConditionallyPauseDroneDropOff
// (Final, Native, Public)

void ATedConstructionSite::ConditionallyPauseDroneDropOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedConstructionSite", "ConditionallyPauseDroneDropOff");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedConstructionSite.OnRep_PlayingProceduralAnim
// (Final, Native, Protected)

void ATedConstructionSite::OnRep_PlayingProceduralAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedConstructionSite", "OnRep_PlayingProceduralAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedConstructionSite.OnRep_SetPaused
// (Final, Native, Protected)

void ATedConstructionSite::OnRep_SetPaused()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedConstructionSite", "OnRep_SetPaused");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUI_InstancedContent.New
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       InID                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      InText                                                 (ConstParm, Parm, NativeAccessSpecifierPublic)
// const class FText&                      InDescription                                          (ConstParm, Parm, NativeAccessSpecifierPublic)
// const struct FSlateBrush&               InIcon                                                 (ConstParm, Parm, NativeAccessSpecifierPublic)
// class UTedUI_InstancedContent*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedUI_InstancedContent* UTedUI_InstancedContent::New(const class FName InID, const class FText& InText, const class FText& InDescription, const struct FSlateBrush& InIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUI_InstancedContent", "New");

	Params::TedUI_InstancedContent_New Parms{};

	Parms.InID = InID;
	Parms.InText = std::move(InText);
	Parms.InDescription = std::move(InDescription);
	Parms.InIcon = std::move(InIcon);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelInstanced.ActivateStateByContent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UTedUI_InstancedContent*    InContent                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedContentSlotState              InState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInActivate                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedContentPanelInstanced::ActivateStateByContent(const class UTedUI_InstancedContent* InContent, const ETedContentSlotState InState, const bool bInActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelInstanced", "ActivateStateByContent");

	Params::TedContentPanelInstanced_ActivateStateByContent Parms{};

	Parms.InContent = InContent;
	Parms.InState = InState;
	Parms.bInActivate = bInActivate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelInstanced.ActivateStateByContentID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       InContentID                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedContentSlotState              InState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInActivate                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedContentPanelInstanced::ActivateStateByContentID(const class FName InContentID, const ETedContentSlotState InState, const bool bInActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelInstanced", "ActivateStateByContentID");

	Params::TedContentPanelInstanced_ActivateStateByContentID Parms{};

	Parms.InContentID = InContentID;
	Parms.InState = InState;
	Parms.bInActivate = bInActivate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelInstanced.AddToContent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTedUI_InstancedContent*          NewContent                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bUnique                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedContentPanelInstanced::AddToContent(class UTedUI_InstancedContent* NewContent, const bool bUnique)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelInstanced", "AddToContent");

	Params::TedContentPanelInstanced_AddToContent Parms{};

	Parms.NewContent = NewContent;
	Parms.bUnique = bUnique;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelInstanced.GetAllContentMutable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UTedUI_InstancedContent*>  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UTedUI_InstancedContent*> UTedContentPanelInstanced::GetAllContentMutable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelInstanced", "GetAllContentMutable");

	Params::TedContentPanelInstanced_GetAllContentMutable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelInstanced.RemoveContentById
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      InID                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedContentPanelInstanced::RemoveContentById(const class FName& InID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelInstanced", "RemoveContentById");

	Params::TedContentPanelInstanced_RemoveContentById Parms{};

	Parms.InID = InID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelInstanced.ReplaceContentDescription
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       InContentID                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      InNewDescription                                       (ConstParm, Parm, NativeAccessSpecifierPublic)

void UTedContentPanelInstanced::ReplaceContentDescription(const class FName InContentID, const class FText& InNewDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelInstanced", "ReplaceContentDescription");

	Params::TedContentPanelInstanced_ReplaceContentDescription Parms{};

	Parms.InContentID = InContentID;
	Parms.InNewDescription = std::move(InNewDescription);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelInstanced.ReplaceContentIcon
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName                       InContentID                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSlateBrush&               InNewIcon                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedContentPanelInstanced::ReplaceContentIcon(const class FName InContentID, const struct FSlateBrush& InNewIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelInstanced", "ReplaceContentIcon");

	Params::TedContentPanelInstanced_ReplaceContentIcon Parms{};

	Parms.InContentID = InContentID;
	Parms.InNewIcon = std::move(InNewIcon);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelInstanced.ReplaceContentText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       InContentID                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      InNewText                                              (ConstParm, Parm, NativeAccessSpecifierPublic)

void UTedContentPanelInstanced::ReplaceContentText(const class FName InContentID, const class FText& InNewText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelInstanced", "ReplaceContentText");

	Params::TedContentPanelInstanced_ReplaceContentText Parms{};

	Parms.InContentID = InContentID;
	Parms.InNewText = std::move(InNewText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelInstanced.SetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class UTedUI_InstancedContent*>&InContent                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedContentPanelInstanced::SetContent(const TArray<class UTedUI_InstancedContent*>& InContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelInstanced", "SetContent");

	Params::TedContentPanelInstanced_SetContent Parms{};

	Parms.InContent = std::move(InContent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedContentPanelInstanced.GetAllContent
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const TArray<class UTedUI_InstancedContent*>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class UTedUI_InstancedContent*> UTedContentPanelInstanced::GetAllContent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelInstanced", "GetAllContent");

	Params::TedContentPanelInstanced_GetAllContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelInstanced.GetContent
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedUI_InstancedContent*    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedUI_InstancedContent* UTedContentPanelInstanced::GetContent(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelInstanced", "GetContent");

	Params::TedContentPanelInstanced_GetContent Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelInstanced.GetContentById
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const class FName                       InID                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedUI_InstancedContent*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedUI_InstancedContent* UTedContentPanelInstanced::GetContentById(const class FName InID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelInstanced", "GetContentById");

	Params::TedContentPanelInstanced_GetContentById Parms{};

	Parms.InID = InID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelInstanced.GetContentByState
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const ETedContentSlotState              InState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedUI_InstancedContent*    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedUI_InstancedContent* UTedContentPanelInstanced::GetContentByState(const ETedContentSlotState InState, int32 InIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelInstanced", "GetContentByState");

	Params::TedContentPanelInstanced_GetContentByState Parms{};

	Parms.InState = InState;
	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelInstanced.GetContentID
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UTedContentPanelInstanced::GetContentID(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelInstanced", "GetContentID");

	Params::TedContentPanelInstanced_GetContentID Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelInstanced.GetContentIDByState
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const ETedContentSlotState              InState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UTedContentPanelInstanced::GetContentIDByState(const ETedContentSlotState InState, int32 InIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelInstanced", "GetContentIDByState");

	Params::TedContentPanelInstanced_GetContentIDByState Parms{};

	Parms.InState = InState;
	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelInstanced.GetSlotIndexByContent
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const class UTedUI_InstancedContent*    InContent                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedContentPanelInstanced::GetSlotIndexByContent(const class UTedUI_InstancedContent* InContent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelInstanced", "GetSlotIndexByContent");

	Params::TedContentPanelInstanced_GetSlotIndexByContent Parms{};

	Parms.InContent = InContent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedContentPanelInstanced.GetSlotIndexByContentID
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const class FName                       InContentID                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedContentPanelInstanced::GetSlotIndexByContentID(const class FName InContentID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedContentPanelInstanced", "GetSlotIndexByContentID");

	Params::TedContentPanelInstanced_GetSlotIndexByContentID Parms{};

	Parms.InContentID = InContentID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedCredits.OnAllMoviesFinishedOrSkipped
// (Event, Protected, BlueprintEvent)

void UTedCredits::OnAllMoviesFinishedOrSkipped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCredits", "OnAllMoviesFinishedOrSkipped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedCredits.OnMovieFinished
// (Final, Native, Private)
// Parameters:
// class UTedMoviePlayerWidgetV2*          InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UFileMediaSource*           InSource                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedCredits::OnMovieFinished(class UTedMoviePlayerWidgetV2* InWidget, const class UFileMediaSource* InSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCredits", "OnMovieFinished");

	Params::TedCredits_OnMovieFinished Parms{};

	Parms.InWidget = InWidget;
	Parms.InSource = InSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCredits.PlayMoviesSequentially
// (Final, Native, Private, BlueprintCallable)

void UTedCredits::PlayMoviesSequentially()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCredits", "PlayMoviesSequentially");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCredits.Show
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UTedCredits::Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCredits", "Show");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedObjectiveCondition_Volume_ActorCounter.OnVolumeBeginOverlap_Handler
// (Native, Protected)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedObjectiveCondition_Volume_ActorCounter::OnVolumeBeginOverlap_Handler(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveCondition_Volume_ActorCounter", "OnVolumeBeginOverlap_Handler");

	Params::TedObjectiveCondition_Volume_ActorCounter_OnVolumeBeginOverlap_Handler Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedObjectiveCondition_Volume_ActorCounter.OnVolumeEndOverlap_Handler
// (Native, Protected)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedObjectiveCondition_Volume_ActorCounter::OnVolumeEndOverlap_Handler(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveCondition_Volume_ActorCounter", "OnVolumeEndOverlap_Handler");

	Params::TedObjectiveCondition_Volume_ActorCounter_OnVolumeEndOverlap_Handler Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedCustomUpgradeCondition.K2_IsMet
// (Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const struct FTedActiveUpgrade&         InActiveUpgrade                                        (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedCustomUpgradeCondition::K2_IsMet(const struct FTedActiveUpgrade& InActiveUpgrade) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedCustomUpgradeCondition", "K2_IsMet");

	Params::TedCustomUpgradeCondition_K2_IsMet Parms{};

	Parms.InActiveUpgrade = std::move(InActiveUpgrade);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveProgressWidget.K2_OnDisplayProgress
// (Event, Protected, BlueprintEvent)
// Parameters:
// const class UTedObjectiveProgress*      InProgress                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedObjectiveProgressWidget::K2_OnDisplayProgress(const class UTedObjectiveProgress* InProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveProgressWidget", "K2_OnDisplayProgress");

	Params::TedObjectiveProgressWidget_K2_OnDisplayProgress Parms{};

	Parms.InProgress = InProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedObjectiveSettings.AreAnnouncementsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedObjectiveSettings::AreAnnouncementsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveSettings", "AreAnnouncementsEnabled");

	Params::TedObjectiveSettings_AreAnnouncementsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveSettings.GetAnnouncement
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const ETedObjectiveAnnouncementType     InType                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInPrimary                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UTedAnnouncement>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UTedAnnouncement> UTedObjectiveSettings::GetAnnouncement(const ETedObjectiveAnnouncementType InType, const bool bInPrimary) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveSettings", "GetAnnouncement");

	Params::TedObjectiveSettings_GetAnnouncement Parms{};

	Parms.InType = InType;
	Parms.bInPrimary = bInPrimary;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveSettings.IsAnnouncementEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const ETedObjectiveAnnouncementType     InType                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedObjectiveSettings::IsAnnouncementEnabled(const ETedObjectiveAnnouncementType InType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveSettings", "IsAnnouncementEnabled");

	Params::TedObjectiveSettings_IsAnnouncementEnabled Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDedicatedServerMonitor.OnParentProcessDied
// (Final, Native, Private)

void UTedDedicatedServerMonitor::OnParentProcessDied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDedicatedServerMonitor", "OnParentProcessDied");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedDefinitionPanel_Weapon.SetContextPawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ATedPawn*                         InContext                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedDefinitionPanel_Weapon::SetContextPawn(class ATedPawn* InContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionPanel_Weapon", "SetContextPawn");

	Params::TedDefinitionPanel_Weapon_SetContextPawn Parms{};

	Parms.InContext = InContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedDefinitionPanel_Weapon.GetContextPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedPawn*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedPawn* UTedDefinitionPanel_Weapon::GetContextPawn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionPanel_Weapon", "GetContextPawn");

	Params::TedDefinitionPanel_Weapon_GetContextPawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDefinitionSlot_Weapon.OnContextPawnAmmoChange
// (Final, Native, Public)
// Parameters:
// class ATedPawn*                         Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UTedWeapon>           WeaponClass                                            (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AmmoCount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedDefinitionSlot_Weapon::OnContextPawnAmmoChange(class ATedPawn* Pawn, TSubclassOf<class UTedWeapon> WeaponClass, int32 AmmoCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionSlot_Weapon", "OnContextPawnAmmoChange");

	Params::TedDefinitionSlot_Weapon_OnContextPawnAmmoChange Parms{};

	Parms.Pawn = Pawn;
	Parms.WeaponClass = WeaponClass;
	Parms.AmmoCount = AmmoCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedDefinitionSlot_Weapon.GetAmmoCount
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedDefinitionSlot_Weapon::GetAmmoCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionSlot_Weapon", "GetAmmoCount");

	Params::TedDefinitionSlot_Weapon_GetAmmoCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDefinitionSlot_Weapon.GetAttackRange
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const bool                              bInBaseOnly                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedDefinitionSlot_Weapon::GetAttackRange(const bool bInBaseOnly) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionSlot_Weapon", "GetAttackRange");

	Params::TedDefinitionSlot_Weapon_GetAttackRange Parms{};

	Parms.bInBaseOnly = bInBaseOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDefinitionSlot_Weapon.GetAttackRangeModifier
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const float                             InBaseValue                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedDefinitionSlot_Weapon::GetAttackRangeModifier(const float InBaseValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionSlot_Weapon", "GetAttackRangeModifier");

	Params::TedDefinitionSlot_Weapon_GetAttackRangeModifier Parms{};

	Parms.InBaseValue = InBaseValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDefinitionSlot_Weapon.GetAttackSpeed
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const bool                              bInBaseOnly                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedDefinitionSlot_Weapon::GetAttackSpeed(const bool bInBaseOnly) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionSlot_Weapon", "GetAttackSpeed");

	Params::TedDefinitionSlot_Weapon_GetAttackSpeed Parms{};

	Parms.bInBaseOnly = bInBaseOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDefinitionSlot_Weapon.GetAttackSpeedModifier
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedDefinitionSlot_Weapon::GetAttackSpeedModifier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionSlot_Weapon", "GetAttackSpeedModifier");

	Params::TedDefinitionSlot_Weapon_GetAttackSpeedModifier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDefinitionSlot_Weapon.GetContextPawn
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedPawn*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedPawn* UTedDefinitionSlot_Weapon::GetContextPawn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionSlot_Weapon", "GetContextPawn");

	Params::TedDefinitionSlot_Weapon_GetContextPawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDefinitionSlot_Weapon.GetDamage
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const bool                              bInBaseOnly                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedDefinitionSlot_Weapon::GetDamage(const bool bInBaseOnly) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionSlot_Weapon", "GetDamage");

	Params::TedDefinitionSlot_Weapon_GetDamage Parms{};

	Parms.bInBaseOnly = bInBaseOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDefinitionSlot_Weapon.GetDamageType
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedDefinitionSlot_Weapon::GetDamageType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionSlot_Weapon", "GetDamageType");

	Params::TedDefinitionSlot_Weapon_GetDamageType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDefinitionSlot_Weapon.GetDamageWithModifiers
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const float                             InBaseValue                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedDefinitionSlot_Weapon::GetDamageWithModifiers(const float InBaseValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionSlot_Weapon", "GetDamageWithModifiers");

	Params::TedDefinitionSlot_Weapon_GetDamageWithModifiers Parms{};

	Parms.InBaseValue = InBaseValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDefinitionSlot_Weapon.GetRechargesAutomatically
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedDefinitionSlot_Weapon::GetRechargesAutomatically() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionSlot_Weapon", "GetRechargesAutomatically");

	Params::TedDefinitionSlot_Weapon_GetRechargesAutomatically Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDefinitionSlot_Weapon.GetRechargeTime
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const bool                              bInBaseOnly                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedDefinitionSlot_Weapon::GetRechargeTime(const bool bInBaseOnly) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionSlot_Weapon", "GetRechargeTime");

	Params::TedDefinitionSlot_Weapon_GetRechargeTime Parms{};

	Parms.bInBaseOnly = bInBaseOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDefinitionSlot_Weapon.GetTargetDomains
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagContainer      ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGameplayTagContainer UTedDefinitionSlot_Weapon::GetTargetDomains() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionSlot_Weapon", "GetTargetDomains");

	Params::TedDefinitionSlot_Weapon_GetTargetDomains Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDefinitionSlot_Weapon.GetTargetDomainsText
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedDefinitionSlot_Weapon::GetTargetDomainsText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionSlot_Weapon", "GetTargetDomainsText");

	Params::TedDefinitionSlot_Weapon_GetTargetDomainsText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDefinitionSlot_Weapon.GetUsesAmmo
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedDefinitionSlot_Weapon::GetUsesAmmo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionSlot_Weapon", "GetUsesAmmo");

	Params::TedDefinitionSlot_Weapon_GetUsesAmmo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDefinitionSlot_Weapon.GetWeapon
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedWeapon*                 ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedWeapon* UTedDefinitionSlot_Weapon::GetWeapon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDefinitionSlot_Weapon", "GetWeapon");

	Params::TedDefinitionSlot_Weapon_GetWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDifficultySettings.GetDefaultAttackWaveNames
// (Final, Native, Static, Public)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UTedDifficultySettings::GetDefaultAttackWaveNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedDifficultySettings", "GetDefaultAttackWaveNames");

	Params::TedDifficultySettings_GetDefaultAttackWaveNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDifficultySettings.GetDefaultUnitsSpawnNames
// (Final, Native, Static, Public)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UTedDifficultySettings::GetDefaultUnitsSpawnNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedDifficultySettings", "GetDefaultUnitsSpawnNames");

	Params::TedDifficultySettings_GetDefaultUnitsSpawnNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawnUpgradesPanel.GetUpgradeProgress
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutProgressAlpha                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutDuration                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bOutIsRunning                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPawnUpgradesPanel::GetUpgradeProgress(const int32 InSlotIndex, float* OutProgressAlpha, float* OutDuration, bool* bOutIsRunning) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnUpgradesPanel", "GetUpgradeProgress");

	Params::TedPawnUpgradesPanel_GetUpgradeProgress Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutProgressAlpha != nullptr)
		*OutProgressAlpha = Parms.OutProgressAlpha;

	if (OutDuration != nullptr)
		*OutDuration = Parms.OutDuration;

	if (bOutIsRunning != nullptr)
		*bOutIsRunning = Parms.bOutIsRunning;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrineSlot.GetDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedDoctrineSlot::GetDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrineSlot", "GetDescription");

	Params::TedDoctrineSlot_GetDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrineSlot.GetDoctrinePanel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedDoctrinePanel*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedDoctrinePanel* UTedDoctrineSlot::GetDoctrinePanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrineSlot", "GetDoctrinePanel");

	Params::TedDoctrineSlot_GetDoctrinePanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrineSlot.GetIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTedDoctrineSlot::GetIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrineSlot", "GetIcon");

	Params::TedDoctrineSlot_GetIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrineSlot.GetNextSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedDoctrineSlot*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedDoctrineSlot* UTedDoctrineSlot::GetNextSlot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrineSlot", "GetNextSlot");

	Params::TedDoctrineSlot_GetNextSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrineSlot.GetOnSellRefundedCredits
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedDoctrineSlot::GetOnSellRefundedCredits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrineSlot", "GetOnSellRefundedCredits");

	Params::TedDoctrineSlot_GetOnSellRefundedCredits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrineSlot.GetPreviousSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedDoctrineSlot*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedDoctrineSlot* UTedDoctrineSlot::GetPreviousSlot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrineSlot", "GetPreviousSlot");

	Params::TedDoctrineSlot_GetPreviousSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrineSlot.GetResearchCostCredits
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedDoctrineSlot::GetResearchCostCredits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrineSlot", "GetResearchCostCredits");

	Params::TedDoctrineSlot_GetResearchCostCredits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrineSlot.GetResearchTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedDoctrineSlot::GetResearchTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrineSlot", "GetResearchTime");

	Params::TedDoctrineSlot_GetResearchTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrineSlot.GetTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedDoctrineSlot::GetTitle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrineSlot", "GetTitle");

	Params::TedDoctrineSlot_GetTitle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrineSlot.IsLast
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedDoctrineSlot::IsLast() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrineSlot", "IsLast");

	Params::TedDoctrineSlot_IsLast Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPerfStatWidget.GetStatDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedPerfStatWidget::GetStatDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPerfStatWidget", "GetStatDisplayName");

	Params::TedPerfStatWidget_GetStatDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPerfStatWidget.GetStatType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedDisplayablePerformanceStat          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedDisplayablePerformanceStat UTedPerfStatWidget::GetStatType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPerfStatWidget", "GetStatType");

	Params::TedPerfStatWidget_GetStatType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPerfStatWidget.GetStatValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

double UTedPerfStatWidget::GetStatValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPerfStatWidget", "GetStatValue");

	Params::TedPerfStatWidget_GetStatValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPerfStatWidget.GetStatValueText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedPerfStatWidget::GetStatValueText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPerfStatWidget", "GetStatValueText");

	Params::TedPerfStatWidget_GetStatValueText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDoctrineSlot_HUD.OnRefresh_Progress
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInPaused                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInRunning                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsQueued                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InProgress                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedDoctrineSlot_HUD::OnRefresh_Progress(bool bInPaused, bool bInRunning, bool bInIsQueued, float InProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrineSlot_HUD", "OnRefresh_Progress");

	Params::TedDoctrineSlot_HUD_OnRefresh_Progress Parms{};

	Parms.bInPaused = bInPaused;
	Parms.bInRunning = bInRunning;
	Parms.bInIsQueued = bInIsQueued;
	Parms.InProgress = InProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedDoctrineSlot_HUD.RefreshProgress
// (Final, Native, Public, BlueprintCallable)

void UTedDoctrineSlot_HUD::RefreshProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrineSlot_HUD", "RefreshProgress");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedDoctrineSlot_HUD.GetDoctrinePanel_HUD
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedDoctrinePanel_HUD*            ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedDoctrinePanel_HUD* UTedDoctrineSlot_HUD::GetDoctrinePanel_HUD() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDoctrineSlot_HUD", "GetDoctrinePanel_HUD");

	Params::TedDoctrineSlot_HUD_GetDoctrinePanel_HUD Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedDrone.OnRep_DroneOwner
// (Final, Native, Protected)

void ATedDrone::OnRep_DroneOwner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDrone", "OnRep_DroneOwner");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedDrone.GetDroneOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedPawn*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedPawn* ATedDrone::GetDroneOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDrone", "GetDroneOwner");

	Params::TedDrone_GetDroneOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.AirDropBlueprintNode.RequestAirDrop
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContext                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAirDropInputs                          In                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAirDropOutputs*                        Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)
// const TArray<class ATargetPoint*>&      PlaneRoute                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const TArray<class ATedUnitSpawner*>&   Spawners                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class ATedUnitBase*>*            DroppedUnits                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAirDropBlueprintNode::RequestAirDrop(class UObject* InWorldContext, EAirDropInputs In, EAirDropOutputs* Out, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo, const TArray<class ATargetPoint*>& PlaneRoute, const TArray<class ATedUnitSpawner*>& Spawners, TArray<class ATedUnitBase*>* DroppedUnits)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AirDropBlueprintNode", "RequestAirDrop");

	Params::AirDropBlueprintNode_RequestAirDrop Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.In = In;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);
	Parms.PlaneRoute = std::move(PlaneRoute);
	Parms.Spawners = std::move(Spawners);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out != nullptr)
		*Out = Parms.Out;

	if (DroppedUnits != nullptr)
		*DroppedUnits = std::move(Parms.DroppedUnits);
}


// Function Tempest.TedInputMappingPanel.GetContentDisplayText
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedInputMappingPanel::GetContentDisplayText(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedInputMappingPanel", "GetContentDisplayText");

	Params::TedInputMappingPanel_GetContentDisplayText Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.SpawnInVolumeBlueprintNode.RequestSpawnInVolume
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContext                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESpawnInVolumeInputs                    In                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESpawnInVolumeOutputs*                  Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)
// class ATedUnitSpawner_Volume*           Spawner                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ATedUnitBase*>*            SpawnedUnits                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void USpawnInVolumeBlueprintNode::RequestSpawnInVolume(class UObject* InWorldContext, ESpawnInVolumeInputs In, ESpawnInVolumeOutputs* Out, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo, class ATedUnitSpawner_Volume* Spawner, TArray<class ATedUnitBase*>* SpawnedUnits)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SpawnInVolumeBlueprintNode", "RequestSpawnInVolume");

	Params::SpawnInVolumeBlueprintNode_RequestSpawnInVolume Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.In = In;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);
	Parms.Spawner = Spawner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out != nullptr)
		*Out = Parms.Out;

	if (SpawnedUnits != nullptr)
		*SpawnedUnits = std::move(Parms.SpawnedUnits);
}


// Function Tempest.TedDropDownOld.SetOptions
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FText>&              InOptions                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedDropDownOld::SetOptions(const TArray<class FText>& InOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDropDownOld", "SetOptions");

	Params::TedDropDownOld_SetOptions Parms{};

	Parms.InOptions = std::move(InOptions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedDropDownOld.GetSelectedOptionIndex
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedDropDownOld::GetSelectedOptionIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDropDownOld", "GetSelectedOptionIndex");

	Params::TedDropDownOld_GetSelectedOptionIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLeaderboardHeadersPanel.GetAvailableHeaderIDs
// (Final, Native, Protected, Const)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UTedLeaderboardHeadersPanel::GetAvailableHeaderIDs() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLeaderboardHeadersPanel", "GetAvailableHeaderIDs");

	Params::TedLeaderboardHeadersPanel_GetAvailableHeaderIDs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLeaderboardHeadersPanel.GetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedLeaderboardHeaderContent*    OutContent                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedLeaderboardHeadersPanel::GetContent(const int32 InSlotIndex, struct FTedLeaderboardHeaderContent* OutContent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLeaderboardHeadersPanel", "GetContent");

	Params::TedLeaderboardHeadersPanel_GetContent Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutContent != nullptr)
		*OutContent = std::move(Parms.OutContent);

	return Parms.ReturnValue;
}


// Function Tempest.TedLeaderboardHeadersPanel.GetContentByState
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const ETedContentSlotState              InState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InIndex                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedLeaderboardHeaderContent*    OutContent                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedLeaderboardHeadersPanel::GetContentByState(const ETedContentSlotState InState, const int32 InIndex, struct FTedLeaderboardHeaderContent* OutContent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLeaderboardHeadersPanel", "GetContentByState");

	Params::TedLeaderboardHeadersPanel_GetContentByState Parms{};

	Parms.InState = InState;
	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutContent != nullptr)
		*OutContent = std::move(Parms.OutContent);

	return Parms.ReturnValue;
}


// Function Tempest.TedDynamicEventForwarder.OnActorBeginOverlap
// (Final, Native, Protected)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedDynamicEventForwarder::OnActorBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDynamicEventForwarder", "OnActorBeginOverlap");

	Params::TedDynamicEventForwarder_OnActorBeginOverlap Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedDynamicEventForwarder.OnActorEndOverlap
// (Final, Native, Protected)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedDynamicEventForwarder::OnActorEndOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDynamicEventForwarder", "OnActorEndOverlap");

	Params::TedDynamicEventForwarder_OnActorEndOverlap Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedDynamicEventForwarder.OnActorTakeAnyDamage
// (Final, Native, Protected)
// Parameters:
// class AActor*                           DamagedActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UDamageType*                DamageType                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      InstigatedBy                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedDynamicEventForwarder::OnActorTakeAnyDamage(class AActor* DamagedActor, float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDynamicEventForwarder", "OnActorTakeAnyDamage");

	Params::TedDynamicEventForwarder_OnActorTakeAnyDamage Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedDynamicEventForwarder.OnEndPlay
// (Final, Native, Protected)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          InEndPlayReason                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedDynamicEventForwarder::OnEndPlay(class AActor* InActor, EEndPlayReason InEndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedDynamicEventForwarder", "OnEndPlay");

	Params::TedDynamicEventForwarder_OnEndPlay Parms{};

	Parms.InActor = InActor;
	Parms.InEndPlayReason = InEndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLevelScriptActor.K2_DisablePawnSpawnTracking
// (Final, Native, Public, BlueprintCallable)

void ATedLevelScriptActor::K2_DisablePawnSpawnTracking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLevelScriptActor", "K2_DisablePawnSpawnTracking");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLevelScriptActor.K2_EnablePawnSpawnTracking
// (Final, Native, Public, BlueprintCallable)

void ATedLevelScriptActor::K2_EnablePawnSpawnTracking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLevelScriptActor", "K2_EnablePawnSpawnTracking");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLevelScriptActor.K2_OnPawnSpawned
// (Event, Public, BlueprintEvent)
// Parameters:
// class ATedPawn*                         NewPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedLevelScriptActor::K2_OnPawnSpawned(class ATedPawn* NewPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLevelScriptActor", "K2_OnPawnSpawned");

	Params::TedLevelScriptActor_K2_OnPawnSpawned Parms{};

	Parms.NewPawn = NewPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedLevelScriptActor.OnActorSpawned
// (Final, Native, Private)
// Parameters:
// class AActor*                           NewActor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedLevelScriptActor::OnActorSpawned(class AActor* NewActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLevelScriptActor", "OnActorSpawned");

	Params::TedLevelScriptActor_OnActorSpawned Parms{};

	Parms.NewActor = NewActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLevelScriptActor.SetSaveActorComponentActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UActorComponent*                  Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bReset                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedLevelScriptActor::SetSaveActorComponentActive(class UActorComponent* Component, bool bActive, bool bReset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLevelScriptActor", "SetSaveActorComponentActive");

	Params::TedLevelScriptActor_SetSaveActorComponentActive Parms{};

	Parms.Component = Component;
	Parms.bActive = bActive;
	Parms.bReset = bReset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLevelScriptActor.SetSaveActorHiddenInGame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInHidden                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedLevelScriptActor::SetSaveActorHiddenInGame(class AActor* Actor, bool bInHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLevelScriptActor", "SetSaveActorHiddenInGame");

	Params::TedLevelScriptActor_SetSaveActorHiddenInGame Parms{};

	Parms.Actor = Actor;
	Parms.bInHidden = bInHidden;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedEcsModule_AoE.K2_ReapplyAoEEffect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ATedPawn*                         AoEProviderPawn                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSubclassOf<class UGameplayEffect>EffectToReapply                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedEcsModule_AoE::K2_ReapplyAoEEffect(class ATedPawn* AoEProviderPawn, const TSubclassOf<class UGameplayEffect> EffectToReapply)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedEcsModule_AoE", "K2_ReapplyAoEEffect");

	Params::TedEcsModule_AoE_K2_ReapplyAoEEffect Parms{};

	Parms.AoEProviderPawn = AoEProviderPawn;
	Parms.EffectToReapply = EffectToReapply;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMarkerConfig.GetContextTags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagContainer      ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGameplayTagContainer UTedMarkerConfig::GetContextTags() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMarkerConfig", "GetContextTags");

	Params::TedMarkerConfig_GetContextTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMarkerConfig.GetDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedMarkerConfig::GetDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMarkerConfig", "GetDuration");

	Params::TedMarkerConfig_GetDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMarkerConfig.GetWorldMarkerBursh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FSlateBrush                ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FSlateBrush UTedMarkerConfig::GetWorldMarkerBursh() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMarkerConfig", "GetWorldMarkerBursh");

	Params::TedMarkerConfig_GetWorldMarkerBursh Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMarkerConfig.UseWorldMarker
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMarkerConfig::UseWorldMarker() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMarkerConfig", "UseWorldMarker");

	Params::TedMarkerConfig_UseWorldMarker Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEditableTextBox.ApplyCharacterLimit
// (Final, Native, Private, HasOutParams)
// Parameters:
// const class FText&                      InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedEditableTextBox::ApplyCharacterLimit(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEditableTextBox", "ApplyCharacterLimit");

	Params::TedEditableTextBox_ApplyCharacterLimit Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedEditableTextBox.RemoveSuffixAndRestoreValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FText&                      InValue                                                (Parm, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedEditableTextBox::RemoveSuffixAndRestoreValue(const class FText& InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEditableTextBox", "RemoveSuffixAndRestoreValue");

	Params::TedEditableTextBox_RemoveSuffixAndRestoreValue Parms{};

	Parms.InValue = std::move(InValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEditableTextBox.AddSuffixAndTrim
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText&                      InValue                                                (Parm, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedEditableTextBox::AddSuffixAndTrim(const class FText& InValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEditableTextBox", "AddSuffixAndTrim");

	Params::TedEditableTextBox_AddSuffixAndTrim Parms{};

	Parms.InValue = std::move(InValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEffectsProxyWidget.HandleEffectApplied
// (Final, Native, Protected)
// Parameters:
// const class ATedPawn*                   TargetPawn                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedStatusDefinition*       AppliedEffect                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedEffectsProxyWidget::HandleEffectApplied(const class ATedPawn* TargetPawn, const class UTedStatusDefinition* AppliedEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEffectsProxyWidget", "HandleEffectApplied");

	Params::TedEffectsProxyWidget_HandleEffectApplied Parms{};

	Parms.TargetPawn = TargetPawn;
	Parms.AppliedEffect = AppliedEffect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedEncyclopediaAbilitiesPanel.SetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<TSubclassOf<class UTedCommand>>* AbilityData                                            (Parm, OutParm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UTedEncyclopediaAbilitiesPanel::SetContent(TArray<TSubclassOf<class UTedCommand>>* AbilityData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEncyclopediaAbilitiesPanel", "SetContent");

	Params::TedEncyclopediaAbilitiesPanel_SetContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AbilityData != nullptr)
		*AbilityData = std::move(Parms.AbilityData);
}


// Function Tempest.TedEncyclopediaAbilitiesPanel.GetContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UTedCommand>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UTedCommand> UTedEncyclopediaAbilitiesPanel::GetContent(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEncyclopediaAbilitiesPanel", "GetContent");

	Params::TedEncyclopediaAbilitiesPanel_GetContent Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEncyclopediaEntryPanel.SetContent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<class UTedEncyclopediaDefinitionAsset*>&NewContent                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UTedEncyclopediaEntryPanel::SetContent(const TArray<class UTedEncyclopediaDefinitionAsset*>& NewContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEncyclopediaEntryPanel", "SetContent");

	Params::TedEncyclopediaEntryPanel_SetContent Parms{};

	Parms.NewContent = std::move(NewContent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedEncyclopediaEntryPanel.GetContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedEncyclopediaDefinitionAsset*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedEncyclopediaDefinitionAsset* UTedEncyclopediaEntryPanel::GetContent(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEncyclopediaEntryPanel", "GetContent");

	Params::TedEncyclopediaEntryPanel_GetContent Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMatchHistoryPanel.Sort
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              SortType                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bAscending                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMatchHistoryPanel::Sort(const struct FGameplayTag& SortType, const bool bAscending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMatchHistoryPanel", "Sort");

	Params::TedMatchHistoryPanel_Sort Parms{};

	Parms.SortType = std::move(SortType);
	Parms.bAscending = bAscending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedEncyclopediaMain.DisplayEyclopediaEntry
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UTedEncyclopediaDefinitionAsset*  Asset                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedEncyclopediaMain::DisplayEyclopediaEntry(class UTedEncyclopediaDefinitionAsset* Asset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEncyclopediaMain", "DisplayEyclopediaEntry");

	Params::TedEncyclopediaMain_DisplayEyclopediaEntry Parms{};

	Parms.Asset = Asset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedEncyclopediaMain.SetNewFaction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETedFaction                             NewFaction                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedEncyclopediaMain::SetNewFaction(ETedFaction NewFaction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEncyclopediaMain", "SetNewFaction");

	Params::TedEncyclopediaMain_SetNewFaction Parms{};

	Parms.NewFaction = NewFaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedEncyclopediaMain.UpdateEntries
// (Final, Native, Public, BlueprintCallable)

void UTedEncyclopediaMain::UpdateEntries()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEncyclopediaMain", "UpdateEntries");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMedalsScreenContextObject.New
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const bool                              bInVictory                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ATedPlayerState*            InPlayerState                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedMedalsScreenContextObject*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedMedalsScreenContextObject* UTedMedalsScreenContextObject::New(const bool bInVictory, const class ATedPlayerState* InPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedMedalsScreenContextObject", "New");

	Params::TedMedalsScreenContextObject_New Parms{};

	Parms.bInVictory = bInVictory;
	Parms.InPlayerState = InPlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEndGameScreen.ShowPopup
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class UTedUserWidget*                   InButton                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedEndGameScreen::ShowPopup(class UTedUserWidget* InButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEndGameScreen", "ShowPopup");

	Params::TedEndGameScreen_ShowPopup Parms{};

	Parms.InButton = InButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedEquipmentSlot.K2_RefreshStateVisuals
// (Event, Protected, BlueprintEvent)

void UTedEquipmentSlot::K2_RefreshStateVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentSlot", "K2_RefreshStateVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedEquipmentSlot.OnButtonClicked_Buy
// (Final, Native, Protected)

void UTedEquipmentSlot::OnButtonClicked_Buy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentSlot", "OnButtonClicked_Buy");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedEquipmentSlot.OnButtonClicked_Equip
// (Final, Native, Protected)

void UTedEquipmentSlot::OnButtonClicked_Equip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentSlot", "OnButtonClicked_Equip");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedEquipmentSlot.OnButtonClicked_Unequip
// (Final, Native, Protected)

void UTedEquipmentSlot::OnButtonClicked_Unequip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentSlot", "OnButtonClicked_Unequip");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedEquipmentSlot.RefreshStateVisuals
// (Final, Native, Protected, BlueprintCallable)

void UTedEquipmentSlot::RefreshStateVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentSlot", "RefreshStateVisuals");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedEquipmentSlot.GetDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedEquipmentSlot::GetDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentSlot", "GetDescription");

	Params::TedEquipmentSlot_GetDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEquipmentSlot.GetEquipmentPanel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedEquipmentPanel*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedEquipmentPanel* UTedEquipmentSlot::GetEquipmentPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentSlot", "GetEquipmentPanel");

	Params::TedEquipmentSlot_GetEquipmentPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEquipmentSlot.GetIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTedEquipmentSlot::GetIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentSlot", "GetIcon");

	Params::TedEquipmentSlot_GetIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEquipmentSlot.GetInventorySpaceCost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedEquipmentSlot::GetInventorySpaceCost() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentSlot", "GetInventorySpaceCost");

	Params::TedEquipmentSlot_GetInventorySpaceCost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEquipmentSlot.GetRequisitionCost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedEquipmentSlot::GetRequisitionCost() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentSlot", "GetRequisitionCost");

	Params::TedEquipmentSlot_GetRequisitionCost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEquipmentSlot.GetTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedEquipmentSlot::GetTitle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentSlot", "GetTitle");

	Params::TedEquipmentSlot_GetTitle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEquipmentSlot.HasRequisitionForEquipment
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedEquipmentSlot::HasRequisitionForEquipment() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentSlot", "HasRequisitionForEquipment");

	Params::TedEquipmentSlot_HasRequisitionForEquipment Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEquipmentSlot.HasSpaceForEquipment
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedEquipmentSlot::HasSpaceForEquipment() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEquipmentSlot", "HasSpaceForEquipment");

	Params::TedEquipmentSlot_HasSpaceForEquipment Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedEULAMenuScreenPage.ShowQuitGamePopUp
// (Final, Native, Private, BlueprintCallable, Const)

void UTedEULAMenuScreenPage::ShowQuitGamePopUp() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedEULAMenuScreenPage", "ShowQuitGamePopUp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedFogOfWarAgentActor.OnRep_FoWAgentData
// (Final, Native, Protected)

void ATedFogOfWarAgentActor::OnRep_FoWAgentData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedFogOfWarAgentActor", "OnRep_FoWAgentData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameCreationPlayersSlot.OnClickedAddBotPlayer
// (Final, Native, Protected)

void UTedGameCreationPlayersSlot::OnClickedAddBotPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersSlot", "OnClickedAddBotPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameCreationPlayersSlot.OnClickedAddHumanPlayer
// (Final, Native, Protected)

void UTedGameCreationPlayersSlot::OnClickedAddHumanPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersSlot", "OnClickedAddHumanPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameCreationPlayersSlot.OnClickedRemovePlayer
// (Final, Native, Protected)

void UTedGameCreationPlayersSlot::OnClickedRemovePlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersSlot", "OnClickedRemovePlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameCreationPlayersSlot.RequestAddBotPlayer
// (Final, Native, Public, BlueprintCallable)

void UTedGameCreationPlayersSlot::RequestAddBotPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersSlot", "RequestAddBotPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameCreationPlayersSlot.RequestAddHumanPlayer
// (Final, Native, Public, BlueprintCallable)

void UTedGameCreationPlayersSlot::RequestAddHumanPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersSlot", "RequestAddHumanPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameCreationPlayersSlot.CanRequestAddBotPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGameCreationPlayersSlot::CanRequestAddBotPlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersSlot", "CanRequestAddBotPlayer");

	Params::TedGameCreationPlayersSlot_CanRequestAddBotPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameCreationPlayersSlot.CanRequestRemovePlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGameCreationPlayersSlot::CanRequestRemovePlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersSlot", "CanRequestRemovePlayer");

	Params::TedGameCreationPlayersSlot_CanRequestRemovePlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameCreationPlayersSlot.GetAvatar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTedGameCreationPlayersSlot::GetAvatar() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersSlot", "GetAvatar");

	Params::TedGameCreationPlayersSlot_GetAvatar Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameCreationPlayersSlot.GetContentPanel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedGameCreationPlayersPanel*     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedGameCreationPlayersPanel* UTedGameCreationPlayersSlot::GetContentPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersSlot", "GetContentPanel");

	Params::TedGameCreationPlayersSlot_GetContentPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameCreationPlayersSlot.GetLabel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedGameCreationPlayersSlot::GetLabel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersSlot", "GetLabel");

	Params::TedGameCreationPlayersSlot_GetLabel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameCreationPlayersSlot.GetSettingValue
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const ETedSessionMemberSettingKey       InKey                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGameCreationPlayersSlot::GetSettingValue(const ETedSessionMemberSettingKey InKey, int32* OutValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersSlot", "GetSettingValue");

	Params::TedGameCreationPlayersSlot_GetSettingValue Parms{};

	Parms.InKey = InKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutValue != nullptr)
		*OutValue = Parms.OutValue;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameCreationPlayersSlot.HasSetting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const ETedSessionMemberSettingKey       InKey                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGameCreationPlayersSlot::HasSetting(const ETedSessionMemberSettingKey InKey) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersSlot", "HasSetting");

	Params::TedGameCreationPlayersSlot_HasSetting Parms{};

	Parms.InKey = InKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameCreationPlayersSlot.IsAdmin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGameCreationPlayersSlot::IsAdmin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersSlot", "IsAdmin");

	Params::TedGameCreationPlayersSlot_IsAdmin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameCreationPlayersSlot.IsBot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGameCreationPlayersSlot::IsBot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersSlot", "IsBot");

	Params::TedGameCreationPlayersSlot_IsBot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameCreationPlayersSlot.IsEmpty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGameCreationPlayersSlot::IsEmpty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersSlot", "IsEmpty");

	Params::TedGameCreationPlayersSlot_IsEmpty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameCreationPlayersSlot.IsHuman
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGameCreationPlayersSlot::IsHuman() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersSlot", "IsHuman");

	Params::TedGameCreationPlayersSlot_IsHuman Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameCreationPlayersSlot.IsReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGameCreationPlayersSlot::IsReady() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameCreationPlayersSlot", "IsReady");

	Params::TedGameCreationPlayersSlot_IsReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMovieSequencePlayerWidget.FindSequencePlayerActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedMovieSequencePlayerActor*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedMovieSequencePlayerActor* UTedMovieSequencePlayerWidget::FindSequencePlayerActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMovieSequencePlayerWidget", "FindSequencePlayerActor");

	Params::TedMovieSequencePlayerWidget_FindSequencePlayerActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMovieSequencePlayerWidget.FindSequencePlayerActors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class ATedMovieSequencePlayerActor*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ATedMovieSequencePlayerActor*> UTedMovieSequencePlayerWidget::FindSequencePlayerActors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMovieSequencePlayerWidget", "FindSequencePlayerActors");

	Params::TedMovieSequencePlayerWidget_FindSequencePlayerActors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMovieSequencePlayerWidget.GetCurrentSequencePlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedMovieSequencePlayerActor*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedMovieSequencePlayerActor* UTedMovieSequencePlayerWidget::GetCurrentSequencePlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMovieSequencePlayerWidget", "GetCurrentSequencePlayer");

	Params::TedMovieSequencePlayerWidget_GetCurrentSequencePlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGameplayCueNotify_HitBurst.K2_GetFXAssetConfigs
// (Native, Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const class AActor*                     TargetActor                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayCueParameters&    GCueParams                                             (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// TArray<struct FGCueParticleConfig>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FGCueParticleConfig> UTedGameplayCueNotify_HitBurst::K2_GetFXAssetConfigs(const class AActor* TargetActor, const struct FGameplayCueParameters& GCueParams) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameplayCueNotify_HitBurst", "K2_GetFXAssetConfigs");

	Params::TedGameplayCueNotify_HitBurst_K2_GetFXAssetConfigs Parms{};

	Parms.TargetActor = TargetActor;
	Parms.GCueParams = std::move(GCueParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineLeaderboardManager.GetCurrentSeason
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedOnlineLeaderboardManager::GetCurrentSeason(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedOnlineLeaderboardManager", "GetCurrentSeason");

	Params::TedOnlineLeaderboardManager_GetCurrentSeason Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineLeaderboardManager.RoundRating
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const float&                            InRating                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedOnlineLeaderboardManager::RoundRating(const float& InRating)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedOnlineLeaderboardManager", "RoundRating");

	Params::TedOnlineLeaderboardManager_RoundRating Parms{};

	Parms.InRating = InRating;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineLeaderboardManager.OnDownloadGameConfigurationComplete
// (Final, Native, Private, HasOutParams)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FLayerData>&        Layers                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EProsdkErrorCodeGameConfiguration       ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineLeaderboardManager::OnDownloadGameConfigurationComplete(int32 LocalUserNum, const TArray<struct FLayerData>& Layers, EProsdkErrorCodeGameConfiguration ResultCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineLeaderboardManager", "OnDownloadGameConfigurationComplete");

	Params::TedOnlineLeaderboardManager_OnDownloadGameConfigurationComplete Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.Layers = std::move(Layers);
	Parms.ResultCode = ResultCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineLeaderboardManager.OnServerLeaderboardsUpdateAfterMatch
// (Final, Native, Private, Const)
// Parameters:
// EProsdkErrorCodeLeaderboards            ErrorCode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineLeaderboardManager::OnServerLeaderboardsUpdateAfterMatch(EProsdkErrorCodeLeaderboards ErrorCode) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineLeaderboardManager", "OnServerLeaderboardsUpdateAfterMatch");

	Params::TedOnlineLeaderboardManager_OnServerLeaderboardsUpdateAfterMatch Parms{};

	Parms.ErrorCode = ErrorCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameState.IncrementMatchTimer
// (Final, Native, Private)

void ATedGameState::IncrementMatchTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameState", "IncrementMatchTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameState.MultiCast_FireProjectile
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// TSubclassOf<class ATedProjectile>       InProjectileClass                                      (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InOwner                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UTedDamageType>       DamageType                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRadialDamageParams&       RadialDamageParams                                     (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TSubclassOf<class UGameplayEffect>      EffectToApplyOnDamage                                  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDealFullDamageToTarget                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 TargetLocation                                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedPawn*                         TargetPawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedUtilsPawnFilter&       PawnFilter                                             (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              TrackedSupportPowerTag                                 (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedGameState::MultiCast_FireProjectile(TSubclassOf<class ATedProjectile> InProjectileClass, class AActor* InOwner, TSubclassOf<class UTedDamageType> DamageType, const struct FRadialDamageParams& RadialDamageParams, TSubclassOf<class UGameplayEffect> EffectToApplyOnDamage, bool bDealFullDamageToTarget, const struct FVector2D& TargetLocation, class ATedPawn* TargetPawn, const struct FTedUtilsPawnFilter& PawnFilter, const struct FGameplayTag& TrackedSupportPowerTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameState", "MultiCast_FireProjectile");

	Params::TedGameState_MultiCast_FireProjectile Parms{};

	Parms.InProjectileClass = InProjectileClass;
	Parms.InOwner = InOwner;
	Parms.DamageType = DamageType;
	Parms.RadialDamageParams = std::move(RadialDamageParams);
	Parms.EffectToApplyOnDamage = EffectToApplyOnDamage;
	Parms.bDealFullDamageToTarget = bDealFullDamageToTarget;
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.TargetPawn = TargetPawn;
	Parms.PawnFilter = std::move(PawnFilter);
	Parms.TrackedSupportPowerTag = std::move(TrackedSupportPowerTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameState.Client_R_OnDisconnect
// (Net, NetReliable, Native, Event, NetMulticast, Public, Const)
// Parameters:
// const class ATedPlayerState*            PlayerDisconnected                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedGameState::Client_R_OnDisconnect(const class ATedPlayerState* PlayerDisconnected) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameState", "Client_R_OnDisconnect");

	Params::TedGameState_Client_R_OnDisconnect Parms{};

	Parms.PlayerDisconnected = PlayerDisconnected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGameState.Client_R_OnLogin
// (Net, NetReliable, Native, Event, NetMulticast, Public, Const)
// Parameters:
// const class ATedPlayerState*            PlayerLoggedIn                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedGameState::Client_R_OnLogin(const class ATedPlayerState* PlayerLoggedIn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGameState", "Client_R_OnLogin");

	Params::TedGameState_Client_R_OnLogin Parms{};

	Parms.PlayerLoggedIn = PlayerLoggedIn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineQrCodeManager.GetQrCode
// (Final, Native, Public, BlueprintCallable)

void UTedOnlineQrCodeManager::GetQrCode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineQrCodeManager", "GetQrCode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineQrCodeManager.GetQrCodeRequestCompleted
// (Final, Native, Private, HasOutParams, Const)
// Parameters:
// const struct FProsAccountServiceStatus& InStatus                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedOnlineQrCodeManager::GetQrCodeRequestCompleted(const struct FProsAccountServiceStatus& InStatus) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineQrCodeManager", "GetQrCodeRequestCompleted");

	Params::TedOnlineQrCodeManager_GetQrCodeRequestCompleted Parms{};

	Parms.InStatus = std::move(InStatus);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGenericDataFunctions.GetGenericValue_Enum
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Key                                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedGenericDataContainer&  Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class UEnum*                      EnumType                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8*                                  Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGenericDataFunctions::GetGenericValue_Enum(const struct FGameplayTag& Key, const struct FTedGenericDataContainer& Data, const class UEnum* EnumType, uint8* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGenericDataFunctions", "GetGenericValue_Enum");

	Params::TedGenericDataFunctions_GetGenericValue_Enum Parms{};

	Parms.Key = std::move(Key);
	Parms.Data = std::move(Data);
	Parms.EnumType = EnumType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = Parms.Value;

	return Parms.ReturnValue;
}


// Function Tempest.TedGenericDataFunctions.GetGenericValue_Float
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Key                                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedGenericDataContainer&  Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float*                                  Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGenericDataFunctions::GetGenericValue_Float(const struct FGameplayTag& Key, const struct FTedGenericDataContainer& Data, float* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGenericDataFunctions", "GetGenericValue_Float");

	Params::TedGenericDataFunctions_GetGenericValue_Float Parms{};

	Parms.Key = std::move(Key);
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = Parms.Value;

	return Parms.ReturnValue;
}


// Function Tempest.TedGenericDataFunctions.GetGenericValue_Int32
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Key                                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedGenericDataContainer&  Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32*                                  Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGenericDataFunctions::GetGenericValue_Int32(const struct FGameplayTag& Key, const struct FTedGenericDataContainer& Data, int32* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGenericDataFunctions", "GetGenericValue_Int32");

	Params::TedGenericDataFunctions_GetGenericValue_Int32 Parms{};

	Parms.Key = std::move(Key);
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = Parms.Value;

	return Parms.ReturnValue;
}


// Function Tempest.TedGenericDataFunctions.GetGenericValue_Object
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Key                                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedGenericDataContainer&  Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const TSubclassOf<class UObject>        OutputType                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject**                         Value                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGenericDataFunctions::GetGenericValue_Object(const struct FGameplayTag& Key, const struct FTedGenericDataContainer& Data, const TSubclassOf<class UObject> OutputType, class UObject** Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGenericDataFunctions", "GetGenericValue_Object");

	Params::TedGenericDataFunctions_GetGenericValue_Object Parms{};

	Parms.Key = std::move(Key);
	Parms.Data = std::move(Data);
	Parms.OutputType = OutputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = Parms.Value;

	return Parms.ReturnValue;
}


// Function Tempest.TedGenericDataFunctions.GetGenericValue_SlateBrush
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Key                                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedGenericDataContainer&  Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FSlateBrush*                     Value                                                  (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGenericDataFunctions::GetGenericValue_SlateBrush(const struct FGameplayTag& Key, const struct FTedGenericDataContainer& Data, struct FSlateBrush* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGenericDataFunctions", "GetGenericValue_SlateBrush");

	Params::TedGenericDataFunctions_GetGenericValue_SlateBrush Parms{};

	Parms.Key = std::move(Key);
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = std::move(Parms.Value);

	return Parms.ReturnValue;
}


// Function Tempest.TedGenericDataFunctions.GetGenericValue_Text
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Key                                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedGenericDataContainer&  Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText*                            Value                                                  (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGenericDataFunctions::GetGenericValue_Text(const struct FGameplayTag& Key, const struct FTedGenericDataContainer& Data, class FText* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGenericDataFunctions", "GetGenericValue_Text");

	Params::TedGenericDataFunctions_GetGenericValue_Text Parms{};

	Parms.Key = std::move(Key);
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = std::move(Parms.Value);

	return Parms.ReturnValue;
}


// Function Tempest.TedGenericDataFunctions.RemoveGenericValue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Key                                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedGenericDataContainer&        Data                                                   (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGenericDataFunctions::RemoveGenericValue(const struct FGameplayTag& Key, struct FTedGenericDataContainer& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGenericDataFunctions", "RemoveGenericValue");

	Params::TedGenericDataFunctions_RemoveGenericValue Parms{};

	Parms.Key = std::move(Key);
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Data = std::move(Parms.Data);

	return Parms.ReturnValue;
}


// Function Tempest.TedGenericDataFunctions.SetGenericValue_Enum
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Key                                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UEnum*                      EnumType                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8                             Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedGenericDataContainer&        Data                                                   (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGenericDataFunctions::SetGenericValue_Enum(const struct FGameplayTag& Key, const class UEnum* EnumType, const uint8 Value, struct FTedGenericDataContainer& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGenericDataFunctions", "SetGenericValue_Enum");

	Params::TedGenericDataFunctions_SetGenericValue_Enum Parms{};

	Parms.Key = std::move(Key);
	Parms.EnumType = EnumType;
	Parms.Value = Value;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Data = std::move(Parms.Data);

	return Parms.ReturnValue;
}


// Function Tempest.TedGenericDataFunctions.SetGenericValue_Float
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Key                                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedGenericDataContainer&        Data                                                   (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGenericDataFunctions::SetGenericValue_Float(const struct FGameplayTag& Key, const float Value, struct FTedGenericDataContainer& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGenericDataFunctions", "SetGenericValue_Float");

	Params::TedGenericDataFunctions_SetGenericValue_Float Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = Value;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Data = std::move(Parms.Data);

	return Parms.ReturnValue;
}


// Function Tempest.TedGenericDataFunctions.SetGenericValue_Int32
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Key                                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedGenericDataContainer&        Data                                                   (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGenericDataFunctions::SetGenericValue_Int32(const struct FGameplayTag& Key, const int32 Value, struct FTedGenericDataContainer& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGenericDataFunctions", "SetGenericValue_Int32");

	Params::TedGenericDataFunctions_SetGenericValue_Int32 Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = Value;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Data = std::move(Parms.Data);

	return Parms.ReturnValue;
}


// Function Tempest.TedGenericDataFunctions.SetGenericValue_Object
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Key                                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UObject*                    Value                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedGenericDataContainer&        Data                                                   (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGenericDataFunctions::SetGenericValue_Object(const struct FGameplayTag& Key, const class UObject* Value, struct FTedGenericDataContainer& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGenericDataFunctions", "SetGenericValue_Object");

	Params::TedGenericDataFunctions_SetGenericValue_Object Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = Value;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Data = std::move(Parms.Data);

	return Parms.ReturnValue;
}


// Function Tempest.TedGenericDataFunctions.SetGenericValue_SlateBrush
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Key                                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSlateBrush&               Value                                                  (ConstParm, Parm, NativeAccessSpecifierPublic)
// struct FTedGenericDataContainer&        Data                                                   (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGenericDataFunctions::SetGenericValue_SlateBrush(const struct FGameplayTag& Key, const struct FSlateBrush& Value, struct FTedGenericDataContainer& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGenericDataFunctions", "SetGenericValue_SlateBrush");

	Params::TedGenericDataFunctions_SetGenericValue_SlateBrush Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = std::move(Value);
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Data = std::move(Parms.Data);

	return Parms.ReturnValue;
}


// Function Tempest.TedGenericDataFunctions.SetGenericValue_Text
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Key                                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      Value                                                  (ConstParm, Parm, NativeAccessSpecifierPublic)
// struct FTedGenericDataContainer&        Data                                                   (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedGenericDataFunctions::SetGenericValue_Text(const struct FGameplayTag& Key, const class FText& Value, struct FTedGenericDataContainer& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGenericDataFunctions", "SetGenericValue_Text");

	Params::TedGenericDataFunctions_SetGenericValue_Text Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = std::move(Value);
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Data = std::move(Parms.Data);

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsControllerWidget.AreDataCentersAvailable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsControllerWidget::AreDataCentersAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "AreDataCentersAvailable");

	Params::TedOnlineSessionsControllerWidget_AreDataCentersAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsControllerWidget.CloseServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsControllerWidget::CloseServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "CloseServer");

	Params::TedOnlineSessionsControllerWidget_CloseServer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsControllerWidget.CreateLobby
// (Final, Native, Protected, BlueprintCallable)

void UTedOnlineSessionsControllerWidget::CreateLobby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "CreateLobby");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionsControllerWidget.CreateServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UTedMapInfo*                InMapInfo                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    LobbyName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Password                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsControllerWidget::CreateServer(const class UTedMapInfo* InMapInfo, const class FString& LobbyName, const class FString& Password)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "CreateServer");

	Params::TedOnlineSessionsControllerWidget_CreateServer Parms{};

	Parms.InMapInfo = InMapInfo;
	Parms.LobbyName = std::move(LobbyName);
	Parms.Password = std::move(Password);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsControllerWidget.EditLobby
// (Final, Native, Protected, BlueprintCallable)

void UTedOnlineSessionsControllerWidget::EditLobby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "EditLobby");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionsControllerWidget.FindRankedSession
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsControllerWidget::FindRankedSession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "FindRankedSession");

	Params::TedOnlineSessionsControllerWidget_FindRankedSession Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsControllerWidget.GetMultiplayerMenusData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerScreenSavedDataReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FMultiplayerScreenSavedData UTedOnlineSessionsControllerWidget::GetMultiplayerMenusData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "GetMultiplayerMenusData");

	Params::TedOnlineSessionsControllerWidget_GetMultiplayerMenusData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsControllerWidget.JoinRankedSession
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InURL                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InGamePort                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsControllerWidget::JoinRankedSession(const class FString& InURL, const int32 InGamePort)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "JoinRankedSession");

	Params::TedOnlineSessionsControllerWidget_JoinRankedSession Parms{};

	Parms.InURL = std::move(InURL);
	Parms.InGamePort = InGamePort;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsControllerWidget.JoinRemoteSession
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ServerPassword                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsControllerWidget::JoinRemoteSession(const class FString& ServerPassword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "JoinRemoteSession");

	Params::TedOnlineSessionsControllerWidget_JoinRemoteSession Parms{};

	Parms.ServerPassword = std::move(ServerPassword);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsControllerWidget.JoinSession
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ServerPassword                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsControllerWidget::JoinSession(const class FString& ServerPassword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "JoinSession");

	Params::TedOnlineSessionsControllerWidget_JoinSession Parms{};

	Parms.ServerPassword = std::move(ServerPassword);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsControllerWidget.K2_UpdateLobbyBrowserSelectedLobbyInfo
// (Event, Protected, BlueprintEvent)
// Parameters:
// const class UTedOnlineSessionsSlot*     InSelectedLobbySlot                                    (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::K2_UpdateLobbyBrowserSelectedLobbyInfo(const class UTedOnlineSessionsSlot* InSelectedLobbySlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "K2_UpdateLobbyBrowserSelectedLobbyInfo");

	Params::TedOnlineSessionsControllerWidget_K2_UpdateLobbyBrowserSelectedLobbyInfo Parms{};

	Parms.InSelectedLobbySlot = InSelectedLobbySlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedOnlineSessionsControllerWidget.LogIn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsControllerWidget::LogIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "LogIn");

	Params::TedOnlineSessionsControllerWidget_LogIn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsControllerWidget.MatchmakingSearch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsControllerWidget::MatchmakingSearch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "MatchmakingSearch");

	Params::TedOnlineSessionsControllerWidget_MatchmakingSearch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsControllerWidget.MatchmakingSearchCancel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsControllerWidget::MatchmakingSearchCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "MatchmakingSearchCancel");

	Params::TedOnlineSessionsControllerWidget_MatchmakingSearchCancel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnActivateLobbyListSlotState
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::OnActivateLobbyListSlotState(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnActivateLobbyListSlotState");

	Params::TedOnlineSessionsControllerWidget_OnActivateLobbyListSlotState Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnAdminStatusChange
// (Event, Protected, BlueprintEvent)

void UTedOnlineSessionsControllerWidget::OnAdminStatusChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnAdminStatusChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnFindRankedSessionFinished
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bInWasSuccess                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InURL                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InGamePort                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::OnFindRankedSessionFinished(const bool bInWasSuccess, const class FString& InURL, const int32 InGamePort)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnFindRankedSessionFinished");

	Params::TedOnlineSessionsControllerWidget_OnFindRankedSessionFinished Parms{};

	Parms.bInWasSuccess = bInWasSuccess;
	Parms.InURL = std::move(InURL);
	Parms.InGamePort = InGamePort;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnFindRankedSessionStarted
// (Event, Protected, BlueprintEvent)

void UTedOnlineSessionsControllerWidget::OnFindRankedSessionStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnFindRankedSessionStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnHidePopUpWhenLobbyFromParty
// (Event, Public, BlueprintEvent)

void UTedOnlineSessionsControllerWidget::OnHidePopUpWhenLobbyFromParty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnHidePopUpWhenLobbyFromParty");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnJoinGameStarted
// (Event, Protected, BlueprintEvent)

void UTedOnlineSessionsControllerWidget::OnJoinGameStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnJoinGameStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnJoinLocalSessionStarted
// (Event, Protected, BlueprintEvent)

void UTedOnlineSessionsControllerWidget::OnJoinLocalSessionStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnJoinLocalSessionStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnJoinRankedSessionFinished
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class ATedLobbyBeaconClient*            InClientBeacon                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      InSessionName                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInWasSuccess                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      InFailText                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::OnJoinRankedSessionFinished(class ATedLobbyBeaconClient* InClientBeacon, const class FName& InSessionName, const bool bInWasSuccess, const class FText& InFailText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnJoinRankedSessionFinished");

	Params::TedOnlineSessionsControllerWidget_OnJoinRankedSessionFinished Parms{};

	Parms.InClientBeacon = InClientBeacon;
	Parms.InSessionName = InSessionName;
	Parms.bInWasSuccess = bInWasSuccess;
	Parms.InFailText = std::move(InFailText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnJoinRankedSessionStarted
// (Event, Protected, BlueprintEvent)

void UTedOnlineSessionsControllerWidget::OnJoinRankedSessionStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnJoinRankedSessionStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnJoinRemoteSessionStarted
// (Event, Protected, BlueprintEvent)

void UTedOnlineSessionsControllerWidget::OnJoinRemoteSessionStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnJoinRemoteSessionStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnJoinSessionFinished
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class ATedLobbyBeaconClient*            InClientBeacon                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      InSessionName                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInWasSuccess                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      InFailText                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::OnJoinSessionFinished(class ATedLobbyBeaconClient* InClientBeacon, const class FName& InSessionName, const bool bInWasSuccess, const class FText& InFailText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnJoinSessionFinished");

	Params::TedOnlineSessionsControllerWidget_OnJoinSessionFinished Parms{};

	Parms.InClientBeacon = InClientBeacon;
	Parms.InSessionName = InSessionName;
	Parms.bInWasSuccess = bInWasSuccess;
	Parms.InFailText = std::move(InFailText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnJoinSessionStarted
// (Event, Protected, BlueprintEvent)

void UTedOnlineSessionsControllerWidget::OnJoinSessionStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnJoinSessionStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnLobbyMapChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// const class UTedMapInfo*                InMapInfo                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::OnLobbyMapChanged(const class UTedMapInfo* InMapInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnLobbyMapChanged");

	Params::TedOnlineSessionsControllerWidget_OnLobbyMapChanged Parms{};

	Parms.InMapInfo = InMapInfo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnLobbyPlayerAdded
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ALobbyBeaconPlayerState*          InPlayerState                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::OnLobbyPlayerAdded(class ALobbyBeaconPlayerState* InPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnLobbyPlayerAdded");

	Params::TedOnlineSessionsControllerWidget_OnLobbyPlayerAdded Parms{};

	Parms.InPlayerState = InPlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnLobbyPlayerRemoved
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ALobbyBeaconPlayerState*          InPlayerState                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::OnLobbyPlayerRemoved(class ALobbyBeaconPlayerState* InPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnLobbyPlayerRemoved");

	Params::TedOnlineSessionsControllerWidget_OnLobbyPlayerRemoved Parms{};

	Parms.InPlayerState = InPlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnLobbySettingsChange
// (Event, Protected, BlueprintEvent)

void UTedOnlineSessionsControllerWidget::OnLobbySettingsChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnLobbySettingsChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnLogInFinished
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bInWasSuccess                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::OnLogInFinished(const bool bInWasSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnLogInFinished");

	Params::TedOnlineSessionsControllerWidget_OnLogInFinished Parms{};

	Parms.bInWasSuccess = bInWasSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnLogInStarted
// (Event, Protected, BlueprintEvent)

void UTedOnlineSessionsControllerWidget::OnLogInStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnLogInStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnMatchmakingSearchCancelFinished
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bInWasSuccess                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::OnMatchmakingSearchCancelFinished(const bool bInWasSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnMatchmakingSearchCancelFinished");

	Params::TedOnlineSessionsControllerWidget_OnMatchmakingSearchCancelFinished Parms{};

	Parms.bInWasSuccess = bInWasSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnMatchmakingSearchCancelStarted
// (Event, Protected, BlueprintEvent)

void UTedOnlineSessionsControllerWidget::OnMatchmakingSearchCancelStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnMatchmakingSearchCancelStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnMatchmakingSearchFinished
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bInWasSuccess                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::OnMatchmakingSearchFinished(const bool bInWasSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnMatchmakingSearchFinished");

	Params::TedOnlineSessionsControllerWidget_OnMatchmakingSearchFinished Parms{};

	Parms.bInWasSuccess = bInWasSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnMatchmakingSearchStarted
// (Event, Protected, BlueprintEvent)

void UTedOnlineSessionsControllerWidget::OnMatchmakingSearchStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnMatchmakingSearchStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnPlayerAmountChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NewPlayerNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::OnPlayerAmountChanged(int32 NewPlayerNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnPlayerAmountChanged");

	Params::TedOnlineSessionsControllerWidget_OnPlayerAmountChanged Parms{};

	Parms.NewPlayerNum = NewPlayerNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnReadLeaderboardsFinished
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bInWasSuccess                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::OnReadLeaderboardsFinished(const bool bInWasSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnReadLeaderboardsFinished");

	Params::TedOnlineSessionsControllerWidget_OnReadLeaderboardsFinished Parms{};

	Parms.bInWasSuccess = bInWasSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnReadLeaderboardsStarted
// (Event, Protected, BlueprintEvent)

void UTedOnlineSessionsControllerWidget::OnReadLeaderboardsStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnReadLeaderboardsStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnRefreshingSessionsFinished
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const bool                              bInWasSuccess                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      InFailText                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::OnRefreshingSessionsFinished(const bool bInWasSuccess, const class FText& InFailText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnRefreshingSessionsFinished");

	Params::TedOnlineSessionsControllerWidget_OnRefreshingSessionsFinished Parms{};

	Parms.bInWasSuccess = bInWasSuccess;
	Parms.InFailText = std::move(InFailText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnRefreshingSessionsStarted
// (Event, Protected, BlueprintEvent)

void UTedOnlineSessionsControllerWidget::OnRefreshingSessionsStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnRefreshingSessionsStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnRequestAddBotPlayer
// (Final, Native, Protected)
// Parameters:
// class UTedGameCreationPlayersPanel*     InPlayersPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::OnRequestAddBotPlayer(class UTedGameCreationPlayersPanel* InPlayersPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnRequestAddBotPlayer");

	Params::TedOnlineSessionsControllerWidget_OnRequestAddBotPlayer Parms{};

	Parms.InPlayersPanel = InPlayersPanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnRequestKickLobbyPlayer
// (Final, Native, Protected)
// Parameters:
// class UTedGameCreationPlayersPanel*     InPlayersPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::OnRequestKickLobbyPlayer(class UTedGameCreationPlayersPanel* InPlayersPanel, const int32 InSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnRequestKickLobbyPlayer");

	Params::TedOnlineSessionsControllerWidget_OnRequestKickLobbyPlayer Parms{};

	Parms.InPlayersPanel = InPlayersPanel;
	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnRequestLobbyPlayerSettingChange
// (Final, Native, Protected)
// Parameters:
// class UTedGameCreationPlayersPanel*     InPlayersPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InContentSlotIndex                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedSessionMemberSettingKey       InKey                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InNewValue                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InOldValue                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::OnRequestLobbyPlayerSettingChange(class UTedGameCreationPlayersPanel* InPlayersPanel, const int32 InContentSlotIndex, const ETedSessionMemberSettingKey InKey, const int32 InNewValue, const int32 InOldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnRequestLobbyPlayerSettingChange");

	Params::TedOnlineSessionsControllerWidget_OnRequestLobbyPlayerSettingChange Parms{};

	Parms.InPlayersPanel = InPlayersPanel;
	Parms.InContentSlotIndex = InContentSlotIndex;
	Parms.InKey = InKey;
	Parms.InNewValue = InNewValue;
	Parms.InOldValue = InOldValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnServerCreationFinished
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const bool                              bInWasSuccess                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      InFailText                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::OnServerCreationFinished(const bool bInWasSuccess, const class FText& InFailText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnServerCreationFinished");

	Params::TedOnlineSessionsControllerWidget_OnServerCreationFinished Parms{};

	Parms.bInWasSuccess = bInWasSuccess;
	Parms.InFailText = std::move(InFailText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnServerCreationStarted
// (Event, Protected, BlueprintEvent)

void UTedOnlineSessionsControllerWidget::OnServerCreationStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnServerCreationStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnServerTypeChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// const ETedServerType                    InPrevServerType                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::OnServerTypeChanged(const ETedServerType InPrevServerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnServerTypeChanged");

	Params::TedOnlineSessionsControllerWidget_OnServerTypeChanged Parms{};

	Parms.InPrevServerType = InPrevServerType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnStartGameFailed
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::OnStartGameFailed(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnStartGameFailed");

	Params::TedOnlineSessionsControllerWidget_OnStartGameFailed Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnUpdateRankedMemberAndSessionSettingsFinished
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bInWasSuccess                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::OnUpdateRankedMemberAndSessionSettingsFinished(const bool bInWasSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnUpdateRankedMemberAndSessionSettingsFinished");

	Params::TedOnlineSessionsControllerWidget_OnUpdateRankedMemberAndSessionSettingsFinished Parms{};

	Parms.bInWasSuccess = bInWasSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnWaitForRankedPlayersFinished
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bInWasSuccess                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::OnWaitForRankedPlayersFinished(const bool bInWasSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnWaitForRankedPlayersFinished");

	Params::TedOnlineSessionsControllerWidget_OnWaitForRankedPlayersFinished Parms{};

	Parms.bInWasSuccess = bInWasSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedOnlineSessionsControllerWidget.OnWaitForRankedPlayersStarted
// (Event, Protected, BlueprintEvent)

void UTedOnlineSessionsControllerWidget::OnWaitForRankedPlayersStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "OnWaitForRankedPlayersStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedOnlineSessionsControllerWidget.ReadLeaderboards
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsControllerWidget::ReadLeaderboards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "ReadLeaderboards");

	Params::TedOnlineSessionsControllerWidget_ReadLeaderboards Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsControllerWidget.RefreshReadyVisuals
// (Event, Public, BlueprintEvent)

void UTedOnlineSessionsControllerWidget::RefreshReadyVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "RefreshReadyVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedOnlineSessionsControllerWidget.RefreshSessions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsControllerWidget::RefreshSessions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "RefreshSessions");

	Params::TedOnlineSessionsControllerWidget_RefreshSessions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsControllerWidget.SaveMultiplayerMenusData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FMultiplayerScreenSavedData&NewData                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::SaveMultiplayerMenusData(const struct FMultiplayerScreenSavedData& NewData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "SaveMultiplayerMenusData");

	Params::TedOnlineSessionsControllerWidget_SaveMultiplayerMenusData Parms{};

	Parms.NewData = std::move(NewData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionsControllerWidget.SetCurrentLobbyName
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      InLobbyName                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::SetCurrentLobbyName(const class FText& InLobbyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "SetCurrentLobbyName");

	Params::TedOnlineSessionsControllerWidget_SetCurrentLobbyName Parms{};

	Parms.InLobbyName = std::move(InLobbyName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedOnlineSessionsControllerWidget.SetLobbyBrowserLobbies
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UTedOnlineSessionsPanel*          InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::SetLobbyBrowserLobbies(class UTedOnlineSessionsPanel* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "SetLobbyBrowserLobbies");

	Params::TedOnlineSessionsControllerWidget_SetLobbyBrowserLobbies Parms{};

	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionsControllerWidget.SetLobbyBrowserSelectedLobbyPlayers
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UTedGameCreationPlayersPanel*     InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::SetLobbyBrowserSelectedLobbyPlayers(class UTedGameCreationPlayersPanel* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "SetLobbyBrowserSelectedLobbyPlayers");

	Params::TedOnlineSessionsControllerWidget_SetLobbyBrowserSelectedLobbyPlayers Parms{};

	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionsControllerWidget.SetLobbyBrowserSelectedLobbySettings
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UTedGameCreationSettingsWidget*   InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::SetLobbyBrowserSelectedLobbySettings(class UTedGameCreationSettingsWidget* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "SetLobbyBrowserSelectedLobbySettings");

	Params::TedOnlineSessionsControllerWidget_SetLobbyBrowserSelectedLobbySettings Parms{};

	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionsControllerWidget.SetRankedFactionType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const ETedRankedFaction                 InFaction                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::SetRankedFactionType(const ETedRankedFaction InFaction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "SetRankedFactionType");

	Params::TedOnlineSessionsControllerWidget_SetRankedFactionType Parms{};

	Parms.InFaction = InFaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionsControllerWidget.SetRankedTeamType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const ETedRankedTeam                    InTeam                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::SetRankedTeamType(const ETedRankedTeam InTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "SetRankedTeamType");

	Params::TedOnlineSessionsControllerWidget_SetRankedTeamType Parms{};

	Parms.InTeam = InTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionsControllerWidget.SetReadyState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bInReady                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::SetReadyState(const bool bInReady)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "SetReadyState");

	Params::TedOnlineSessionsControllerWidget_SetReadyState Parms{};

	Parms.bInReady = bInReady;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionsControllerWidget.SetServerType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const ETedServerType                    InType                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsControllerWidget::SetServerType(const ETedServerType InType, bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "SetServerType");

	Params::TedOnlineSessionsControllerWidget_SetServerType Parms{};

	Parms.InType = InType;
	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionsControllerWidget.StartGame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsControllerWidget::StartGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "StartGame");

	Params::TedOnlineSessionsControllerWidget_StartGame Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsControllerWidget.UpdateLobbyBrowserSelectedLobbyInfo
// (Final, Native, Protected, BlueprintCallable)

void UTedOnlineSessionsControllerWidget::UpdateLobbyBrowserSelectedLobbyInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "UpdateLobbyBrowserSelectedLobbyInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionsControllerWidget.UpdateRankedMemberAndSessionSettings
// (Final, Native, Public, BlueprintCallable)

void UTedOnlineSessionsControllerWidget::UpdateRankedMemberAndSessionSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "UpdateRankedMemberAndSessionSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionsControllerWidget.WaitForRankedPlayers
// (Final, Native, Public, BlueprintCallable)

void UTedOnlineSessionsControllerWidget::WaitForRankedPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "WaitForRankedPlayers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionsControllerWidget.CanEditLobby
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsControllerWidget::CanEditLobby() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "CanEditLobby");

	Params::TedOnlineSessionsControllerWidget_CanEditLobby Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsControllerWidget.CanEverCreateServer
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsControllerWidget::CanEverCreateServer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "CanEverCreateServer");

	Params::TedOnlineSessionsControllerWidget_CanEverCreateServer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsControllerWidget.CanStartGame
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsControllerWidget::CanStartGame() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "CanStartGame");

	Params::TedOnlineSessionsControllerWidget_CanStartGame Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsControllerWidget.GetClientBeacon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedLobbyBeaconClient*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedLobbyBeaconClient* UTedOnlineSessionsControllerWidget::GetClientBeacon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "GetClientBeacon");

	Params::TedOnlineSessionsControllerWidget_GetClientBeacon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsControllerWidget.GetLobbySelectedMap
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedMapInfo*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedMapInfo* UTedOnlineSessionsControllerWidget::GetLobbySelectedMap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "GetLobbySelectedMap");

	Params::TedOnlineSessionsControllerWidget_GetLobbySelectedMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsControllerWidget.GetSelectedLobbySlot
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedOnlineSessionsSlot*     ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedOnlineSessionsSlot* UTedOnlineSessionsControllerWidget::GetSelectedLobbySlot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "GetSelectedLobbySlot");

	Params::TedOnlineSessionsControllerWidget_GetSelectedLobbySlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsControllerWidget.GetServerType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedServerType                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedServerType UTedOnlineSessionsControllerWidget::GetServerType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "GetServerType");

	Params::TedOnlineSessionsControllerWidget_GetServerType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsControllerWidget.IsInSession
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsControllerWidget::IsInSession() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "IsInSession");

	Params::TedOnlineSessionsControllerWidget_IsInSession Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsControllerWidget.IsLoggedIn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsControllerWidget::IsLoggedIn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "IsLoggedIn");

	Params::TedOnlineSessionsControllerWidget_IsLoggedIn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsControllerWidget.IsMatchmakingSearchInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsControllerWidget::IsMatchmakingSearchInProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "IsMatchmakingSearchInProgress");

	Params::TedOnlineSessionsControllerWidget_IsMatchmakingSearchInProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsControllerWidget.IsReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsControllerWidget::IsReady() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "IsReady");

	Params::TedOnlineSessionsControllerWidget_IsReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsControllerWidget.IsSpectator
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsControllerWidget::IsSpectator() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "IsSpectator");

	Params::TedOnlineSessionsControllerWidget_IsSpectator Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsControllerWidget.WereRankedMapsSaved
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsControllerWidget::WereRankedMapsSaved() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsControllerWidget", "WereRankedMapsSaved");

	Params::TedOnlineSessionsControllerWidget_WereRankedMapsSaved Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Ability
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Ability()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Ability");

	Params::TedGlobalTags_Ability Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Ability_Attack
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Ability_Attack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Ability_Attack");

	Params::TedGlobalTags_Ability_Attack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Ability_Attack_Looping
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Ability_Attack_Looping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Ability_Attack_Looping");

	Params::TedGlobalTags_Ability_Attack_Looping Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Ability_Blocked
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Ability_Blocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Ability_Blocked");

	Params::TedGlobalTags_Ability_Blocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Ability_CaptureStructure
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Ability_CaptureStructure()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Ability_CaptureStructure");

	Params::TedGlobalTags_Ability_CaptureStructure Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Ability_Death
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Ability_Death()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Ability_Death");

	Params::TedGlobalTags_Ability_Death Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Ability_DeployStructure
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Ability_DeployStructure()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Ability_DeployStructure");

	Params::TedGlobalTags_Ability_DeployStructure Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Ability_DepositResource
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Ability_DepositResource()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Ability_DepositResource");

	Params::TedGlobalTags_Ability_DepositResource Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Ability_DismantleStructure
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Ability_DismantleStructure()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Ability_DismantleStructure");

	Params::TedGlobalTags_Ability_DismantleStructure Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Ability_Enqueue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Ability_Enqueue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Ability_Enqueue");

	Params::TedGlobalTags_Ability_Enqueue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Ability_Plan
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Ability_Plan()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Ability_Plan");

	Params::TedGlobalTags_Ability_Plan Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Ability_Ranged
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Ability_Ranged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Ability_Ranged");

	Params::TedGlobalTags_Ability_Ranged Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Ability_SpawnUnit
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Ability_SpawnUnit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Ability_SpawnUnit");

	Params::TedGlobalTags_Ability_SpawnUnit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Ability_SpawnUnit_Enlightened
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Ability_SpawnUnit_Enlightened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Ability_SpawnUnit_Enlightened");

	Params::TedGlobalTags_Ability_SpawnUnit_Enlightened Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Ability_Stealth
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Ability_Stealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Ability_Stealth");

	Params::TedGlobalTags_Ability_Stealth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Ability_Stealth_Blocked
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Ability_Stealth_Blocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Ability_Stealth_Blocked");

	Params::TedGlobalTags_Ability_Stealth_Blocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Ability_Teleport
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Ability_Teleport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Ability_Teleport");

	Params::TedGlobalTags_Ability_Teleport Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.AbilityActivationFailure_BlockedTag
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::AbilityActivationFailure_BlockedTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "AbilityActivationFailure_BlockedTag");

	Params::TedGlobalTags_AbilityActivationFailure_BlockedTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.AbilityActivationFailure_Cooldown
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::AbilityActivationFailure_Cooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "AbilityActivationFailure_Cooldown");

	Params::TedGlobalTags_AbilityActivationFailure_Cooldown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.AbilityActivationFailure_Cost
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::AbilityActivationFailure_Cost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "AbilityActivationFailure_Cost");

	Params::TedGlobalTags_AbilityActivationFailure_Cost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.AbilityActivationFailure_MissingTag
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::AbilityActivationFailure_MissingTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "AbilityActivationFailure_MissingTag");

	Params::TedGlobalTags_AbilityActivationFailure_MissingTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Aircraft
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Aircraft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Aircraft");

	Params::TedGlobalTags_Aircraft Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.AnimMontage_Attack
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::AnimMontage_Attack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "AnimMontage_Attack");

	Params::TedGlobalTags_AnimMontage_Attack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.AnimMontage_Attack_Crawling
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::AnimMontage_Attack_Crawling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "AnimMontage_Attack_Crawling");

	Params::TedGlobalTags_AnimMontage_Attack_Crawling Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.AnimMontage_Attack_Standing
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::AnimMontage_Attack_Standing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "AnimMontage_Attack_Standing");

	Params::TedGlobalTags_AnimMontage_Attack_Standing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.AnimMontage_Death
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::AnimMontage_Death()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "AnimMontage_Death");

	Params::TedGlobalTags_AnimMontage_Death Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.AnimMontage_Death_Crawling
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::AnimMontage_Death_Crawling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "AnimMontage_Death_Crawling");

	Params::TedGlobalTags_AnimMontage_Death_Crawling Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.AnimMontage_Death_Standing
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::AnimMontage_Death_Standing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "AnimMontage_Death_Standing");

	Params::TedGlobalTags_AnimMontage_Death_Standing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.AnimMontage_OpenDoor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::AnimMontage_OpenDoor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "AnimMontage_OpenDoor");

	Params::TedGlobalTags_AnimMontage_OpenDoor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Announcement_UnderAttack
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Announcement_UnderAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Announcement_UnderAttack");

	Params::TedGlobalTags_Announcement_UnderAttack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Behavior_Command
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Behavior_Command()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Behavior_Command");

	Params::TedGlobalTags_Behavior_Command Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Behavior_Idle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Behavior_Idle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Behavior_Idle");

	Params::TedGlobalTags_Behavior_Idle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Command_Autocast
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Command_Autocast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Command_Autocast");

	Params::TedGlobalTags_Command_Autocast Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.CommandType_Attack
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::CommandType_Attack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "CommandType_Attack");

	Params::TedGlobalTags_CommandType_Attack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.CommandType_AttackGround
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::CommandType_AttackGround()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "CommandType_AttackGround");

	Params::TedGlobalTags_CommandType_AttackGround Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.CommandType_AutoHarvest
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::CommandType_AutoHarvest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "CommandType_AutoHarvest");

	Params::TedGlobalTags_CommandType_AutoHarvest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.CommandType_CaptureStructure
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::CommandType_CaptureStructure()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "CommandType_CaptureStructure");

	Params::TedGlobalTags_CommandType_CaptureStructure Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.CommandType_Deconstruct
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::CommandType_Deconstruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "CommandType_Deconstruct");

	Params::TedGlobalTags_CommandType_Deconstruct Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.CommandType_DeployStructure
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::CommandType_DeployStructure()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "CommandType_DeployStructure");

	Params::TedGlobalTags_CommandType_DeployStructure Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.CommandType_DisarmMine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::CommandType_DisarmMine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "CommandType_DisarmMine");

	Params::TedGlobalTags_CommandType_DisarmMine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.CommandType_EnterContainer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::CommandType_EnterContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "CommandType_EnterContainer");

	Params::TedGlobalTags_CommandType_EnterContainer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.CommandType_Escort
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::CommandType_Escort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "CommandType_Escort");

	Params::TedGlobalTags_CommandType_Escort Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.CommandType_Follow
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::CommandType_Follow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "CommandType_Follow");

	Params::TedGlobalTags_CommandType_Follow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.CommandType_GuardLocation
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::CommandType_GuardLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "CommandType_GuardLocation");

	Params::TedGlobalTags_CommandType_GuardLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.CommandType_Harvest
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::CommandType_Harvest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "CommandType_Harvest");

	Params::TedGlobalTags_CommandType_Harvest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.CommandType_HoldPosition
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::CommandType_HoldPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "CommandType_HoldPosition");

	Params::TedGlobalTags_CommandType_HoldPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.CommandType_Move
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::CommandType_Move()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "CommandType_Move");

	Params::TedGlobalTags_CommandType_Move Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.CommandType_Patrol
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::CommandType_Patrol()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "CommandType_Patrol");

	Params::TedGlobalTags_CommandType_Patrol Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.CommandType_Repair
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::CommandType_Repair()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "CommandType_Repair");

	Params::TedGlobalTags_CommandType_Repair Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.CommandType_SetRallyPoint
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::CommandType_SetRallyPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "CommandType_SetRallyPoint");

	Params::TedGlobalTags_CommandType_SetRallyPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.CommandType_Stop
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::CommandType_Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "CommandType_Stop");

	Params::TedGlobalTags_CommandType_Stop Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.CommandType_SubjugationSpawn
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::CommandType_SubjugationSpawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "CommandType_SubjugationSpawn");

	Params::TedGlobalTags_CommandType_SubjugationSpawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.CommandType_SupportPower
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::CommandType_SupportPower()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "CommandType_SupportPower");

	Params::TedGlobalTags_CommandType_SupportPower Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.CommandType_UnloadContainer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::CommandType_UnloadContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "CommandType_UnloadContainer");

	Params::TedGlobalTags_CommandType_UnloadContainer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Definition_Mutable_TempestCharge
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Definition_Mutable_TempestCharge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Definition_Mutable_TempestCharge");

	Params::TedGlobalTags_Definition_Mutable_TempestCharge Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Destructible
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Destructible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Destructible");

	Params::TedGlobalTags_Destructible Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Domain_Air
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Domain_Air()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Domain_Air");

	Params::TedGlobalTags_Domain_Air Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Domain_Ground
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Domain_Ground()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Domain_Ground");

	Params::TedGlobalTags_Domain_Ground Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.DYN_Harvester
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::DYN_Harvester()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "DYN_Harvester");

	Params::TedGlobalTags_DYN_Harvester Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.DYN_Structure_AirFactory
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::DYN_Structure_AirFactory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "DYN_Structure_AirFactory");

	Params::TedGlobalTags_DYN_Structure_AirFactory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.DYN_Structure_Airpad
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::DYN_Structure_Airpad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "DYN_Structure_Airpad");

	Params::TedGlobalTags_DYN_Structure_Airpad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.DYN_Structure_Barracks
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::DYN_Structure_Barracks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "DYN_Structure_Barracks");

	Params::TedGlobalTags_DYN_Structure_Barracks Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.DYN_Structure_ConcreteWall
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::DYN_Structure_ConcreteWall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "DYN_Structure_ConcreteWall");

	Params::TedGlobalTags_DYN_Structure_ConcreteWall Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.DYN_Structure_ConstructionYard
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::DYN_Structure_ConstructionYard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "DYN_Structure_ConstructionYard");

	Params::TedGlobalTags_DYN_Structure_ConstructionYard Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.DYN_Structure_PowerPlant
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::DYN_Structure_PowerPlant()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "DYN_Structure_PowerPlant");

	Params::TedGlobalTags_DYN_Structure_PowerPlant Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.DYN_Structure_Radar
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::DYN_Structure_Radar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "DYN_Structure_Radar");

	Params::TedGlobalTags_DYN_Structure_Radar Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Error_BlockedGroundTargeting
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Error_BlockedGroundTargeting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Error_BlockedGroundTargeting");

	Params::TedGlobalTags_Error_BlockedGroundTargeting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Error_DeadTarget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Error_DeadTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Error_DeadTarget");

	Params::TedGlobalTags_Error_DeadTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Error_InvalidAttitude
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Error_InvalidAttitude()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Error_InvalidAttitude");

	Params::TedGlobalTags_Error_InvalidAttitude Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Error_InvalidOwner
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Error_InvalidOwner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Error_InvalidOwner");

	Params::TedGlobalTags_Error_InvalidOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Error_InvalidPowerState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Error_InvalidPowerState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Error_InvalidPowerState");

	Params::TedGlobalTags_Error_InvalidPowerState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Error_InvalidTag
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Error_InvalidTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Error_InvalidTag");

	Params::TedGlobalTags_Error_InvalidTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Error_InvalidTarget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Error_InvalidTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Error_InvalidTarget");

	Params::TedGlobalTags_Error_InvalidTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Error_InvalidTargetDomain
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Error_InvalidTargetDomain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Error_InvalidTargetDomain");

	Params::TedGlobalTags_Error_InvalidTargetDomain Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Error_InvalidTargetLocation
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Error_InvalidTargetLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Error_InvalidTargetLocation");

	Params::TedGlobalTags_Error_InvalidTargetLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Error_InvisibleTarget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Error_InvisibleTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Error_InvisibleTarget");

	Params::TedGlobalTags_Error_InvisibleTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Error_MissingGameplayTagAssetInterface
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Error_MissingGameplayTagAssetInterface()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Error_MissingGameplayTagAssetInterface");

	Params::TedGlobalTags_Error_MissingGameplayTagAssetInterface Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Error_MissingPrerequisites
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Error_MissingPrerequisites()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Error_MissingPrerequisites");

	Params::TedGlobalTags_Error_MissingPrerequisites Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Error_NotInRange
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Error_NotInRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Error_NotInRange");

	Params::TedGlobalTags_Error_NotInRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Error_RequiredAirTarget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Error_RequiredAirTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Error_RequiredAirTarget");

	Params::TedGlobalTags_Error_RequiredAirTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Error_RequiredGroundTarget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Error_RequiredGroundTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Error_RequiredGroundTarget");

	Params::TedGlobalTags_Error_RequiredGroundTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Error_UnitCantMove
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Error_UnitCantMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Error_UnitCantMove");

	Params::TedGlobalTags_Error_UnitCantMove Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Error_WeaponNotFound
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Error_WeaponNotFound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Error_WeaponNotFound");

	Params::TedGlobalTags_Error_WeaponNotFound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Error_WeaponRequirementsNotMet
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Error_WeaponRequirementsNotMet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Error_WeaponRequirementsNotMet");

	Params::TedGlobalTags_Error_WeaponRequirementsNotMet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Event
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Event");

	Params::TedGlobalTags_Event Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Event_DealDamage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Event_DealDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Event_DealDamage");

	Params::TedGlobalTags_Event_DealDamage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Event_DeployParachute
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Event_DeployParachute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Event_DeployParachute");

	Params::TedGlobalTags_Event_DeployParachute Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Event_DeployPawn
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Event_DeployPawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Event_DeployPawn");

	Params::TedGlobalTags_Event_DeployPawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Event_ShootProjectile
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Event_ShootProjectile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Event_ShootProjectile");

	Params::TedGlobalTags_Event_ShootProjectile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Event_SpawnPawn
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Event_SpawnPawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Event_SpawnPawn");

	Params::TedGlobalTags_Event_SpawnPawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.GameplayCue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::GameplayCue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "GameplayCue");

	Params::TedGlobalTags_GameplayCue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.GameplayCue_RepFull
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::GameplayCue_RepFull()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "GameplayCue_RepFull");

	Params::TedGlobalTags_GameplayCue_RepFull Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.GameplayCue_RepMinimal
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::GameplayCue_RepMinimal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "GameplayCue_RepMinimal");

	Params::TedGlobalTags_GameplayCue_RepMinimal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.GDF_Harvester
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::GDF_Harvester()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "GDF_Harvester");

	Params::TedGlobalTags_GDF_Harvester Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.GDF_Structure_AdvancedPowerPlant
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::GDF_Structure_AdvancedPowerPlant()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "GDF_Structure_AdvancedPowerPlant");

	Params::TedGlobalTags_GDF_Structure_AdvancedPowerPlant Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.GDF_Structure_Airfield
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::GDF_Structure_Airfield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "GDF_Structure_Airfield");

	Params::TedGlobalTags_GDF_Structure_Airfield Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.GDF_Structure_Airpad
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::GDF_Structure_Airpad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "GDF_Structure_Airpad");

	Params::TedGlobalTags_GDF_Structure_Airpad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.GDF_Structure_Barracks
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::GDF_Structure_Barracks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "GDF_Structure_Barracks");

	Params::TedGlobalTags_GDF_Structure_Barracks Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.GDF_Structure_ConcreteWall
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::GDF_Structure_ConcreteWall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "GDF_Structure_ConcreteWall");

	Params::TedGlobalTags_GDF_Structure_ConcreteWall Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.GDF_Structure_ConstructionYard
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::GDF_Structure_ConstructionYard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "GDF_Structure_ConstructionYard");

	Params::TedGlobalTags_GDF_Structure_ConstructionYard Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.GDF_Structure_Fence
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::GDF_Structure_Fence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "GDF_Structure_Fence");

	Params::TedGlobalTags_GDF_Structure_Fence Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.GDF_Structure_PowerPlant
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::GDF_Structure_PowerPlant()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "GDF_Structure_PowerPlant");

	Params::TedGlobalTags_GDF_Structure_PowerPlant Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.GDF_Structure_SatelliteUplink
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::GDF_Structure_SatelliteUplink()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "GDF_Structure_SatelliteUplink");

	Params::TedGlobalTags_GDF_Structure_SatelliteUplink Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.GroundTargetingBlocked
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::GroundTargetingBlocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "GroundTargetingBlocked");

	Params::TedGlobalTags_GroundTargetingBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Infantry
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Infantry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Infantry");

	Params::TedGlobalTags_Infantry Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Infantry_Heavy
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Infantry_Heavy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Infantry_Heavy");

	Params::TedGlobalTags_Infantry_Heavy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.InputSettings_Error_ConflictingMapping
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::InputSettings_Error_ConflictingMapping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "InputSettings_Error_ConflictingMapping");

	Params::TedGlobalTags_InputSettings_Error_ConflictingMapping Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.InputSettings_Error_RestrictedMapping
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::InputSettings_Error_RestrictedMapping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "InputSettings_Error_RestrictedMapping");

	Params::TedGlobalTags_InputSettings_Error_RestrictedMapping Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Mine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Mine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Mine");

	Params::TedGlobalTags_Mine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.NEU_AnyPawn
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::NEU_AnyPawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "NEU_AnyPawn");

	Params::TedGlobalTags_NEU_AnyPawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.PlayerData_AllowInsufficientPower
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::PlayerData_AllowInsufficientPower()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "PlayerData_AllowInsufficientPower");

	Params::TedGlobalTags_PlayerData_AllowInsufficientPower Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.PlayerData_AllowPlayerCommands
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::PlayerData_AllowPlayerCommands()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "PlayerData_AllowPlayerCommands");

	Params::TedGlobalTags_PlayerData_AllowPlayerCommands Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.PlayerData_AllowPowerDown
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::PlayerData_AllowPowerDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "PlayerData_AllowPowerDown");

	Params::TedGlobalTags_PlayerData_AllowPowerDown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.PlayerData_BuildOnlyInFactoryRadius
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::PlayerData_BuildOnlyInFactoryRadius()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "PlayerData_BuildOnlyInFactoryRadius");

	Params::TedGlobalTags_PlayerData_BuildOnlyInFactoryRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.PlayerData_InsufficientPowerSlowDown
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::PlayerData_InsufficientPowerSlowDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "PlayerData_InsufficientPowerSlowDown");

	Params::TedGlobalTags_PlayerData_InsufficientPowerSlowDown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.PlayerData_LowPowerImmune
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::PlayerData_LowPowerImmune()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "PlayerData_LowPowerImmune");

	Params::TedGlobalTags_PlayerData_LowPowerImmune Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.PlayerData_NoConstruction
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::PlayerData_NoConstruction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "PlayerData_NoConstruction");

	Params::TedGlobalTags_PlayerData_NoConstruction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.PlayerData_NoGarrison
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::PlayerData_NoGarrison()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "PlayerData_NoGarrison");

	Params::TedGlobalTags_PlayerData_NoGarrison Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.PlayerData_NoSell
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::PlayerData_NoSell()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "PlayerData_NoSell");

	Params::TedGlobalTags_PlayerData_NoSell Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.PlayerData_NotCapturable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::PlayerData_NotCapturable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "PlayerData_NotCapturable");

	Params::TedGlobalTags_PlayerData_NotCapturable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.PlayerData_PowerDown
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::PlayerData_PowerDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "PlayerData_PowerDown");

	Params::TedGlobalTags_PlayerData_PowerDown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.PlayerData_SimultaneousConstruction
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::PlayerData_SimultaneousConstruction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "PlayerData_SimultaneousConstruction");

	Params::TedGlobalTags_PlayerData_SimultaneousConstruction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.PlayerData_Worker
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::PlayerData_Worker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "PlayerData_Worker");

	Params::TedGlobalTags_PlayerData_Worker Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_AIInvisible
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_AIInvisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_AIInvisible");

	Params::TedGlobalTags_Status_AIInvisible Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_Awakening1
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_Awakening1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_Awakening1");

	Params::TedGlobalTags_Status_Awakening1 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_Awakening2
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_Awakening2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_Awakening2");

	Params::TedGlobalTags_Status_Awakening2 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_Awakening3
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_Awakening3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_Awakening3");

	Params::TedGlobalTags_Status_Awakening3 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_Mutable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_Mutable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_Mutable");

	Params::TedGlobalTags_Status_Mutable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_Mutable_Alive
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_Mutable_Alive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_Mutable_Alive");

	Params::TedGlobalTags_Status_Mutable_Alive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_Mutable_AttackBlocked
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_Mutable_AttackBlocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_Mutable_AttackBlocked");

	Params::TedGlobalTags_Status_Mutable_AttackBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_Mutable_Autoharvesting
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_Mutable_Autoharvesting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_Mutable_Autoharvesting");

	Params::TedGlobalTags_Status_Mutable_Autoharvesting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_Mutable_Commandeered
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_Mutable_Commandeered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_Mutable_Commandeered");

	Params::TedGlobalTags_Status_Mutable_Commandeered Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_Mutable_Disarmed
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_Mutable_Disarmed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_Mutable_Disarmed");

	Params::TedGlobalTags_Status_Mutable_Disarmed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_Mutable_DisarmingMine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_Mutable_DisarmingMine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_Mutable_DisarmingMine");

	Params::TedGlobalTags_Status_Mutable_DisarmingMine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_Mutable_DistributionMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_Mutable_DistributionMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_Mutable_DistributionMode");

	Params::TedGlobalTags_Status_Mutable_DistributionMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_Mutable_DistributionMode_Source
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_Mutable_DistributionMode_Source()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_Mutable_DistributionMode_Source");

	Params::TedGlobalTags_Status_Mutable_DistributionMode_Source Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_Mutable_EnlightenedSacrifice
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_Mutable_EnlightenedSacrifice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_Mutable_EnlightenedSacrifice");

	Params::TedGlobalTags_Status_Mutable_EnlightenedSacrifice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_Mutable_ForceUserPowerDown
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_Mutable_ForceUserPowerDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_Mutable_ForceUserPowerDown");

	Params::TedGlobalTags_Status_Mutable_ForceUserPowerDown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_Mutable_HarvesterIdle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_Mutable_HarvesterIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_Mutable_HarvesterIdle");

	Params::TedGlobalTags_Status_Mutable_HarvesterIdle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_Mutable_Immobilized
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_Mutable_Immobilized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_Mutable_Immobilized");

	Params::TedGlobalTags_Status_Mutable_Immobilized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_Mutable_Marked
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_Mutable_Marked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_Mutable_Marked");

	Params::TedGlobalTags_Status_Mutable_Marked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_Mutable_Moving
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_Mutable_Moving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_Mutable_Moving");

	Params::TedGlobalTags_Status_Mutable_Moving Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_Mutable_Overridden
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_Mutable_Overridden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_Mutable_Overridden");

	Params::TedGlobalTags_Status_Mutable_Overridden Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_Mutable_PowerDown
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_Mutable_PowerDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_Mutable_PowerDown");

	Params::TedGlobalTags_Status_Mutable_PowerDown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_Mutable_ResearchingUpgrade
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_Mutable_ResearchingUpgrade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_Mutable_ResearchingUpgrade");

	Params::TedGlobalTags_Status_Mutable_ResearchingUpgrade Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_Mutable_RiotSuppression
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_Mutable_RiotSuppression()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_Mutable_RiotSuppression");

	Params::TedGlobalTags_Status_Mutable_RiotSuppression Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_Mutable_Stealth
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_Mutable_Stealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_Mutable_Stealth");

	Params::TedGlobalTags_Status_Mutable_Stealth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_Mutable_Subjugated
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_Mutable_Subjugated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_Mutable_Subjugated");

	Params::TedGlobalTags_Status_Mutable_Subjugated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_Mutable_Suppressed
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_Mutable_Suppressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_Mutable_Suppressed");

	Params::TedGlobalTags_Status_Mutable_Suppressed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_Mutable_TempestCharge
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_Mutable_TempestCharge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_Mutable_TempestCharge");

	Params::TedGlobalTags_Status_Mutable_TempestCharge Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_RecentlyDamaged
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_RecentlyDamaged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_RecentlyDamaged");

	Params::TedGlobalTags_Status_RecentlyDamaged Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_TempestChargeBlocked
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_TempestChargeBlocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_TempestChargeBlocked");

	Params::TedGlobalTags_Status_TempestChargeBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Status_Uncrushable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Status_Uncrushable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Status_Uncrushable");

	Params::TedGlobalTags_Status_Uncrushable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Structure
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Structure()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Structure");

	Params::TedGlobalTags_Structure Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Structure_Airfield
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Structure_Airfield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Structure_Airfield");

	Params::TedGlobalTags_Structure_Airfield Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Structure_Conformation
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Structure_Conformation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Structure_Conformation");

	Params::TedGlobalTags_Structure_Conformation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Structure_Conformation_Bridge
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Structure_Conformation_Bridge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Structure_Conformation_Bridge");

	Params::TedGlobalTags_Structure_Conformation_Bridge Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Structure_ConstructionYard_Any
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTagContainer      ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGameplayTagContainer UTedGlobalTags::Structure_ConstructionYard_Any()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Structure_ConstructionYard_Any");

	Params::TedGlobalTags_Structure_ConstructionYard_Any Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Structure_Defensive
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Structure_Defensive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Structure_Defensive");

	Params::TedGlobalTags_Structure_Defensive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Structure_Gate_Any
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTagContainer      ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGameplayTagContainer UTedGlobalTags::Structure_Gate_Any()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Structure_Gate_Any");

	Params::TedGlobalTags_Structure_Gate_Any Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Structure_Radar_Any
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTagContainer      ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGameplayTagContainer UTedGlobalTags::Structure_Radar_Any()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Structure_Radar_Any");

	Params::TedGlobalTags_Structure_Radar_Any Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Structure_Sandbags_Any
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTagContainer      ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGameplayTagContainer UTedGlobalTags::Structure_Sandbags_Any()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Structure_Sandbags_Any");

	Params::TedGlobalTags_Structure_Sandbags_Any Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Structure_Tower
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Structure_Tower()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Structure_Tower");

	Params::TedGlobalTags_Structure_Tower Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Structure_Wall
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Structure_Wall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Structure_Wall");

	Params::TedGlobalTags_Structure_Wall Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Structure_Wall_Any
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTagContainer      ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGameplayTagContainer UTedGlobalTags::Structure_Wall_Any()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Structure_Wall_Any");

	Params::TedGlobalTags_Structure_Wall_Any Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_Anim_Hide
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_Anim_Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_Anim_Hide");

	Params::TedGlobalTags_UI_Anim_Hide Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_Anim_Objective_Completed
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_Anim_Objective_Completed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_Anim_Objective_Completed");

	Params::TedGlobalTags_UI_Anim_Objective_Completed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_Anim_Objective_Failed
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_Anim_Objective_Failed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_Anim_Objective_Failed");

	Params::TedGlobalTags_UI_Anim_Objective_Failed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_Anim_Objective_New
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_Anim_Objective_New()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_Anim_Objective_New");

	Params::TedGlobalTags_UI_Anim_Objective_New Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_Anim_Objective_Updated
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_Anim_Objective_Updated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_Anim_Objective_Updated");

	Params::TedGlobalTags_UI_Anim_Objective_Updated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_Anim_Show
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_Anim_Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_Anim_Show");

	Params::TedGlobalTags_UI_Anim_Show Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_Anim_StartupSequence
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_Anim_StartupSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_Anim_StartupSequence");

	Params::TedGlobalTags_UI_Anim_StartupSequence Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_Event
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_Event");

	Params::TedGlobalTags_UI_Event Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_Event_CC_FramedMovie_Play
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_Event_CC_FramedMovie_Play()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_Event_CC_FramedMovie_Play");

	Params::TedGlobalTags_UI_Event_CC_FramedMovie_Play Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_Event_CC_FramedMovie_Stop
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_Event_CC_FramedMovie_Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_Event_CC_FramedMovie_Stop");

	Params::TedGlobalTags_UI_Event_CC_FramedMovie_Stop Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_Event_ChatParty_AdjustForScoreScreen
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_Event_ChatParty_AdjustForScoreScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_Event_ChatParty_AdjustForScoreScreen");

	Params::TedGlobalTags_UI_Event_ChatParty_AdjustForScoreScreen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_Event_HudPopup_Hide
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_Event_HudPopup_Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_Event_HudPopup_Hide");

	Params::TedGlobalTags_UI_Event_HudPopup_Hide Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_Event_HudPopup_Show
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_Event_HudPopup_Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_Event_HudPopup_Show");

	Params::TedGlobalTags_UI_Event_HudPopup_Show Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_Event_HudPopup_ShowSide
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_Event_HudPopup_ShowSide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_Event_HudPopup_ShowSide");

	Params::TedGlobalTags_UI_Event_HudPopup_ShowSide Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_HidingContext_HidingHUD
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_HidingContext_HidingHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_HidingContext_HidingHUD");

	Params::TedGlobalTags_UI_HidingContext_HidingHUD Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_HidingContext_PlayingMovie
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_HidingContext_PlayingMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_HidingContext_PlayingMovie");

	Params::TedGlobalTags_UI_HidingContext_PlayingMovie Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_HidingContext_Spectator
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_HidingContext_Spectator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_HidingContext_Spectator");

	Params::TedGlobalTags_UI_HidingContext_Spectator Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_HidingContext_Spectator_Ally
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_HidingContext_Spectator_Ally()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_HidingContext_Spectator_Ally");

	Params::TedGlobalTags_UI_HidingContext_Spectator_Ally Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_HidingContext_Spectator_Match
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_HidingContext_Spectator_Match()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_HidingContext_Spectator_Match");

	Params::TedGlobalTags_UI_HidingContext_Spectator_Match Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_Marker_Context_Primary
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_Marker_Context_Primary()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_Marker_Context_Primary");

	Params::TedGlobalTags_UI_Marker_Context_Primary Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_Marker_Context_Primary_DYN
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_Marker_Context_Primary_DYN()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_Marker_Context_Primary_DYN");

	Params::TedGlobalTags_UI_Marker_Context_Primary_DYN Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_Marker_Context_Primary_GDF
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_Marker_Context_Primary_GDF()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_Marker_Context_Primary_GDF");

	Params::TedGlobalTags_UI_Marker_Context_Primary_GDF Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_Marker_Context_Secondary
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_Marker_Context_Secondary()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_Marker_Context_Secondary");

	Params::TedGlobalTags_UI_Marker_Context_Secondary Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_MenuScreen_CampaignSelection
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_MenuScreen_CampaignSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_MenuScreen_CampaignSelection");

	Params::TedGlobalTags_UI_MenuScreen_CampaignSelection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_MenuScreen_CommandCompound
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_MenuScreen_CommandCompound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_MenuScreen_CommandCompound");

	Params::TedGlobalTags_UI_MenuScreen_CommandCompound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_MenuScreen_EndGame
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_MenuScreen_EndGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_MenuScreen_EndGame");

	Params::TedGlobalTags_UI_MenuScreen_EndGame Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_MenuScreen_FactionSelection
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_MenuScreen_FactionSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_MenuScreen_FactionSelection");

	Params::TedGlobalTags_UI_MenuScreen_FactionSelection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_MenuScreen_GameMenu
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_MenuScreen_GameMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_MenuScreen_GameMenu");

	Params::TedGlobalTags_UI_MenuScreen_GameMenu Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_MenuScreen_MainMenu
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_MenuScreen_MainMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_MenuScreen_MainMenu");

	Params::TedGlobalTags_UI_MenuScreen_MainMenu Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_MenuScreen_MapScreen
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_MenuScreen_MapScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_MenuScreen_MapScreen");

	Params::TedGlobalTags_UI_MenuScreen_MapScreen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_MenuScreen_MedalsScreen_MP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_MenuScreen_MedalsScreen_MP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_MenuScreen_MedalsScreen_MP");

	Params::TedGlobalTags_UI_MenuScreen_MedalsScreen_MP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_MenuScreen_MedalsScreen_SP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_MenuScreen_MedalsScreen_SP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_MenuScreen_MedalsScreen_SP");

	Params::TedGlobalTags_UI_MenuScreen_MedalsScreen_SP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_MenuScreen_ScoreScreen
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_MenuScreen_ScoreScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_MenuScreen_ScoreScreen");

	Params::TedGlobalTags_UI_MenuScreen_ScoreScreen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_MovieSequence_ConnectionLost
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_MovieSequence_ConnectionLost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_MovieSequence_ConnectionLost");

	Params::TedGlobalTags_UI_MovieSequence_ConnectionLost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_SkippableSequence_CC_Briefing
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_SkippableSequence_CC_Briefing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_SkippableSequence_CC_Briefing");

	Params::TedGlobalTags_UI_SkippableSequence_CC_Briefing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_SkippableSequence_CC_MapScreen
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_SkippableSequence_CC_MapScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_SkippableSequence_CC_MapScreen");

	Params::TedGlobalTags_UI_SkippableSequence_CC_MapScreen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.UI_SkippableSequence_Movie
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::UI_SkippableSequence_Movie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "UI_SkippableSequence_Movie");

	Params::TedGlobalTags_UI_SkippableSequence_Movie Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Unit
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Unit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Unit");

	Params::TedGlobalTags_Unit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Unit_MCV_Any
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTagContainer      ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGameplayTagContainer UTedGlobalTags::Unit_MCV_Any()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Unit_MCV_Any");

	Params::TedGlobalTags_Unit_MCV_Any Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Vehicle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Vehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Vehicle");

	Params::TedGlobalTags_Vehicle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.Vehicle_Heavy
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::Vehicle_Heavy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "Vehicle_Heavy");

	Params::TedGlobalTags_Vehicle_Heavy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlobalTags.VETI_Structure_TempestHeart
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedGlobalTags::VETI_Structure_TempestHeart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedGlobalTags", "VETI_Structure_TempestHeart");

	Params::TedGlobalTags_VETI_Structure_TempestHeart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedGlowWidget.SetGlowMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*               InMaterial                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedGlowWidget::SetGlowMaterial(class UMaterialInterface* InMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGlowWidget", "SetGlowMaterial");

	Params::TedGlowWidget_SetGlowMaterial Parms{};

	Parms.InMaterial = InMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedGlowWidget.GetGlowMaterial
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* UTedGlowWidget::GetGlowMaterial() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedGlowWidget", "GetGlowMaterial");

	Params::TedGlowWidget_GetGlowMaterial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedNoBuildVolume.OnRep_RepFieldTileStage
// (Final, Native, Protected)

void ATedNoBuildVolume::OnRep_RepFieldTileStage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedNoBuildVolume", "OnRep_RepFieldTileStage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedNoBuildVolume.OnRep_RepFieldTilesVisibility
// (Final, Native, Protected)

void ATedNoBuildVolume::OnRep_RepFieldTilesVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedNoBuildVolume", "OnRep_RepFieldTilesVisibility");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedNoBuildVolume.SetDestStage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETedNoBuildVolumeStage                  InStage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInstantChange                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedNoBuildVolume::SetDestStage(ETedNoBuildVolumeStage InStage, bool bInstantChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedNoBuildVolume", "SetDestStage");

	Params::TedNoBuildVolume_SetDestStage Parms{};

	Parms.InStage = InStage;
	Parms.bInstantChange = bInstantChange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedHarvesterInterface.K2_GetCurrentResource
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ITedHarvesterInterface::K2_GetCurrentResource() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("TedHarvesterInterface", "K2_GetCurrentResource");

	Params::TedHarvesterInterface_K2_GetCurrentResource Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedHarvesterInterface.K2_GetHarvesterData
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHarvesterData                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHarvesterData ITedHarvesterInterface::K2_GetHarvesterData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("TedHarvesterInterface", "K2_GetHarvesterData");

	Params::TedHarvesterInterface_K2_GetHarvesterData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveCondition_BlueprintBase.K2_SetConditionState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const EObjectiveConditionState          InState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedObjectiveCondition_BlueprintBase::K2_SetConditionState(const EObjectiveConditionState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveCondition_BlueprintBase", "K2_SetConditionState");

	Params::TedObjectiveCondition_BlueprintBase_K2_SetConditionState Parms{};

	Parms.InState = InState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedObjectiveCondition_BlueprintBase.OnActivate
// (Event, Protected, BlueprintEvent)

void UTedObjectiveCondition_BlueprintBase::OnActivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveCondition_BlueprintBase", "OnActivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedObjectiveCondition_BlueprintBase.OnDeactivate
// (Event, Protected, BlueprintEvent)

void UTedObjectiveCondition_BlueprintBase::OnDeactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveCondition_BlueprintBase", "OnDeactivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedObjectiveCondition_BlueprintBase.OnDescribeForDebugger
// (Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class FString*                          OutString                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedObjectiveCondition_BlueprintBase::OnDescribeForDebugger(class FString* OutString) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveCondition_BlueprintBase", "OnDescribeForDebugger");

	Params::TedObjectiveCondition_BlueprintBase_OnDescribeForDebugger Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutString != nullptr)
		*OutString = std::move(Parms.OutString);
}


// Function Tempest.TedObjectiveCondition_BlueprintBase.OnDescribeForUI
// (Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class FText*                            OutDisplayText                                         (Parm, OutParm, NativeAccessSpecifierPublic)

void UTedObjectiveCondition_BlueprintBase::OnDescribeForUI(class FText* OutDisplayText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveCondition_BlueprintBase", "OnDescribeForUI");

	Params::TedObjectiveCondition_BlueprintBase_OnDescribeForUI Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutDisplayText != nullptr)
		*OutDisplayText = std::move(Parms.OutDisplayText);
}


// Function Tempest.TedObjectiveCondition_BlueprintBase.OnIsAlreadyMet
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// EObjectiveConditionState                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EObjectiveConditionState UTedObjectiveCondition_BlueprintBase::OnIsAlreadyMet() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveCondition_BlueprintBase", "OnIsAlreadyMet");

	Params::TedObjectiveCondition_BlueprintBase_OnIsAlreadyMet Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveCondition_BlueprintBase.OnIsValidSetup
// (Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class FString*                          OutFailReason                                          (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedObjectiveCondition_BlueprintBase::OnIsValidSetup(class FString* OutFailReason) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveCondition_BlueprintBase", "OnIsValidSetup");

	Params::TedObjectiveCondition_BlueprintBase_OnIsValidSetup Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutFailReason != nullptr)
		*OutFailReason = std::move(Parms.OutFailReason);

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveCondition_BlueprintBase.OnSupportsNotMetState
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedObjectiveCondition_BlueprintBase::OnSupportsNotMetState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveCondition_BlueprintBase", "OnSupportsNotMetState");

	Params::TedObjectiveCondition_BlueprintBase_OnSupportsNotMetState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveCondition_BlueprintBase.OnSupportsRuntimeData
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedObjectiveCondition_BlueprintBase::OnSupportsRuntimeData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveCondition_BlueprintBase", "OnSupportsRuntimeData");

	Params::TedObjectiveCondition_BlueprintBase_OnSupportsRuntimeData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Tempest.TedHintsSubsystem.CanHintBeFocused
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UTedHintsAsset*                   Hint                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedHintsSubsystem::CanHintBeFocused(class UTedHintsAsset* Hint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHintsSubsystem", "CanHintBeFocused");

	Params::TedHintsSubsystem_CanHintBeFocused Parms{};

	Parms.Hint = Hint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedHintsSubsystem.FocusHintOnUI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTedHintsAsset*                   HintToFocus                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedHintsSubsystem::FocusHintOnUI(class UTedHintsAsset* HintToFocus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHintsSubsystem", "FocusHintOnUI");

	Params::TedHintsSubsystem_FocusHintOnUI Parms{};

	Parms.HintToFocus = HintToFocus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedHintsSubsystem.HideHint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTedHintsAsset*                   HintToHide                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedHintsSubsystem::HideHint(class UTedHintsAsset* HintToHide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHintsSubsystem", "HideHint");

	Params::TedHintsSubsystem_HideHint Parms{};

	Parms.HintToHide = HintToHide;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedHintsSubsystem.NotifyCommandButtonPressed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UTedCommand>          CommandUsed                                            (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedHintsSubsystem::NotifyCommandButtonPressed(TSubclassOf<class UTedCommand> CommandUsed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHintsSubsystem", "NotifyCommandButtonPressed");

	Params::TedHintsSubsystem_NotifyCommandButtonPressed Parms{};

	Parms.CommandUsed = CommandUsed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedHintsSubsystem.OnMarkeddActorRemoved
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTedHintsAsset*                   Hint                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedWorldHintActor*               WorldHintActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           MarkedActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedHintsSubsystem::OnMarkeddActorRemoved(class UTedHintsAsset* Hint, class ATedWorldHintActor* WorldHintActor, class AActor* MarkedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHintsSubsystem", "OnMarkeddActorRemoved");

	Params::TedHintsSubsystem_OnMarkeddActorRemoved Parms{};

	Parms.Hint = Hint;
	Parms.WorldHintActor = WorldHintActor;
	Parms.MarkedActor = MarkedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedHintsSubsystem.PlayHintSFX
// (Final, Native, Public)

void UTedHintsSubsystem::PlayHintSFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHintsSubsystem", "PlayHintSFX");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedHintsSubsystem.SetHintsEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInEnableHints                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedHintsSubsystem::SetHintsEnabled(bool bInEnableHints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHintsSubsystem", "SetHintsEnabled");

	Params::TedHintsSubsystem_SetHintsEnabled Parms{};

	Parms.bInEnableHints = bInEnableHints;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedHintsSubsystem.ShouldAbilityBeHighlighted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TSubclassOf<class UTedCommand>          CommandToCheck                                         (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedHintsSubsystem::ShouldAbilityBeHighlighted(TSubclassOf<class UTedCommand> CommandToCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHintsSubsystem", "ShouldAbilityBeHighlighted");

	Params::TedHintsSubsystem_ShouldAbilityBeHighlighted Parms{};

	Parms.CommandToCheck = CommandToCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedHintsSubsystem.TriggerNewHint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTedHintsAsset*                   NewHint                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedHintsSubsystem::TriggerNewHint(class UTedHintsAsset* NewHint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHintsSubsystem", "TriggerNewHint");

	Params::TedHintsSubsystem_TriggerNewHint Parms{};

	Parms.NewHint = NewHint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedHintsSubsystem.TryFocusWorldHint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTedHintsAsset*                   HintToFocus                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedHintsSubsystem::TryFocusWorldHint(class UTedHintsAsset* HintToFocus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHintsSubsystem", "TryFocusWorldHint");

	Params::TedHintsSubsystem_TryFocusWorldHint Parms{};

	Parms.HintToFocus = HintToFocus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedHintsSubsystem.TryMarkHintAsRead
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTedHintsAsset*                   HintToMark                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedHintsSubsystem::TryMarkHintAsRead(class UTedHintsAsset* HintToMark)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHintsSubsystem", "TryMarkHintAsRead");

	Params::TedHintsSubsystem_TryMarkHintAsRead Parms{};

	Parms.HintToMark = HintToMark;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedHintsSubsystem.GetNumOfActiveHints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedHintsSubsystem::GetNumOfActiveHints() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHintsSubsystem", "GetNumOfActiveHints");

	Params::TedHintsSubsystem_GetNumOfActiveHints Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedHintsSubsystem.GetNumOfUnreadHints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedHintsSubsystem::GetNumOfUnreadHints() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHintsSubsystem", "GetNumOfUnreadHints");

	Params::TedHintsSubsystem_GetNumOfUnreadHints Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedHintsSubsystem.GetShownHints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UTedHintsAsset*>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UTedHintsAsset*> UTedHintsSubsystem::GetShownHints() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHintsSubsystem", "GetShownHints");

	Params::TedHintsSubsystem_GetShownHints Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedHintsSubsystem.WasHintRead
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedHintsAsset*                   Hint                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedHintsSubsystem::WasHintRead(class UTedHintsAsset* Hint) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHintsSubsystem", "WasHintRead");

	Params::TedHintsSubsystem_WasHintRead Parms{};

	Parms.Hint = Hint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedHUD.K2_GetLocalHUD
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedHUD*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedHUD* ATedHUD::K2_GetLocalHUD(const class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedHUD", "K2_GetLocalHUD");

	Params::TedHUD_K2_GetLocalHUD Parms{};

	Parms.InWorldContext = InWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedHUD.ClearActivePopupWidget
// (Final, Native, Public, BlueprintCallable)

void ATedHUD::ClearActivePopupWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHUD", "ClearActivePopupWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedHUD.HideTooltip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UTedTooltipWidget>    InClass                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          InTargetWidget                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedHUD::HideTooltip(TSubclassOf<class UTedTooltipWidget> InClass, class UWidget* InTargetWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHUD", "HideTooltip");

	Params::TedHUD_HideTooltip Parms{};

	Parms.InClass = InClass;
	Parms.InTargetWidget = InTargetWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedHUD.OnStartupSequenceWidgetAnimationEnd
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UTedUserWidget*                   InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InAnim                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedHUD::OnStartupSequenceWidgetAnimationEnd(class UTedUserWidget* InWidget, const struct FGameplayTag& InAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHUD", "OnStartupSequenceWidgetAnimationEnd");

	Params::TedHUD_OnStartupSequenceWidgetAnimationEnd Parms{};

	Parms.InWidget = InWidget;
	Parms.InAnim = std::move(InAnim);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedHUD.SetActivePopupWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTedPopup*                        InPopupWidget                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedHUD::SetActivePopupWidget(class UTedPopup* InPopupWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHUD", "SetActivePopupWidget");

	Params::TedHUD_SetActivePopupWidget Parms{};

	Parms.InPopupWidget = InPopupWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedHUD.SetTheme
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const ETedFaction                       InTheme                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedHUD::SetTheme(const ETedFaction InTheme)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHUD", "SetTheme");

	Params::TedHUD_SetTheme Parms{};

	Parms.InTheme = InTheme;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedHUD.ShowDebugForSelected
// (Exec, Native, Public)

void ATedHUD::ShowDebugForSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHUD", "ShowDebugForSelected");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedHUD.ShowEndGameScreen
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// const bool                              bWinner                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedHUD::ShowEndGameScreen(const bool bWinner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHUD", "ShowEndGameScreen");

	Params::TedHUD_ShowEndGameScreen Parms{};

	Parms.bWinner = bWinner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedHUD.ShowTooltipFor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class UTedTooltipWidget>    InClass                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedTooltipDisplayParams&  InDisplayParams                                        (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ATedHUD::ShowTooltipFor(TSubclassOf<class UTedTooltipWidget> InClass, class UWidget* InWidget, const struct FTedTooltipDisplayParams& InDisplayParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHUD", "ShowTooltipFor");

	Params::TedHUD_ShowTooltipFor Parms{};

	Parms.InClass = InClass;
	Parms.InWidget = InWidget;
	Parms.InDisplayParams = std::move(InDisplayParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedHUD.GetActiveSpectatorMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedSpectatorMode                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedSpectatorMode ATedHUD::GetActiveSpectatorMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHUD", "GetActiveSpectatorMode");

	Params::TedHUD_GetActiveSpectatorMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedHUD.GetMaterialCollectionParamNames_Scallars
// (Final, Native, Protected, Const)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> ATedHUD::GetMaterialCollectionParamNames_Scallars() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHUD", "GetMaterialCollectionParamNames_Scallars");

	Params::TedHUD_GetMaterialCollectionParamNames_Scallars Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedHUD.GetMaterialCollectionParamNames_Vectors
// (Final, Native, Protected, Const)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> ATedHUD::GetMaterialCollectionParamNames_Vectors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHUD", "GetMaterialCollectionParamNames_Vectors");

	Params::TedHUD_GetMaterialCollectionParamNames_Vectors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedHUD.GetMenuScreen
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              InID                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedMenuScreenWidget*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedMenuScreenWidget* ATedHUD::GetMenuScreen(const struct FGameplayTag& InID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHUD", "GetMenuScreen");

	Params::TedHUD_GetMenuScreen Parms{};

	Parms.InID = std::move(InID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedHUD.GetStandaloneWidgets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class UTedUserWidget*>     ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

const TArray<class UTedUserWidget*> ATedHUD::GetStandaloneWidgets() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHUD", "GetStandaloneWidgets");

	Params::TedHUD_GetStandaloneWidgets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedHUD.GetTheme
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedFaction                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedFaction ATedHUD::GetTheme() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHUD", "GetTheme");

	Params::TedHUD_GetTheme Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedHUD.IsAnyWidgetUnderCursor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedHUD::IsAnyWidgetUnderCursor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHUD", "IsAnyWidgetUnderCursor");

	Params::TedHUD_IsAnyWidgetUnderCursor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedHUD.IsSpectatorModeActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedHUD::IsSpectatorModeActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHUD", "IsSpectatorModeActive");

	Params::TedHUD_IsSpectatorModeActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMenuScreenBlueprintLibrary.CanCloseMenuScreen
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UObject*                    InContext                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMenuScreenBlueprintLibrary::CanCloseMenuScreen(const class UObject* InWorldContextObject, const class UObject* InContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedMenuScreenBlueprintLibrary", "CanCloseMenuScreen");

	Params::TedMenuScreenBlueprintLibrary_CanCloseMenuScreen Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InContext = InContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMenuScreenBlueprintLibrary.CanGoBackMenuScreen
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMenuScreenBlueprintLibrary::CanGoBackMenuScreen(const class UObject* InWorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedMenuScreenBlueprintLibrary", "CanGoBackMenuScreen");

	Params::TedMenuScreenBlueprintLibrary_CanGoBackMenuScreen Parms{};

	Parms.InWorldContextObject = InWorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMenuScreenBlueprintLibrary.CanOpenMenuScreen
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InID                                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UObject*                    InContext                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMenuScreenBlueprintLibrary::CanOpenMenuScreen(const class UObject* InWorldContextObject, const struct FGameplayTag& InID, const class UObject* InContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedMenuScreenBlueprintLibrary", "CanOpenMenuScreen");

	Params::TedMenuScreenBlueprintLibrary_CanOpenMenuScreen Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InID = std::move(InID);
	Parms.InContext = InContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMenuScreenBlueprintLibrary.CloseMenuScreen
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UObject*                    InContext                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInInstant                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMenuScreenBlueprintLibrary::CloseMenuScreen(const class UObject* InWorldContextObject, const class UObject* InContext, const bool bInInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedMenuScreenBlueprintLibrary", "CloseMenuScreen");

	Params::TedMenuScreenBlueprintLibrary_CloseMenuScreen Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InContext = InContext;
	Parms.bInInstant = bInInstant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMenuScreenBlueprintLibrary.GetOpenedMenuScreen
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    InWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag*                    OutMenuScreen                                          (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMenuScreenBlueprintLibrary::GetOpenedMenuScreen(const class UObject* InWorldContextObject, struct FGameplayTag* OutMenuScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedMenuScreenBlueprintLibrary", "GetOpenedMenuScreen");

	Params::TedMenuScreenBlueprintLibrary_GetOpenedMenuScreen Parms{};

	Parms.InWorldContextObject = InWorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMenuScreen != nullptr)
		*OutMenuScreen = std::move(Parms.OutMenuScreen);
}


// Function Tempest.TedMenuScreenBlueprintLibrary.GoBackMenuScreen
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMenuScreenBlueprintLibrary::GoBackMenuScreen(const class UObject* InWorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedMenuScreenBlueprintLibrary", "GoBackMenuScreen");

	Params::TedMenuScreenBlueprintLibrary_GoBackMenuScreen Parms{};

	Parms.InWorldContextObject = InWorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMenuScreenBlueprintLibrary.IsAnyMenuScreenOpened
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    InWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMenuScreenBlueprintLibrary::IsAnyMenuScreenOpened(const class UObject* InWorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedMenuScreenBlueprintLibrary", "IsAnyMenuScreenOpened");

	Params::TedMenuScreenBlueprintLibrary_IsAnyMenuScreenOpened Parms{};

	Parms.InWorldContextObject = InWorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMenuScreenBlueprintLibrary.IsMenuScreenEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    InWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InID                                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMenuScreenBlueprintLibrary::IsMenuScreenEnabled(const class UObject* InWorldContextObject, const struct FGameplayTag& InID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedMenuScreenBlueprintLibrary", "IsMenuScreenEnabled");

	Params::TedMenuScreenBlueprintLibrary_IsMenuScreenEnabled Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InID = std::move(InID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMenuScreenBlueprintLibrary.IsMenuScreenOpened
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    InWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InID                                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMenuScreenBlueprintLibrary::IsMenuScreenOpened(const class UObject* InWorldContextObject, const struct FGameplayTag& InID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedMenuScreenBlueprintLibrary", "IsMenuScreenOpened");

	Params::TedMenuScreenBlueprintLibrary_IsMenuScreenOpened Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InID = std::move(InID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMenuScreenBlueprintLibrary.OpenMenuScreen
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InID                                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UObject*                    InContext                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInInstant                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMenuScreenBlueprintLibrary::OpenMenuScreen(const class UObject* InWorldContextObject, const struct FGameplayTag& InID, const class UObject* InContext, const bool bInInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedMenuScreenBlueprintLibrary", "OpenMenuScreen");

	Params::TedMenuScreenBlueprintLibrary_OpenMenuScreen Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InID = std::move(InID);
	Parms.InContext = InContext;
	Parms.bInInstant = bInInstant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMenuScreenBlueprintLibrary.SetMenuScreenEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InID                                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInEnabled                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMenuScreenBlueprintLibrary::SetMenuScreenEnabled(const class UObject* InWorldContextObject, const struct FGameplayTag& InID, const bool bInEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedMenuScreenBlueprintLibrary", "SetMenuScreenEnabled");

	Params::TedMenuScreenBlueprintLibrary_SetMenuScreenEnabled Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InID = std::move(InID);
	Parms.bInEnabled = bInEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedImageSequencePlayer.OnSequenceEnd
// (Final, Native, Protected)

void UTedImageSequencePlayer::OnSequenceEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedImageSequencePlayer", "OnSequenceEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedImageSequencePlayer.OnSequenceOpened
// (Final, Native, Protected)
// Parameters:
// const class FString&                    InOpenedUrl                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedImageSequencePlayer::OnSequenceOpened(const class FString& InOpenedUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedImageSequencePlayer", "OnSequenceOpened");

	Params::TedImageSequencePlayer_OnSequenceOpened Parms{};

	Parms.InOpenedUrl = std::move(InOpenedUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedImageSequencePlayer.Play
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UTedImageSequenceSource*    InSequence                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedImageSequencePlayer::Play(const class UTedImageSequenceSource* InSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedImageSequencePlayer", "Play");

	Params::TedImageSequencePlayer_Play Parms{};

	Parms.InSequence = InSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedImageSequencePlayer.SetPlayerMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*               InMaterial                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedImageSequencePlayer::SetPlayerMaterial(class UMaterialInterface* InMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedImageSequencePlayer", "SetPlayerMaterial");

	Params::TedImageSequencePlayer_SetPlayerMaterial Parms{};

	Parms.InMaterial = InMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedImageSequencePlayer.Stop
// (Final, Native, Public, BlueprintCallable)

void UTedImageSequencePlayer::Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedImageSequencePlayer", "Stop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedImageSequencePlayer.GetPlayingSequence
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedImageSequenceSource*    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedImageSequenceSource* UTedImageSequencePlayer::GetPlayingSequence() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedImageSequencePlayer", "GetPlayingSequence");

	Params::TedImageSequencePlayer_GetPlayingSequence Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedImageSequencePlayer.IsPlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedImageSequencePlayer::IsPlaying() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedImageSequencePlayer", "IsPlaying");

	Params::TedImageSequencePlayer_IsPlaying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedInfantry.HandleSubjugationVisuals
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void ATedInfantry::HandleSubjugationVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedInfantry", "HandleSubjugationVisuals");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedInfantry.CanCrawl
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedInfantry::CanCrawl() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedInfantry", "CanCrawl");

	Params::TedInfantry_CanCrawl Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedInfantry.IsCrawling
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedInfantry::IsCrawling() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedInfantry", "IsCrawling");

	Params::TedInfantry_IsCrawling Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMissionClock.DisplayCentralTimerNotification
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FTimespan&                 InTime                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMissionClock::DisplayCentralTimerNotification(const struct FTimespan& InTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMissionClock", "DisplayCentralTimerNotification");

	Params::TedMissionClock_DisplayCentralTimerNotification Parms{};

	Parms.InTime = std::move(InTime);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedMissionClock.OnMovieAnimFinished
// (Final, Native, Protected)
// Parameters:
// class UTedMoviePlayerWidgetV2*          InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UFileMediaSource*           InSource                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMissionClock::OnMovieAnimFinished(class UTedMoviePlayerWidgetV2* InWidget, const class UFileMediaSource* InSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMissionClock", "OnMovieAnimFinished");

	Params::TedMissionClock_OnMovieAnimFinished Parms{};

	Parms.InWidget = InWidget;
	Parms.InSource = InSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMissionClock.OnMovieAnimStarted
// (Final, Native, Protected)
// Parameters:
// class UTedMoviePlayerWidgetV2*          InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UFileMediaSource*           InSource                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMissionClock::OnMovieAnimStarted(class UTedMoviePlayerWidgetV2* InWidget, const class UFileMediaSource* InSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMissionClock", "OnMovieAnimStarted");

	Params::TedMissionClock_OnMovieAnimStarted Parms{};

	Parms.InWidget = InWidget;
	Parms.InSource = InSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMissionClock.OnRefreshMatchTime
// (Final, Native, Protected)

void UTedMissionClock::OnRefreshMatchTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMissionClock", "OnRefreshMatchTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedInfantry_Harvester.K2_OnResourceChange
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// float                                   ResourceToMaxCapacityPct                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedInfantry_Harvester::K2_OnResourceChange(float ResourceToMaxCapacityPct) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedInfantry_Harvester", "K2_OnResourceChange");

	Params::TedInfantry_Harvester_K2_OnResourceChange Parms{};

	Parms.ResourceToMaxCapacityPct = ResourceToMaxCapacityPct;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedMobileRefineryInterface.IsAutoharvestEnabled
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITedMobileRefineryInterface::IsAutoharvestEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("TedMobileRefineryInterface", "IsAutoharvestEnabled");

	Params::TedMobileRefineryInterface_IsAutoharvestEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMobileRefineryInterface.IssueAuthoharvestCommand
// (Native, Public, BlueprintCallable)

void ITedMobileRefineryInterface::IssueAuthoharvestCommand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("TedMobileRefineryInterface", "IssueAuthoharvestCommand");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMobileRefineryInterface.SetTargetResourceVolume
// (Native, Public, BlueprintCallable)
// Parameters:
// class ATempestFieldVolume*              InVolume                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ITedMobileRefineryInterface::SetTargetResourceVolume(class ATempestFieldVolume* InVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("TedMobileRefineryInterface", "SetTargetResourceVolume");

	Params::TedMobileRefineryInterface_SetTargetResourceVolume Parms{};

	Parms.InVolume = InVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMobileRefineryInterface.GetHarvesterLimit
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ITedMobileRefineryInterface::GetHarvesterLimit() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("TedMobileRefineryInterface", "GetHarvesterLimit");

	Params::TedMobileRefineryInterface_GetHarvesterLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMobileRefineryInterface.GetTargetResourceVolume
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATempestFieldVolume*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATempestFieldVolume* ITedMobileRefineryInterface::GetTargetResourceVolume() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("TedMobileRefineryInterface", "GetTargetResourceVolume");

	Params::TedMobileRefineryInterface_GetTargetResourceVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMobileRefineryInterface.GetTargetResourceVolumeBBKeyName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ITedMobileRefineryInterface::GetTargetResourceVolumeBBKeyName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("TedMobileRefineryInterface", "GetTargetResourceVolumeBBKeyName");

	Params::TedMobileRefineryInterface_GetTargetResourceVolumeBBKeyName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMobileRefineryInterface.K2_GetHarvesters
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class ATedUnitBase*>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ATedUnitBase*> ITedMobileRefineryInterface::K2_GetHarvesters() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("TedMobileRefineryInterface", "K2_GetHarvesters");

	Params::TedMobileRefineryInterface_K2_GetHarvesters Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedInputMappingPicker.HandlePopupButtonClick_Ok
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const int32                             InButtonIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedInputMappingPicker::HandlePopupButtonClick_Ok(const int32 InButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedInputMappingPicker", "HandlePopupButtonClick_Ok");

	Params::TedInputMappingPicker_HandlePopupButtonClick_Ok Parms{};

	Parms.InButtonIndex = InButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedInputMappingPicker.Hide
// (Final, Native, Public, BlueprintCallable)

void UTedInputMappingPicker::Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedInputMappingPicker", "Hide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedInputMappingPicker.NotifyOnCancel
// (Final, Native, Protected, BlueprintCallable)

void UTedInputMappingPicker::NotifyOnCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedInputMappingPicker", "NotifyOnCancel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedInputMappingPicker.NotifyOnPick
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FInputChord&               InChord                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedInputMappingPicker::NotifyOnPick(const struct FInputChord& InChord)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedInputMappingPicker", "NotifyOnPick");

	Params::TedInputMappingPicker_NotifyOnPick Parms{};

	Parms.InChord = std::move(InChord);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedInputMappingPicker.GetInputDisplayText
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedInputMappingPicker::GetInputDisplayText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedInputMappingPicker", "GetInputDisplayText");

	Params::TedInputMappingPicker_GetInputDisplayText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedInputSettings.GetAvailableInputNames
// (Final, Native, Protected, Const)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UTedInputSettings::GetAvailableInputNames() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedInputSettings", "GetAvailableInputNames");

	Params::TedInputSettings_GetAvailableInputNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedInputSettings.GetAvailableSectionNames
// (Final, Native, Protected, Const)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UTedInputSettings::GetAvailableSectionNames() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedInputSettings", "GetAvailableSectionNames");

	Params::TedInputSettings_GetAvailableSectionNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedJukeboxSubsystem.FadeOutTrack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   FadeOutDuration                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedJukeboxSubsystem::FadeOutTrack(float FadeOutDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxSubsystem", "FadeOutTrack");

	Params::TedJukeboxSubsystem_FadeOutTrack Parms{};

	Parms.FadeOutDuration = FadeOutDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxSubsystem.GetPlaytimeText
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedJukeboxSubsystem::GetPlaytimeText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxSubsystem", "GetPlaytimeText");

	Params::TedJukeboxSubsystem_GetPlaytimeText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedJukeboxSubsystem.IsPaused
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedJukeboxSubsystem::IsPaused()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxSubsystem", "IsPaused");

	Params::TedJukeboxSubsystem_IsPaused Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedJukeboxSubsystem.OnSoundSettingsChanged
// (Final, Native, Private)

void UTedJukeboxSubsystem::OnSoundSettingsChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxSubsystem", "OnSoundSettingsChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxSubsystem.OnTrackAssetsLoaded_Internal
// (Final, Native, Private)
// Parameters:
// const TArray<struct FPrimaryAssetId>&   AssetsLoaded                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UTedJukeboxSubsystem::OnTrackAssetsLoaded_Internal(const TArray<struct FPrimaryAssetId>& AssetsLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxSubsystem", "OnTrackAssetsLoaded_Internal");

	Params::TedJukeboxSubsystem_OnTrackAssetsLoaded_Internal Parms{};

	Parms.AssetsLoaded = std::move(AssetsLoaded);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxSubsystem.OnTrackFinishedCallBack
// (Final, Native, Private)

void UTedJukeboxSubsystem::OnTrackFinishedCallBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxSubsystem", "OnTrackFinishedCallBack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxSubsystem.Play
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTedJukeboxTrackAsset*            NewTrack                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedJukeboxSubsystem::Play(class UTedJukeboxTrackAsset* NewTrack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxSubsystem", "Play");

	Params::TedJukeboxSubsystem_Play Parms{};

	Parms.NewTrack = NewTrack;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxSubsystem.PlayBackPercentageCallBack
// (Final, Native, Private)
// Parameters:
// const class USoundWave*                 SoundWave                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Percentage                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedJukeboxSubsystem::PlayBackPercentageCallBack(const class USoundWave* SoundWave, const float Percentage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxSubsystem", "PlayBackPercentageCallBack");

	Params::TedJukeboxSubsystem_PlayBackPercentageCallBack Parms{};

	Parms.SoundWave = SoundWave;
	Parms.Percentage = Percentage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxSubsystem.PlayEndGameTrack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInVictory                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedJukeboxSubsystem::PlayEndGameTrack(bool bInVictory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxSubsystem", "PlayEndGameTrack");

	Params::TedJukeboxSubsystem_PlayEndGameTrack Parms{};

	Parms.bInVictory = bInVictory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxSubsystem.PlayNext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bForceNewTrack                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedJukeboxSubsystem::PlayNext(bool bForceNewTrack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxSubsystem", "PlayNext");

	Params::TedJukeboxSubsystem_PlayNext Parms{};

	Parms.bForceNewTrack = bForceNewTrack;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxSubsystem.PlayNext_Muted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bForceNewTrack                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedJukeboxSubsystem::PlayNext_Muted(bool bForceNewTrack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxSubsystem", "PlayNext_Muted");

	Params::TedJukeboxSubsystem_PlayNext_Muted Parms{};

	Parms.bForceNewTrack = bForceNewTrack;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxSubsystem.PlayPrevious
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bForceNewTrack                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedJukeboxSubsystem::PlayPrevious(bool bForceNewTrack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxSubsystem", "PlayPrevious");

	Params::TedJukeboxSubsystem_PlayPrevious Parms{};

	Parms.bForceNewTrack = bForceNewTrack;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxSubsystem.SetMissionTrackMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NewActive                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedJukeboxSubsystem::SetMissionTrackMode(bool NewActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxSubsystem", "SetMissionTrackMode");

	Params::TedJukeboxSubsystem_SetMissionTrackMode Parms{};

	Parms.NewActive = NewActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxSubsystem.SetPause
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NewPause                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedJukeboxSubsystem::SetPause(bool NewPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxSubsystem", "SetPause");

	Params::TedJukeboxSubsystem_SetPause Parms{};

	Parms.NewPause = NewPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxSubsystem.SetPlayPercentage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedJukeboxSubsystem::SetPlayPercentage(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxSubsystem", "SetPlayPercentage");

	Params::TedJukeboxSubsystem_SetPlayPercentage Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxSubsystem.SetRepeatMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NewActive                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedJukeboxSubsystem::SetRepeatMode(bool NewActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxSubsystem", "SetRepeatMode");

	Params::TedJukeboxSubsystem_SetRepeatMode Parms{};

	Parms.NewActive = NewActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxSubsystem.SetShuffleMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NewActive                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedJukeboxSubsystem::SetShuffleMode(bool NewActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxSubsystem", "SetShuffleMode");

	Params::TedJukeboxSubsystem_SetShuffleMode Parms{};

	Parms.NewActive = NewActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxSubsystem.GetAllTracks
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class UTedJukeboxTrackAsset*>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class UTedJukeboxTrackAsset*> UTedJukeboxSubsystem::GetAllTracks() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxSubsystem", "GetAllTracks");

	Params::TedJukeboxSubsystem_GetAllTracks Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedJukeboxSubsystem.GetCurrentPlayedTrack
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedJukeboxTrackAsset*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedJukeboxTrackAsset* UTedJukeboxSubsystem::GetCurrentPlayedTrack() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxSubsystem", "GetCurrentPlayedTrack");

	Params::TedJukeboxSubsystem_GetCurrentPlayedTrack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedJukeboxSubsystem.GetCurrentPlaylist
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class UTedJukeboxTrackAsset*>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class UTedJukeboxTrackAsset*> UTedJukeboxSubsystem::GetCurrentPlaylist() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxSubsystem", "GetCurrentPlaylist");

	Params::TedJukeboxSubsystem_GetCurrentPlaylist Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedJukeboxSubsystem.GetCurrenttrackPlayTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedJukeboxSubsystem::GetCurrenttrackPlayTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxSubsystem", "GetCurrenttrackPlayTime");

	Params::TedJukeboxSubsystem_GetCurrenttrackPlayTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedJukeboxSubsystem.IsMissionTrackMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedJukeboxSubsystem::IsMissionTrackMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxSubsystem", "IsMissionTrackMode");

	Params::TedJukeboxSubsystem_IsMissionTrackMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedJukeboxSubsystem.IsRepeatMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedJukeboxSubsystem::IsRepeatMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxSubsystem", "IsRepeatMode");

	Params::TedJukeboxSubsystem_IsRepeatMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedJukeboxSubsystem.IsShuffleMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedJukeboxSubsystem::IsShuffleMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxSubsystem", "IsShuffleMode");

	Params::TedJukeboxSubsystem_IsShuffleMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedJukeboxTrackEntry.PlayBTNOnClicked
// (Final, Native, Private)

void UTedJukeboxTrackEntry::PlayBTNOnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxTrackEntry", "PlayBTNOnClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxTrackEntry.GetContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedJukeboxTrackAsset*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedJukeboxTrackAsset* UTedJukeboxTrackEntry::GetContent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxTrackEntry", "GetContent");

	Params::TedJukeboxTrackEntry_GetContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedJukeboxTrackPanel.SetContent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<class UTedJukeboxTrackAsset*>&NewContent                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UTedJukeboxTrackPanel::SetContent(const TArray<class UTedJukeboxTrackAsset*>& NewContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxTrackPanel", "SetContent");

	Params::TedJukeboxTrackPanel_SetContent Parms{};

	Parms.NewContent = std::move(NewContent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxTrackPanel.GetContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedJukeboxTrackAsset*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedJukeboxTrackAsset* UTedJukeboxTrackPanel::GetContent(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxTrackPanel", "GetContent");

	Params::TedJukeboxTrackPanel_GetContent Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedJukeboxWidgetMain.MTMBTNNOnClicked
// (Final, Native, Private)

void UTedJukeboxWidgetMain::MTMBTNNOnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxWidgetMain", "MTMBTNNOnClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxWidgetMain.NextBTNOnClicked
// (Final, Native, Private)

void UTedJukeboxWidgetMain::NextBTNOnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxWidgetMain", "NextBTNOnClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxWidgetMain.OnAssetLoaded
// (Final, Native, Protected)

void UTedJukeboxWidgetMain::OnAssetLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxWidgetMain", "OnAssetLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxWidgetMain.OnMissionModeStateChangeCallback
// (Final, Native, Protected)
// Parameters:
// bool                                    NewActive                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedJukeboxWidgetMain::OnMissionModeStateChangeCallback(bool NewActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxWidgetMain", "OnMissionModeStateChangeCallback");

	Params::TedJukeboxWidgetMain_OnMissionModeStateChangeCallback Parms{};

	Parms.NewActive = NewActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxWidgetMain.OnPauseModeStateChangeCallback
// (Final, Native, Protected)
// Parameters:
// bool                                    NewActive                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedJukeboxWidgetMain::OnPauseModeStateChangeCallback(bool NewActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxWidgetMain", "OnPauseModeStateChangeCallback");

	Params::TedJukeboxWidgetMain_OnPauseModeStateChangeCallback Parms{};

	Parms.NewActive = NewActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxWidgetMain.OnShuffleModeStateChangeCallback
// (Final, Native, Protected)
// Parameters:
// bool                                    NewActive                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedJukeboxWidgetMain::OnShuffleModeStateChangeCallback(bool NewActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxWidgetMain", "OnShuffleModeStateChangeCallback");

	Params::TedJukeboxWidgetMain_OnShuffleModeStateChangeCallback Parms{};

	Parms.NewActive = NewActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxWidgetMain.OnTrackFinishedCallack
// (Final, Native, Protected)
// Parameters:
// class UTedJukeboxTrackAsset*            NewTrack                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedJukeboxWidgetMain::OnTrackFinishedCallack(class UTedJukeboxTrackAsset* NewTrack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxWidgetMain", "OnTrackFinishedCallack");

	Params::TedJukeboxWidgetMain_OnTrackFinishedCallack Parms{};

	Parms.NewTrack = NewTrack;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxWidgetMain.PausePlayBTNOnClicked
// (Final, Native, Private)

void UTedJukeboxWidgetMain::PausePlayBTNOnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxWidgetMain", "PausePlayBTNOnClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxWidgetMain.PreviousBTNOnClicked
// (Final, Native, Private)

void UTedJukeboxWidgetMain::PreviousBTNOnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxWidgetMain", "PreviousBTNOnClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxWidgetMain.RefreshTrack
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UTedJukeboxTrackAsset*            NewTrack                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedJukeboxWidgetMain::RefreshTrack(class UTedJukeboxTrackAsset* NewTrack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxWidgetMain", "RefreshTrack");

	Params::TedJukeboxWidgetMain_RefreshTrack Parms{};

	Parms.NewTrack = NewTrack;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxWidgetMain.RepeatBTNOnClicked
// (Final, Native, Private)

void UTedJukeboxWidgetMain::RepeatBTNOnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxWidgetMain", "RepeatBTNOnClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedJukeboxWidgetMain.ShuffleBTNOnClicked
// (Final, Native, Private)

void UTedJukeboxWidgetMain::ShuffleBTNOnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedJukeboxWidgetMain", "ShuffleBTNOnClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.AirDropInVolumeBlueprintNode.RequestAirDropInVolume
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContext                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAirDropInVolumeInputs                  In                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAirDropInVolumeOutputs*                Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)
// class ATedUnitSpawner_Volume*           Spawner                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ATedUnitBase*>*            DroppedUnits                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAirDropInVolumeBlueprintNode::RequestAirDropInVolume(class UObject* InWorldContext, EAirDropInVolumeInputs In, EAirDropInVolumeOutputs* Out, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo, class ATedUnitSpawner_Volume* Spawner, TArray<class ATedUnitBase*>* DroppedUnits)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AirDropInVolumeBlueprintNode", "RequestAirDropInVolume");

	Params::AirDropInVolumeBlueprintNode_RequestAirDropInVolume Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.In = In;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);
	Parms.Spawner = Spawner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out != nullptr)
		*Out = Parms.Out;

	if (DroppedUnits != nullptr)
		*DroppedUnits = std::move(Parms.DroppedUnits);
}


// Function Tempest.BatchSpawnBlueprintNode.RequestBatchSpawn
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContext                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBatchSpawnInputs                       In                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBatchSpawnOutputs*                     Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)
// const TArray<class ATedUnitSpawner*>&   Spawners                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class ATedUnitBase*>*            SpawnedUnits                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UBatchSpawnBlueprintNode::RequestBatchSpawn(class UObject* InWorldContext, EBatchSpawnInputs In, EBatchSpawnOutputs* Out, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo, const TArray<class ATedUnitSpawner*>& Spawners, TArray<class ATedUnitBase*>* SpawnedUnits)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BatchSpawnBlueprintNode", "RequestBatchSpawn");

	Params::BatchSpawnBlueprintNode_RequestBatchSpawn Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.In = In;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);
	Parms.Spawners = std::move(Spawners);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out != nullptr)
		*Out = Parms.Out;

	if (SpawnedUnits != nullptr)
		*SpawnedUnits = std::move(Parms.SpawnedUnits);
}


// Function Tempest.SpawnBlueprintNode.RequestSpawn
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContext                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBatchSpawnInputs                       In                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBatchSpawnOutputs*                     Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)
// class ATedUnitSpawner*                  Spawner                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedUnitBase**                    SpawnedUnit                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpawnBlueprintNode::RequestSpawn(class UObject* InWorldContext, EBatchSpawnInputs In, EBatchSpawnOutputs* Out, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo, class ATedUnitSpawner* Spawner, class ATedUnitBase** SpawnedUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SpawnBlueprintNode", "RequestSpawn");

	Params::SpawnBlueprintNode_RequestSpawn Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.In = In;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);
	Parms.Spawner = Spawner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out != nullptr)
		*Out = Parms.Out;

	if (SpawnedUnit != nullptr)
		*SpawnedUnit = Parms.SpawnedUnit;
}


// Function Tempest.SpawnStaggeredBlueprintNode.RequestSpawnInVolumeStaggered
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContext                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESpawnStaggeredInputs                   In                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESpawnStaggeredOutputs*                 Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)
// class ATedUnitSpawner_Volume*           Spawner                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DelayMin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DelayMax                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ATedUnitBase*>*            SpawnedUnits                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void USpawnStaggeredBlueprintNode::RequestSpawnInVolumeStaggered(class UObject* InWorldContext, ESpawnStaggeredInputs In, ESpawnStaggeredOutputs* Out, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo, class ATedUnitSpawner_Volume* Spawner, float DelayMin, float DelayMax, TArray<class ATedUnitBase*>* SpawnedUnits)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SpawnStaggeredBlueprintNode", "RequestSpawnInVolumeStaggered");

	Params::SpawnStaggeredBlueprintNode_RequestSpawnInVolumeStaggered Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.In = In;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);
	Parms.Spawner = Spawner;
	Parms.DelayMin = DelayMin;
	Parms.DelayMax = DelayMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out != nullptr)
		*Out = Parms.Out;

	if (SpawnedUnits != nullptr)
		*SpawnedUnits = std::move(Parms.SpawnedUnits);
}


// Function Tempest.WaitForProductionBlueprintNode.WaitForProduction
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContext                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ELatentActionWaitForProductionInputs    In                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ELatentActionWaitForProductionOutputs*  Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)
// const ETedPlayerID                      PlayerID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bStopAfterProduction                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             StopAfterProducingAmount                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedPawnFilter&            Filter                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class ATedStructureBase**               OutProductionStructure                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedUnitBase**                    OutProducedUnit                                        (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWaitForProductionBlueprintNode::WaitForProduction(class UObject* InWorldContext, ELatentActionWaitForProductionInputs In, ELatentActionWaitForProductionOutputs* Out, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo, const ETedPlayerID PlayerID, const bool bStopAfterProduction, const int32 StopAfterProducingAmount, const struct FTedPawnFilter& Filter, class ATedStructureBase** OutProductionStructure, class ATedUnitBase** OutProducedUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WaitForProductionBlueprintNode", "WaitForProduction");

	Params::WaitForProductionBlueprintNode_WaitForProduction Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.In = In;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);
	Parms.PlayerID = PlayerID;
	Parms.bStopAfterProduction = bStopAfterProduction;
	Parms.StopAfterProducingAmount = StopAfterProducingAmount;
	Parms.Filter = std::move(Filter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out != nullptr)
		*Out = Parms.Out;

	if (OutProductionStructure != nullptr)
		*OutProductionStructure = Parms.OutProductionStructure;

	if (OutProducedUnit != nullptr)
		*OutProducedUnit = Parms.OutProducedUnit;
}


// Function Tempest.TedLatentFunctionLibrary.ActorDamagedTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     ActorTags                                              (Parm, NativeAccessSpecifierPublic)
// TSubclassOf<class AActor>               ActorClass                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::ActorDamagedTag(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FGameplayTagContainer& ActorTags, TSubclassOf<class AActor> ActorClass, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "ActorDamagedTag");

	Params::TedLatentFunctionLibrary_ActorDamagedTag Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.ActorTags = std::move(ActorTags);
	Parms.ActorClass = ActorClass;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.ActorEntersVolume_FilterByActorClasses
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSoftActorPtr&             Volume                                                 (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<TSoftClassPtr<class UClass>>&Classes                                                (Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
// const bool                              bExactClasses                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::ActorEntersVolume_FilterByActorClasses(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FSoftActorPtr& Volume, const TArray<TSoftClassPtr<class UClass>>& Classes, const bool bExactClasses, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "ActorEntersVolume_FilterByActorClasses");

	Params::TedLatentFunctionLibrary_ActorEntersVolume_FilterByActorClasses Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Volume = std::move(Volume);
	Parms.Classes = std::move(Classes);
	Parms.bExactClasses = bExactClasses;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.ActorEntersVolume_FilterByActorTags
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSoftActorPtr&             Volume                                                 (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     ActorTags                                              (Parm, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::ActorEntersVolume_FilterByActorTags(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FSoftActorPtr& Volume, const struct FGameplayTagContainer& ActorTags, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "ActorEntersVolume_FilterByActorTags");

	Params::TedLatentFunctionLibrary_ActorEntersVolume_FilterByActorTags Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Volume = std::move(Volume);
	Parms.ActorTags = std::move(ActorTags);
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.ActorEntersVolume_FilterByDefinitions
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSoftActorPtr&             Volume                                                 (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<TSoftObjectPtr<class UTedEntityDefinitionAsset>>&Definitions                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::ActorEntersVolume_FilterByDefinitions(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FSoftActorPtr& Volume, const TArray<TSoftObjectPtr<class UTedEntityDefinitionAsset>>& Definitions, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "ActorEntersVolume_FilterByDefinitions");

	Params::TedLatentFunctionLibrary_ActorEntersVolume_FilterByDefinitions Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Volume = std::move(Volume);
	Parms.Definitions = std::move(Definitions);
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.ActorEntersVolume_FilterByPawnFilter
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSoftActorPtr&             Volume                                                 (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedPawnFilter&            InFilter                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::ActorEntersVolume_FilterByPawnFilter(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FSoftActorPtr& Volume, const struct FTedPawnFilter& InFilter, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "ActorEntersVolume_FilterByPawnFilter");

	Params::TedLatentFunctionLibrary_ActorEntersVolume_FilterByPawnFilter Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Volume = std::move(Volume);
	Parms.InFilter = std::move(InFilter);
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.ActorEntersVolume_FilterByPlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSoftActorPtr&             Volume                                                 (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      Player                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::ActorEntersVolume_FilterByPlayer(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FSoftActorPtr& Volume, const ETedPlayerID Player, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "ActorEntersVolume_FilterByPlayer");

	Params::TedLatentFunctionLibrary_ActorEntersVolume_FilterByPlayer Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Volume = std::move(Volume);
	Parms.Player = Player;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.ActorEntersVolume_FilterByPrerequisites
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSoftActorPtr&             Volume                                                 (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedPrerequisiteContainer& Prerequisites                                          (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::ActorEntersVolume_FilterByPrerequisites(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FSoftActorPtr& Volume, const struct FTedPrerequisiteContainer& Prerequisites, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "ActorEntersVolume_FilterByPrerequisites");

	Params::TedLatentFunctionLibrary_ActorEntersVolume_FilterByPrerequisites Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Volume = std::move(Volume);
	Parms.Prerequisites = std::move(Prerequisites);
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.ActorEntersVolume_FilterByTech
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSoftActorPtr&             Volume                                                 (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     TechTags                                               (Parm, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::ActorEntersVolume_FilterByTech(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FSoftActorPtr& Volume, const struct FGameplayTagContainer& TechTags, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "ActorEntersVolume_FilterByTech");

	Params::TedLatentFunctionLibrary_ActorEntersVolume_FilterByTech Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Volume = std::move(Volume);
	Parms.TechTags = std::move(TechTags);
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.ActorExist
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSoftActorPtr&             Actor                                                  (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInverse                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::ActorExist(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FSoftActorPtr& Actor, const bool bInverse, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "ActorExist");

	Params::TedLatentFunctionLibrary_ActorExist Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Actor = std::move(Actor);
	Parms.bInverse = bInverse;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.ActorLeavesVolume_FilterByActorClasses
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSoftActorPtr&             Volume                                                 (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<TSoftClassPtr<class UClass>>&Classes                                                (Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
// const bool                              bExactClasses                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::ActorLeavesVolume_FilterByActorClasses(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FSoftActorPtr& Volume, const TArray<TSoftClassPtr<class UClass>>& Classes, const bool bExactClasses, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "ActorLeavesVolume_FilterByActorClasses");

	Params::TedLatentFunctionLibrary_ActorLeavesVolume_FilterByActorClasses Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Volume = std::move(Volume);
	Parms.Classes = std::move(Classes);
	Parms.bExactClasses = bExactClasses;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.ActorLeavesVolume_FilterByActorTags
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSoftActorPtr&             Volume                                                 (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     ActorTags                                              (Parm, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::ActorLeavesVolume_FilterByActorTags(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FSoftActorPtr& Volume, const struct FGameplayTagContainer& ActorTags, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "ActorLeavesVolume_FilterByActorTags");

	Params::TedLatentFunctionLibrary_ActorLeavesVolume_FilterByActorTags Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Volume = std::move(Volume);
	Parms.ActorTags = std::move(ActorTags);
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.ActorLeavesVolume_FilterByDefinitions
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSoftActorPtr&             Volume                                                 (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<TSoftObjectPtr<class UTedEntityDefinitionAsset>>&Definitions                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::ActorLeavesVolume_FilterByDefinitions(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FSoftActorPtr& Volume, const TArray<TSoftObjectPtr<class UTedEntityDefinitionAsset>>& Definitions, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "ActorLeavesVolume_FilterByDefinitions");

	Params::TedLatentFunctionLibrary_ActorLeavesVolume_FilterByDefinitions Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Volume = std::move(Volume);
	Parms.Definitions = std::move(Definitions);
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.ActorLeavesVolume_FilterByPawnFilter
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSoftActorPtr&             Volume                                                 (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedPawnFilter&            InFilter                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::ActorLeavesVolume_FilterByPawnFilter(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FSoftActorPtr& Volume, const struct FTedPawnFilter& InFilter, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "ActorLeavesVolume_FilterByPawnFilter");

	Params::TedLatentFunctionLibrary_ActorLeavesVolume_FilterByPawnFilter Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Volume = std::move(Volume);
	Parms.InFilter = std::move(InFilter);
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.ActorLeavesVolume_FilterByPlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSoftActorPtr&             Volume                                                 (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      Player                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::ActorLeavesVolume_FilterByPlayer(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FSoftActorPtr& Volume, const ETedPlayerID Player, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "ActorLeavesVolume_FilterByPlayer");

	Params::TedLatentFunctionLibrary_ActorLeavesVolume_FilterByPlayer Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Volume = std::move(Volume);
	Parms.Player = Player;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.ActorLeavesVolume_FilterByPrerequisites
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSoftActorPtr&             Volume                                                 (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedPrerequisiteContainer& Prerequisites                                          (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::ActorLeavesVolume_FilterByPrerequisites(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FSoftActorPtr& Volume, const struct FTedPrerequisiteContainer& Prerequisites, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "ActorLeavesVolume_FilterByPrerequisites");

	Params::TedLatentFunctionLibrary_ActorLeavesVolume_FilterByPrerequisites Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Volume = std::move(Volume);
	Parms.Prerequisites = std::move(Prerequisites);
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.ActorLeavesVolume_FilterByTech
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSoftActorPtr&             Volume                                                 (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     TechTags                                               (Parm, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::ActorLeavesVolume_FilterByTech(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FSoftActorPtr& Volume, const struct FGameplayTagContainer& TechTags, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "ActorLeavesVolume_FilterByTech");

	Params::TedLatentFunctionLibrary_ActorLeavesVolume_FilterByTech Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Volume = std::move(Volume);
	Parms.TechTags = std::move(TechTags);
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.ActorsExist
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSet<struct FSoftActorPtr>&       Actors                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const int32                             ExpectedAmount                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EComparison                       Comparison                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::ActorsExist(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const TSet<struct FSoftActorPtr>& Actors, const int32 ExpectedAmount, const EComparison Comparison, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "ActorsExist");

	Params::TedLatentFunctionLibrary_ActorsExist Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Actors = std::move(Actors);
	Parms.ExpectedAmount = ExpectedAmount;
	Parms.Comparison = Comparison;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.ActorsExistTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     ActorTags                                              (Parm, NativeAccessSpecifierPublic)
// TSubclassOf<class AActor>               ActorClass                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             ExpectedAmount_B                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EComparison                       Comparison                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::ActorsExistTag(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FGameplayTagContainer& ActorTags, TSubclassOf<class AActor> ActorClass, const int32 ExpectedAmount_B, const EComparison Comparison, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "ActorsExistTag");

	Params::TedLatentFunctionLibrary_ActorsExistTag Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.ActorTags = std::move(ActorTags);
	Parms.ActorClass = ActorClass;
	Parms.ExpectedAmount_B = ExpectedAmount_B;
	Parms.Comparison = Comparison;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.AnyActorEntersVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSoftActorPtr&             Volume                                                 (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::AnyActorEntersVolume(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FSoftActorPtr& Volume, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "AnyActorEntersVolume");

	Params::TedLatentFunctionLibrary_AnyActorEntersVolume Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Volume = std::move(Volume);
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.AnyActorLeavesVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSoftActorPtr&             Volume                                                 (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::AnyActorLeavesVolume(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FSoftActorPtr& Volume, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "AnyActorLeavesVolume");

	Params::TedLatentFunctionLibrary_AnyActorLeavesVolume Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Volume = std::move(Volume);
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.DisarmMinesTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     ActorTags                                              (Parm, NativeAccessSpecifierPublic)
// const int32                             ExpectedAmount_B                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::DisarmMinesTag(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FGameplayTagContainer& ActorTags, const int32 ExpectedAmount_B, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "DisarmMinesTag");

	Params::TedLatentFunctionLibrary_DisarmMinesTag Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.ActorTags = std::move(ActorTags);
	Parms.ExpectedAmount_B = ExpectedAmount_B;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.DisarmMinesTagFiltered
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     MineActorTags                                          (ConstParm, Parm, NativeAccessSpecifierPublic)
// const int32                             ExpectedAmount_B                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPawnFilterMode                FilteringMode                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     DisarmingActorTags                                     (ConstParm, Parm, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     DisarmingActorTech                                     (ConstParm, Parm, NativeAccessSpecifierPublic)
// const TSet<ETedPlayerID>&               DisarmingActorOwners                                   (ConstParm, Parm, NativeAccessSpecifierPublic)
// const TArray<TSoftClassPtr<class UClass>>&DisarmingActorClassess                                 (ConstParm, Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
// const bool                              bExactDisarmingActorClass                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::DisarmMinesTagFiltered(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FGameplayTagContainer& MineActorTags, const int32 ExpectedAmount_B, const ETedPawnFilterMode FilteringMode, const struct FGameplayTagContainer& DisarmingActorTags, const struct FGameplayTagContainer& DisarmingActorTech, const TSet<ETedPlayerID>& DisarmingActorOwners, const TArray<TSoftClassPtr<class UClass>>& DisarmingActorClassess, const bool bExactDisarmingActorClass, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "DisarmMinesTagFiltered");

	Params::TedLatentFunctionLibrary_DisarmMinesTagFiltered Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.MineActorTags = std::move(MineActorTags);
	Parms.ExpectedAmount_B = ExpectedAmount_B;
	Parms.FilteringMode = FilteringMode;
	Parms.DisarmingActorTags = std::move(DisarmingActorTags);
	Parms.DisarmingActorTech = std::move(DisarmingActorTech);
	Parms.DisarmingActorOwners = std::move(DisarmingActorOwners);
	Parms.DisarmingActorClassess = std::move(DisarmingActorClassess);
	Parms.bExactDisarmingActorClass = bExactDisarmingActorClass;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.DownloadOnlinePlayerProfile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::DownloadOnlinePlayerProfile(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "DownloadOnlinePlayerProfile");

	Params::TedLatentFunctionLibrary_DownloadOnlinePlayerProfile Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.EndGame_SP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInVictory                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::EndGame_SP(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const bool bInVictory, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "EndGame_SP");

	Params::TedLatentFunctionLibrary_EndGame_SP Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.bInVictory = bInVictory;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.EndGame_SP_Advanced
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInVictory                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInSkipMovie                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInSkipScoreScreen                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInSkipLevelRestart                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::EndGame_SP_Advanced(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const bool bInVictory, const bool bInSkipMovie, const bool bInSkipScoreScreen, const bool bInSkipLevelRestart, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "EndGame_SP_Advanced");

	Params::TedLatentFunctionLibrary_EndGame_SP_Advanced Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.bInVictory = bInVictory;
	Parms.bInSkipMovie = bInSkipMovie;
	Parms.bInSkipScoreScreen = bInSkipScoreScreen;
	Parms.bInSkipLevelRestart = bInSkipLevelRestart;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.FadeCamera
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedMovieFadeType                 FadeType                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Duration                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              Color                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bShouldFadeAudio                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::FadeCamera(const class UObject* InWorldContext, const ETedMovieFadeType FadeType, const float Duration, const struct FLinearColor& Color, const bool bShouldFadeAudio, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "FadeCamera");

	Params::TedLatentFunctionLibrary_FadeCamera Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.FadeType = FadeType;
	Parms.Duration = Duration;
	Parms.Color = std::move(Color);
	Parms.bShouldFadeAudio = bShouldFadeAudio;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.FullScreenMovieEnd
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::FullScreenMovieEnd(const ETedLatentLink LinkAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "FullScreenMovieEnd");

	Params::TedLatentFunctionLibrary_FullScreenMovieEnd Parms{};

	Parms.LinkAction = LinkAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.InterpolateCamera
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   TargetLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InterpTime                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InterpExponent                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             OverrideZoomPct                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             LockTargetLocationTime                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bReturnToStartLocation                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::InterpolateCamera(const class UObject* InWorldContext, const struct FVector& TargetLocation, const float InterpTime, const float InterpExponent, const float OverrideZoomPct, const float LockTargetLocationTime, const bool bReturnToStartLocation, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "InterpolateCamera");

	Params::TedLatentFunctionLibrary_InterpolateCamera Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.InterpTime = InterpTime;
	Parms.InterpExponent = InterpExponent;
	Parms.OverrideZoomPct = OverrideZoomPct;
	Parms.LockTargetLocationTime = LockTargetLocationTime;
	Parms.bReturnToStartLocation = bReturnToStartLocation;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.ObjectiveState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedObjectiveObj*           Objective                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EObjectiveState                   State                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::ObjectiveState(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const class UTedObjectiveObj* Objective, const EObjectiveState State, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "ObjectiveState");

	Params::TedLatentFunctionLibrary_ObjectiveState Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Objective = Objective;
	Parms.State = State;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.OpenMenuScreen
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              Screen                                                 (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UObject*                    InContext                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInstant                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::OpenMenuScreen(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FGameplayTag& Screen, const class UObject* InContext, const bool bInstant, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "OpenMenuScreen");

	Params::TedLatentFunctionLibrary_OpenMenuScreen Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Screen = std::move(Screen);
	Parms.InContext = InContext;
	Parms.bInstant = bInstant;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.PawnDead
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSoftActorPtr&             Pawn                                                   (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInverse                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::PawnDead(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FSoftActorPtr& Pawn, const bool bInverse, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "PawnDead");

	Params::TedLatentFunctionLibrary_PawnDead Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Pawn = std::move(Pawn);
	Parms.bInverse = bInverse;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.PawnsDead
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSet<struct FSoftActorPtr>&       Pawns                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const int32                             ExpectedAmount                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EComparison                       Comparison                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::PawnsDead(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const TSet<struct FSoftActorPtr>& Pawns, const int32 ExpectedAmount, const EComparison Comparison, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "PawnsDead");

	Params::TedLatentFunctionLibrary_PawnsDead Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Pawns = std::move(Pawns);
	Parms.ExpectedAmount = ExpectedAmount;
	Parms.Comparison = Comparison;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.PawnsDeadTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     ActorTags                                              (Parm, NativeAccessSpecifierPublic)
// TSubclassOf<class ATedPawn>             PawnClass                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             ExpectedAmount_B                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EComparison                       Comparison                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::PawnsDeadTag(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FGameplayTagContainer& ActorTags, TSubclassOf<class ATedPawn> PawnClass, const int32 ExpectedAmount_B, const EComparison Comparison, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "PawnsDeadTag");

	Params::TedLatentFunctionLibrary_PawnsDeadTag Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.ActorTags = std::move(ActorTags);
	Parms.PawnClass = PawnClass;
	Parms.ExpectedAmount_B = ExpectedAmount_B;
	Parms.Comparison = Comparison;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.PawnsOwnerTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     ActorTags                                              (Parm, NativeAccessSpecifierPublic)
// TSubclassOf<class ATedPawn>             PawnClass                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      Player                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInverseOwnerCheck                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             ExpectedAmount_B                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EComparison                       Comparison                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::PawnsOwnerTag(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FGameplayTagContainer& ActorTags, TSubclassOf<class ATedPawn> PawnClass, const ETedPlayerID Player, const bool bInverseOwnerCheck, const int32 ExpectedAmount_B, const EComparison Comparison, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "PawnsOwnerTag");

	Params::TedLatentFunctionLibrary_PawnsOwnerTag Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.ActorTags = std::move(ActorTags);
	Parms.PawnClass = PawnClass;
	Parms.Player = Player;
	Parms.bInverseOwnerCheck = bInverseOwnerCheck;
	Parms.ExpectedAmount_B = ExpectedAmount_B;
	Parms.Comparison = Comparison;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.PlayerCredits
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      Player                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             Amount_B                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EComparison                       Comparison                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::PlayerCredits(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const ETedPlayerID Player, const int32 Amount_B, const EComparison Comparison, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "PlayerCredits");

	Params::TedLatentFunctionLibrary_PlayerCredits Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Player = Player;
	Parms.Amount_B = Amount_B;
	Parms.Comparison = Comparison;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.PlayerIntel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      Player                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             Amount_B                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EComparison                       Comparison                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::PlayerIntel(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const ETedPlayerID Player, const int32 Amount_B, const EComparison Comparison, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "PlayerIntel");

	Params::TedLatentFunctionLibrary_PlayerIntel Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Player = Player;
	Parms.Amount_B = Amount_B;
	Parms.Comparison = Comparison;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.PlayerOwns_ByDefinition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      Player                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSoftObjectPtr<class UTedEntityDefinitionAsset>InDefinition                                           (ConstParm, Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             ExpectedAmount                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EComparison                       Comparison                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::PlayerOwns_ByDefinition(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const ETedPlayerID Player, const TSoftObjectPtr<class UTedEntityDefinitionAsset> InDefinition, const int32 ExpectedAmount, const EComparison Comparison, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "PlayerOwns_ByDefinition");

	Params::TedLatentFunctionLibrary_PlayerOwns_ByDefinition Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Player = Player;
	Parms.InDefinition = InDefinition;
	Parms.ExpectedAmount = ExpectedAmount;
	Parms.Comparison = Comparison;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.PlayerOwns_ByTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      Player                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              OwnedTag                                               (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             ExpectedAmount                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EComparison                       Comparison                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::PlayerOwns_ByTag(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const ETedPlayerID Player, const struct FGameplayTag& OwnedTag, const int32 ExpectedAmount, const EComparison Comparison, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "PlayerOwns_ByTag");

	Params::TedLatentFunctionLibrary_PlayerOwns_ByTag Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Player = Player;
	Parms.OwnedTag = std::move(OwnedTag);
	Parms.ExpectedAmount = ExpectedAmount;
	Parms.Comparison = Comparison;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.PlayerOwnsMultiple
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      Player                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FWaitForPlayerOwnsOption>&Owned                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::PlayerOwnsMultiple(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const ETedPlayerID Player, const TArray<struct FWaitForPlayerOwnsOption>& Owned, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "PlayerOwnsMultiple");

	Params::TedLatentFunctionLibrary_PlayerOwnsMultiple Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Player = Player;
	Parms.Owned = std::move(Owned);
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.PlayerOwnTech
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      Player                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              Tech                                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInverse                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::PlayerOwnTech(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const ETedPlayerID Player, const struct FGameplayTag& Tech, const bool bInverse, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "PlayerOwnTech");

	Params::TedLatentFunctionLibrary_PlayerOwnTech Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Player = Player;
	Parms.Tech = std::move(Tech);
	Parms.bInverse = bInverse;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.PlayerOwnTechs
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      Player                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSet<struct FGameplayTag>&        Techs                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const int32                             ExpectedAmount                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EComparison                       Comparison                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::PlayerOwnTechs(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const ETedPlayerID Player, const TSet<struct FGameplayTag>& Techs, const int32 ExpectedAmount, const EComparison Comparison, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "PlayerOwnTechs");

	Params::TedLatentFunctionLibrary_PlayerOwnTechs Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Player = Player;
	Parms.Techs = std::move(Techs);
	Parms.ExpectedAmount = ExpectedAmount;
	Parms.Comparison = Comparison;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.PlayerPower
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      Player                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             Amount_B                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EComparison                       Comparison                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::PlayerPower(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const ETedPlayerID Player, const int32 Amount_B, const EComparison Comparison, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "PlayerPower");

	Params::TedLatentFunctionLibrary_PlayerPower Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Player = Player;
	Parms.Amount_B = Amount_B;
	Parms.Comparison = Comparison;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.PlayerPowerConsumption
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      Player                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             Amount_B                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EComparison                       Comparison                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::PlayerPowerConsumption(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const ETedPlayerID Player, const int32 Amount_B, const EComparison Comparison, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "PlayerPowerConsumption");

	Params::TedLatentFunctionLibrary_PlayerPowerConsumption Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Player = Player;
	Parms.Amount_B = Amount_B;
	Parms.Comparison = Comparison;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.PlayMovie
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)
// const ETedMovieType                     MovieType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UFileMediaSource*           Movie                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bSilent                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             FadeIn                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             FadeOut                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bLoop                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedMovieGamePauseInteraction     InPauseInteraction                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::PlayMovie(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo, const ETedMovieType MovieType, const class UFileMediaSource* Movie, const bool bSilent, const float FadeIn, const float FadeOut, const bool bLoop, const ETedMovieGamePauseInteraction InPauseInteraction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "PlayMovie");

	Params::TedLatentFunctionLibrary_PlayMovie Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);
	Parms.MovieType = MovieType;
	Parms.Movie = Movie;
	Parms.bSilent = bSilent;
	Parms.FadeIn = FadeIn;
	Parms.FadeOut = FadeOut;
	Parms.bLoop = bLoop;
	Parms.InPauseInteraction = InPauseInteraction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.PlayMovie_MissionDialogue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)
// const class UFileMediaSource*           Movie                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::PlayMovie_MissionDialogue(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo, const class UFileMediaSource* Movie)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "PlayMovie_MissionDialogue");

	Params::TedLatentFunctionLibrary_PlayMovie_MissionDialogue Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);
	Parms.Movie = Movie;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.ResourceFieldDepleted
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSoftActorPtr&             ResourceVolume                                         (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInverse                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::ResourceFieldDepleted(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FSoftActorPtr& ResourceVolume, const bool bInverse, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "ResourceFieldDepleted");

	Params::TedLatentFunctionLibrary_ResourceFieldDepleted Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.ResourceVolume = std::move(ResourceVolume);
	Parms.bInverse = bInverse;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.ResourceFieldsDepleted
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSet<struct FSoftActorPtr>&       ResourceFields                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const int32                             ExpectedAmount                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EComparison                       Comparison                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::ResourceFieldsDepleted(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const TSet<struct FSoftActorPtr>& ResourceFields, const int32 ExpectedAmount, const EComparison Comparison, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "ResourceFieldsDepleted");

	Params::TedLatentFunctionLibrary_ResourceFieldsDepleted Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.ResourceFields = std::move(ResourceFields);
	Parms.ExpectedAmount = ExpectedAmount;
	Parms.Comparison = Comparison;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.StructureOwner
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSoftActorPtr&             Structure                                              (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      ExpectedPlayer                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInverse                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::StructureOwner(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FSoftActorPtr& Structure, const ETedPlayerID ExpectedPlayer, const bool bInverse, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "StructureOwner");

	Params::TedLatentFunctionLibrary_StructureOwner Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Structure = std::move(Structure);
	Parms.ExpectedPlayer = ExpectedPlayer;
	Parms.bInverse = bInverse;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.StructuresOwner
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSet<struct FSoftActorPtr>&       Structures                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const ETedPlayerID                      ExpectedPlayer                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             ExpectedAmount                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EComparison                       Comparison                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::StructuresOwner(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const TSet<struct FSoftActorPtr>& Structures, const ETedPlayerID ExpectedPlayer, const int32 ExpectedAmount, const EComparison Comparison, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "StructuresOwner");

	Params::TedLatentFunctionLibrary_StructuresOwner Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Structures = std::move(Structures);
	Parms.ExpectedPlayer = ExpectedPlayer;
	Parms.ExpectedAmount = ExpectedAmount;
	Parms.Comparison = Comparison;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.WaitForAIMissionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAIMission*                       Mission                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAIMissionState                         MissionState                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::WaitForAIMissionState(const class UObject* WorldContextObject, const ETedLatentLink LinkAction, class UAIMission* Mission, EAIMissionState MissionState, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "WaitForAIMissionState");

	Params::TedLatentFunctionLibrary_WaitForAIMissionState Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LinkAction = LinkAction;
	Parms.Mission = Mission;
	Parms.MissionState = MissionState;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.WaitForCommandUsage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              Command                                                (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedObjectiveCommandTracking      Track                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      CommandPlayer                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     CommandActors                                          (ConstParm, Parm, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     TargetActors                                           (ConstParm, Parm, NativeAccessSpecifierPublic)
// const float                             TargetDistanceTolerance                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             ExpectedAmount                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::WaitForCommandUsage(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FGameplayTag& Command, const ETedObjectiveCommandTracking Track, const ETedPlayerID CommandPlayer, const struct FGameplayTagContainer& CommandActors, const struct FGameplayTagContainer& TargetActors, const float TargetDistanceTolerance, const int32 ExpectedAmount, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "WaitForCommandUsage");

	Params::TedLatentFunctionLibrary_WaitForCommandUsage Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.Command = std::move(Command);
	Parms.Track = Track;
	Parms.CommandPlayer = CommandPlayer;
	Parms.CommandActors = std::move(CommandActors);
	Parms.TargetActors = std::move(TargetActors);
	Parms.TargetDistanceTolerance = TargetDistanceTolerance;
	Parms.ExpectedAmount = ExpectedAmount;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLatentFunctionLibrary.WaitForMovieEnd
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedLatentLink                    LinkAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (Parm, NativeAccessSpecifierPublic)
// const ETedMovieType                     MovieType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLatentFunctionLibrary::WaitForMovieEnd(const class UObject* InWorldContext, const ETedLatentLink LinkAction, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo, const ETedMovieType MovieType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLatentFunctionLibrary", "WaitForMovieEnd");

	Params::TedLatentFunctionLibrary_WaitForMovieEnd Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LinkAction = LinkAction;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);
	Parms.MovieType = MovieType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLeaderboardPlayersPanel.GetContent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedLeaderboardDataPanel         ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTedLeaderboardDataPanel UTedLeaderboardPlayersPanel::GetContent(const int32 InSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLeaderboardPlayersPanel", "GetContent");

	Params::TedLeaderboardPlayersPanel_GetContent Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLeaderboardPlayersPanel.OnActivateHeaderSlotState
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLeaderboardPlayersPanel::OnActivateHeaderSlotState(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLeaderboardPlayersPanel", "OnActivateHeaderSlotState");

	Params::TedLeaderboardPlayersPanel_OnActivateHeaderSlotState Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLeaderboardPlayersPanel.SetAscendingSorting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bInAscending                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLeaderboardPlayersPanel::SetAscendingSorting(const bool bInAscending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLeaderboardPlayersPanel", "SetAscendingSorting");

	Params::TedLeaderboardPlayersPanel_SetAscendingSorting Parms{};

	Parms.bInAscending = bInAscending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLeaderboardPlayersPanel.SetFilterString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InFilter                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLeaderboardPlayersPanel::SetFilterString(const class FString& InFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLeaderboardPlayersPanel", "SetFilterString");

	Params::TedLeaderboardPlayersPanel_SetFilterString Parms{};

	Parms.InFilter = std::move(InFilter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLeaderboardPlayersPanel.SetSingleRowData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bInSingleRowData                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLeaderboardPlayersPanel::SetSingleRowData(const bool bInSingleRowData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLeaderboardPlayersPanel", "SetSingleRowData");

	Params::TedLeaderboardPlayersPanel_SetSingleRowData Parms{};

	Parms.bInSingleRowData = bInSingleRowData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLeaderboardPlayersPanel.SetSortingMethod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       InSortingMethod                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLeaderboardPlayersPanel::SetSortingMethod(const class FName InSortingMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLeaderboardPlayersPanel", "SetSortingMethod");

	Params::TedLeaderboardPlayersPanel_SetSortingMethod Parms{};

	Parms.InSortingMethod = InSortingMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLeaderboardPlayersPanel.GetHeadersPanel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedLeaderboardHeadersPanel*      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedLeaderboardHeadersPanel* UTedLeaderboardPlayersPanel::GetHeadersPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLeaderboardPlayersPanel", "GetHeadersPanel");

	Params::TedLeaderboardPlayersPanel_GetHeadersPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLeaderboardPlayersPanel_V2.InitializeLeaderboards
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FTedLeaderboardsRetrieveFilter&InFilter                                               (ConstParm, Parm, NativeAccessSpecifierPublic)
// const bool                              bForceRefresh                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLeaderboardPlayersPanel_V2::InitializeLeaderboards(const struct FTedLeaderboardsRetrieveFilter& InFilter, const bool bForceRefresh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLeaderboardPlayersPanel_V2", "InitializeLeaderboards");

	Params::TedLeaderboardPlayersPanel_V2_InitializeLeaderboards Parms{};

	Parms.InFilter = std::move(InFilter);
	Parms.bForceRefresh = bForceRefresh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLeaderboardPlayersPanel_V2.Sort
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              SortType                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bAscending                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLeaderboardPlayersPanel_V2::Sort(const struct FGameplayTag& SortType, const bool bAscending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLeaderboardPlayersPanel_V2", "Sort");

	Params::TedLeaderboardPlayersPanel_V2_Sort Parms{};

	Parms.SortType = std::move(SortType);
	Parms.bAscending = bAscending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLeaderboardPlayersSlot.K2_DescribeAvatar
// (Event, Public, BlueprintEvent)
// Parameters:
// const class UTexture2D*                 AvatarTexture                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLeaderboardPlayersSlot::K2_DescribeAvatar(const class UTexture2D* AvatarTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLeaderboardPlayersSlot", "K2_DescribeAvatar");

	Params::TedLeaderboardPlayersSlot_K2_DescribeAvatar Parms{};

	Parms.AvatarTexture = AvatarTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedLeaderboardPlayersSlot.K2_DescribeFaction
// (Event, Public, BlueprintEvent)
// Parameters:
// const ETedRankedFaction                 Faction                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLeaderboardPlayersSlot::K2_DescribeFaction(const ETedRankedFaction Faction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLeaderboardPlayersSlot", "K2_DescribeFaction");

	Params::TedLeaderboardPlayersSlot_K2_DescribeFaction Parms{};

	Parms.Faction = Faction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedLeaderboardPlayersSlot.K2_DescribeMedal
// (Event, Public, BlueprintEvent)
// Parameters:
// const struct FTedMedalTableRow_Ranked&  Medal                                                  (ConstParm, Parm, NativeAccessSpecifierPublic)
// const bool                              bFoundMedal                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLeaderboardPlayersSlot::K2_DescribeMedal(const struct FTedMedalTableRow_Ranked& Medal, const bool bFoundMedal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLeaderboardPlayersSlot", "K2_DescribeMedal");

	Params::TedLeaderboardPlayersSlot_K2_DescribeMedal Parms{};

	Parms.Medal = std::move(Medal);
	Parms.bFoundMedal = bFoundMedal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedLeaderboardPlayersSlot.K2_DescribePlayerName
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      PlayerName                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedLeaderboardPlayersSlot::K2_DescribePlayerName(const class FText& PlayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLeaderboardPlayersSlot", "K2_DescribePlayerName");

	Params::TedLeaderboardPlayersSlot_K2_DescribePlayerName Parms{};

	Parms.PlayerName = std::move(PlayerName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedLeaderboardPlayersSlot.K2_DescribePosition
// (Event, Public, BlueprintEvent)
// Parameters:
// const int32                             position                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLeaderboardPlayersSlot::K2_DescribePosition(const int32 position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLeaderboardPlayersSlot", "K2_DescribePosition");

	Params::TedLeaderboardPlayersSlot_K2_DescribePosition Parms{};

	Parms.position = position;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedLeaderboardPlayersSlot.K2_DescribeRating
// (Event, Public, BlueprintEvent)
// Parameters:
// const int32                             Rating                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLeaderboardPlayersSlot::K2_DescribeRating(const int32 Rating)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLeaderboardPlayersSlot", "K2_DescribeRating");

	Params::TedLeaderboardPlayersSlot_K2_DescribeRating Parms{};

	Parms.Rating = Rating;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedLeaderboardPlayersSlot.K2_DescribeWins
// (Event, Public, BlueprintEvent)
// Parameters:
// const int32                             Wins                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLeaderboardPlayersSlot::K2_DescribeWins(const int32 Wins)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLeaderboardPlayersSlot", "K2_DescribeWins");

	Params::TedLeaderboardPlayersSlot_K2_DescribeWins Parms{};

	Parms.Wins = Wins;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedLevelSequenceDirector.GetAvailableMarkedFrames
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UTedLevelSequenceDirector::GetAvailableMarkedFrames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLevelSequenceDirector", "GetAvailableMarkedFrames");

	Params::TedLevelSequenceDirector_GetAvailableMarkedFrames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLevelSequenceDirector.OnSequenceStoppedDuringTransitionMovie
// (Final, Native, Protected)

void UTedLevelSequenceDirector::OnSequenceStoppedDuringTransitionMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLevelSequenceDirector", "OnSequenceStoppedDuringTransitionMovie");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLevelSequenceDirector.PlayFramedMovie
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Frame                                                  (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UFileMediaSource*           Movie                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bLoop                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UFileMediaSource*           FrameIntroOverride                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLevelSequenceDirector::PlayFramedMovie(const struct FGameplayTag& Frame, const class UFileMediaSource* Movie, const bool bLoop, const class UFileMediaSource* FrameIntroOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLevelSequenceDirector", "PlayFramedMovie");

	Params::TedLevelSequenceDirector_PlayFramedMovie Parms{};

	Parms.Frame = std::move(Frame);
	Parms.Movie = Movie;
	Parms.bLoop = bLoop;
	Parms.FrameIntroOverride = FrameIntroOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLevelSequenceDirector.PlayTransitionMovie
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UFileMediaSource*           Movie                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLevelSequenceDirector::PlayTransitionMovie(const class UFileMediaSource* Movie)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLevelSequenceDirector", "PlayTransitionMovie");

	Params::TedLevelSequenceDirector_PlayTransitionMovie Parms{};

	Parms.Movie = Movie;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLevelSequenceDirector.QuickSkip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    MarkedFrame                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bDoSkip                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLevelSequenceDirector::QuickSkip(const class FString& MarkedFrame, const bool bDoSkip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLevelSequenceDirector", "QuickSkip");

	Params::TedLevelSequenceDirector_QuickSkip Parms{};

	Parms.MarkedFrame = std::move(MarkedFrame);
	Parms.bDoSkip = bDoSkip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLevelSequenceDirector.StopFramedMovie
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Frame                                                  (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLevelSequenceDirector::StopFramedMovie(const struct FGameplayTag& Frame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLevelSequenceDirector", "StopFramedMovie");

	Params::TedLevelSequenceDirector_StopFramedMovie Parms{};

	Parms.Frame = std::move(Frame);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLevelSequenceDirector.AutoFocusCamera
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const TSoftObjectPtr<class ACameraActor>CameraActor                                            (ConstParm, Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSoftObjectPtr<class AActor>      ActorToFocus                                           (ConstParm, Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName                       JointName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             FocusOffset                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLevelSequenceDirector::AutoFocusCamera(const TSoftObjectPtr<class ACameraActor> CameraActor, const TSoftObjectPtr<class AActor> ActorToFocus, const class FName JointName, const float FocusOffset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLevelSequenceDirector", "AutoFocusCamera");

	Params::TedLevelSequenceDirector_AutoFocusCamera Parms{};

	Parms.CameraActor = CameraActor;
	Parms.ActorToFocus = ActorToFocus;
	Parms.JointName = JointName;
	Parms.FocusOffset = FocusOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconClient.ClientLeaveLobby
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// const EClientLeaveLobbyReason           InReason                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedLobbyBeaconClient::ClientLeaveLobby(const EClientLeaveLobbyReason InReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconClient", "ClientLeaveLobby");

	Params::TedLobbyBeaconClient_ClientLeaveLobby Parms{};

	Parms.InReason = InReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconClient.ClientStartGameFailed
// (Net, NetReliable, Native, Event, Protected, NetClient)

void ATedLobbyBeaconClient::ClientStartGameFailed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconClient", "ClientStartGameFailed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconClient.DebugUpdateHydraSession
// (Net, Native, Event, Public, NetServer)
// Parameters:
// const class FString&                    InMode                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedLobbyBeaconClient::DebugUpdateHydraSession(const class FString& InMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconClient", "DebugUpdateHydraSession");

	Params::TedLobbyBeaconClient_DebugUpdateHydraSession Parms{};

	Parms.InMode = std::move(InMode);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconClient.NotifyClientKicked
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// const class FString&                    SessionId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bKickAll                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedLobbyBeaconClient::NotifyClientKicked(const class FString& SessionId, bool bKickAll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconClient", "NotifyClientKicked");

	Params::TedLobbyBeaconClient_NotifyClientKicked Parms{};

	Parms.SessionId = std::move(SessionId);
	Parms.bKickAll = bKickAll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconClient.OnRep_AdminFromPlayerState
// (Final, Native, Protected)

void ATedLobbyBeaconClient::OnRep_AdminFromPlayerState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconClient", "OnRep_AdminFromPlayerState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconClient.RejectConnection
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// const ETedConnectionRejectReason        InDisconnectType                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedLobbyBeaconClient::RejectConnection(const ETedConnectionRejectReason InDisconnectType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconClient", "RejectConnection");

	Params::TedLobbyBeaconClient_RejectConnection Parms{};

	Parms.InDisconnectType = InDisconnectType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconClient.ServerAddBot
// (Net, NetReliable, Native, Event, Public, NetServer)

void ATedLobbyBeaconClient::ServerAddBot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconClient", "ServerAddBot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconClient.ServerChangeLobbyMap
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// const class UTedMapInfo*                InMap                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedLobbyBeaconClient::ServerChangeLobbyMap(const class UTedMapInfo* InMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconClient", "ServerChangeLobbyMap");

	Params::TedLobbyBeaconClient_ServerChangeLobbyMap Parms{};

	Parms.InMap = InMap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconClient.ServerChangeMemberSetting_FString
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// class ALobbyBeaconPlayerState*          InMember                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedSessionMemberSettingKey       InKey                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InValue                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedLobbyBeaconClient::ServerChangeMemberSetting_FString(class ALobbyBeaconPlayerState* InMember, const ETedSessionMemberSettingKey InKey, const class FString& InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconClient", "ServerChangeMemberSetting_FString");

	Params::TedLobbyBeaconClient_ServerChangeMemberSetting_FString Parms{};

	Parms.InMember = InMember;
	Parms.InKey = InKey;
	Parms.InValue = std::move(InValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconClient.ServerChangeMemberSetting_Int32
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// class ALobbyBeaconPlayerState*          InMember                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedSessionMemberSettingKey       InKey                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedLobbyBeaconClient::ServerChangeMemberSetting_Int32(class ALobbyBeaconPlayerState* InMember, const ETedSessionMemberSettingKey InKey, const int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconClient", "ServerChangeMemberSetting_Int32");

	Params::TedLobbyBeaconClient_ServerChangeMemberSetting_Int32 Parms{};

	Parms.InMember = InMember;
	Parms.InKey = InKey;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconClient.ServerChangePassword
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const class FString&                    InLobbyPassword                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedLobbyBeaconClient::ServerChangePassword(const class FString& InLobbyPassword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconClient", "ServerChangePassword");

	Params::TedLobbyBeaconClient_ServerChangePassword Parms{};

	Parms.InLobbyPassword = std::move(InLobbyPassword);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconClient.ServerChangeSessionSetting_Int32
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// const ETedSessionSettingKey             InKey                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedLobbyBeaconClient::ServerChangeSessionSetting_Int32(const ETedSessionSettingKey InKey, const int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconClient", "ServerChangeSessionSetting_Int32");

	Params::TedLobbyBeaconClient_ServerChangeSessionSetting_Int32 Parms{};

	Parms.InKey = InKey;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconClient.ServerChangeSessionSetting_String
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// const ETedSessionSettingKey             InKey                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InValue                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedLobbyBeaconClient::ServerChangeSessionSetting_String(const ETedSessionSettingKey InKey, const class FString& InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconClient", "ServerChangeSessionSetting_String");

	Params::TedLobbyBeaconClient_ServerChangeSessionSetting_String Parms{};

	Parms.InKey = InKey;
	Parms.InValue = std::move(InValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconClient.ServerDevPrintSessionState
// (Net, Native, Event, Public, NetServer, BlueprintCallable)

void ATedLobbyBeaconClient::ServerDevPrintSessionState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconClient", "ServerDevPrintSessionState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconClient.ServerKickClient
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const struct FUniqueNetIdRepl&          PlayerToKick                                           (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedLobbyBeaconClient::ServerKickClient(const struct FUniqueNetIdRepl& PlayerToKick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconClient", "ServerKickClient");

	Params::TedLobbyBeaconClient_ServerKickClient Parms{};

	Parms.PlayerToKick = std::move(PlayerToKick);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconClient.ServerRemoveBot
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const struct FUniqueNetIdRepl&          InBotID                                                (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedLobbyBeaconClient::ServerRemoveBot(const struct FUniqueNetIdRepl& InBotID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconClient", "ServerRemoveBot");

	Params::TedLobbyBeaconClient_ServerRemoveBot Parms{};

	Parms.InBotID = std::move(InBotID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconClient.ServerStartGame
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)

void ATedLobbyBeaconClient::ServerStartGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconClient", "ServerStartGame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconClient.ServerUpdateMemberDataInSessionAndLobby
// (Net, NetReliable, Native, Event, Public, NetServer)

void ATedLobbyBeaconClient::ServerUpdateMemberDataInSessionAndLobby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconClient", "ServerUpdateMemberDataInSessionAndLobby");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconClient.GetUniqueNetId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUniqueNetIdRepl ATedLobbyBeaconClient::GetUniqueNetId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconClient", "GetUniqueNetId");

	Params::TedLobbyBeaconClient_GetUniqueNetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyBeaconClient.IsAdmin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedLobbyBeaconClient::IsAdmin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconClient", "IsAdmin");

	Params::TedLobbyBeaconClient_IsAdmin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyBeaconClient.MatchesNetID
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FUniqueNetIdRepl&          NetId                                                  (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedLobbyBeaconClient::MatchesNetID(const struct FUniqueNetIdRepl& NetId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconClient", "MatchesNetID");

	Params::TedLobbyBeaconClient_MatchesNetID Parms{};

	Parms.NetId = std::move(NetId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyBeaconClient.ServerDebugSetNetSim
// (Net, Native, Event, Public, NetServer, Const)
// Parameters:
// const TArray<class FString>&            InArgs                                                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UWorld*                           InWorld                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedLobbyBeaconClient::ServerDebugSetNetSim(const TArray<class FString>& InArgs, class UWorld* InWorld) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconClient", "ServerDebugSetNetSim");

	Params::TedLobbyBeaconClient_ServerDebugSetNetSim Parms{};

	Parms.InArgs = std::move(InArgs);
	Parms.InWorld = InWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconHost.ServerKickClient
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const struct FUniqueNetIdRepl&          PlayerToKick                                           (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bKickAll                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedLobbyBeaconHost::ServerKickClient(const struct FUniqueNetIdRepl& PlayerToKick, bool bKickAll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconHost", "ServerKickClient");

	Params::TedLobbyBeaconHost_ServerKickClient Parms{};

	Parms.PlayerToKick = std::move(PlayerToKick);
	Parms.bKickAll = bKickAll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconState.OnRep_MemberData
// (Final, Native, Protected)

void ATedLobbyBeaconState::OnRep_MemberData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconState", "OnRep_MemberData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconState.OnRep_MemberSettings
// (Final, Native, Protected)

void ATedLobbyBeaconState::OnRep_MemberSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconState", "OnRep_MemberSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconState.OnRep_SelectedMapInfo
// (Final, Native, Protected)

void ATedLobbyBeaconState::OnRep_SelectedMapInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconState", "OnRep_SelectedMapInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconState.OnRep_SessionSettings
// (Final, Native, Protected)

void ATedLobbyBeaconState::OnRep_SessionSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconState", "OnRep_SessionSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyBeaconState.GetPlayersCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ATedLobbyBeaconState::GetPlayersCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyBeaconState", "GetPlayersCount");

	Params::TedLobbyBeaconState_GetPlayersCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyConfigurationPopup.OnChangePasswordCheckboxChanged
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLobbyConfigurationPopup::OnChangePasswordCheckboxChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "OnChangePasswordCheckboxChanged");

	Params::TedLobbyConfigurationPopup_OnChangePasswordCheckboxChanged Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyConfigurationPopup.OnLobbyNameChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const class FText&                      InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedLobbyConfigurationPopup::OnLobbyNameChanged(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "OnLobbyNameChanged");

	Params::TedLobbyConfigurationPopup_OnLobbyNameChanged Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyConfigurationPopup.OnLobbyNameCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const class FText&                      InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLobbyConfigurationPopup::OnLobbyNameCommitted(const class FText& InText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "OnLobbyNameCommitted");

	Params::TedLobbyConfigurationPopup_OnLobbyNameCommitted Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyConfigurationPopup.OnLobbyPasswordChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const class FText&                      InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedLobbyConfigurationPopup::OnLobbyPasswordChanged(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "OnLobbyPasswordChanged");

	Params::TedLobbyConfigurationPopup_OnLobbyPasswordChanged Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyConfigurationPopup.OnLobbyPasswordCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const class FText&                      InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLobbyConfigurationPopup::OnLobbyPasswordCommitted(const class FText& InText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "OnLobbyPasswordCommitted");

	Params::TedLobbyConfigurationPopup_OnLobbyPasswordCommitted Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyConfigurationPopup.OnShowPasswordButtonPressed
// (Final, Native, Protected)

void UTedLobbyConfigurationPopup::OnShowPasswordButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "OnShowPasswordButtonPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyConfigurationPopup.OnShowPasswordButtonReleased
// (Final, Native, Protected)

void UTedLobbyConfigurationPopup::OnShowPasswordButtonReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "OnShowPasswordButtonReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyConfigurationPopup.OnTriggerLobbyTypeSlotAction
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLobbyConfigurationPopup::OnTriggerLobbyTypeSlotAction(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "OnTriggerLobbyTypeSlotAction");

	Params::TedLobbyConfigurationPopup_OnTriggerLobbyTypeSlotAction Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyConfigurationPopup.OnTriggerPasswordModeSlotAction
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLobbyConfigurationPopup::OnTriggerPasswordModeSlotAction(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "OnTriggerPasswordModeSlotAction");

	Params::TedLobbyConfigurationPopup_OnTriggerPasswordModeSlotAction Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyConfigurationPopup.SetAffectPassword
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const bool                              bInAffectPassword                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedLobbyConfigurationPopup::SetAffectPassword(const bool bInAffectPassword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "SetAffectPassword");

	Params::TedLobbyConfigurationPopup_SetAffectPassword Parms{};

	Parms.bInAffectPassword = bInAffectPassword;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyConfigurationPopup.SetLobbyName
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const class FString&                    InName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedLobbyConfigurationPopup::SetLobbyName(const class FString& InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "SetLobbyName");

	Params::TedLobbyConfigurationPopup_SetLobbyName Parms{};

	Parms.InName = std::move(InName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyConfigurationPopup.SetLobbyType
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const ETedServerType                    InType                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedLobbyConfigurationPopup::SetLobbyType(const ETedServerType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "SetLobbyType");

	Params::TedLobbyConfigurationPopup_SetLobbyType Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyConfigurationPopup.SetPassword
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const class FString&                    InPassword                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedLobbyConfigurationPopup::SetPassword(const class FString& InPassword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "SetPassword");

	Params::TedLobbyConfigurationPopup_SetPassword Parms{};

	Parms.InPassword = std::move(InPassword);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyConfigurationPopup.SetPasswordMode
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const ETedLobbyPasswordMode             InMode                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedLobbyConfigurationPopup::SetPasswordMode(const ETedLobbyPasswordMode InMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "SetPasswordMode");

	Params::TedLobbyConfigurationPopup_SetPasswordMode Parms{};

	Parms.InMode = InMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyConfigurationPopup.SetShowPassword
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const bool                              bInShow                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLobbyConfigurationPopup::SetShowPassword(const bool bInShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "SetShowPassword");

	Params::TedLobbyConfigurationPopup_SetShowPassword Parms{};

	Parms.bInShow = bInShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyConfigurationPopup.CanConfirm
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedLobbyConfigurationPopup::CanConfirm() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "CanConfirm");

	Params::TedLobbyConfigurationPopup_CanConfirm Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyConfigurationPopup.DoesAffectPassword
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedLobbyConfigurationPopup::DoesAffectPassword() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "DoesAffectPassword");

	Params::TedLobbyConfigurationPopup_DoesAffectPassword Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyConfigurationPopup.GetAffectPasswordMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedLobbyAffectPasswordMode             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedLobbyAffectPasswordMode UTedLobbyConfigurationPopup::GetAffectPasswordMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "GetAffectPasswordMode");

	Params::TedLobbyConfigurationPopup_GetAffectPasswordMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyConfigurationPopup.GetConfiguration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FTedLobbyConfiguration     ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FTedLobbyConfiguration UTedLobbyConfigurationPopup::GetConfiguration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "GetConfiguration");

	Params::TedLobbyConfigurationPopup_GetConfiguration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyConfigurationPopup.GetLobbyName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTedLobbyConfigurationPopup::GetLobbyName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "GetLobbyName");

	Params::TedLobbyConfigurationPopup_GetLobbyName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyConfigurationPopup.GetLobbyNameText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedLobbyConfigurationPopup::GetLobbyNameText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "GetLobbyNameText");

	Params::TedLobbyConfigurationPopup_GetLobbyNameText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyConfigurationPopup.GetLobbyType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedServerType                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedServerType UTedLobbyConfigurationPopup::GetLobbyType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "GetLobbyType");

	Params::TedLobbyConfigurationPopup_GetLobbyType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyConfigurationPopup.GetLobbyTypeSlotIndex
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const ETedServerType                    InType                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedLobbyConfigurationPopup::GetLobbyTypeSlotIndex(const ETedServerType InType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "GetLobbyTypeSlotIndex");

	Params::TedLobbyConfigurationPopup_GetLobbyTypeSlotIndex Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyConfigurationPopup.GetPassword
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTedLobbyConfigurationPopup::GetPassword() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "GetPassword");

	Params::TedLobbyConfigurationPopup_GetPassword Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyConfigurationPopup.GetPasswordMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedLobbyPasswordMode                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedLobbyPasswordMode UTedLobbyConfigurationPopup::GetPasswordMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "GetPasswordMode");

	Params::TedLobbyConfigurationPopup_GetPasswordMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyConfigurationPopup.GetPasswordModeSlotIndex
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const ETedLobbyPasswordMode             InMode                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedLobbyConfigurationPopup::GetPasswordModeSlotIndex(const ETedLobbyPasswordMode InMode) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "GetPasswordModeSlotIndex");

	Params::TedLobbyConfigurationPopup_GetPasswordModeSlotIndex Parms{};

	Parms.InMode = InMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyConfigurationPopup.GetPasswordText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedLobbyConfigurationPopup::GetPasswordText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "GetPasswordText");

	Params::TedLobbyConfigurationPopup_GetPasswordText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyConfigurationPopup.IsLobbyTypeReadOnly
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedLobbyConfigurationPopup::IsLobbyTypeReadOnly() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "IsLobbyTypeReadOnly");

	Params::TedLobbyConfigurationPopup_IsLobbyTypeReadOnly Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyConfigurationPopup.IsPasswordRequired
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedLobbyConfigurationPopup::IsPasswordRequired() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "IsPasswordRequired");

	Params::TedLobbyConfigurationPopup_IsPasswordRequired Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyConfigurationPopup.ShouldShowAffectPassword
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedLobbyConfigurationPopup::ShouldShowAffectPassword() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyConfigurationPopup", "ShouldShowAffectPassword");

	Params::TedLobbyConfigurationPopup_ShouldShowAffectPassword Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyContentPanel.K2_OnDisplayedLobbyStateChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ATedLobbyBeaconState*             InOld                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedLobbyBeaconState*             InNew                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLobbyContentPanel::K2_OnDisplayedLobbyStateChange(class ATedLobbyBeaconState* InOld, class ATedLobbyBeaconState* InNew)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyContentPanel", "K2_OnDisplayedLobbyStateChange");

	Params::TedLobbyContentPanel_K2_OnDisplayedLobbyStateChange Parms{};

	Parms.InOld = InOld;
	Parms.InNew = InNew;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedLobbyContentPanel.K2_OnViewingClientChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ATedLobbyBeaconClient*            InOld                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedLobbyBeaconClient*            InNew                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLobbyContentPanel::K2_OnViewingClientChange(class ATedLobbyBeaconClient* InOld, class ATedLobbyBeaconClient* InNew)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyContentPanel", "K2_OnViewingClientChange");

	Params::TedLobbyContentPanel_K2_OnViewingClientChange Parms{};

	Parms.InOld = InOld;
	Parms.InNew = InNew;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedLobbyContentPanel.SetDisplayedLobbyState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ATedLobbyBeaconState*             InLobbyState                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLobbyContentPanel::SetDisplayedLobbyState(class ATedLobbyBeaconState* InLobbyState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyContentPanel", "SetDisplayedLobbyState");

	Params::TedLobbyContentPanel_SetDisplayedLobbyState Parms{};

	Parms.InLobbyState = InLobbyState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyContentPanel.SetViewingClient
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ATedLobbyBeaconClient*            InClient                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedLobbyContentPanel::SetViewingClient(class ATedLobbyBeaconClient* InClient)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyContentPanel", "SetViewingClient");

	Params::TedLobbyContentPanel_SetViewingClient Parms{};

	Parms.InClient = InClient;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedLobbyContentPanel.GetViewingClient
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedLobbyBeaconClient*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedLobbyBeaconClient* UTedLobbyContentPanel::GetViewingClient() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedLobbyContentPanel", "GetViewingClient");

	Params::TedLobbyContentPanel_GetViewingClient Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyTypeFunctions.GetContentID_LobbyType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const ETedServerType                    InType                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UTedLobbyTypeFunctions::GetContentID_LobbyType(const ETedServerType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLobbyTypeFunctions", "GetContentID_LobbyType");

	Params::TedLobbyTypeFunctions_GetContentID_LobbyType Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyTypeFunctions.GetContentID_PasswordMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const ETedLobbyPasswordMode             InMode                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UTedLobbyTypeFunctions::GetContentID_PasswordMode(const ETedLobbyPasswordMode InMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLobbyTypeFunctions", "GetContentID_PasswordMode");

	Params::TedLobbyTypeFunctions_GetContentID_PasswordMode Parms{};

	Parms.InMode = InMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyTypeFunctions.GetLobbyTypeFromContentID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      InID                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedServerType                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedServerType UTedLobbyTypeFunctions::GetLobbyTypeFromContentID(const class FName& InID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLobbyTypeFunctions", "GetLobbyTypeFromContentID");

	Params::TedLobbyTypeFunctions_GetLobbyTypeFromContentID Parms{};

	Parms.InID = InID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedLobbyTypeFunctions.GetPasswordModeFromContentID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      InID                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedLobbyPasswordMode                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedLobbyPasswordMode UTedLobbyTypeFunctions::GetPasswordModeFromContentID(const class FName& InID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedLobbyTypeFunctions", "GetPasswordModeFromContentID");

	Params::TedLobbyTypeFunctions_GetPasswordModeFromContentID Parms{};

	Parms.InID = InID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMainMenuScreenProfileButton.GetPlayerProfileAvatarImage
// (Event, Public, BlueprintEvent)
// Parameters:
// class UImage*                           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UImage* UTedMainMenuScreenProfileButton::GetPlayerProfileAvatarImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMainMenuScreenProfileButton", "GetPlayerProfileAvatarImage");

	Params::TedMainMenuScreenProfileButton_GetPlayerProfileAvatarImage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Tempest.TedMainMenuScreenProfileButton.OnProfileButtonClicked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTedUserWidget*                   InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMainMenuScreenProfileButton::OnProfileButtonClicked(class UTedUserWidget* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMainMenuScreenProfileButton", "OnProfileButtonClicked");

	Params::TedMainMenuScreenProfileButton_OnProfileButtonClicked Parms{};

	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMainMenuScreen.Get
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedMainMenuScreen*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedMainMenuScreen* UTedMainMenuScreen::Get(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedMainMenuScreen", "Get");

	Params::TedMainMenuScreen_Get Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMainMenuScreen.GetCachedLocalPlayerRating
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const ETedRankedTeam                    Team                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedRankedFaction                 Faction                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedMainMenuScreen::GetCachedLocalPlayerRating(const ETedRankedTeam Team, const ETedRankedFaction Faction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMainMenuScreen", "GetCachedLocalPlayerRating");

	Params::TedMainMenuScreen_GetCachedLocalPlayerRating Parms{};

	Parms.Team = Team;
	Parms.Faction = Faction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMainMenuScreen.K2_OnLocalPlayerRatingsReceived
// (Event, Public, BlueprintEvent)

void UTedMainMenuScreen::K2_OnLocalPlayerRatingsReceived()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMainMenuScreen", "K2_OnLocalPlayerRatingsReceived");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedMainMenuScreen.OnActivateMultiplayerTab
// (Event, Protected, BlueprintEvent)

void UTedMainMenuScreen::OnActivateMultiplayerTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMainMenuScreen", "OnActivateMultiplayerTab");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedMainMenuScreen.OnButtonsPanelActivateSlotState
// (Final, Native, Public)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMainMenuScreen::OnButtonsPanelActivateSlotState(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMainMenuScreen", "OnButtonsPanelActivateSlotState");

	Params::TedMainMenuScreen_OnButtonsPanelActivateSlotState Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMainMenuScreen.OnPageVisibilityChanged
// (Final, Native, Protected)
// Parameters:
// ESlateVisibility                        InVisibility                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMainMenuScreen::OnPageVisibilityChanged(ESlateVisibility InVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMainMenuScreen", "OnPageVisibilityChanged");

	Params::TedMainMenuScreen_OnPageVisibilityChanged Parms{};

	Parms.InVisibility = InVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMainMenuScreen.OnPreorderSettingChanged
// (Final, Native, Public, HasOutParams)
// Parameters:
// const class FName&                      SettingChanged                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMainMenuScreen::OnPreorderSettingChanged(const class FName& SettingChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMainMenuScreen", "OnPreorderSettingChanged");

	Params::TedMainMenuScreen_OnPreorderSettingChanged Parms{};

	Parms.SettingChanged = SettingChanged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMainMenuScreen.ShowQuitGamePopUp
// (Final, Native, Public, BlueprintCallable)

void UTedMainMenuScreen::ShowQuitGamePopUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMainMenuScreen", "ShowQuitGamePopUp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMainMenuScreen.GetCurrentOpenPage
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UTedMainMenuScreen::GetCurrentOpenPage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMainMenuScreen", "GetCurrentOpenPage");

	Params::TedMainMenuScreen_GetCurrentOpenPage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Tempest.TedMapContentPanel.OpenBriefingLevel
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMapContentPanel::OpenBriefingLevel(const int32 InSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapContentPanel", "OpenBriefingLevel");

	Params::TedMapContentPanel_OpenBriefingLevel Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMapContentPanel.OpenLevel
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedGameDifficulty                Difficulty                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMapContentPanel::OpenLevel(const int32 InSlotIndex, const ETedGameDifficulty Difficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapContentPanel", "OpenLevel");

	Params::TedMapContentPanel_OpenLevel Parms{};

	Parms.InSlotIndex = InSlotIndex;
	Parms.Difficulty = Difficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMapContentPanel.GetContent
// (Final, Native, Protected, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName*                            OutContent                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMapContentPanel::GetContent(const int32 InSlotIndex, class FName* OutContent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapContentPanel", "GetContent");

	Params::TedMapContentPanel_GetContent Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutContent != nullptr)
		*OutContent = Parms.OutContent;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapContentPanel.GetContentMapInfo
// (Final, Native, Protected, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName*                            OutMapName                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedMapInfo*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedMapInfo* UTedMapContentPanel::GetContentMapInfo(const int32 InSlotIndex, class FName* OutMapName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapContentPanel", "GetContentMapInfo");

	Params::TedMapContentPanel_GetContentMapInfo Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMapName != nullptr)
		*OutMapName = Parms.OutMapName;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapContentPanel.HasBriefing
// (Final, Native, Protected, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMapContentPanel::HasBriefing(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapContentPanel", "HasBriefing");

	Params::TedMapContentPanel_HasBriefing Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapInfoPanel.ClearFilterString
// (Final, Native, Public, BlueprintCallable)

void UTedMapInfoPanel::ClearFilterString()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfoPanel", "ClearFilterString");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMapInfoPanel.SetFilterString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InFilter                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMapInfoPanel::SetFilterString(const class FString& InFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfoPanel", "SetFilterString");

	Params::TedMapInfoPanel_SetFilterString Parms{};

	Parms.InFilter = std::move(InFilter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMapInfoPanel.SetHumanNumFilter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FInt32Range&               InRange                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMapInfoPanel::SetHumanNumFilter(const struct FInt32Range& InRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfoPanel", "SetHumanNumFilter");

	Params::TedMapInfoPanel_SetHumanNumFilter Parms{};

	Parms.InRange = std::move(InRange);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMapInfoPanel.GetContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedMapInfo*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedMapInfo* UTedMapInfoPanel::GetContent(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfoPanel", "GetContent");

	Params::TedMapInfoPanel_GetContent Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapInfoPanel.GetContentByState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const ETedContentSlotState              InState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InIndex                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedMapInfo*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedMapInfo* UTedMapInfoPanel::GetContentByState(const ETedContentSlotState InState, const int32 InIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfoPanel", "GetContentByState");

	Params::TedMapInfoPanel_GetContentByState Parms{};

	Parms.InState = InState;
	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapInfoPanel.GetHumanNumFilter
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const struct FInt32Range                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FInt32Range UTedMapInfoPanel::GetHumanNumFilter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfoPanel", "GetHumanNumFilter");

	Params::TedMapInfoPanel_GetHumanNumFilter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapInfoPanel.GetSelectedContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedMapInfo*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedMapInfo* UTedMapInfoPanel::GetSelectedContent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfoPanel", "GetSelectedContent");

	Params::TedMapInfoPanel_GetSelectedContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapInfoPanelRanked.DecVetos
// (Final, Native, Public, BlueprintCallable)

void UTedMapInfoPanelRanked::DecVetos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfoPanelRanked", "DecVetos");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMapInfoPanelRanked.IncVetos
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMapInfoPanelRanked::IncVetos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfoPanelRanked", "IncVetos");

	Params::TedMapInfoPanelRanked_IncVetos Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapInfoPanelRanked.LoadMapState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UTedMapInfo*                InMapInfo                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMapInfoPanelRanked::LoadMapState(const class UTedMapInfo* InMapInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfoPanelRanked", "LoadMapState");

	Params::TedMapInfoPanelRanked_LoadMapState Parms{};

	Parms.InMapInfo = InMapInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapInfoPanelRanked.RefreshMapStates
// (Final, Native, Public, BlueprintCallable)

void UTedMapInfoPanelRanked::RefreshMapStates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfoPanelRanked", "RefreshMapStates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMapInfoPanelRanked.SaveAllowedMapsForSession
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMapInfoPanelRanked::SaveAllowedMapsForSession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfoPanelRanked", "SaveAllowedMapsForSession");

	Params::TedMapInfoPanelRanked_SaveAllowedMapsForSession Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapInfoPanelRanked.SetMultiplayerCurrentData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETedServerType                          ServerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedRankedTeam                          TeamType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMapInfoPanelRanked::SetMultiplayerCurrentData(ETedServerType ServerType, ETedRankedTeam TeamType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfoPanelRanked", "SetMultiplayerCurrentData");

	Params::TedMapInfoPanelRanked_SetMultiplayerCurrentData Parms{};

	Parms.ServerType = ServerType;
	Parms.TeamType = TeamType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMapInfoPanelRanked.UpdateMapState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UTedMapInfo*                InMapInfo                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              InChecked                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMapInfoPanelRanked::UpdateMapState(const class UTedMapInfo* InMapInfo, const bool InChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfoPanelRanked", "UpdateMapState");

	Params::TedMapInfoPanelRanked_UpdateMapState Parms{};

	Parms.InMapInfo = InMapInfo;
	Parms.InChecked = InChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMapInfoPanelRanked.GetMaxVetos
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedMapInfoPanelRanked::GetMaxVetos() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMapInfoPanelRanked", "GetMaxVetos");

	Params::TedMapInfoPanelRanked_GetMaxVetos Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMarkerFunctionsLibrary.AddMarkerAtLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedMarkerConfig*           Config                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedMarkerHandle                 ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTedMarkerHandle UTedMarkerFunctionsLibrary::AddMarkerAtLocation(const class UObject* WorldContext, const class UTedMarkerConfig* Config, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedMarkerFunctionsLibrary", "AddMarkerAtLocation");

	Params::TedMarkerFunctionsLibrary_AddMarkerAtLocation Parms{};

	Parms.WorldContext = WorldContext;
	Parms.Config = Config;
	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMarkerFunctionsLibrary.AddMarkerAttached
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedMarkerConfig*           Config                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     Target                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedMarkerHandle                 ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTedMarkerHandle UTedMarkerFunctionsLibrary::AddMarkerAttached(const class UObject* WorldContext, const class UTedMarkerConfig* Config, const class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedMarkerFunctionsLibrary", "AddMarkerAttached");

	Params::TedMarkerFunctionsLibrary_AddMarkerAttached Parms{};

	Parms.WorldContext = WorldContext;
	Parms.Config = Config;
	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMarkerFunctionsLibrary.RemoveMarkerByHandle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedMarkerHandle&          Handle                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMarkerFunctionsLibrary::RemoveMarkerByHandle(const class UObject* WorldContext, const struct FTedMarkerHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedMarkerFunctionsLibrary", "RemoveMarkerByHandle");

	Params::TedMarkerFunctionsLibrary_RemoveMarkerByHandle Parms{};

	Parms.WorldContext = WorldContext;
	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMarkerFunctionsLibrary.RemoveMarkerByTarget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     Target                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMarkerFunctionsLibrary::RemoveMarkerByTarget(const class UObject* WorldContext, const class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedMarkerFunctionsLibrary", "RemoveMarkerByTarget");

	Params::TedMarkerFunctionsLibrary_RemoveMarkerByTarget Parms{};

	Parms.WorldContext = WorldContext;
	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMatchHistorySlot_Expansion.K2_DescribePlayerPortrait
// (Event, Public, BlueprintEvent)
// Parameters:
// class UTexture2D*                       InPortrait                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InHydraId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMatchHistorySlot_Expansion::K2_DescribePlayerPortrait(class UTexture2D* InPortrait, const class FString& InHydraId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMatchHistorySlot_Expansion", "K2_DescribePlayerPortrait");

	Params::TedMatchHistorySlot_Expansion_K2_DescribePlayerPortrait Parms{};

	Parms.InPortrait = InPortrait;
	Parms.InHydraId = std::move(InHydraId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedMatchHistorySlot.K2_DescribeDate
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FDateTime&                 Time                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMatchHistorySlot::K2_DescribeDate(const struct FDateTime& Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMatchHistorySlot", "K2_DescribeDate");

	Params::TedMatchHistorySlot_K2_DescribeDate Parms{};

	Parms.Time = std::move(Time);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedMatchHistorySlot.K2_DescribeFaction
// (Event, Public, BlueprintEvent)
// Parameters:
// const ETedFaction                       Faction                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMatchHistorySlot::K2_DescribeFaction(const ETedFaction Faction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMatchHistorySlot", "K2_DescribeFaction");

	Params::TedMatchHistorySlot_K2_DescribeFaction Parms{};

	Parms.Faction = Faction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedMatchHistorySlot.K2_DescribeMap
// (Event, Public, BlueprintEvent)
// Parameters:
// const class UTedMapInfo*                Map                                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMatchHistorySlot::K2_DescribeMap(const class UTedMapInfo* Map)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMatchHistorySlot", "K2_DescribeMap");

	Params::TedMatchHistorySlot_K2_DescribeMap Parms{};

	Parms.Map = Map;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedMatchHistorySlot.K2_DescribeMatchName
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      MatchName                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedMatchHistorySlot::K2_DescribeMatchName(const class FText& MatchName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMatchHistorySlot", "K2_DescribeMatchName");

	Params::TedMatchHistorySlot_K2_DescribeMatchName Parms{};

	Parms.MatchName = std::move(MatchName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedMatchHistorySlot.K2_DescribeServerType
// (Event, Public, BlueprintEvent)
// Parameters:
// const ETedServerType                    ServerType                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMatchHistorySlot::K2_DescribeServerType(const ETedServerType ServerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMatchHistorySlot", "K2_DescribeServerType");

	Params::TedMatchHistorySlot_K2_DescribeServerType Parms{};

	Parms.ServerType = ServerType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedMatchHistorySlot.K2_DescribeTeamType
// (Event, Public, BlueprintEvent)
// Parameters:
// const ETedRankedTeam                    Team                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMatchHistorySlot::K2_DescribeTeamType(const ETedRankedTeam Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMatchHistorySlot", "K2_DescribeTeamType");

	Params::TedMatchHistorySlot_K2_DescribeTeamType Parms{};

	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedMatchHistorySlot.K2_DescribeTimespan
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FTimespan&                 Time                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMatchHistorySlot::K2_DescribeTimespan(const struct FTimespan& Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMatchHistorySlot", "K2_DescribeTimespan");

	Params::TedMatchHistorySlot_K2_DescribeTimespan Parms{};

	Parms.Time = std::move(Time);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedMatchHistorySlot.K2_DescribeVictoryOrDefeat
// (Event, Public, BlueprintEvent)
// Parameters:
// const bool                              bVictory                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMatchHistorySlot::K2_DescribeVictoryOrDefeat(const bool bVictory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMatchHistorySlot", "K2_DescribeVictoryOrDefeat");

	Params::TedMatchHistorySlot_K2_DescribeVictoryOrDefeat Parms{};

	Parms.bVictory = bVictory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedMatchHistorySlot.MakeContentForExpansion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FTedMatchHistorySlot_Expansion_PlayerContent>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FTedMatchHistorySlot_Expansion_PlayerContent> UTedMatchHistorySlot::MakeContentForExpansion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMatchHistorySlot", "MakeContentForExpansion");

	Params::TedMatchHistorySlot_MakeContentForExpansion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMatchHistorySlot.RequestUserInfosForExpansionContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FTedMatchHistorySlot_Expansion_PlayerContent>&InContent                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedMatchHistorySlot::RequestUserInfosForExpansionContent(const TArray<struct FTedMatchHistorySlot_Expansion_PlayerContent>& InContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMatchHistorySlot", "RequestUserInfosForExpansionContent");

	Params::TedMatchHistorySlot_RequestUserInfosForExpansionContent Parms{};

	Parms.InContent = std::move(InContent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMedalsLibrary.GetMedalByRating
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const float                             InRating                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedFaction                       InFaction                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bOutSuccess                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedMedalTableRow_Ranked   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

const struct FTedMedalTableRow_Ranked UTedMedalsLibrary::GetMedalByRating(const float InRating, const ETedFaction InFaction, bool* bOutSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedMedalsLibrary", "GetMedalByRating");

	Params::TedMedalsLibrary_GetMedalByRating Parms{};

	Parms.InRating = InRating;
	Parms.InFaction = InFaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOutSuccess != nullptr)
		*bOutSuccess = Parms.bOutSuccess;

	return Parms.ReturnValue;
}


// Function Tempest.TedMedalsScreen.GetFirstMedalOfType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const ETedMedalsType                    Type                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTedMedalsScreen::GetFirstMedalOfType(const ETedMedalsType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMedalsScreen", "GetFirstMedalOfType");

	Params::TedMedalsScreen_GetFirstMedalOfType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMedalsScreen.K2_OnAllMedalAnimationsFinished
// (Event, Public, BlueprintEvent)

void UTedMedalsScreen::K2_OnAllMedalAnimationsFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMedalsScreen", "K2_OnAllMedalAnimationsFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedMedalsScreen.K2_OnSwitchMainMedal
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// int32                                   NewMedalIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedMedalTableRow&         DataRow                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bIsLastMedal                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMedalsScreen::K2_OnSwitchMainMedal(int32 NewMedalIndex, const struct FTedMedalTableRow& DataRow, bool bIsLastMedal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMedalsScreen", "K2_OnSwitchMainMedal");

	Params::TedMedalsScreen_K2_OnSwitchMainMedal Parms{};

	Parms.NewMedalIndex = NewMedalIndex;
	Parms.DataRow = std::move(DataRow);
	Parms.bIsLastMedal = bIsLastMedal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedMedalsScreen.K2_OnSwitchSideMedal
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// int32                                   NewMedalIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedMedalTableRow&         DataRow                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bIsLastMedal                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMedalsScreen::K2_OnSwitchSideMedal(int32 NewMedalIndex, const struct FTedMedalTableRow& DataRow, bool bIsLastMedal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMedalsScreen", "K2_OnSwitchSideMedal");

	Params::TedMedalsScreen_K2_OnSwitchSideMedal Parms{};

	Parms.NewMedalIndex = NewMedalIndex;
	Parms.DataRow = std::move(DataRow);
	Parms.bIsLastMedal = bIsLastMedal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedMedalsScreen.OnButtonActivatedState
// (Final, Native, Public)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMedalsScreen::OnButtonActivatedState(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMedalsScreen", "OnButtonActivatedState");

	Params::TedMedalsScreen_OnButtonActivatedState Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMedalsScreen.SetMedalAnimationTimerDelay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InDelay                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMedalsScreen::SetMedalAnimationTimerDelay(float InDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMedalsScreen", "SetMedalAnimationTimerDelay");

	Params::TedMedalsScreen_SetMedalAnimationTimerDelay Parms{};

	Parms.InDelay = InDelay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMeshWidget.AddRelevantMeshWidgetActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ATedMeshWidgetActor*              InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMeshWidget::AddRelevantMeshWidgetActor(class ATedMeshWidgetActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMeshWidget", "AddRelevantMeshWidgetActor");

	Params::TedMeshWidget_AddRelevantMeshWidgetActor Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMeshWidget.OnMeshWidgetEndPlay
// (Final, Native, Protected)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          InEndPlayReason                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMeshWidget::OnMeshWidgetEndPlay(class AActor* InActor, EEndPlayReason InEndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMeshWidget", "OnMeshWidgetEndPlay");

	Params::TedMeshWidget_OnMeshWidgetEndPlay Parms{};

	Parms.InActor = InActor;
	Parms.InEndPlayReason = InEndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMeshWidget.RemoveRelevantMeshWidgetActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ATedMeshWidgetActor*              InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMeshWidget::RemoveRelevantMeshWidgetActor(class ATedMeshWidgetActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMeshWidget", "RemoveRelevantMeshWidgetActor");

	Params::TedMeshWidget_RemoveRelevantMeshWidgetActor Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMeshWidget.GetShowingMeshWidgetActorContextObject
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UTedMeshWidget::GetShowingMeshWidgetActorContextObject() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMeshWidget", "GetShowingMeshWidgetActorContextObject");

	Params::TedMeshWidget_GetShowingMeshWidgetActorContextObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMeshWidget.IsDisplayingAnything
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMeshWidget::IsDisplayingAnything() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMeshWidget", "IsDisplayingAnything");

	Params::TedMeshWidget_IsDisplayingAnything Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMineActor.Arm
// (Final, Native, Protected, BlueprintCallable)

void ATedMineActor::Arm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMineActor", "Arm");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMineActor.Disarm
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           DisarmingActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedMineActor::Disarm(class AActor* DisarmingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMineActor", "Disarm");

	Params::TedMineActor_Disarm Parms{};

	Parms.DisarmingActor = DisarmingActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMineActor.NetMulticast_TriggeredBy
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// class ATedPawn*                         TriggerPawn                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedMineActor::NetMulticast_TriggeredBy(class ATedPawn* TriggerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMineActor", "NetMulticast_TriggeredBy");

	Params::TedMineActor_NetMulticast_TriggeredBy Parms{};

	Parms.TriggerPawn = TriggerPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMineActor.OnRep_Armed
// (Final, Native, Protected)

void ATedMineActor::OnRep_Armed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMineActor", "OnRep_Armed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMineActor.ReceiveArmedChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bNewArmed                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedMineActor::ReceiveArmedChanged(const bool bNewArmed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMineActor", "ReceiveArmedChanged");

	Params::TedMineActor_ReceiveArmedChanged Parms{};

	Parms.bNewArmed = bNewArmed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedMineActor.ReceiveTriggeredBy
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ATedPawn*                         TriggerPawn                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedMineActor::ReceiveTriggeredBy(class ATedPawn* TriggerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMineActor", "ReceiveTriggeredBy");

	Params::TedMineActor_ReceiveTriggeredBy Parms{};

	Parms.TriggerPawn = TriggerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedMineActor.TriggerMine
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class ATedPawn*                         TriggerPawn                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedMineActor::TriggerMine(class ATedPawn* TriggerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMineActor", "TriggerMine");

	Params::TedMineActor_TriggerMine Parms{};

	Parms.TriggerPawn = TriggerPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMineActor.CanTrigger
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const class ATedPawn*                   Pawn                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedMineActor::CanTrigger(const class ATedPawn* Pawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMineActor", "CanTrigger");

	Params::TedMineActor_CanTrigger Parms{};

	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMinimapMarkerConfig.GetMinimapMarkerData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FMinimapMarkerData         ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FMinimapMarkerData UTedMinimapMarkerConfig::GetMinimapMarkerData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMinimapMarkerConfig", "GetMinimapMarkerData");

	Params::TedMinimapMarkerConfig_GetMinimapMarkerData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveMinimapMarkerConfig.GetListBrush
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FSlateBrush                ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FSlateBrush UTedObjectiveMinimapMarkerConfig::GetListBrush() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveMinimapMarkerConfig", "GetListBrush");

	Params::TedObjectiveMinimapMarkerConfig_GetListBrush Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMinimapWidget.OnReplicatePlayerState
// (Final, Native, Protected)
// Parameters:
// class ATedPlayerController*             InPlayerController                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMinimapWidget::OnReplicatePlayerState(class ATedPlayerController* InPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMinimapWidget", "OnReplicatePlayerState");

	Params::TedMinimapWidget_OnReplicatePlayerState Parms{};

	Parms.InPlayerController = InPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMinimapWidget.SetDrawFogOfWar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInDrawFogOfWar                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMinimapWidget::SetDrawFogOfWar(bool bInDrawFogOfWar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMinimapWidget", "SetDrawFogOfWar");

	Params::TedMinimapWidget_SetDrawFogOfWar Parms{};

	Parms.bInDrawFogOfWar = bInDrawFogOfWar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMinimapWidget.SetDrawFrustum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInDrawFrustum                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMinimapWidget::SetDrawFrustum(bool bInDrawFrustum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMinimapWidget", "SetDrawFrustum");

	Params::TedMinimapWidget_SetDrawFrustum Parms{};

	Parms.bInDrawFrustum = bInDrawFrustum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMinimapWidget.SetDrawMapMarkers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInDrawMapMarkers                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMinimapWidget::SetDrawMapMarkers(bool bInDrawMapMarkers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMinimapWidget", "SetDrawMapMarkers");

	Params::TedMinimapWidget_SetDrawMapMarkers Parms{};

	Parms.bInDrawMapMarkers = bInDrawMapMarkers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMinimapWidget.SetDrawResources
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInDrawFrustum                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMinimapWidget::SetDrawResources(bool bInDrawFrustum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMinimapWidget", "SetDrawResources");

	Params::TedMinimapWidget_SetDrawResources Parms{};

	Parms.bInDrawFrustum = bInDrawFrustum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMinimapWidget.SetDrawStructures
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInDrawStructures                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMinimapWidget::SetDrawStructures(bool bInDrawStructures)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMinimapWidget", "SetDrawStructures");

	Params::TedMinimapWidget_SetDrawStructures Parms{};

	Parms.bInDrawStructures = bInDrawStructures;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMinimapWidget.SetDrawTerrain
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInDrawTerrain                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMinimapWidget::SetDrawTerrain(bool bInDrawTerrain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMinimapWidget", "SetDrawTerrain");

	Params::TedMinimapWidget_SetDrawTerrain Parms{};

	Parms.bInDrawTerrain = bInDrawTerrain;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMinimapWidget.SetDrawUnits
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInDrawUnits                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMinimapWidget::SetDrawUnits(bool bInDrawUnits)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMinimapWidget", "SetDrawUnits");

	Params::TedMinimapWidget_SetDrawUnits Parms{};

	Parms.bInDrawUnits = bInDrawUnits;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMinimapWidget.SetMiniMapStateFlag
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EMinimapStateFlag                       InFlag                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInBool                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMinimapWidget::SetMiniMapStateFlag(EMinimapStateFlag InFlag, bool bInBool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMinimapWidget", "SetMiniMapStateFlag");

	Params::TedMinimapWidget_SetMiniMapStateFlag Parms{};

	Parms.InFlag = InFlag;
	Parms.bInBool = bInBool;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMinimapWidget.GetFactionLogoMovie
// (Final, Native, Protected, BlueprintCallable, Const)
// Parameters:
// const class UFileMediaSource*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UFileMediaSource* UTedMinimapWidget::GetFactionLogoMovie() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMinimapWidget", "GetFactionLogoMovie");

	Params::TedMinimapWidget_GetFactionLogoMovie Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMinimapWidget.GetMinimapSize
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UTedMinimapWidget::GetMinimapSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMinimapWidget", "GetMinimapSize");

	Params::TedMinimapWidget_GetMinimapSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMinimapWidget.HasMiniMapStateFlag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const EMinimapStateFlag                 InFlag                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMinimapWidget::HasMiniMapStateFlag(const EMinimapStateFlag InFlag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMinimapWidget", "HasMiniMapStateFlag");

	Params::TedMinimapWidget_HasMiniMapStateFlag Parms{};

	Parms.InFlag = InFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMinimapWidget.OnMinimapStateChanged
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    bFullMode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMinimapWidget::OnMinimapStateChanged(bool bFullMode) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMinimapWidget", "OnMinimapStateChanged");

	Params::TedMinimapWidget_OnMinimapStateChanged Parms{};

	Parms.bFullMode = bFullMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedMoviePlayerDisplay.SetMovieController
// (Native, Public, BlueprintCallable)
// Parameters:
// class UTedMoviePlayerController*        InController                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMoviePlayerDisplay::SetMovieController(class UTedMoviePlayerController* InController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMoviePlayerDisplay", "SetMovieController");

	Params::TedMoviePlayerDisplay_SetMovieController Parms{};

	Parms.InController = InController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMoviePlayerDisplay.DetermineBrush
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSlateBrush                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSlateBrush UTedMoviePlayerDisplay::DetermineBrush() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMoviePlayerDisplay", "DetermineBrush");

	Params::TedMoviePlayerDisplay_DetermineBrush Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMoviePlayerDisplay.GetExpectedVisibility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedMoviePlayerDisplay::GetExpectedVisibility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMoviePlayerDisplay", "GetExpectedVisibility");

	Params::TedMoviePlayerDisplay_GetExpectedVisibility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMoviePlayerDisplay.GetStartedMovie
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UFileMediaSource*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UFileMediaSource* UTedMoviePlayerDisplay::GetStartedMovie() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMoviePlayerDisplay", "GetStartedMovie");

	Params::TedMoviePlayerDisplay_GetStartedMovie Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMoviePlayerDisplay.IsPaused
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMoviePlayerDisplay::IsPaused() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMoviePlayerDisplay", "IsPaused");

	Params::TedMoviePlayerDisplay_IsPaused Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMoviePlayerDisplay.IsPlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMoviePlayerDisplay::IsPlaying() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMoviePlayerDisplay", "IsPlaying");

	Params::TedMoviePlayerDisplay_IsPlaying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMoviePlayerDisplay.IsPlayingIntro
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMoviePlayerDisplay::IsPlayingIntro() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMoviePlayerDisplay", "IsPlayingIntro");

	Params::TedMoviePlayerDisplay_IsPlayingIntro Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMoviePlayerDisplay.IsStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedMoviePlayerDisplay::IsStarted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMoviePlayerDisplay", "IsStarted");

	Params::TedMoviePlayerDisplay_IsStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMissionDialogueWidget.K2_OnIntroFinished
// (Event, Protected, BlueprintEvent)

void UTedMissionDialogueWidget::K2_OnIntroFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMissionDialogueWidget", "K2_OnIntroFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedMissionDialogueWidget.K2_OnIntroStarted
// (Event, Protected, BlueprintEvent)

void UTedMissionDialogueWidget::K2_OnIntroStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMissionDialogueWidget", "K2_OnIntroStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedMissionDialogueWidget.K2_OnOutroFinished
// (Event, Protected, BlueprintEvent)

void UTedMissionDialogueWidget::K2_OnOutroFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMissionDialogueWidget", "K2_OnOutroFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedMissionDialogueWidget.K2_OnOutroStarted
// (Event, Protected, BlueprintEvent)

void UTedMissionDialogueWidget::K2_OnOutroStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMissionDialogueWidget", "K2_OnOutroStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedMissionDialogueWidget.OnIntroFinished
// (Final, Native, Protected)
// Parameters:
// class UTedMoviePlayerWidgetV2*          InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UFileMediaSource*           InSource                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMissionDialogueWidget::OnIntroFinished(class UTedMoviePlayerWidgetV2* InWidget, const class UFileMediaSource* InSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMissionDialogueWidget", "OnIntroFinished");

	Params::TedMissionDialogueWidget_OnIntroFinished Parms{};

	Parms.InWidget = InWidget;
	Parms.InSource = InSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMissionDialogueWidget.OnOutroFinished
// (Final, Native, Protected)
// Parameters:
// class UTedMoviePlayerWidgetV2*          InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UFileMediaSource*           InSource                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMissionDialogueWidget::OnOutroFinished(class UTedMoviePlayerWidgetV2* InWidget, const class UFileMediaSource* InSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMissionDialogueWidget", "OnOutroFinished");

	Params::TedMissionDialogueWidget_OnOutroFinished Parms{};

	Parms.InWidget = InWidget;
	Parms.InSource = InSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMissionSelect_MapInfo.GetObjectivesData
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const class UTedMapInfo*                InMapInfo                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutCompleteObjectives                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutTotalObjectives                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMissionSelect_MapInfo::GetObjectivesData(const class UTedMapInfo* InMapInfo, int32* OutCompleteObjectives, int32* OutTotalObjectives)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMissionSelect_MapInfo", "GetObjectivesData");

	Params::TedMissionSelect_MapInfo_GetObjectivesData Parms{};

	Parms.InMapInfo = InMapInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCompleteObjectives != nullptr)
		*OutCompleteObjectives = Parms.OutCompleteObjectives;

	if (OutTotalObjectives != nullptr)
		*OutTotalObjectives = Parms.OutTotalObjectives;
}


// Function Tempest.TedMissionSelect_MapInfo.LoadObjectivesData
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UTedMapInfo*                      InMapInfo                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedMissionSelect_MapInfo::LoadObjectivesData(class UTedMapInfo* InMapInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMissionSelect_MapInfo", "LoadObjectivesData");

	Params::TedMissionSelect_MapInfo_LoadObjectivesData Parms{};

	Parms.InMapInfo = InMapInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMoviePlayerController.OnMediaReachedEnd
// (Final, Native, Protected)

void UTedMoviePlayerController::OnMediaReachedEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMoviePlayerController", "OnMediaReachedEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedScoreMenuScreen.OnActivateTabSlotState
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedScoreMenuScreen::OnActivateTabSlotState(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreMenuScreen", "OnActivateTabSlotState");

	Params::TedScoreMenuScreen_OnActivateTabSlotState Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedScoreMenuScreen.OnTriggerButtonSlotAction
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedScoreMenuScreen::OnTriggerButtonSlotAction(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreMenuScreen", "OnTriggerButtonSlotAction");

	Params::TedScoreMenuScreen_OnTriggerButtonSlotAction Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedScoreMenuScreen.GetCurrentGameDifficulty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedGameDifficulty                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedGameDifficulty UTedScoreMenuScreen::GetCurrentGameDifficulty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreMenuScreen", "GetCurrentGameDifficulty");

	Params::TedScoreMenuScreen_GetCurrentGameDifficulty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedScoreMenuScreen.GetCurrentMap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedMapInfo*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedMapInfo* UTedScoreMenuScreen::GetCurrentMap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreMenuScreen", "GetCurrentMap");

	Params::TedScoreMenuScreen_GetCurrentMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedScoreMenuScreen.GetCurrentTheme
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedFaction                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedFaction UTedScoreMenuScreen::GetCurrentTheme() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreMenuScreen", "GetCurrentTheme");

	Params::TedScoreMenuScreen_GetCurrentTheme Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedScoreMenuScreen.GetDifficultyText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedScoreMenuScreen::GetDifficultyText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreMenuScreen", "GetDifficultyText");

	Params::TedScoreMenuScreen_GetDifficultyText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedScoreMenuScreen.GetMapNameText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedScoreMenuScreen::GetMapNameText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreMenuScreen", "GetMapNameText");

	Params::TedScoreMenuScreen_GetMapNameText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedScoreMenuScreen.GetMatchDuration
// (Final, Native, Protected, HasDefaults, BlueprintCallable, Const)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UTedScoreMenuScreen::GetMatchDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreMenuScreen", "GetMatchDuration");

	Params::TedScoreMenuScreen_GetMatchDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedScoreMenuScreen.GetMatchDurationText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedScoreMenuScreen::GetMatchDurationText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreMenuScreen", "GetMatchDurationText");

	Params::TedScoreMenuScreen_GetMatchDurationText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedScoreMenuScreen.IsVictoryScreen
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedScoreMenuScreen::IsVictoryScreen() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreMenuScreen", "IsVictoryScreen");

	Params::TedScoreMenuScreen_IsVictoryScreen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedMultiplayerScoreMenuScreen.SetupCustomScreen
// (Final, Native, Private, BlueprintCallable, Const)

void UTedMultiplayerScoreMenuScreen::SetupCustomScreen() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMultiplayerScoreMenuScreen", "SetupCustomScreen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedMultiplayerScoreMenuScreen.SetupUnrankedScreen
// (Final, Native, Private, BlueprintCallable, Const)

void UTedMultiplayerScoreMenuScreen::SetupUnrankedScreen() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedMultiplayerScoreMenuScreen", "SetupUnrankedScreen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedNewsPanel.CacheAndDisplayBanners
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FProsBannerConfig&         BannerConfig                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<struct FProsBanner>&       Banners                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedNewsPanel::CacheAndDisplayBanners(const struct FProsBannerConfig& BannerConfig, const TArray<struct FProsBanner>& Banners)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedNewsPanel", "CacheAndDisplayBanners");

	Params::TedNewsPanel_CacheAndDisplayBanners Parms{};

	Parms.BannerConfig = std::move(BannerConfig);
	Parms.Banners = std::move(Banners);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedNewsPanel.ChangeDisplay
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEventReply UTedNewsPanel::ChangeDisplay(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedNewsPanel", "ChangeDisplay");

	Params::TedNewsPanel_ChangeDisplay Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedNewsPanel.CycleToFollowingBanner
// (Final, Native, Private)

void UTedNewsPanel::CycleToFollowingBanner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedNewsPanel", "CycleToFollowingBanner");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedNewsPanel.CycleToPrecedingBanner
// (Final, Native, Private)

void UTedNewsPanel::CycleToPrecedingBanner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedNewsPanel", "CycleToPrecedingBanner");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedNewsPanel.GetAllContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FTedNewsContent>    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FTedNewsContent> UTedNewsPanel::GetAllContent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedNewsPanel", "GetAllContent");

	Params::TedNewsPanel_GetAllContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedNewsPanel.GetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedNewsContent*                 OutContent                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedNewsPanel::GetContent(const int32 InSlotIndex, struct FTedNewsContent* OutContent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedNewsPanel", "GetContent");

	Params::TedNewsPanel_GetContent Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutContent != nullptr)
		*OutContent = std::move(Parms.OutContent);

	return Parms.ReturnValue;
}


// Function Tempest.TedNewsSlot.AddExtendedState
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTedNewsTransitionConfig&  InConfig                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const float                             InChange                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedNewsSlot::AddExtendedState(const struct FTedNewsTransitionConfig& InConfig, const float InChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedNewsSlot", "AddExtendedState");

	Params::TedNewsSlot_AddExtendedState Parms{};

	Parms.InConfig = std::move(InConfig);
	Parms.InChange = InChange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedNewsSlot.LaunchURL
// (Final, Native, Private)

void UTedNewsSlot::LaunchURL()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedNewsSlot", "LaunchURL");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedNewsSlot.RemoveGlowMaterialFromReadMoreText
// (Final, Native, Private)

void UTedNewsSlot::RemoveGlowMaterialFromReadMoreText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedNewsSlot", "RemoveGlowMaterialFromReadMoreText");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedNewsSlot.SetGlowMaterialToReadMoreText
// (Final, Native, Private)

void UTedNewsSlot::SetGlowMaterialToReadMoreText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedNewsSlot", "SetGlowMaterialToReadMoreText");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedNewsSlot.SetPicture
// (Final, Native, Private)
// Parameters:
// class UTexture2DDynamic*                Texture                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedNewsSlot::SetPicture(class UTexture2DDynamic* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedNewsSlot", "SetPicture");

	Params::TedNewsSlot_SetPicture Parms{};

	Parms.Texture = Texture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedNewsSlot.GetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// struct FTedNewsContent*                 OutContent                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedNewsSlot::GetContent(struct FTedNewsContent* OutContent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedNewsSlot", "GetContent");

	Params::TedNewsSlot_GetContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutContent != nullptr)
		*OutContent = std::move(Parms.OutContent);

	return Parms.ReturnValue;
}


// Function Tempest.TedNewsSlot.GetParentNewsPanel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedNewsPanel*                    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedNewsPanel* UTedNewsSlot::GetParentNewsPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedNewsSlot", "GetParentNewsPanel");

	Params::TedNewsSlot_GetParentNewsPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedNewsSlot.IsExtendTransitionFinished
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedNewsSlot::IsExtendTransitionFinished() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedNewsSlot", "IsExtendTransitionFinished");

	Params::TedNewsSlot_IsExtendTransitionFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveObj.CanBeDisplayedOnUI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedObjectiveObj::CanBeDisplayedOnUI() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveObj", "CanBeDisplayedOnUI");

	Params::TedObjectiveObj_CanBeDisplayedOnUI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveObj.GetCauseOfFailureObjectiveTitleOverride
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TSoftObjectPtr<class UTedObjectiveObj>ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const TSoftObjectPtr<class UTedObjectiveObj> UTedObjectiveObj::GetCauseOfFailureObjectiveTitleOverride() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveObj", "GetCauseOfFailureObjectiveTitleOverride");

	Params::TedObjectiveObj_GetCauseOfFailureObjectiveTitleOverride Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveObj.GetDescriptiveCauseOfFailure
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedObjectiveObj::GetDescriptiveCauseOfFailure() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveObj", "GetDescriptiveCauseOfFailure");

	Params::TedObjectiveObj_GetDescriptiveCauseOfFailure Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveObj.GetRequisitionPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedObjectiveObj::GetRequisitionPoints() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveObj", "GetRequisitionPoints");

	Params::TedObjectiveObj_GetRequisitionPoints Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveObj.TryGetDisplayTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedObjectiveObj::TryGetDisplayTitle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveObj", "TryGetDisplayTitle");

	Params::TedObjectiveObj_TryGetDisplayTitle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveCondition_HasPrerequisites.OnPlayerDataOwnedTagsChange
// (Final, Native, Protected)
// Parameters:
// class UTedPlayerData*                   InPlayerData                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedObjectiveCondition_HasPrerequisites::OnPlayerDataOwnedTagsChange(class UTedPlayerData* InPlayerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveCondition_HasPrerequisites", "OnPlayerDataOwnedTagsChange");

	Params::TedObjectiveCondition_HasPrerequisites_OnPlayerDataOwnedTagsChange Parms{};

	Parms.InPlayerData = InPlayerData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedObjectiveCondition_Objective.OnVolumeBeginOverlap_Handler
// (Final, Native, Protected)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedObjectiveCondition_Objective::OnVolumeBeginOverlap_Handler(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveCondition_Objective", "OnVolumeBeginOverlap_Handler");

	Params::TedObjectiveCondition_Objective_OnVolumeBeginOverlap_Handler Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedObjectiveCondition_Pickup.OnPickup
// (Final, Native, Protected)
// Parameters:
// class ATedUnitBase*                     InPickedUpBy                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedPickupActor*                  InPickup                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedObjectiveCondition_Pickup::OnPickup(class ATedUnitBase* InPickedUpBy, class ATedPickupActor* InPickup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveCondition_Pickup", "OnPickup");

	Params::TedObjectiveCondition_Pickup_OnPickup Parms{};

	Parms.InPickedUpBy = InPickedUpBy;
	Parms.InPickup = InPickup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedObjectiveCondition_Time.PassRuntimeData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const float                             InExpectedTime                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedObjectiveCondition_Time::PassRuntimeData(const float InExpectedTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveCondition_Time", "PassRuntimeData");

	Params::TedObjectiveCondition_Time_PassRuntimeData Parms{};

	Parms.InExpectedTime = InExpectedTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedObjectiveCondition_Volume.OnVolumeBeginOverlap_Handler
// (Native, Protected)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedObjectiveCondition_Volume::OnVolumeBeginOverlap_Handler(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveCondition_Volume", "OnVolumeBeginOverlap_Handler");

	Params::TedObjectiveCondition_Volume_OnVolumeBeginOverlap_Handler Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedObjectiveCondition_Volume.OnVolumeEndOverlap_Handler
// (Native, Protected)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedObjectiveCondition_Volume::OnVolumeEndOverlap_Handler(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveCondition_Volume", "OnVolumeEndOverlap_Handler");

	Params::TedObjectiveCondition_Volume_OnVolumeEndOverlap_Handler Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedObjectiveFunctionLibrary.ActivateObjective
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedObjectiveObj*           Objective                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedObjectiveObj*           OptionalParent                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedObjectiveFunctionLibrary::ActivateObjective(const class UObject* InWorldContext, const class UTedObjectiveObj* Objective, const class UTedObjectiveObj* OptionalParent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedObjectiveFunctionLibrary", "ActivateObjective");

	Params::TedObjectiveFunctionLibrary_ActivateObjective Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.Objective = Objective;
	Parms.OptionalParent = OptionalParent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedObjectiveFunctionLibrary.BranchObjectiveState
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedObjectiveObj*           Objective                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EObjectiveState*                        State                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedObjectiveFunctionLibrary::BranchObjectiveState(const class UObject* InWorldContext, const class UTedObjectiveObj* Objective, EObjectiveState* State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedObjectiveFunctionLibrary", "BranchObjectiveState");

	Params::TedObjectiveFunctionLibrary_BranchObjectiveState Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.Objective = Objective;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (State != nullptr)
		*State = Parms.State;
}


// Function Tempest.TedObjectiveFunctionLibrary.DeactivateObjective
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedObjectiveObj*           Objective                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedObjectiveFunctionLibrary::DeactivateObjective(const class UObject* InWorldContext, const class UTedObjectiveObj* Objective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedObjectiveFunctionLibrary", "DeactivateObjective");

	Params::TedObjectiveFunctionLibrary_DeactivateObjective Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.Objective = Objective;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedObjectiveFunctionLibrary.FailAllActiveObjectives
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedObjectiveFunctionLibrary::FailAllActiveObjectives(const class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedObjectiveFunctionLibrary", "FailAllActiveObjectives");

	Params::TedObjectiveFunctionLibrary_FailAllActiveObjectives Parms{};

	Parms.InWorldContext = InWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedObjectiveFunctionLibrary.FinishObjective
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedObjectiveObj*           Objective                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EObjectiveResult                  Result                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedObjectiveFunctionLibrary::FinishObjective(const class UObject* InWorldContext, const class UTedObjectiveObj* Objective, const EObjectiveResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedObjectiveFunctionLibrary", "FinishObjective");

	Params::TedObjectiveFunctionLibrary_FinishObjective Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.Objective = Objective;
	Parms.Result = Result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedObjectiveFunctionLibrary.GetConditionByClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedObjectiveObj*           Objective                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UTedObjectiveConditionBase>Class_0                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedObjectiveConditionBase*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedObjectiveConditionBase* UTedObjectiveFunctionLibrary::GetConditionByClass(const class UObject* InWorldContext, const class UTedObjectiveObj* Objective, TSubclassOf<class UTedObjectiveConditionBase> Class_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedObjectiveFunctionLibrary", "GetConditionByClass");

	Params::TedObjectiveFunctionLibrary_GetConditionByClass Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.Objective = Objective;
	Parms.Class_0 = Class_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveFunctionLibrary.GetConditionByID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedObjectiveObj*           Objective                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              RuntimeID                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedObjectiveConditionBase*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedObjectiveConditionBase* UTedObjectiveFunctionLibrary::GetConditionByID(const class UObject* InWorldContext, const class UTedObjectiveObj* Objective, const struct FGameplayTag& RuntimeID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedObjectiveFunctionLibrary", "GetConditionByID");

	Params::TedObjectiveFunctionLibrary_GetConditionByID Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.Objective = Objective;
	Parms.RuntimeID = std::move(RuntimeID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveFunctionLibrary.GetObjectiveState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedObjectiveObj*           Objective                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EObjectiveState                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EObjectiveState UTedObjectiveFunctionLibrary::GetObjectiveState(const class UObject* InWorldContext, const class UTedObjectiveObj* Objective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedObjectiveFunctionLibrary", "GetObjectiveState");

	Params::TedObjectiveFunctionLibrary_GetObjectiveState Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.Objective = Objective;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveFunctionLibrary.GetRuntimeObjectivesAmountByState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EObjectiveDisplayMode             DisplayMode                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EObjectiveState                   State                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedObjectiveFunctionLibrary::GetRuntimeObjectivesAmountByState(const class UObject* InWorldContext, const EObjectiveDisplayMode DisplayMode, const EObjectiveState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedObjectiveFunctionLibrary", "GetRuntimeObjectivesAmountByState");

	Params::TedObjectiveFunctionLibrary_GetRuntimeObjectivesAmountByState Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.DisplayMode = DisplayMode;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveFunctionLibrary.IsObjectiveInState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedObjectiveObj*           Objective                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EObjectiveState                   State                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedObjectiveFunctionLibrary::IsObjectiveInState(const class UObject* InWorldContext, const class UTedObjectiveObj* Objective, const EObjectiveState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedObjectiveFunctionLibrary", "IsObjectiveInState");

	Params::TedObjectiveFunctionLibrary_IsObjectiveInState Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.Objective = Objective;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveManager.GetObjectiveCauseOfFailureData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedObjectiveCauseOfFailureData  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTedObjectiveCauseOfFailureData UTedObjectiveManager::GetObjectiveCauseOfFailureData(const class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedObjectiveManager", "GetObjectiveCauseOfFailureData");

	Params::TedObjectiveManager_GetObjectiveCauseOfFailureData Parms{};

	Parms.InWorldContext = InWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectivePanel.OnObjectiveSlotAnimEnd
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UTedUserWidget*                   InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InAnimation                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedObjectivePanel::OnObjectiveSlotAnimEnd(class UTedUserWidget* InWidget, const struct FGameplayTag& InAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectivePanel", "OnObjectiveSlotAnimEnd");

	Params::TedObjectivePanel_OnObjectiveSlotAnimEnd Parms{};

	Parms.InWidget = InWidget;
	Parms.InAnimation = std::move(InAnimation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedObjectivePanel.OnObjectiveSlotAnimStart
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UTedUserWidget*                   InWidget                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InAnimation                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedObjectivePanel::OnObjectiveSlotAnimStart(class UTedUserWidget* InWidget, const struct FGameplayTag& InAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectivePanel", "OnObjectiveSlotAnimStart");

	Params::TedObjectivePanel_OnObjectiveSlotAnimStart Parms{};

	Parms.InWidget = InWidget;
	Parms.InAnimation = std::move(InAnimation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedObjectivePanel.SetContentObjectives
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class UTedObjectiveObj*>&  InContent                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedObjectivePanel::SetContentObjectives(const TArray<class UTedObjectiveObj*>& InContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectivePanel", "SetContentObjectives");

	Params::TedObjectivePanel_SetContentObjectives Parms{};

	Parms.InContent = std::move(InContent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedObjectivePanel.HasChildren
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedObjectivePanel::HasChildren(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectivePanel", "HasChildren");

	Params::TedObjectivePanel_HasChildren Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectivePanel.HasParentObjective
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedObjectivePanel::HasParentObjective(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectivePanel", "HasParentObjective");

	Params::TedObjectivePanel_HasParentObjective Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectivePanel.IsCondition
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedObjectivePanel::IsCondition(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectivePanel", "IsCondition");

	Params::TedObjectivePanel_IsCondition Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectivePanel.IsObjective
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedObjectivePanel::IsObjective(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectivePanel", "IsObjective");

	Params::TedObjectivePanel_IsObjective Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectivePanel.IsOptional
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedObjectivePanel::IsOptional(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectivePanel", "IsOptional");

	Params::TedObjectivePanel_IsOptional Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveProgress_IntegerCounter.GetCurrentValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedObjectiveProgress_IntegerCounter::GetCurrentValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveProgress_IntegerCounter", "GetCurrentValue");

	Params::TedObjectiveProgress_IntegerCounter_GetCurrentValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveProgress_IntegerCounter.GetMaxValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedObjectiveProgress_IntegerCounter::GetMaxValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveProgress_IntegerCounter", "GetMaxValue");

	Params::TedObjectiveProgress_IntegerCounter_GetMaxValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveProgress_IntegerCounter.GetPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedObjectiveProgress_IntegerCounter::GetPercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveProgress_IntegerCounter", "GetPercent");

	Params::TedObjectiveProgress_IntegerCounter_GetPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveProgress_TimeCountdown.GetDuration
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UTedObjectiveProgress_TimeCountdown::GetDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveProgress_TimeCountdown", "GetDuration");

	Params::TedObjectiveProgress_TimeCountdown_GetDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveProgress_TimeCountdown.GetElapsedPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedObjectiveProgress_TimeCountdown::GetElapsedPercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveProgress_TimeCountdown", "GetElapsedPercent");

	Params::TedObjectiveProgress_TimeCountdown_GetElapsedPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveProgress_TimeCountdown.GetElapsedTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UTedObjectiveProgress_TimeCountdown::GetElapsedTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveProgress_TimeCountdown", "GetElapsedTime");

	Params::TedObjectiveProgress_TimeCountdown_GetElapsedTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveProgress_TimeCountdown.GetRemainingPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedObjectiveProgress_TimeCountdown::GetRemainingPercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveProgress_TimeCountdown", "GetRemainingPercent");

	Params::TedObjectiveProgress_TimeCountdown_GetRemainingPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveProgress_TimeCountdown.GetRemainingTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UTedObjectiveProgress_TimeCountdown::GetRemainingTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveProgress_TimeCountdown", "GetRemainingTime");

	Params::TedObjectiveProgress_TimeCountdown_GetRemainingTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveSlot.RefreshTrackingVisuals
// (Event, Public, BlueprintEvent)

void UTedObjectiveSlot::RefreshTrackingVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveSlot", "RefreshTrackingVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedObjectiveSlot.ResetVisuals
// (Event, Public, BlueprintEvent)

void UTedObjectiveSlot::ResetVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveSlot", "ResetVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedObjectiveSlot.SetTracked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bInTracked                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedObjectiveSlot::SetTracked(const bool bInTracked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveSlot", "SetTracked");

	Params::TedObjectiveSlot_SetTracked Parms{};

	Parms.bInTracked = bInTracked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedObjectiveSlot.CanChangeTracked
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedObjectiveSlot::CanChangeTracked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveSlot", "CanChangeTracked");

	Params::TedObjectiveSlot_CanChangeTracked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveSlot.GetAppearanceBrush
// (Final, Native, Protected, HasOutParams, BlueprintCallable, Const)
// Parameters:
// struct FSlateBrush*                     OutBrush                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedObjectiveSlot::GetAppearanceBrush(struct FSlateBrush* OutBrush) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveSlot", "GetAppearanceBrush");

	Params::TedObjectiveSlot_GetAppearanceBrush Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBrush != nullptr)
		*OutBrush = std::move(Parms.OutBrush);

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveSlot.GetCachedObjectiveContentData
// (Final, Native, Protected, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class FText*                            OutPrimaryText                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// class FText*                            OutSecondaryText                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// EObjectiveState*                        OutObjectiveState                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedObjectiveObj*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedObjectiveObj* UTedObjectiveSlot::GetCachedObjectiveContentData(class FText* OutPrimaryText, class FText* OutSecondaryText, EObjectiveState* OutObjectiveState) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveSlot", "GetCachedObjectiveContentData");

	Params::TedObjectiveSlot_GetCachedObjectiveContentData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPrimaryText != nullptr)
		*OutPrimaryText = std::move(Parms.OutPrimaryText);

	if (OutSecondaryText != nullptr)
		*OutSecondaryText = std::move(Parms.OutSecondaryText);

	if (OutObjectiveState != nullptr)
		*OutObjectiveState = Parms.OutObjectiveState;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveSlot.GetDisplayText
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedObjectiveSlot::GetDisplayText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveSlot", "GetDisplayText");

	Params::TedObjectiveSlot_GetDisplayText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveSlot.GetIndentLevel
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedObjectiveSlot::GetIndentLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveSlot", "GetIndentLevel");

	Params::TedObjectiveSlot_GetIndentLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveSlot.GetMarker
// (Final, Native, Protected, BlueprintCallable, Const)
// Parameters:
// const class UTedMarkerConfig*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedMarkerConfig* UTedObjectiveSlot::GetMarker() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveSlot", "GetMarker");

	Params::TedObjectiveSlot_GetMarker Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveSlot.GetObjectiveContentData
// (Final, Native, Protected, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class FText*                            OutPrimaryText                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// class FText*                            OutSecondaryText                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// EObjectiveState*                        OutObjectiveState                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedObjectiveObj*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedObjectiveObj* UTedObjectiveSlot::GetObjectiveContentData(class FText* OutPrimaryText, class FText* OutSecondaryText, EObjectiveState* OutObjectiveState) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveSlot", "GetObjectiveContentData");

	Params::TedObjectiveSlot_GetObjectiveContentData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPrimaryText != nullptr)
		*OutPrimaryText = std::move(Parms.OutPrimaryText);

	if (OutSecondaryText != nullptr)
		*OutSecondaryText = std::move(Parms.OutSecondaryText);

	if (OutObjectiveState != nullptr)
		*OutObjectiveState = Parms.OutObjectiveState;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveSlot.GetObjectivePanel
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedObjectivePanel*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedObjectivePanel* UTedObjectiveSlot::GetObjectivePanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveSlot", "GetObjectivePanel");

	Params::TedObjectiveSlot_GetObjectivePanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveSlot.GetRequisition
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedObjectiveSlot::GetRequisition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveSlot", "GetRequisition");

	Params::TedObjectiveSlot_GetRequisition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveSlot.GetState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EObjectiveState                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EObjectiveState UTedObjectiveSlot::GetState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveSlot", "GetState");

	Params::TedObjectiveSlot_GetState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveSlot.HasChildren
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedObjectiveSlot::HasChildren() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveSlot", "HasChildren");

	Params::TedObjectiveSlot_HasChildren Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveSlot.HasParentObjective
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedObjectiveSlot::HasParentObjective() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveSlot", "HasParentObjective");

	Params::TedObjectiveSlot_HasParentObjective Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedObjectiveSlot.IsTracked
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedObjectiveSlot::IsTracked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedObjectiveSlot", "IsTracked");

	Params::TedObjectiveSlot_IsTracked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineBannerManager.GetLocalizedBannerMessage
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FProsBannerMessage&        InMessage                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString*                          OutID                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText*                            OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)

void UTedOnlineBannerManager::GetLocalizedBannerMessage(const struct FProsBannerMessage& InMessage, class FString* OutID, class FText* OutText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedOnlineBannerManager", "GetLocalizedBannerMessage");

	Params::TedOnlineBannerManager_GetLocalizedBannerMessage Parms{};

	Parms.InMessage = std::move(InMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutID != nullptr)
		*OutID = std::move(Parms.OutID);

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);
}


// Function Tempest.TedOnlineBannerManager.GetBanners
// (Final, Native, Public, BlueprintCallable)

void UTedOnlineBannerManager::GetBanners()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineBannerManager", "GetBanners");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineFriendsManager.OnFillFriendsWithHydraIdsComplete
// (Final, Native, Private, HasOutParams)
// Parameters:
// const TArray<struct FUserIdentityResolveResult>&Results                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EProsdkErrorCodeDefault                 ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineFriendsManager::OnFillFriendsWithHydraIdsComplete(const TArray<struct FUserIdentityResolveResult>& Results, EProsdkErrorCodeDefault ResultCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineFriendsManager", "OnFillFriendsWithHydraIdsComplete");

	Params::TedOnlineFriendsManager_OnFillFriendsWithHydraIdsComplete Parms{};

	Parms.Results = std::move(Results);
	Parms.ResultCode = ResultCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineFriendsManager.OnFriendChatMessageUpdateFromSteam
// (Final, Native, Private)
// Parameters:
// uint64                                  InSteamId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InMessageId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineFriendsManager::OnFriendChatMessageUpdateFromSteam(uint64 InSteamId, int32 InMessageId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineFriendsManager", "OnFriendChatMessageUpdateFromSteam");

	Params::TedOnlineFriendsManager_OnFriendChatMessageUpdateFromSteam Parms{};

	Parms.InSteamId = InSteamId;
	Parms.InMessageId = InMessageId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineFriendsManager.OnFriendStatusUpdateFromSteam
// (Final, Native, Private)
// Parameters:
// const uint64                            InSteamId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InChangeFlags                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineFriendsManager::OnFriendStatusUpdateFromSteam(const uint64 InSteamId, const int32 InChangeFlags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineFriendsManager", "OnFriendStatusUpdateFromSteam");

	Params::TedOnlineFriendsManager_OnFriendStatusUpdateFromSteam Parms{};

	Parms.InSteamId = InSteamId;
	Parms.InChangeFlags = InChangeFlags;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineFriendsManager.OnReadFriendsListComplete
// (Final, Native, Private)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWasSuccessful                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ListName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ErrorStr                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineFriendsManager::OnReadFriendsListComplete(int32 LocalUserNum, bool bWasSuccessful, const class FString& ListName, const class FString& ErrorStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineFriendsManager", "OnReadFriendsListComplete");

	Params::TedOnlineFriendsManager_OnReadFriendsListComplete Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.bWasSuccessful = bWasSuccessful;
	Parms.ListName = std::move(ListName);
	Parms.ErrorStr = std::move(ErrorStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlinePlayerProfileLibrary.ConvertFactionToRankedFaction
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const ETedFaction                       Faction                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedRankedFaction                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedRankedFaction UTedOnlinePlayerProfileLibrary::ConvertFactionToRankedFaction(const ETedFaction Faction, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedOnlinePlayerProfileLibrary", "ConvertFactionToRankedFaction");

	Params::TedOnlinePlayerProfileLibrary_ConvertFactionToRankedFaction Parms{};

	Parms.Faction = Faction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlinePlayerProfileLibrary.GetCumulativeData_Averages
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTedStatistics&            InProfile                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<ETedServerType>&           ServerType                                             (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const TArray<ETedRankedFaction>&        Factions                                               (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FTedMatchCumulativeData          ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FTedMatchCumulativeData UTedOnlinePlayerProfileLibrary::GetCumulativeData_Averages(const struct FTedStatistics& InProfile, const TArray<ETedServerType>& ServerType, const TArray<ETedRankedFaction>& Factions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedOnlinePlayerProfileLibrary", "GetCumulativeData_Averages");

	Params::TedOnlinePlayerProfileLibrary_GetCumulativeData_Averages Parms{};

	Parms.InProfile = std::move(InProfile);
	Parms.ServerType = std::move(ServerType);
	Parms.Factions = std::move(Factions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlinePlayerProfileLibrary.GetCumulativeData_Totals
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTedStatistics&            InProfile                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<ETedServerType>&           ServerType                                             (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const TArray<ETedRankedFaction>&        Factions                                               (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FTedMatchCumulativeData          ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FTedMatchCumulativeData UTedOnlinePlayerProfileLibrary::GetCumulativeData_Totals(const struct FTedStatistics& InProfile, const TArray<ETedServerType>& ServerType, const TArray<ETedRankedFaction>& Factions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedOnlinePlayerProfileLibrary", "GetCumulativeData_Totals");

	Params::TedOnlinePlayerProfileLibrary_GetCumulativeData_Totals Parms{};

	Parms.InProfile = std::move(InProfile);
	Parms.ServerType = std::move(ServerType);
	Parms.Factions = std::move(Factions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlinePlayerProfileLibrary.GetLocalHydraId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FString UTedOnlinePlayerProfileLibrary::GetLocalHydraId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedOnlinePlayerProfileLibrary", "GetLocalHydraId");

	Params::TedOnlinePlayerProfileLibrary_GetLocalHydraId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlinePlayerProfileLibrary.GetLocalLastMatch
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WCO                                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedMatchData                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTedMatchData UTedOnlinePlayerProfileLibrary::GetLocalLastMatch(const class UObject* WCO)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedOnlinePlayerProfileLibrary", "GetLocalLastMatch");

	Params::TedOnlinePlayerProfileLibrary_GetLocalLastMatch Parms{};

	Parms.WCO = WCO;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlinePlayerProfileLibrary.GetLocalProviderId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FString UTedOnlinePlayerProfileLibrary::GetLocalProviderId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedOnlinePlayerProfileLibrary", "GetLocalProviderId");

	Params::TedOnlinePlayerProfileLibrary_GetLocalProviderId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlinePlayerProfileLibrary.GetLocalTotalMapWins
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WCO                                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedMapInfo*                Map                                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<ETedServerType>&           ServerType                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<ETedRankedFaction>&        Factions                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedOnlinePlayerProfileLibrary::GetLocalTotalMapWins(const class UObject* WCO, const class UTedMapInfo* Map, const TArray<ETedServerType>& ServerType, const TArray<ETedRankedFaction>& Factions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedOnlinePlayerProfileLibrary", "GetLocalTotalMapWins");

	Params::TedOnlinePlayerProfileLibrary_GetLocalTotalMapWins Parms{};

	Parms.WCO = WCO;
	Parms.Map = Map;
	Parms.ServerType = std::move(ServerType);
	Parms.Factions = std::move(Factions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlinePlayerProfileLibrary.GetLocalTotalWins
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WCO                                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<ETedServerType>&           ServerType                                             (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const TArray<ETedRankedFaction>&        Factions                                               (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedOnlinePlayerProfileLibrary::GetLocalTotalWins(const class UObject* WCO, const TArray<ETedServerType>& ServerType, const TArray<ETedRankedFaction>& Factions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedOnlinePlayerProfileLibrary", "GetLocalTotalWins");

	Params::TedOnlinePlayerProfileLibrary_GetLocalTotalWins Parms{};

	Parms.WCO = WCO;
	Parms.ServerType = std::move(ServerType);
	Parms.Factions = std::move(Factions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlinePlayerProfileWidget.Close
// (Final, Native, Static, Public, BlueprintCallable)

void UTedOnlinePlayerProfileWidget::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedOnlinePlayerProfileWidget", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlinePlayerProfileWidget.IsCurrentPlayerProfilePreorder
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UUserWidget*                InUserWidget                                           (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlinePlayerProfileWidget::IsCurrentPlayerProfilePreorder(const class UUserWidget* InUserWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedOnlinePlayerProfileWidget", "IsCurrentPlayerProfilePreorder");

	Params::TedOnlinePlayerProfileWidget_IsCurrentPlayerProfilePreorder Parms{};

	Parms.InUserWidget = InUserWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlinePlayerProfileWidget.Show
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InHydraId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedOnlinePlayerProfileWidgetContextParams&InAdditionalParams                                     (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)

void UTedOnlinePlayerProfileWidget::Show(const class FString& InHydraId, const struct FTedOnlinePlayerProfileWidgetContextParams& InAdditionalParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedOnlinePlayerProfileWidget", "Show");

	Params::TedOnlinePlayerProfileWidget_Show Parms{};

	Parms.InHydraId = std::move(InHydraId);
	Parms.InAdditionalParams = std::move(InAdditionalParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlinePlayerProfileWidget.GetProfileContext
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UTedOnlinePlayerProfileWidgetContext*ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedOnlinePlayerProfileWidgetContext* UTedOnlinePlayerProfileWidget::GetProfileContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlinePlayerProfileWidget", "GetProfileContext");

	Params::TedOnlinePlayerProfileWidget_GetProfileContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlinePlayerProfileWidget.OnLowerButtonsPanelSlotAction
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlinePlayerProfileWidget::OnLowerButtonsPanelSlotAction(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlinePlayerProfileWidget", "OnLowerButtonsPanelSlotAction");

	Params::TedOnlinePlayerProfileWidget_OnLowerButtonsPanelSlotAction Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlinePlayerProfileWidget.OnMainMenuPageOpenedOrClosed
// (Final, Native, Protected)
// Parameters:
// bool                                    bOpened                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlinePlayerProfileWidget::OnMainMenuPageOpenedOrClosed(bool bOpened)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlinePlayerProfileWidget", "OnMainMenuPageOpenedOrClosed");

	Params::TedOnlinePlayerProfileWidget_OnMainMenuPageOpenedOrClosed Parms{};

	Parms.bOpened = bOpened;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlinePlayerProfileWidget.OnSeasonSelectionChanged
// (Final, Native, Protected)
// Parameters:
// int32                                   NewSeason                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlinePlayerProfileWidget::OnSeasonSelectionChanged(int32 NewSeason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlinePlayerProfileWidget", "OnSeasonSelectionChanged");

	Params::TedOnlinePlayerProfileWidget_OnSeasonSelectionChanged Parms{};

	Parms.NewSeason = NewSeason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlinePlayerProfileWidget.OnTabsPanelSlotAction
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlinePlayerProfileWidget::OnTabsPanelSlotAction(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlinePlayerProfileWidget", "OnTabsPanelSlotAction");

	Params::TedOnlinePlayerProfileWidget_OnTabsPanelSlotAction Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlinePlayerProfileWidget.GetRankingProgression
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedRankingProgressionWidget*     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedRankingProgressionWidget* UTedOnlinePlayerProfileWidget::GetRankingProgression() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlinePlayerProfileWidget", "GetRankingProgression");

	Params::TedOnlinePlayerProfileWidget_GetRankingProgression Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlinePlayerProfileWidget.GetStatsOverview
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedPlayerProfileStatisticsOverview*ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedPlayerProfileStatisticsOverview* UTedOnlinePlayerProfileWidget::GetStatsOverview() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlinePlayerProfileWidget", "GetStatsOverview");

	Params::TedOnlinePlayerProfileWidget_GetStatsOverview Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlinePlayerProfileWidget.GetTabsPanel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedContentPanelInstanced*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedContentPanelInstanced* UTedOnlinePlayerProfileWidget::GetTabsPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlinePlayerProfileWidget", "GetTabsPanel");

	Params::TedOnlinePlayerProfileWidget_GetTabsPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlinePlayerProfileWidget.StatsOverview_GetSelectedSeason
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedOnlinePlayerProfileWidget::StatsOverview_GetSelectedSeason() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlinePlayerProfileWidget", "StatsOverview_GetSelectedSeason");

	Params::TedOnlinePlayerProfileWidget_StatsOverview_GetSelectedSeason Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionPlayersPanel.K2_SetContextSearchResult
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTedOnlineSessionSearchResultWrappper&InSearchResult                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedOnlineSessionPlayersPanel::K2_SetContextSearchResult(const struct FTedOnlineSessionSearchResultWrappper& InSearchResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionPlayersPanel", "K2_SetContextSearchResult");

	Params::TedOnlineSessionPlayersPanel_K2_SetContextSearchResult Parms{};

	Parms.InSearchResult = std::move(InSearchResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionPlayersPanel.GetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedOnlineSessionPlayerContent*  OutContent                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionPlayersPanel::GetContent(const int32 InSlotIndex, struct FTedOnlineSessionPlayerContent* OutContent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionPlayersPanel", "GetContent");

	Params::TedOnlineSessionPlayersPanel_GetContent Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutContent != nullptr)
		*OutContent = std::move(Parms.OutContent);

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionPlayersPanel.IsEmpty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionPlayersPanel::IsEmpty(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionPlayersPanel", "IsEmpty");

	Params::TedOnlineSessionPlayersPanel_IsEmpty Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionPlayersPanel.IsReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionPlayersPanel::IsReady(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionPlayersPanel", "IsReady");

	Params::TedOnlineSessionPlayersPanel_IsReady Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionPlayersPanel.Kick
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class ALobbyBeaconPlayerState*          Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionPlayersPanel::Kick(class ALobbyBeaconPlayerState* Player) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionPlayersPanel", "Kick");

	Params::TedOnlineSessionPlayersPanel_Kick Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionSettingsPanel.ChangeSettingValue_Int32
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionSettingsPanel::ChangeSettingValue_Int32(const int32 InSlotIndex, const int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionSettingsPanel", "ChangeSettingValue_Int32");

	Params::TedOnlineSessionSettingsPanel_ChangeSettingValue_Int32 Parms{};

	Parms.InSlotIndex = InSlotIndex;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionSettingsPanel.SetMemberState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ALobbyBeaconPlayerState*          InMember                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionSettingsPanel::SetMemberState(class ALobbyBeaconPlayerState* InMember)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionSettingsPanel", "SetMemberState");

	Params::TedOnlineSessionSettingsPanel_SetMemberState Parms{};

	Parms.InMember = InMember;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionSettingsPanel.CheckReadyUp
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bIsReadOnly                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionSettingsPanel::CheckReadyUp(const int32 InSlotIndex, const bool bIsReadOnly) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionSettingsPanel", "CheckReadyUp");

	Params::TedOnlineSessionSettingsPanel_CheckReadyUp Parms{};

	Parms.InSlotIndex = InSlotIndex;
	Parms.bIsReadOnly = bIsReadOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionSettingsPanel.GetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedOnlineSessionSettingsContent*OutContent                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionSettingsPanel::GetContent(const int32 InSlotIndex, struct FTedOnlineSessionSettingsContent* OutContent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionSettingsPanel", "GetContent");

	Params::TedOnlineSessionSettingsPanel_GetContent Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutContent != nullptr)
		*OutContent = std::move(Parms.OutContent);

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionSettingsPanel.IsReadOnly
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionSettingsPanel::IsReadOnly(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionSettingsPanel", "IsReadOnly");

	Params::TedOnlineSessionSettingsPanel_IsReadOnly Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsPanel.K2_GetOnlineSessionsPanelState_SortingAscending
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ETedContentSlotState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedContentSlotState UTedOnlineSessionsPanel::K2_GetOnlineSessionsPanelState_SortingAscending()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedOnlineSessionsPanel", "K2_GetOnlineSessionsPanelState_SortingAscending");

	Params::TedOnlineSessionsPanel_K2_GetOnlineSessionsPanelState_SortingAscending Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsPanel.K2_GetOnlineSessionsPanelState_SortingEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ETedContentSlotState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedContentSlotState UTedOnlineSessionsPanel::K2_GetOnlineSessionsPanelState_SortingEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedOnlineSessionsPanel", "K2_GetOnlineSessionsPanelState_SortingEnabled");

	Params::TedOnlineSessionsPanel_K2_GetOnlineSessionsPanelState_SortingEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsPanel.ClearFilterString
// (Final, Native, Public, BlueprintCallable)

void UTedOnlineSessionsPanel::ClearFilterString()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsPanel", "ClearFilterString");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionsPanel.FallbackToDefaultSorting
// (Final, Native, Public, BlueprintCallable)

void UTedOnlineSessionsPanel::FallbackToDefaultSorting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsPanel", "FallbackToDefaultSorting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionsPanel.OnActivateHeaderSlotState
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsPanel::OnActivateHeaderSlotState(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsPanel", "OnActivateHeaderSlotState");

	Params::TedOnlineSessionsPanel_OnActivateHeaderSlotState Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionsPanel.OnHeaderContentChange
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelDynamic*          InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsPanel::OnHeaderContentChange(class UTedContentPanelDynamic* InContentPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsPanel", "OnHeaderContentChange");

	Params::TedOnlineSessionsPanel_OnHeaderContentChange Parms{};

	Parms.InContentPanel = InContentPanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionsPanel.OnTriggerHeaderSlotAction
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsPanel::OnTriggerHeaderSlotAction(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsPanel", "OnTriggerHeaderSlotAction");

	Params::TedOnlineSessionsPanel_OnTriggerHeaderSlotAction Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionsPanel.OnTriggerLobbyTypeSlotAction
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsPanel::OnTriggerLobbyTypeSlotAction(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsPanel", "OnTriggerLobbyTypeSlotAction");

	Params::TedOnlineSessionsPanel_OnTriggerLobbyTypeSlotAction Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionsPanel.SetFilterString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InFilterString                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsPanel::SetFilterString(const class FString& InFilterString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsPanel", "SetFilterString");

	Params::TedOnlineSessionsPanel_SetFilterString Parms{};

	Parms.InFilterString = std::move(InFilterString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionsPanel.SortContent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bInSkipRefreshUI                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedOnlineSessionsPanel::SortContent(const bool bInSkipRefreshUI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsPanel", "SortContent");

	Params::TedOnlineSessionsPanel_SortContent Parms{};

	Parms.bInSkipRefreshUI = bInSkipRefreshUI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedOnlineSessionsPanel.AreSpectatorsEnabledOnUI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsPanel::AreSpectatorsEnabledOnUI() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsPanel", "AreSpectatorsEnabledOnUI");

	Params::TedOnlineSessionsPanel_AreSpectatorsEnabledOnUI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsPanel.Authenticate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString&                    InPassword                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InSlotIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsPanel::Authenticate(const class FString& InPassword, int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsPanel", "Authenticate");

	Params::TedOnlineSessionsPanel_Authenticate Parms{};

	Parms.InPassword = std::move(InPassword);
	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsPanel.GetCurrentPlayers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UTedOnlineSessionsPanel::GetCurrentPlayers(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsPanel", "GetCurrentPlayers");

	Params::TedOnlineSessionsPanel_GetCurrentPlayers Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsPanel.GetCurrentSorting
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool*                                   OutAscending                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UTedOnlineSessionsPanel::GetCurrentSorting(bool* OutAscending) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsPanel", "GetCurrentSorting");

	Params::TedOnlineSessionsPanel_GetCurrentSorting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAscending != nullptr)
		*OutAscending = Parms.OutAscending;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsPanel.GetCurrentSpectators
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UTedOnlineSessionsPanel::GetCurrentSpectators(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsPanel", "GetCurrentSpectators");

	Params::TedOnlineSessionsPanel_GetCurrentSpectators Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsPanel.GetFStrByKey
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          OutValue                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedSessionSettingKey                   SettingKey                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bValidateEmptyStrings                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsPanel::GetFStrByKey(const int32 InSlotIndex, class FString* OutValue, ETedSessionSettingKey SettingKey, bool bValidateEmptyStrings) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsPanel", "GetFStrByKey");

	Params::TedOnlineSessionsPanel_GetFStrByKey Parms{};

	Parms.InSlotIndex = InSlotIndex;
	Parms.SettingKey = SettingKey;
	Parms.bValidateEmptyStrings = bValidateEmptyStrings;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutValue != nullptr)
		*OutValue = std::move(Parms.OutValue);

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsPanel.GetHostName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedOnlineSessionsPanel::GetHostName(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsPanel", "GetHostName");

	Params::TedOnlineSessionsPanel_GetHostName Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsPanel.GetLobbyName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedOnlineSessionsPanel::GetLobbyName(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsPanel", "GetLobbyName");

	Params::TedOnlineSessionsPanel_GetLobbyName Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsPanel.GetMap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedMapInfo*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedMapInfo* UTedOnlineSessionsPanel::GetMap(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsPanel", "GetMap");

	Params::TedOnlineSessionsPanel_GetMap Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsPanel.GetMapMinimap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTedOnlineSessionsPanel::GetMapMinimap(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsPanel", "GetMapMinimap");

	Params::TedOnlineSessionsPanel_GetMapMinimap Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsPanel.GetMapName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedOnlineSessionsPanel::GetMapName(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsPanel", "GetMapName");

	Params::TedOnlineSessionsPanel_GetMapName Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsPanel.GetMaxPlayers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UTedOnlineSessionsPanel::GetMaxPlayers(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsPanel", "GetMaxPlayers");

	Params::TedOnlineSessionsPanel_GetMaxPlayers Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsPanel.GetMaxSpectators
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UTedOnlineSessionsPanel::GetMaxSpectators(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsPanel", "GetMaxSpectators");

	Params::TedOnlineSessionsPanel_GetMaxSpectators Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsPanel.GetPing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedOnlineSessionsPanel::GetPing(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsPanel", "GetPing");

	Params::TedOnlineSessionsPanel_GetPing Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsPanel.GetSelectedLobbyType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedServerType                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedServerType UTedOnlineSessionsPanel::GetSelectedLobbyType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsPanel", "GetSelectedLobbyType");

	Params::TedOnlineSessionsPanel_GetSelectedLobbyType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedOnlineSessionsPanel.IsPasswordProtected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   InSlotIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedOnlineSessionsPanel::IsPasswordProtected(int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedOnlineSessionsPanel", "IsPasswordProtected");

	Params::TedOnlineSessionsPanel_IsPasswordProtected Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPartyManager.OnPartyCreateComplete
// (Final, Native, Private)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EProsdkErrorCodePresence                ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPartyManager::OnPartyCreateComplete(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPartyManager", "OnPartyCreateComplete");

	Params::TedPartyManager_OnPartyCreateComplete Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.ResultCode = ResultCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPartyManager.OnPartyDisbandComplete
// (Final, Native, Private)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EProsdkErrorCodePresence                ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPartyManager::OnPartyDisbandComplete(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPartyManager", "OnPartyDisbandComplete");

	Params::TedPartyManager_OnPartyDisbandComplete Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.ResultCode = ResultCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPartyManager.OnPartyGetInvite
// (Final, Native, Private, HasOutParams)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FromUserId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EHydra5InviteEventType&           EventType                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPartyManager::OnPartyGetInvite(int32 LocalUserNum, const class FString& FromUserId, const EHydra5InviteEventType& EventType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPartyManager", "OnPartyGetInvite");

	Params::TedPartyManager_OnPartyGetInvite Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.FromUserId = std::move(FromUserId);
	Parms.EventType = EventType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPartyManager.OnPartyInviteAcceptComplete
// (Final, Native, Private)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EProsdkErrorCodePresence                ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPartyManager::OnPartyInviteAcceptComplete(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPartyManager", "OnPartyInviteAcceptComplete");

	Params::TedPartyManager_OnPartyInviteAcceptComplete Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.ResultCode = ResultCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPartyManager.OnPartyInviteRejectComplete
// (Final, Native, Private)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EProsdkErrorCodePresence                ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPartyManager::OnPartyInviteRejectComplete(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPartyManager", "OnPartyInviteRejectComplete");

	Params::TedPartyManager_OnPartyInviteRejectComplete Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.ResultCode = ResultCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPartyManager.OnPartyInviteRevokeComplete
// (Final, Native, Private)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EProsdkErrorCodePresence                ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPartyManager::OnPartyInviteRevokeComplete(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPartyManager", "OnPartyInviteRevokeComplete");

	Params::TedPartyManager_OnPartyInviteRevokeComplete Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.ResultCode = ResultCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPartyManager.OnPartyInviteSendComplete
// (Final, Native, Private)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EProsdkErrorCodePresence                ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPartyManager::OnPartyInviteSendComplete(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPartyManager", "OnPartyInviteSendComplete");

	Params::TedPartyManager_OnPartyInviteSendComplete Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.ResultCode = ResultCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPartyManager.OnPartyJoinCodeGenerateComplete
// (Final, Native, Private)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EProsdkErrorCodePresence                ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPartyManager::OnPartyJoinCodeGenerateComplete(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPartyManager", "OnPartyJoinCodeGenerateComplete");

	Params::TedPartyManager_OnPartyJoinCodeGenerateComplete Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.ResultCode = ResultCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPartyManager.OnPartyJoinCodeResetComplete
// (Final, Native, Private)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EProsdkErrorCodePresence                ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPartyManager::OnPartyJoinCodeResetComplete(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPartyManager", "OnPartyJoinCodeResetComplete");

	Params::TedPartyManager_OnPartyJoinCodeResetComplete Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.ResultCode = ResultCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPartyManager.OnPartyJoinCodeUseComplete
// (Final, Native, Private)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EProsdkErrorCodePresence                ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPartyManager::OnPartyJoinCodeUseComplete(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPartyManager", "OnPartyJoinCodeUseComplete");

	Params::TedPartyManager_OnPartyJoinCodeUseComplete Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.ResultCode = ResultCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPartyManager.OnPartyJoinComplete
// (Final, Native, Private)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EProsdkErrorCodePresence                ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPartyManager::OnPartyJoinComplete(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPartyManager", "OnPartyJoinComplete");

	Params::TedPartyManager_OnPartyJoinComplete Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.ResultCode = ResultCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPartyManager.OnPartyLeaveComplete
// (Final, Native, Private)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EProsdkErrorCodePresence                ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPartyManager::OnPartyLeaveComplete(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPartyManager", "OnPartyLeaveComplete");

	Params::TedPartyManager_OnPartyLeaveComplete Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.ResultCode = ResultCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPartyManager.OnPartyRemoveMemberComplete
// (Final, Native, Private)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EProsdkErrorCodePresence                ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPartyManager::OnPartyRemoveMemberComplete(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPartyManager", "OnPartyRemoveMemberComplete");

	Params::TedPartyManager_OnPartyRemoveMemberComplete Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.ResultCode = ResultCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPartyManager.OnPartySetLeaderComplete
// (Final, Native, Private)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EProsdkErrorCodePresence                ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPartyManager::OnPartySetLeaderComplete(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPartyManager", "OnPartySetLeaderComplete");

	Params::TedPartyManager_OnPartySetLeaderComplete Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.ResultCode = ResultCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPartyManager.OnPartyUpdate
// (Final, Native, Private, HasOutParams)
// Parameters:
// int32                                   AuthorizationIndex                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FPartyStatus&              PartyStatus                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FPartyStatusUpdateReason&  Reason                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTedPartyManager::OnPartyUpdate(int32 AuthorizationIndex, const struct FPartyStatus& PartyStatus, const struct FPartyStatusUpdateReason& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPartyManager", "OnPartyUpdate");

	Params::TedPartyManager_OnPartyUpdate Parms{};

	Parms.AuthorizationIndex = AuthorizationIndex;
	Parms.PartyStatus = std::move(PartyStatus);
	Parms.Reason = std::move(Reason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPassiveAbilitySlot.GetContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedPassiveAbilityDefinitionAsset*ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedPassiveAbilityDefinitionAsset* UTedPassiveAbilitySlot::GetContent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPassiveAbilitySlot", "GetContent");

	Params::TedPassiveAbilitySlot_GetContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPassiveAbilitySlot.GetContentDescription
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText*                            OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPassiveAbilitySlot::GetContentDescription(class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPassiveAbilitySlot", "GetContentDescription");

	Params::TedPassiveAbilitySlot_GetContentDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function Tempest.TedPassiveAbilitySlot.GetContentDisplayName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText*                            OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPassiveAbilitySlot::GetContentDisplayName(class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPassiveAbilitySlot", "GetContentDisplayName");

	Params::TedPassiveAbilitySlot_GetContentDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function Tempest.TedPassiveAbilitySlot.GetContentIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTedPassiveAbilitySlot::GetContentIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPassiveAbilitySlot", "GetContentIcon");

	Params::TedPassiveAbilitySlot_GetContentIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPassiveAbilitySlot.GetParentPanel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedPassiveAbilityPanel*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedPassiveAbilityPanel* UTedPassiveAbilitySlot::GetParentPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPassiveAbilitySlot", "GetParentPanel");

	Params::TedPassiveAbilitySlot_GetParentPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPauseMenuScreen.OnPauseMenuButtonSlotAction
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPauseMenuScreen::OnPauseMenuButtonSlotAction(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPauseMenuScreen", "OnPauseMenuButtonSlotAction");

	Params::TedPauseMenuScreen_OnPauseMenuButtonSlotAction Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPauseMenuScreen.GetPauseMenuPopup
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedPopup*                        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedPopup* UTedPauseMenuScreen::GetPauseMenuPopup() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPauseMenuScreen", "GetPauseMenuPopup");

	Params::TedPauseMenuScreen_GetPauseMenuPopup Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawnCarrierInterface.GetLoad
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class ATedPawn*>                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ATedPawn*> ITedPawnCarrierInterface::GetLoad() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("TedPawnCarrierInterface", "GetLoad");

	Params::TedPawnCarrierInterface_GetLoad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawnCommandPreview_DeployStructure.UpdateRangeDecalData
// (Final, Native, Public)
// Parameters:
// const TSubclassOf<class ATedStructureBase>StructureClass                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawnCommandPreview_DeployStructure::UpdateRangeDecalData(const TSubclassOf<class ATedStructureBase> StructureClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnCommandPreview_DeployStructure", "UpdateRangeDecalData");

	Params::TedPawnCommandPreview_DeployStructure_UpdateRangeDecalData Parms{};

	Parms.StructureClass = StructureClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawnCommandVisualActor.K2_OnRep_ContextActors
// (Event, Protected, BlueprintEvent)

void ATedPawnCommandVisualActor::K2_OnRep_ContextActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnCommandVisualActor", "K2_OnRep_ContextActors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedPawnCommandVisualActor.OnContextActorDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor*                           ContextActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPawnCommandVisualActor::OnContextActorDestroyed(class AActor* ContextActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnCommandVisualActor", "OnContextActorDestroyed");

	Params::TedPawnCommandVisualActor_OnContextActorDestroyed Parms{};

	Parms.ContextActor = ContextActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawnCommandVisualActor.OnRep_ContextActors
// (Final, Native, Protected)

void ATedPawnCommandVisualActor::OnRep_ContextActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnCommandVisualActor", "OnRep_ContextActors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawnCommandVisualActor.GetContextActors
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> ATedPawnCommandVisualActor::GetContextActors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnCommandVisualActor", "GetContextActors");

	Params::TedPawnCommandVisualActor_GetContextActors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawnCommand_ActivateAbility.CreateAbilityCommandDataWithClass
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class UTedAbilityBase>      InAbilityClass                                         (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInUsePayload                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayEventData&        InPayload                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayCommandData             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayCommandData UTedPawnCommand_ActivateAbility::CreateAbilityCommandDataWithClass(TSubclassOf<class UTedAbilityBase> InAbilityClass, bool bInUsePayload, const struct FGameplayEventData& InPayload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPawnCommand_ActivateAbility", "CreateAbilityCommandDataWithClass");

	Params::TedPawnCommand_ActivateAbility_CreateAbilityCommandDataWithClass Parms{};

	Parms.InAbilityClass = InAbilityClass;
	Parms.bInUsePayload = bInUsePayload;
	Parms.InPayload = std::move(InPayload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawnCommand_ActivateAbility.CreateAbilityCommandDataWithTags
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     InAbilityTags                                          (Parm, NativeAccessSpecifierPublic)
// bool                                    bInUsePayload                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayEventData&        InPayload                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayCommandData             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayCommandData UTedPawnCommand_ActivateAbility::CreateAbilityCommandDataWithTags(const struct FGameplayTagContainer& InAbilityTags, bool bInUsePayload, const struct FGameplayEventData& InPayload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPawnCommand_ActivateAbility", "CreateAbilityCommandDataWithTags");

	Params::TedPawnCommand_ActivateAbility_CreateAbilityCommandDataWithTags Parms{};

	Parms.InAbilityTags = std::move(InAbilityTags);
	Parms.bInUsePayload = bInUsePayload;
	Parms.InPayload = std::move(InPayload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawnCommand_UnloadGivenPawns.CreateCommandData_UnloadGivenPawns
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const TArray<class ATedPawn*>&          Pawns                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TSubclassOf<class UTedCommand>          CommandOverride                                        (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCommandData             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayCommandData UTedPawnCommand_UnloadGivenPawns::CreateCommandData_UnloadGivenPawns(const TArray<class ATedPawn*>& Pawns, TSubclassOf<class UTedCommand> CommandOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPawnCommand_UnloadGivenPawns", "CreateCommandData_UnloadGivenPawns");

	Params::TedPawnCommand_UnloadGivenPawns_CreateCommandData_UnloadGivenPawns Parms{};

	Parms.Pawns = std::move(Pawns);
	Parms.CommandOverride = CommandOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawnContainerComponent.HasPawnsInContainer
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPawnContainerComponent::HasPawnsInContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnContainerComponent", "HasPawnsInContainer");

	Params::TedPawnContainerComponent_HasPawnsInContainer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawnContainerComponent.OnOwnerTakeDamage
// (Final, Native, Protected)
// Parameters:
// class AActor*                           DamagedActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UDamageType*                DamageType                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      InstigatedBy                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPawnContainerComponent::OnOwnerTakeDamage(class AActor* DamagedActor, float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnContainerComponent", "OnOwnerTakeDamage");

	Params::TedPawnContainerComponent_OnOwnerTakeDamage Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawnContainerComponent.OnRep_PawnsInContainer
// (Final, Native, Protected)

void UTedPawnContainerComponent::OnRep_PawnsInContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnContainerComponent", "OnRep_PawnsInContainer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawnContainerComponent.OnStoredPawnDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPawnContainerComponent::OnStoredPawnDestroyed(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnContainerComponent", "OnStoredPawnDestroyed");

	Params::TedPawnContainerComponent_OnStoredPawnDestroyed Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawnContainerComponent.RequestStorePawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ATedPawn*                         InPawn                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPawnContainerComponent::RequestStorePawn(class ATedPawn* InPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnContainerComponent", "RequestStorePawn");

	Params::TedPawnContainerComponent_RequestStorePawn Parms{};

	Parms.InPawn = InPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawnContainerComponent.CanStorePawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class ATedPawn*                   InPawn                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPawnContainerComponent::CanStorePawn(const class ATedPawn* InPawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnContainerComponent", "CanStorePawn");

	Params::TedPawnContainerComponent_CanStorePawn Parms{};

	Parms.InPawn = InPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawnContainerComponent.CanUnitsFireFromInside
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPawnContainerComponent::CanUnitsFireFromInside() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnContainerComponent", "CanUnitsFireFromInside");

	Params::TedPawnContainerComponent_CanUnitsFireFromInside Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawnContainerComponent.GetNumberOfFreeSlots
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedPawnContainerComponent::GetNumberOfFreeSlots() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnContainerComponent", "GetNumberOfFreeSlots");

	Params::TedPawnContainerComponent_GetNumberOfFreeSlots Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawnContainerComponent.GetNumberOfSlots
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedPawnContainerComponent::GetNumberOfSlots() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnContainerComponent", "GetNumberOfSlots");

	Params::TedPawnContainerComponent_GetNumberOfSlots Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawnContainerComponent.GetStoredPawns
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class ATedPawn*>           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class ATedPawn*> UTedPawnContainerComponent::GetStoredPawns() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnContainerComponent", "GetStoredPawns");

	Params::TedPawnContainerComponent_GetStoredPawns Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUnitDefinitionAsset.GetGarrisonSlotCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedUnitDefinitionAsset::GetGarrisonSlotCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitDefinitionAsset", "GetGarrisonSlotCount");

	Params::TedUnitDefinitionAsset_GetGarrisonSlotCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawnSoundManager.OnSoundFinished
// (Final, Native, Protected)

void UTedPawnSoundManager::OnSoundFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnSoundManager", "OnSoundFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawnsPanelSlot.OnPawnDamaged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           DamagedActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UDamageType*                DamageType                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      InstigatedBy                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPawnsPanelSlot::OnPawnDamaged(class AActor* DamagedActor, float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnsPanelSlot", "OnPawnDamaged");

	Params::TedPawnsPanelSlot_OnPawnDamaged Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawnsPanelSlot.GetContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedPawn*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedPawn* UTedPawnsPanelSlot::GetContent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnsPanelSlot", "GetContent");

	Params::TedPawnsPanelSlot_GetContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawnsPanelSlot.GetContentIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTedPawnsPanelSlot::GetContentIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnsPanelSlot", "GetContentIcon");

	Params::TedPawnsPanelSlot_GetContentIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawnsPanelSlot.GetPawnsPanel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedPawnsPanel*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedPawnsPanel* UTedPawnsPanelSlot::GetPawnsPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnsPanelSlot", "GetPawnsPanel");

	Params::TedPawnsPanelSlot_GetPawnsPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawnVeterancyWidget.SetDisplayedPawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ATedPawn*                         InPawn                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPawnVeterancyWidget::SetDisplayedPawn(class ATedPawn* InPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnVeterancyWidget", "SetDisplayedPawn");

	Params::TedPawnVeterancyWidget_SetDisplayedPawn Parms{};

	Parms.InPawn = InPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPawnVeterancyWidget.DisplayPawnHasVeterancy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPawnVeterancyWidget::DisplayPawnHasVeterancy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnVeterancyWidget", "DisplayPawnHasVeterancy");

	Params::TedPawnVeterancyWidget_DisplayPawnHasVeterancy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawnVeterancyWidget.GetDisplayedPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedPawn*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedPawn* UTedPawnVeterancyWidget::GetDisplayedPawn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnVeterancyWidget", "GetDisplayedPawn");

	Params::TedPawnVeterancyWidget_GetDisplayedPawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawnVeterancyWidget.GetVeterancyLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedPawnVeterancyWidget::GetVeterancyLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnVeterancyWidget", "GetVeterancyLevel");

	Params::TedPawnVeterancyWidget_GetVeterancyLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPawnVeterancyWidget.GetVeterancyProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedPawnVeterancyWidget::GetVeterancyProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPawnVeterancyWidget", "GetVeterancyProgress");

	Params::TedPawnVeterancyWidget_GetVeterancyProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPerformanceStatSubsystem.GetStatValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const ETedDisplayablePerformanceStat    Stat                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

double UTedPerformanceStatSubsystem::GetStatValue(const ETedDisplayablePerformanceStat Stat) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPerformanceStatSubsystem", "GetStatValue");

	Params::TedPerformanceStatSubsystem_GetStatValue Parms{};

	Parms.Stat = Stat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPerfStatOverlayWidget.UpdateVisibilityOfChildren
// (Final, Native, Public, BlueprintCallable)

void UTedPerfStatOverlayWidget::UpdateVisibilityOfChildren()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPerfStatOverlayWidget", "UpdateVisibilityOfChildren");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPickupActor.NetMulticast_PickedUp
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// class ATedUnitBase*                     PickedUpBy                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPickupActor::NetMulticast_PickedUp(class ATedUnitBase* PickedUpBy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPickupActor", "NetMulticast_PickedUp");

	Params::TedPickupActor_NetMulticast_PickedUp Parms{};

	Parms.PickedUpBy = PickedUpBy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPickupActor.OnBlockingStructureEndPlay
// (Final, Native, Protected)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          InEndPlayReason                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPickupActor::OnBlockingStructureEndPlay(class AActor* InActor, EEndPlayReason InEndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPickupActor", "OnBlockingStructureEndPlay");

	Params::TedPickupActor_OnBlockingStructureEndPlay Parms{};

	Parms.InActor = InActor;
	Parms.InEndPlayReason = InEndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPickupActor.OnRep_IsEnabled
// (Final, Native, Protected)

void ATedPickupActor::OnRep_IsEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPickupActor", "OnRep_IsEnabled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPickupActor.PickUp
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class ATedUnitBase*                     PickUpBy                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPickupActor::PickUp(class ATedUnitBase* PickUpBy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPickupActor", "PickUp");

	Params::TedPickupActor_PickUp Parms{};

	Parms.PickUpBy = PickUpBy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPickupActor.ReceiveDisabled
// (BlueprintAuthorityOnly, Event, Protected, BlueprintEvent)

void ATedPickupActor::ReceiveDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPickupActor", "ReceiveDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedPickupActor.ReceiveEnabled
// (BlueprintAuthorityOnly, Event, Protected, BlueprintEvent)

void ATedPickupActor::ReceiveEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPickupActor", "ReceiveEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedPickupActor.ReceivePickedUp
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ATedUnitBase*                     PikedUpBy                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPickupActor::ReceivePickedUp(class ATedUnitBase* PikedUpBy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPickupActor", "ReceivePickedUp");

	Params::TedPickupActor_ReceivePickedUp Parms{};

	Parms.PikedUpBy = PikedUpBy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedPickupActor.SetEnabled
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInEnabled                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPickupActor::SetEnabled(bool bInEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPickupActor", "SetEnabled");

	Params::TedPickupActor_SetEnabled Parms{};

	Parms.bInEnabled = bInEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPickupActor.CanPickUp
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ATedUnitBase*                     PickUpBy                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPickupActor::CanPickUp(class ATedUnitBase* PickUpBy) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPickupActor", "CanPickUp");

	Params::TedPickupActor_CanPickUp Parms{};

	Parms.PickUpBy = PickUpBy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPickupActor.IsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPickupActor::IsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPickupActor", "IsEnabled");

	Params::TedPickupActor_IsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPingActor.OnRep_InStorage
// (Final, Native, Protected)

void ATedPingActor::OnRep_InStorage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPingActor", "OnRep_InStorage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerCameraComponent.InterpolateCameraToLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   TargetLocation                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InterpTime                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InterpExponent                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             OverrideZoomPct                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             LockTargetLocationTime                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bReturnToStartLocation                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedPlayerCameraComponent::InterpolateCameraToLocation(const struct FVector& TargetLocation, const float InterpTime, const float InterpExponent, const float OverrideZoomPct, const float LockTargetLocationTime, const bool bReturnToStartLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerCameraComponent", "InterpolateCameraToLocation");

	Params::TedPlayerCameraComponent_InterpolateCameraToLocation Parms{};

	Parms.TargetLocation = std::move(TargetLocation);
	Parms.InterpTime = InterpTime;
	Parms.InterpExponent = InterpExponent;
	Parms.OverrideZoomPct = OverrideZoomPct;
	Parms.LockTargetLocationTime = LockTargetLocationTime;
	Parms.bReturnToStartLocation = bReturnToStartLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerCommandsWidget.OnCollapseButtonAcivateState
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerCommandsWidget::OnCollapseButtonAcivateState(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerCommandsWidget", "OnCollapseButtonAcivateState");

	Params::TedPlayerCommandsWidget_OnCollapseButtonAcivateState Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerCommandsWidget.OnCollapseButtonPanelTriggerAction
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerCommandsWidget::OnCollapseButtonPanelTriggerAction(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerCommandsWidget", "OnCollapseButtonPanelTriggerAction");

	Params::TedPlayerCommandsWidget_OnCollapseButtonPanelTriggerAction Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerCommandsWidget.OnCommandsPanelContentChange
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelDynamic*          InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerCommandsWidget::OnCommandsPanelContentChange(class UTedContentPanelDynamic* InContentPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerCommandsWidget", "OnCommandsPanelContentChange");

	Params::TedPlayerCommandsWidget_OnCommandsPanelContentChange Parms{};

	Parms.InContentPanel = InContentPanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerCommand_Airstrike.CreateAirstrikeCommandData
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class UTedPlayerCommand_Airstrike>CommandClass                                           (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayCommandDataPayload_Airstrike&Payload                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayCommandData             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayCommandData UTedPlayerCommand_Airstrike::CreateAirstrikeCommandData(TSubclassOf<class UTedPlayerCommand_Airstrike> CommandClass, const struct FGameplayCommandDataPayload_Airstrike& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerCommand_Airstrike", "CreateAirstrikeCommandData");

	Params::TedPlayerCommand_Airstrike_CreateAirstrikeCommandData Parms{};

	Parms.CommandClass = CommandClass;
	Parms.Payload = std::move(Payload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerCommand_ConstructionQueue.CreateCommandData_ConstructionQueue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class UTedCommand>          InCommand                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedStructureBase*                InFactory                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InConstructionElementId                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCommandData             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayCommandData UTedPlayerCommand_ConstructionQueue::CreateCommandData_ConstructionQueue(TSubclassOf<class UTedCommand> InCommand, class ATedStructureBase* InFactory, const struct FGameplayTag& InConstructionElementId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerCommand_ConstructionQueue", "CreateCommandData_ConstructionQueue");

	Params::TedPlayerCommand_ConstructionQueue_CreateCommandData_ConstructionQueue Parms{};

	Parms.InCommand = InCommand;
	Parms.InFactory = InFactory;
	Parms.InConstructionElementId = std::move(InConstructionElementId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerCommand_PauseConstruction.CreateCommandData_PauseConstruction
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class UTedCommand>          InCommand                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedStructureBase*                InFactory                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InConstructionElementId                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCommandData             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayCommandData UTedPlayerCommand_PauseConstruction::CreateCommandData_PauseConstruction(TSubclassOf<class UTedCommand> InCommand, class ATedStructureBase* InFactory, const struct FGameplayTag& InConstructionElementId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerCommand_PauseConstruction", "CreateCommandData_PauseConstruction");

	Params::TedPlayerCommand_PauseConstruction_CreateCommandData_PauseConstruction Parms{};

	Parms.InCommand = InCommand;
	Parms.InFactory = InFactory;
	Parms.InConstructionElementId = std::move(InConstructionElementId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerCommand_PlaceStructure.CreateCommandData_PlaceStructure
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   InLocation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ATedStructureBase>    InStructureClass                                       (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedStructureBase*                InFactory                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UTedCommand>          InCommandOverride                                      (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCommandData             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayCommandData UTedPlayerCommand_PlaceStructure::CreateCommandData_PlaceStructure(const struct FVector& InLocation, TSubclassOf<class ATedStructureBase> InStructureClass, class ATedStructureBase* InFactory, TSubclassOf<class UTedCommand> InCommandOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerCommand_PlaceStructure", "CreateCommandData_PlaceStructure");

	Params::TedPlayerCommand_PlaceStructure_CreateCommandData_PlaceStructure Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.InStructureClass = InStructureClass;
	Parms.InFactory = InFactory;
	Parms.InCommandOverride = InCommandOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerController_CC.AtBriefingEnd
// (Event, Public, BlueprintEvent)

void ATedPlayerController_CC::AtBriefingEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController_CC", "AtBriefingEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedPlayerController_CC.AtBriefingSkip
// (Event, Public, BlueprintEvent)

void ATedPlayerController_CC::AtBriefingSkip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController_CC", "AtBriefingSkip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedPlayerController_CC.OnBriefingSequencePlayerFinished
// (Final, Native, Protected)

void ATedPlayerController_CC::OnBriefingSequencePlayerFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController_CC", "OnBriefingSequencePlayerFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController_CC.OnBriefingSequencePlayerPlayed
// (Final, Native, Protected)

void ATedPlayerController_CC::OnBriefingSequencePlayerPlayed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController_CC", "OnBriefingSequencePlayerPlayed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController_CC.OnBriefingSequencePlayerStopped
// (Final, Native, Protected)

void ATedPlayerController_CC::OnBriefingSequencePlayerStopped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController_CC", "OnBriefingSequencePlayerStopped");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController_CC.SetViewTargetByCameraType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const ETedCCCameraType                  InCamera                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController_CC::SetViewTargetByCameraType(const ETedCCCameraType InCamera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController_CC", "SetViewTargetByCameraType");

	Params::TedPlayerController_CC_SetViewTargetByCameraType Parms{};

	Parms.InCamera = InCamera;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController_CC.ShowMapScreen
// (Final, Native, Public, BlueprintCallable)

void ATedPlayerController_CC::ShowMapScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController_CC", "ShowMapScreen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController_CC.StartCameraTransition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const ETedCCCameraType                  InCamera                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerController_CC::StartCameraTransition(const ETedCCCameraType InCamera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController_CC", "StartCameraTransition");

	Params::TedPlayerController_CC_StartCameraTransition Parms{};

	Parms.InCamera = InCamera;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerController_CC.UnloadLevels
// (Final, Native, Protected, BlueprintCallable)

void ATedPlayerController_CC::UnloadLevels()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerController_CC", "UnloadLevels");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.Get
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class APlayerState*               InPlayerState                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedPlayerData*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedPlayerData* UTedPlayerData::Get(const class APlayerState* InPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerData", "Get");

	Params::TedPlayerData_Get Parms{};

	Parms.InPlayerState = InPlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetByPlayerID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InPlayer                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedPlayerData*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedPlayerData* UTedPlayerData::GetByPlayerID(const class UObject* InWorldContext, const ETedPlayerID InPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerData", "GetByPlayerID");

	Params::TedPlayerData_GetByPlayerID Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InPlayer = InPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetByPlayerIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InPlayerIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedPlayerData*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedPlayerData* UTedPlayerData::GetByPlayerIndex(const class UObject* InWorldContext, const int32 InPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerData", "GetByPlayerIndex");

	Params::TedPlayerData_GetByPlayerIndex Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InPlayerIndex = InPlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.AddCredits
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInOverflow                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerData::AddCredits(const int32 InValue, const bool bInOverflow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "AddCredits");

	Params::TedPlayerData_AddCredits Parms{};

	Parms.InValue = InValue;
	Parms.bInOverflow = bInOverflow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.AddCreditsCap
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerData::AddCreditsCap(const int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "AddCreditsCap");

	Params::TedPlayerData_AddCreditsCap Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.AddIntel
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerData::AddIntel(const int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "AddIntel");

	Params::TedPlayerData_AddIntel Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.AddPower
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerData::AddPower(const int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "AddPower");

	Params::TedPlayerData_AddPower Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.AddPowerConsumption
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerData::AddPowerConsumption(const int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "AddPowerConsumption");

	Params::TedPlayerData_AddPowerConsumption Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.Client_ProductionCompleted
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// const class UTedEntityDefinitionAsset*  InProducedPawnDefinitionAsset                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InCreditsSpent                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedTelemetryCreditsSource        InCreditsSource                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerData::Client_ProductionCompleted(const class UTedEntityDefinitionAsset* InProducedPawnDefinitionAsset, const float InCreditsSpent, const ETedTelemetryCreditsSource InCreditsSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "Client_ProductionCompleted");

	Params::TedPlayerData_Client_ProductionCompleted Parms{};

	Parms.InProducedPawnDefinitionAsset = InProducedPawnDefinitionAsset;
	Parms.InCreditsSpent = InCreditsSpent;
	Parms.InCreditsSource = InCreditsSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.Client_ResourceChanged
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// const ETedResourceType                  InResourceType                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InResourceDelta                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedResourceChangeReason          InReason                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerData::Client_ResourceChanged(const ETedResourceType InResourceType, const float InResourceDelta, const ETedResourceChangeReason InReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "Client_ResourceChanged");

	Params::TedPlayerData_Client_ResourceChanged Parms{};

	Parms.InResourceType = InResourceType;
	Parms.InResourceDelta = InResourceDelta;
	Parms.InReason = InReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.Client_SellStructure
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class ATedStructureBase*                InStructure                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerData::Client_SellStructure(class ATedStructureBase* InStructure)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "Client_SellStructure");

	Params::TedPlayerData_Client_SellStructure Parms{};

	Parms.InStructure = InStructure;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.ClientNotifyStructuresBuild
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// const TArray<struct FPendingBuildCompletedNotify>&DefinitionIds                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedPlayerData::ClientNotifyStructuresBuild(const TArray<struct FPendingBuildCompletedNotify>& DefinitionIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "ClientNotifyStructuresBuild");

	Params::TedPlayerData_ClientNotifyStructuresBuild Parms{};

	Parms.DefinitionIds = std::move(DefinitionIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.ClientOnIntelMarked
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// const class FString&                    UnitID                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerData::ClientOnIntelMarked(const class FString& UnitID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "ClientOnIntelMarked");

	Params::TedPlayerData_ClientOnIntelMarked Parms{};

	Parms.UnitID = std::move(UnitID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.ClientPlayAnnouncements
// (Final, Net, Native, Event, Private, NetClient)
// Parameters:
// const TArray<struct FTedPlayerDataPendingAnnouncement>&InAnnouncements                                        (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedPlayerData::ClientPlayAnnouncements(const TArray<struct FTedPlayerDataPendingAnnouncement>& InAnnouncements)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "ClientPlayAnnouncements");

	Params::TedPlayerData_ClientPlayAnnouncements Parms{};

	Parms.InAnnouncements = std::move(InAnnouncements);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.OnOtherPawnDestroyed_Handler
// (Final, Native, Protected)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerData::OnOtherPawnDestroyed_Handler(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "OnOtherPawnDestroyed_Handler");

	Params::TedPlayerData_OnOtherPawnDestroyed_Handler Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.OnOtherPawnEndPlay_Handler
// (Final, Native, Protected)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          InEndPlayReason                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerData::OnOtherPawnEndPlay_Handler(class AActor* InActor, EEndPlayReason InEndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "OnOtherPawnEndPlay_Handler");

	Params::TedPlayerData_OnOtherPawnEndPlay_Handler Parms{};

	Parms.InActor = InActor;
	Parms.InEndPlayReason = InEndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.OnRep_AdditionalInfluenceAreaProviders
// (Final, Native, Protected)

void UTedPlayerData::OnRep_AdditionalInfluenceAreaProviders()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "OnRep_AdditionalInfluenceAreaProviders");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.OnRep_ConstructionQueues
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FTedPlayerDataConstructionQueues*OldConstructionQueues                                  (Parm, OutParm, NativeAccessSpecifierPublic)

void UTedPlayerData::OnRep_ConstructionQueues(struct FTedPlayerDataConstructionQueues* OldConstructionQueues)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "OnRep_ConstructionQueues");

	Params::TedPlayerData_OnRep_ConstructionQueues Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OldConstructionQueues != nullptr)
		*OldConstructionQueues = std::move(Parms.OldConstructionQueues);
}


// Function Tempest.TedPlayerData.OnRep_DoctrineResearchQueue
// (Final, Native, Protected)

void UTedPlayerData::OnRep_DoctrineResearchQueue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "OnRep_DoctrineResearchQueue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.OnRep_HarvesterCredits
// (Final, Native, Public)

void UTedPlayerData::OnRep_HarvesterCredits()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "OnRep_HarvesterCredits");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.OnRep_LockedTechData
// (Final, Native, Protected)

void UTedPlayerData::OnRep_LockedTechData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "OnRep_LockedTechData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.OnRep_OwnedOtherPawns
// (Final, Native, Protected)

void UTedPlayerData::OnRep_OwnedOtherPawns()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "OnRep_OwnedOtherPawns");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.OnRep_OwnedStructures
// (Final, Native, Protected)

void UTedPlayerData::OnRep_OwnedStructures()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "OnRep_OwnedStructures");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.OnRep_OwnedTags
// (Final, Native, Protected)

void UTedPlayerData::OnRep_OwnedTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "OnRep_OwnedTags");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.OnRep_OwnedUnits
// (Final, Native, Protected)

void UTedPlayerData::OnRep_OwnedUnits()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "OnRep_OwnedUnits");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.OnRep_Resources
// (Final, Native, Protected)

void UTedPlayerData::OnRep_Resources()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "OnRep_Resources");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.OnStructureDestroyed_Handler
// (Final, Native, Protected)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerData::OnStructureDestroyed_Handler(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "OnStructureDestroyed_Handler");

	Params::TedPlayerData_OnStructureDestroyed_Handler Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.OnStructureEndPlay_Handler
// (Final, Native, Protected)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          InEndPlayReason                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerData::OnStructureEndPlay_Handler(class AActor* InActor, EEndPlayReason InEndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "OnStructureEndPlay_Handler");

	Params::TedPlayerData_OnStructureEndPlay_Handler Parms{};

	Parms.InActor = InActor;
	Parms.InEndPlayReason = InEndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.OnUnitDestroyed_Handler
// (Final, Native, Protected)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerData::OnUnitDestroyed_Handler(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "OnUnitDestroyed_Handler");

	Params::TedPlayerData_OnUnitDestroyed_Handler Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.OnUnitEndPlay_Handler
// (Final, Native, Protected)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          InEndPlayReason                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerData::OnUnitEndPlay_Handler(class AActor* InActor, EEndPlayReason InEndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "OnUnitEndPlay_Handler");

	Params::TedPlayerData_OnUnitEndPlay_Handler Parms{};

	Parms.InActor = InActor;
	Parms.InEndPlayReason = InEndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.RegisterInfluenceAreaProvider
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class ATedPawn*                         InPawnProvider                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerData::RegisterInfluenceAreaProvider(class ATedPawn* InPawnProvider)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "RegisterInfluenceAreaProvider");

	Params::TedPlayerData_RegisterInfluenceAreaProvider Parms{};

	Parms.InPawnProvider = InPawnProvider;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.ServerDebugAddCredits
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// const int32                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerData::ServerDebugAddCredits(const int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "ServerDebugAddCredits");

	Params::TedPlayerData_ServerDebugAddCredits Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.ServerDebugAddCreditsCap
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// const int32                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerData::ServerDebugAddCreditsCap(const int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "ServerDebugAddCreditsCap");

	Params::TedPlayerData_ServerDebugAddCreditsCap Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.ServerDebugAddIntel
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// const int32                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerData::ServerDebugAddIntel(const int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "ServerDebugAddIntel");

	Params::TedPlayerData_ServerDebugAddIntel Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.ServerDebugAddPower
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// const int32                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerData::ServerDebugAddPower(const int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "ServerDebugAddPower");

	Params::TedPlayerData_ServerDebugAddPower Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.UnregisterInfluenceAreaProvider
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class ATedPawn*                         InPawnProvider                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerData::UnregisterInfluenceAreaProvider(class ATedPawn* InPawnProvider)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "UnregisterInfluenceAreaProvider");

	Params::TedPlayerData_UnregisterInfluenceAreaProvider Parms{};

	Parms.InPawnProvider = InPawnProvider;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerData.AllowPlayerCommands
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerData::AllowPlayerCommands() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "AllowPlayerCommands");

	Params::TedPlayerData_AllowPlayerCommands Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetCommandoLimit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedPlayerData::GetCommandoLimit() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetCommandoLimit");

	Params::TedPlayerData_GetCommandoLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetCommandoRefs
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class ATedUnitBase*>*            OutCommandoRefs                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UTedPlayerData::GetCommandoRefs(TArray<class ATedUnitBase*>* OutCommandoRefs) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetCommandoRefs");

	Params::TedPlayerData_GetCommandoRefs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCommandoRefs != nullptr)
		*OutCommandoRefs = std::move(Parms.OutCommandoRefs);
}


// Function Tempest.TedPlayerData.GetCredits
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedPlayerData::GetCredits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetCredits");

	Params::TedPlayerData_GetCredits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetCreditsCap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedPlayerData::GetCreditsCap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetCreditsCap");

	Params::TedPlayerData_GetCreditsCap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetCreditsPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedPlayerData::GetCreditsPct() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetCreditsPct");

	Params::TedPlayerData_GetCreditsPct Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetIntel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedPlayerData::GetIntel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetIntel");

	Params::TedPlayerData_GetIntel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetLockedTechData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FTedPlayerLockedTechData   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FTedPlayerLockedTechData UTedPlayerData::GetLockedTechData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetLockedTechData");

	Params::TedPlayerData_GetLockedTechData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetOwnedStructure_ByDefinition
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const TSoftObjectPtr<class UTedEntityDefinitionAsset>&InDefinition                                           (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedStructureBase*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedStructureBase* UTedPlayerData::GetOwnedStructure_ByDefinition(const TSoftObjectPtr<class UTedEntityDefinitionAsset>& InDefinition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetOwnedStructure_ByDefinition");

	Params::TedPlayerData_GetOwnedStructure_ByDefinition Parms{};

	Parms.InDefinition = InDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetOwnedStructure_ByTag
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const struct FGameplayTag&              InTag                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedStructureBase*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedStructureBase* UTedPlayerData::GetOwnedStructure_ByTag(const struct FGameplayTag& InTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetOwnedStructure_ByTag");

	Params::TedPlayerData_GetOwnedStructure_ByTag Parms{};

	Parms.InTag = std::move(InTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetOwnedStructures
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<class ATedStructureBase*>*       OutStructures                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerData::GetOwnedStructures(TArray<class ATedStructureBase*>* OutStructures) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetOwnedStructures");

	Params::TedPlayerData_GetOwnedStructures Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStructures != nullptr)
		*OutStructures = std::move(Parms.OutStructures);

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetOwnedStructures_ByDefinition
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const TSoftObjectPtr<class UTedEntityDefinitionAsset>&InDefinition                                           (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ATedStructureBase*>*       OutStructures                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerData::GetOwnedStructures_ByDefinition(const TSoftObjectPtr<class UTedEntityDefinitionAsset>& InDefinition, TArray<class ATedStructureBase*>* OutStructures) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetOwnedStructures_ByDefinition");

	Params::TedPlayerData_GetOwnedStructures_ByDefinition Parms{};

	Parms.InDefinition = InDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStructures != nullptr)
		*OutStructures = std::move(Parms.OutStructures);

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetOwnedStructures_ByTag
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const struct FGameplayTag&              InTag                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ATedStructureBase*>*       OutStructures                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerData::GetOwnedStructures_ByTag(const struct FGameplayTag& InTag, TArray<class ATedStructureBase*>* OutStructures) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetOwnedStructures_ByTag");

	Params::TedPlayerData_GetOwnedStructures_ByTag Parms{};

	Parms.InTag = std::move(InTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStructures != nullptr)
		*OutStructures = std::move(Parms.OutStructures);

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetOwnedTags
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const struct FGameplayTagContainer      ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGameplayTagContainer UTedPlayerData::GetOwnedTags() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetOwnedTags");

	Params::TedPlayerData_GetOwnedTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetOwnedUnit_ByDefinition
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const TSoftObjectPtr<class UTedEntityDefinitionAsset>&InDefinition                                           (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedUnitBase*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedUnitBase* UTedPlayerData::GetOwnedUnit_ByDefinition(const TSoftObjectPtr<class UTedEntityDefinitionAsset>& InDefinition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetOwnedUnit_ByDefinition");

	Params::TedPlayerData_GetOwnedUnit_ByDefinition Parms{};

	Parms.InDefinition = InDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetOwnedUnit_ByTag
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const struct FGameplayTag&              InTag                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedUnitBase*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedUnitBase* UTedPlayerData::GetOwnedUnit_ByTag(const struct FGameplayTag& InTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetOwnedUnit_ByTag");

	Params::TedPlayerData_GetOwnedUnit_ByTag Parms{};

	Parms.InTag = std::move(InTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetOwnedUnits
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<class ATedUnitBase*>*            OutUnits                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerData::GetOwnedUnits(TArray<class ATedUnitBase*>* OutUnits) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetOwnedUnits");

	Params::TedPlayerData_GetOwnedUnits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUnits != nullptr)
		*OutUnits = std::move(Parms.OutUnits);

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetOwnedUnits_ByDefinition
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const TSoftObjectPtr<class UTedEntityDefinitionAsset>&InDefinition                                           (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ATedUnitBase*>*            OutUnits                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerData::GetOwnedUnits_ByDefinition(const TSoftObjectPtr<class UTedEntityDefinitionAsset>& InDefinition, TArray<class ATedUnitBase*>* OutUnits) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetOwnedUnits_ByDefinition");

	Params::TedPlayerData_GetOwnedUnits_ByDefinition Parms{};

	Parms.InDefinition = InDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUnits != nullptr)
		*OutUnits = std::move(Parms.OutUnits);

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetOwnedUnits_ByTag
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const struct FGameplayTag&              InTag                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ATedUnitBase*>*            OutUnits                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerData::GetOwnedUnits_ByTag(const struct FGameplayTag& InTag, TArray<class ATedUnitBase*>* OutUnits) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetOwnedUnits_ByTag");

	Params::TedPlayerData_GetOwnedUnits_ByTag Parms{};

	Parms.InTag = std::move(InTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUnits != nullptr)
		*OutUnits = std::move(Parms.OutUnits);

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetOwningPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedPlayerState*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedPlayerState* UTedPlayerData::GetOwningPlayerState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetOwningPlayerState");

	Params::TedPlayerData_GetOwningPlayerState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetPlayerName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedPlayerData::GetPlayerName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetPlayerName");

	Params::TedPlayerData_GetPlayerName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetPopulation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedPlayerData::GetPopulation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetPopulation");

	Params::TedPlayerData_GetPopulation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetPopulationCap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedPlayerData::GetPopulationCap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetPopulationCap");

	Params::TedPlayerData_GetPopulationCap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetPower
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedPlayerData::GetPower() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetPower");

	Params::TedPlayerData_GetPower Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetPowerConsumption
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedPlayerData::GetPowerConsumption() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetPowerConsumption");

	Params::TedPlayerData_GetPowerConsumption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetResources
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const struct FTedPlayerDataResources    ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FTedPlayerDataResources UTedPlayerData::GetResources() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetResources");

	Params::TedPlayerData_GetResources Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetSparePopulation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const bool                              bInIgnoreUpcomingPopulation                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bUseAlwaysCountPopulation                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedPlayerData::GetSparePopulation(const bool bInIgnoreUpcomingPopulation, const bool bUseAlwaysCountPopulation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetSparePopulation");

	Params::TedPlayerData_GetSparePopulation Parms{};

	Parms.bInIgnoreUpcomingPopulation = bInIgnoreUpcomingPopulation;
	Parms.bUseAlwaysCountPopulation = bUseAlwaysCountPopulation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetSpecialistLimit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedPlayerData::GetSpecialistLimit() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetSpecialistLimit");

	Params::TedPlayerData_GetSpecialistLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetSpecialistRefs
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class ATedUnitBase*>*            OutSpecialistRefs                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UTedPlayerData::GetSpecialistRefs(TArray<class ATedUnitBase*>* OutSpecialistRefs) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetSpecialistRefs");

	Params::TedPlayerData_GetSpecialistRefs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSpecialistRefs != nullptr)
		*OutSpecialistRefs = std::move(Parms.OutSpecialistRefs);
}


// Function Tempest.TedPlayerData.GetSpecialistsQueued
// (Final, Native, Protected, HasOutParams, BlueprintCallable, Const)
// Parameters:
// int32*                                  OutAmountSpecialists                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutAmountCommandos                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerData::GetSpecialistsQueued(int32* OutAmountSpecialists, int32* OutAmountCommandos) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetSpecialistsQueued");

	Params::TedPlayerData_GetSpecialistsQueued Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAmountSpecialists != nullptr)
		*OutAmountSpecialists = Parms.OutAmountSpecialists;

	if (OutAmountCommandos != nullptr)
		*OutAmountCommandos = Parms.OutAmountCommandos;
}


// Function Tempest.TedPlayerData.GetUnusedPower
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedPlayerData::GetUnusedPower() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetUnusedPower");

	Params::TedPlayerData_GetUnusedPower Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetUnusedPowerTillPlentyPowerThreshold
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedPlayerData::GetUnusedPowerTillPlentyPowerThreshold() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetUnusedPowerTillPlentyPowerThreshold");

	Params::TedPlayerData_GetUnusedPowerTillPlentyPowerThreshold Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.GetUpcomingPopulation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedPlayerData::GetUpcomingPopulation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "GetUpcomingPopulation");

	Params::TedPlayerData_GetUpcomingPopulation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.HasCredits
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerData::HasCredits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "HasCredits");

	Params::TedPlayerData_HasCredits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.HasPower
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerData::HasPower() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "HasPower");

	Params::TedPlayerData_HasPower Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.HasPowerConsumption
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerData::HasPowerConsumption() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "HasPowerConsumption");

	Params::TedPlayerData_HasPowerConsumption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.HasStructure
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class ATedStructureBase*          InStructure                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerData::HasStructure(const class ATedStructureBase* InStructure) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "HasStructure");

	Params::TedPlayerData_HasStructure Parms{};

	Parms.InStructure = InStructure;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.HasUnit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class ATedUnitBase*               InUnit                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerData::HasUnit(const class ATedUnitBase* InUnit) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "HasUnit");

	Params::TedPlayerData_HasUnit Parms{};

	Parms.InUnit = InUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.IsBotPlayerData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerData::IsBotPlayerData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "IsBotPlayerData");

	Params::TedPlayerData_IsBotPlayerData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.IsDoctrineResearched
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedDoctrineDefinition*     InDoctrine                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerData::IsDoctrineResearched(const class UTedDoctrineDefinition* InDoctrine) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "IsDoctrineResearched");

	Params::TedPlayerData_IsDoctrineResearched Parms{};

	Parms.InDoctrine = InDoctrine;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.IsHumanPlayerData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerData::IsHumanPlayerData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "IsHumanPlayerData");

	Params::TedPlayerData_IsHumanPlayerData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.IsImmuneToLowPower
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerData::IsImmuneToLowPower() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "IsImmuneToLowPower");

	Params::TedPlayerData_IsImmuneToLowPower Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.IsInLowPowerMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerData::IsInLowPowerMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "IsInLowPowerMode");

	Params::TedPlayerData_IsInLowPowerMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.IsIntelRelevant
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerData::IsIntelRelevant() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "IsIntelRelevant");

	Params::TedPlayerData_IsIntelRelevant Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.IsPowerLow
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerData::IsPowerLow() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "IsPowerLow");

	Params::TedPlayerData_IsPowerLow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.IsPowerPlenty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerData::IsPowerPlenty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "IsPowerPlenty");

	Params::TedPlayerData_IsPowerPlenty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerData.IsRegisteredInfluenceAreaProvider
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class ATedPawn*                   InPawn                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerData::IsRegisteredInfluenceAreaProvider(const class ATedPawn* InPawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerData", "IsRegisteredInfluenceAreaProvider");

	Params::TedPlayerData_IsRegisteredInfluenceAreaProvider Parms{};

	Parms.InPawn = InPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerDataFunctionsLibrary.AddLockedTech_ByDefinitions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InPlayer                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<TSoftObjectPtr<class UTedEntityDefinitionAsset>>&InDefinitions                                          (Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UTedPlayerDataFunctionsLibrary::AddLockedTech_ByDefinitions(const class UObject* InWorldContext, const ETedPlayerID InPlayer, const TArray<TSoftObjectPtr<class UTedEntityDefinitionAsset>>& InDefinitions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerDataFunctionsLibrary", "AddLockedTech_ByDefinitions");

	Params::TedPlayerDataFunctionsLibrary_AddLockedTech_ByDefinitions Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InPlayer = InPlayer;
	Parms.InDefinitions = std::move(InDefinitions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataFunctionsLibrary.AddLockedTech_ByTags
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InPlayer                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     InList                                                 (Parm, NativeAccessSpecifierPublic)

void UTedPlayerDataFunctionsLibrary::AddLockedTech_ByTags(const class UObject* InWorldContext, const ETedPlayerID InPlayer, const struct FGameplayTagContainer& InList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerDataFunctionsLibrary", "AddLockedTech_ByTags");

	Params::TedPlayerDataFunctionsLibrary_AddLockedTech_ByTags Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InPlayer = InPlayer;
	Parms.InList = std::move(InList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataFunctionsLibrary.AddPlayerCredits
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InPlayer                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInOverflow                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerDataFunctionsLibrary::AddPlayerCredits(const class UObject* InWorldContext, const ETedPlayerID InPlayer, const int32 InValue, const bool bInOverflow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerDataFunctionsLibrary", "AddPlayerCredits");

	Params::TedPlayerDataFunctionsLibrary_AddPlayerCredits Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InPlayer = InPlayer;
	Parms.InValue = InValue;
	Parms.bInOverflow = bInOverflow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataFunctionsLibrary.AddPlayerIntel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InPlayer                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerDataFunctionsLibrary::AddPlayerIntel(const class UObject* InWorldContext, const ETedPlayerID InPlayer, const int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerDataFunctionsLibrary", "AddPlayerIntel");

	Params::TedPlayerDataFunctionsLibrary_AddPlayerIntel Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InPlayer = InPlayer;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataFunctionsLibrary.HasAllOwnedTags
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InPlayer                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     InTags                                                 (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerDataFunctionsLibrary::HasAllOwnedTags(const class UObject* InWorldContext, const ETedPlayerID InPlayer, const struct FGameplayTagContainer& InTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerDataFunctionsLibrary", "HasAllOwnedTags");

	Params::TedPlayerDataFunctionsLibrary_HasAllOwnedTags Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InPlayer = InPlayer;
	Parms.InTags = std::move(InTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerDataFunctionsLibrary.HasAnyOwnedTags
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InPlayer                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     InTags                                                 (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerDataFunctionsLibrary::HasAnyOwnedTags(const class UObject* InWorldContext, const ETedPlayerID InPlayer, const struct FGameplayTagContainer& InTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerDataFunctionsLibrary", "HasAnyOwnedTags");

	Params::TedPlayerDataFunctionsLibrary_HasAnyOwnedTags Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InPlayer = InPlayer;
	Parms.InTags = std::move(InTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerDataFunctionsLibrary.HasOwnedTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InPlayer                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InTag                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerDataFunctionsLibrary::HasOwnedTag(const class UObject* InWorldContext, const ETedPlayerID InPlayer, const struct FGameplayTag& InTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerDataFunctionsLibrary", "HasOwnedTag");

	Params::TedPlayerDataFunctionsLibrary_HasOwnedTag Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InPlayer = InPlayer;
	Parms.InTag = std::move(InTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerDataFunctionsLibrary.IsTechLocked
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InPlayer                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InTech                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerDataFunctionsLibrary::IsTechLocked(const class UObject* InWorldContext, const ETedPlayerID InPlayer, const struct FGameplayTag& InTech)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerDataFunctionsLibrary", "IsTechLocked");

	Params::TedPlayerDataFunctionsLibrary_IsTechLocked Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InPlayer = InPlayer;
	Parms.InTech = std::move(InTech);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerDataFunctionsLibrary.IsTechLockedMultiple
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InPlayer                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     InTech                                                 (Parm, NativeAccessSpecifierPublic)
// const bool                              bInAny                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerDataFunctionsLibrary::IsTechLockedMultiple(const class UObject* InWorldContext, const ETedPlayerID InPlayer, const struct FGameplayTagContainer& InTech, const bool bInAny)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerDataFunctionsLibrary", "IsTechLockedMultiple");

	Params::TedPlayerDataFunctionsLibrary_IsTechLockedMultiple Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InPlayer = InPlayer;
	Parms.InTech = std::move(InTech);
	Parms.bInAny = bInAny;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerDataFunctionsLibrary.RemoveLockedTech_ByDefinitions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InPlayer                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<TSoftObjectPtr<class UTedEntityDefinitionAsset>>&InDefinitions                                          (Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UTedPlayerDataFunctionsLibrary::RemoveLockedTech_ByDefinitions(const class UObject* InWorldContext, const ETedPlayerID InPlayer, const TArray<TSoftObjectPtr<class UTedEntityDefinitionAsset>>& InDefinitions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerDataFunctionsLibrary", "RemoveLockedTech_ByDefinitions");

	Params::TedPlayerDataFunctionsLibrary_RemoveLockedTech_ByDefinitions Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InPlayer = InPlayer;
	Parms.InDefinitions = std::move(InDefinitions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataFunctionsLibrary.RemoveLockedTech_ByTags
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InPlayer                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     InList                                                 (Parm, NativeAccessSpecifierPublic)

void UTedPlayerDataFunctionsLibrary::RemoveLockedTech_ByTags(const class UObject* InWorldContext, const ETedPlayerID InPlayer, const struct FGameplayTagContainer& InList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerDataFunctionsLibrary", "RemoveLockedTech_ByTags");

	Params::TedPlayerDataFunctionsLibrary_RemoveLockedTech_ByTags Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InPlayer = InPlayer;
	Parms.InList = std::move(InList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataFunctionsLibrary.SetAllowPlayerCommands
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InPlayer                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInAllow                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerDataFunctionsLibrary::SetAllowPlayerCommands(const class UObject* InWorldContext, const ETedPlayerID InPlayer, const bool bInAllow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerDataFunctionsLibrary", "SetAllowPlayerCommands");

	Params::TedPlayerDataFunctionsLibrary_SetAllowPlayerCommands Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InPlayer = InPlayer;
	Parms.bInAllow = bInAllow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataFunctionsLibrary.SetAllPawnsOwner
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InSourcePlayer                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InTargetPlayer                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerDataFunctionsLibrary::SetAllPawnsOwner(const class UObject* InWorldContext, const ETedPlayerID InSourcePlayer, const ETedPlayerID InTargetPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerDataFunctionsLibrary", "SetAllPawnsOwner");

	Params::TedPlayerDataFunctionsLibrary_SetAllPawnsOwner Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InSourcePlayer = InSourcePlayer;
	Parms.InTargetPlayer = InTargetPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataFunctionsLibrary.SetLockedSupportPowers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InPlayer                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bLock                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     InCommandTypeTags                                      (Parm, NativeAccessSpecifierPublic)

void UTedPlayerDataFunctionsLibrary::SetLockedSupportPowers(const class UObject* InWorldContext, const ETedPlayerID InPlayer, const bool bLock, const struct FGameplayTagContainer& InCommandTypeTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerDataFunctionsLibrary", "SetLockedSupportPowers");

	Params::TedPlayerDataFunctionsLibrary_SetLockedSupportPowers Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InPlayer = InPlayer;
	Parms.bLock = bLock;
	Parms.InCommandTypeTags = std::move(InCommandTypeTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataFunctionsLibrary.SetLockedTechData_ByDefinitions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InPlayer                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerLockedTechMode          InMode                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<TSoftObjectPtr<class UTedEntityDefinitionAsset>>&InDefinitions                                          (Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UTedPlayerDataFunctionsLibrary::SetLockedTechData_ByDefinitions(const class UObject* InWorldContext, const ETedPlayerID InPlayer, const ETedPlayerLockedTechMode InMode, const TArray<TSoftObjectPtr<class UTedEntityDefinitionAsset>>& InDefinitions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerDataFunctionsLibrary", "SetLockedTechData_ByDefinitions");

	Params::TedPlayerDataFunctionsLibrary_SetLockedTechData_ByDefinitions Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InPlayer = InPlayer;
	Parms.InMode = InMode;
	Parms.InDefinitions = std::move(InDefinitions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataFunctionsLibrary.SetLockedTechData_ByTags
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InPlayer                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerLockedTechMode          InMode                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     InList                                                 (Parm, NativeAccessSpecifierPublic)

void UTedPlayerDataFunctionsLibrary::SetLockedTechData_ByTags(const class UObject* InWorldContext, const ETedPlayerID InPlayer, const ETedPlayerLockedTechMode InMode, const struct FGameplayTagContainer& InList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerDataFunctionsLibrary", "SetLockedTechData_ByTags");

	Params::TedPlayerDataFunctionsLibrary_SetLockedTechData_ByTags Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InPlayer = InPlayer;
	Parms.InMode = InMode;
	Parms.InList = std::move(InList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataFunctionsLibrary.SetPawnOwner
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedPawn*                         InPawn                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InPlayer                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerDataFunctionsLibrary::SetPawnOwner(const class UObject* InWorldContext, class ATedPawn* InPawn, const ETedPlayerID InPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerDataFunctionsLibrary", "SetPawnOwner");

	Params::TedPlayerDataFunctionsLibrary_SetPawnOwner Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InPawn = InPawn;
	Parms.InPlayer = InPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataFunctionsLibrary.SetPawnsOwner
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class ATedPawn*>&          InPawns                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InPlayer                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerDataFunctionsLibrary::SetPawnsOwner(const class UObject* InWorldContext, const TArray<class ATedPawn*>& InPawns, const ETedPlayerID InPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerDataFunctionsLibrary", "SetPawnsOwner");

	Params::TedPlayerDataFunctionsLibrary_SetPawnsOwner Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InPawns = std::move(InPawns);
	Parms.InPlayer = InPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataFunctionsLibrary.SetPawnsOwner_ActorTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     InActorTags                                            (Parm, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InPlayer                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerDataFunctionsLibrary::SetPawnsOwner_ActorTag(const class UObject* InWorldContext, const struct FGameplayTagContainer& InActorTags, const ETedPlayerID InPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerDataFunctionsLibrary", "SetPawnsOwner_ActorTag");

	Params::TedPlayerDataFunctionsLibrary_SetPawnsOwner_ActorTag Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InActorTags = std::move(InActorTags);
	Parms.InPlayer = InPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataFunctionsLibrary.SetPlayerTeam
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InPlayer                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedTeamID                        InTeam                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerDataFunctionsLibrary::SetPlayerTeam(const class UObject* InWorldContext, const ETedPlayerID InPlayer, const ETedTeamID InTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerDataFunctionsLibrary", "SetPlayerTeam");

	Params::TedPlayerDataFunctionsLibrary_SetPlayerTeam Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InPlayer = InPlayer;
	Parms.InTeam = InTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerDataSettings.K2_GetPlayerDataSettings
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UTedPlayerDataSettings*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedPlayerDataSettings* UTedPlayerDataSettings::K2_GetPlayerDataSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerDataSettings", "K2_GetPlayerDataSettings");

	Params::TedPlayerDataSettings_K2_GetPlayerDataSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerDataSettings.GetPlayerDataTagDisplayName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              InTag                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedPlayerDataSettings::GetPlayerDataTagDisplayName(const struct FGameplayTag& InTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataSettings", "GetPlayerDataTagDisplayName");

	Params::TedPlayerDataSettings_GetPlayerDataTagDisplayName Parms{};

	Parms.InTag = std::move(InTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerDataSettings.CalculatePowerEfficiency
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const int32                             InPower                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InPowerConsumption                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedPlayerDataSettings::CalculatePowerEfficiency(const int32 InPower, const int32 InPowerConsumption) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataSettings", "CalculatePowerEfficiency");

	Params::TedPlayerDataSettings_CalculatePowerEfficiency Parms{};

	Parms.InPower = InPower;
	Parms.InPowerConsumption = InPowerConsumption;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerDataSettings.GetAllowInsufficientPowerTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedPlayerDataSettings::GetAllowInsufficientPowerTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataSettings", "GetAllowInsufficientPowerTag");

	Params::TedPlayerDataSettings_GetAllowInsufficientPowerTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerDataSettings.GetAnnouncement
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const ETedPlayerDataAnnouncement        InType                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInUnit                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftClassPtr<class UClass>             ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftClassPtr<class UClass> UTedPlayerDataSettings::GetAnnouncement(const ETedPlayerDataAnnouncement InType, const bool bInUnit) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataSettings", "GetAnnouncement");

	Params::TedPlayerDataSettings_GetAnnouncement Parms{};

	Parms.InType = InType;
	Parms.bInUnit = bInUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerDataSettings.GetCreditPerResourceUnit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedPlayerDataSettings::GetCreditPerResourceUnit() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataSettings", "GetCreditPerResourceUnit");

	Params::TedPlayerDataSettings_GetCreditPerResourceUnit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerDataSettings.GetFactoryType_AirAndSea
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedPlayerDataSettings::GetFactoryType_AirAndSea() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataSettings", "GetFactoryType_AirAndSea");

	Params::TedPlayerDataSettings_GetFactoryType_AirAndSea Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerDataSettings.GetFactoryType_Buildings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedPlayerDataSettings::GetFactoryType_Buildings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataSettings", "GetFactoryType_Buildings");

	Params::TedPlayerDataSettings_GetFactoryType_Buildings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerDataSettings.GetFactoryType_Defenses
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedPlayerDataSettings::GetFactoryType_Defenses() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataSettings", "GetFactoryType_Defenses");

	Params::TedPlayerDataSettings_GetFactoryType_Defenses Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerDataSettings.GetFactoryType_Infantry
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedPlayerDataSettings::GetFactoryType_Infantry() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataSettings", "GetFactoryType_Infantry");

	Params::TedPlayerDataSettings_GetFactoryType_Infantry Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerDataSettings.GetFactoryType_PawnSpecific_Refinery
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedPlayerDataSettings::GetFactoryType_PawnSpecific_Refinery() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataSettings", "GetFactoryType_PawnSpecific_Refinery");

	Params::TedPlayerDataSettings_GetFactoryType_PawnSpecific_Refinery Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerDataSettings.GetFactoryType_Vehicles
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedPlayerDataSettings::GetFactoryType_Vehicles() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataSettings", "GetFactoryType_Vehicles");

	Params::TedPlayerDataSettings_GetFactoryType_Vehicles Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerDataSettings.GetIntelCap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedPlayerDataSettings::GetIntelCap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataSettings", "GetIntelCap");

	Params::TedPlayerDataSettings_GetIntelCap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerDataSettings.GetPopulationCap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedPlayerDataSettings::GetPopulationCap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataSettings", "GetPopulationCap");

	Params::TedPlayerDataSettings_GetPopulationCap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerDataSettings.GetSilosNeededAnnouncementThreshold
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedPlayerDataSettings::GetSilosNeededAnnouncementThreshold() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataSettings", "GetSilosNeededAnnouncementThreshold");

	Params::TedPlayerDataSettings_GetSilosNeededAnnouncementThreshold Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerDataSettings.GetTagDisplayName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              InTag                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedPlayerDataSettings::GetTagDisplayName(const struct FGameplayTag& InTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataSettings", "GetTagDisplayName");

	Params::TedPlayerDataSettings_GetTagDisplayName Parms{};

	Parms.InTag = std::move(InTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerDataSettings.ShouldScaleRepairCost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerDataSettings::ShouldScaleRepairCost() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataSettings", "ShouldScaleRepairCost");

	Params::TedPlayerDataSettings_ShouldScaleRepairCost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerDataSettings.ShouldScaleSellValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedPlayerDataSettings::ShouldScaleSellValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerDataSettings", "ShouldScaleSellValue");

	Params::TedPlayerDataSettings_ShouldScaleSellValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerProfileManager.OnDownloadPlayerProfileComplete
// (Final, Native, Private, HasOutParams)
// Parameters:
// EProsdkErrorCodeAbstractData            ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FAbstractDataKeyRecord>&KeyRecords                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedPlayerProfileManager::OnDownloadPlayerProfileComplete(EProsdkErrorCodeAbstractData ResultCode, const TArray<struct FAbstractDataKeyRecord>& KeyRecords)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerProfileManager", "OnDownloadPlayerProfileComplete");

	Params::TedPlayerProfileManager_OnDownloadPlayerProfileComplete Parms{};

	Parms.ResultCode = ResultCode;
	Parms.KeyRecords = std::move(KeyRecords);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerProfileManager.OnFriendStatusUpdateFromSteam
// (Final, Native, Private)
// Parameters:
// const uint64                            InSteamId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InChangeFlags                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerProfileManager::OnFriendStatusUpdateFromSteam(const uint64 InSteamId, const int32 InChangeFlags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerProfileManager", "OnFriendStatusUpdateFromSteam");

	Params::TedPlayerProfileManager_OnFriendStatusUpdateFromSteam Parms{};

	Parms.InSteamId = InSteamId;
	Parms.InChangeFlags = InChangeFlags;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerProfileManager.OnRequestPlayerProfileComplete
// (Final, Native, Private, HasOutParams)
// Parameters:
// EProsdkErrorCodeAbstractData            ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FAbstractDataKeyRecord>&KeyRecords                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedPlayerProfileManager::OnRequestPlayerProfileComplete(EProsdkErrorCodeAbstractData ResultCode, const TArray<struct FAbstractDataKeyRecord>& KeyRecords)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerProfileManager", "OnRequestPlayerProfileComplete");

	Params::TedPlayerProfileManager_OnRequestPlayerProfileComplete Parms{};

	Parms.ResultCode = ResultCode;
	Parms.KeyRecords = std::move(KeyRecords);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerProfileManager.OnUploadPlayerProfileComplete
// (Final, Native, Private)
// Parameters:
// int32                                   LocalUserNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EProsdkErrorCodeAbstractData            ResultCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerProfileManager::OnUploadPlayerProfileComplete(int32 LocalUserNum, EProsdkErrorCodeAbstractData ResultCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerProfileManager", "OnUploadPlayerProfileComplete");

	Params::TedPlayerProfileManager_OnUploadPlayerProfileComplete Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.ResultCode = ResultCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerProfileSeasonSelector.OnDecreaseButtonClicked
// (Final, Native, Protected)

void UTedPlayerProfileSeasonSelector::OnDecreaseButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerProfileSeasonSelector", "OnDecreaseButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerProfileSeasonSelector.OnIncreaseButtonClicked
// (Final, Native, Protected)

void UTedPlayerProfileSeasonSelector::OnIncreaseButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerProfileSeasonSelector", "OnIncreaseButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerProfileStatisticsOverview.GetPlayerProfile
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedOnlinePlayerProfileWidget*    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedOnlinePlayerProfileWidget* UTedPlayerProfileStatisticsOverview::GetPlayerProfile() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerProfileStatisticsOverview", "GetPlayerProfile");

	Params::TedPlayerProfileStatisticsOverview_GetPlayerProfile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerProfileStatsPanel_Slot.K2_DescribeQuickStatBrush
// (Event, Public, BlueprintEvent)
// Parameters:
// const struct FSlateBrush&               InBrush                                                (ConstParm, Parm, NativeAccessSpecifierPublic)

void UTedPlayerProfileStatsPanel_Slot::K2_DescribeQuickStatBrush(const struct FSlateBrush& InBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerProfileStatsPanel_Slot", "K2_DescribeQuickStatBrush");

	Params::TedPlayerProfileStatsPanel_Slot_K2_DescribeQuickStatBrush Parms{};

	Parms.InBrush = std::move(InBrush);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedPlayerProfileStatsPanel_Slot.K2_DescribeTitle
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      InTitle                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedPlayerProfileStatsPanel_Slot::K2_DescribeTitle(const class FText& InTitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerProfileStatsPanel_Slot", "K2_DescribeTitle");

	Params::TedPlayerProfileStatsPanel_Slot_K2_DescribeTitle Parms{};

	Parms.InTitle = std::move(InTitle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedPlayerProfileStatsPanel_Slot.K2_DescribeValue
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      InVal                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedPlayerProfileStatsPanel_Slot::K2_DescribeValue(const class FText& InVal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerProfileStatsPanel_Slot", "K2_DescribeValue");

	Params::TedPlayerProfileStatsPanel_Slot_K2_DescribeValue Parms{};

	Parms.InVal = std::move(InVal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedPlayerProfileStatsPanel_Slot.GetStatTitle
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedPlayerProfileStatsPanel_Slot::GetStatTitle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerProfileStatsPanel_Slot", "GetStatTitle");

	Params::TedPlayerProfileStatsPanel_Slot_GetStatTitle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerProfileStatTooltip.K2_DescribeCombined
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      TotalValue                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FText&                      AverageValue                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FName                       StatID                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bShouldShowAverage                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerProfileStatTooltip::K2_DescribeCombined(const class FText& TotalValue, const class FText& AverageValue, const class FName StatID, const bool bShouldShowAverage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerProfileStatTooltip", "K2_DescribeCombined");

	Params::TedPlayerProfileStatTooltip_K2_DescribeCombined Parms{};

	Parms.TotalValue = std::move(TotalValue);
	Parms.AverageValue = std::move(AverageValue);
	Parms.StatID = StatID;
	Parms.bShouldShowAverage = bShouldShowAverage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedPlayerProfileStatTooltip.K2_DescribeFactionSpecific
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const ETedRankedFaction                 Faction                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      TotalValue                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FText&                      AverageValue                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FName                       StatID                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bShouldShowAverage                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedPlayerProfileStatTooltip::K2_DescribeFactionSpecific(const ETedRankedFaction Faction, const class FText& TotalValue, const class FText& AverageValue, const class FName StatID, const bool bShouldShowAverage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerProfileStatTooltip", "K2_DescribeFactionSpecific");

	Params::TedPlayerProfileStatTooltip_K2_DescribeFactionSpecific Parms{};

	Parms.Faction = Faction;
	Parms.TotalValue = std::move(TotalValue);
	Parms.AverageValue = std::move(AverageValue);
	Parms.StatID = StatID;
	Parms.bShouldShowAverage = bShouldShowAverage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedPlayerProfileStatTooltip.K2_DescribeTitle
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      Title                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedPlayerProfileStatTooltip::K2_DescribeTitle(const class FText& Title)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerProfileStatTooltip", "K2_DescribeTitle");

	Params::TedPlayerProfileStatTooltip_K2_DescribeTitle Parms{};

	Parms.Title = std::move(Title);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedPlayerStart.ResetSpawnLocations
// (Final, Native, Protected, BlueprintCallable)

void ATedPlayerStart::ResetSpawnLocations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerStart", "ResetSpawnLocations");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerState.Get
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InPlayerID                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Silent                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedPlayerState*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedPlayerState* ATedPlayerState::Get(const class UObject* InWorldContext, const ETedPlayerID InPlayerID, bool Silent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedPlayerState", "Get");

	Params::TedPlayerState_Get Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InPlayerID = InPlayerID;
	Parms.Silent = Silent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerState.OnRep_HydraId
// (Final, Native, Protected)

void ATedPlayerState::OnRep_HydraId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerState", "OnRep_HydraId");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerState.OnRep_PlayerColor
// (Final, Native, Protected)

void ATedPlayerState::OnRep_PlayerColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerState", "OnRep_PlayerColor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerState.OnRep_TeamID
// (Final, Native, Protected)
// Parameters:
// const struct FGenericTeamId&            OldTeamID                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerState::OnRep_TeamID(const struct FGenericTeamId& OldTeamID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerState", "OnRep_TeamID");

	Params::TedPlayerState_OnRep_TeamID Parms{};

	Parms.OldTeamID = std::move(OldTeamID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerState.OnRep_TedPlayerID
// (Final, Native, Protected)

void ATedPlayerState::OnRep_TedPlayerID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerState", "OnRep_TedPlayerID");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerState.Server_R_SetCameraLocation
// (Net, Native, Event, Public, NetServer)
// Parameters:
// const struct FVector_NetQuantize10&     InCameraLocation                                       (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedPlayerState::Server_R_SetCameraLocation(const struct FVector_NetQuantize10& InCameraLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerState", "Server_R_SetCameraLocation");

	Params::TedPlayerState_Server_R_SetCameraLocation Parms{};

	Parms.InCameraLocation = std::move(InCameraLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerState.AllowSpectatorsSeeAll
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPlayerState::AllowSpectatorsSeeAll() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerState", "AllowSpectatorsSeeAll");

	Params::TedPlayerState_AllowSpectatorsSeeAll Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerState.ClientRequestHydraInfo
// (Net, NetReliable, Native, Event, Public, NetClient, Const)

void ATedPlayerState::ClientRequestHydraInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerState", "ClientRequestHydraInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerState.GetBotDifficulty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedBotDifficulty                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedBotDifficulty ATedPlayerState::GetBotDifficulty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerState", "GetBotDifficulty");

	Params::TedPlayerState_GetBotDifficulty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerState.GetCameraLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ATedPlayerState::GetCameraLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerState", "GetCameraLocation");

	Params::TedPlayerState_GetCameraLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerState.GetHydraId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ATedPlayerState::GetHydraId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerState", "GetHydraId");

	Params::TedPlayerState_GetHydraId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerState.GetIsStartupBot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPlayerState::GetIsStartupBot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerState", "GetIsStartupBot");

	Params::TedPlayerState_GetIsStartupBot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerState.GetPawnSkinOverride
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag&              PawnTag                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedPawnSkinIndex                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedPawnSkinIndex ATedPlayerState::GetPawnSkinOverride(const struct FGameplayTag& PawnTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerState", "GetPawnSkinOverride");

	Params::TedPlayerState_GetPawnSkinOverride Parms{};

	Parms.PawnTag = std::move(PawnTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerState.GetPlayerColor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ERTSColor                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERTSColor ATedPlayerState::GetPlayerColor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerState", "GetPlayerColor");

	Params::TedPlayerState_GetPlayerColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerState.GetPlayerData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedPlayerData*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedPlayerData* ATedPlayerState::GetPlayerData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerState", "GetPlayerData");

	Params::TedPlayerState_GetPlayerData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerState.GetPlayerFaction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedFaction                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedFaction ATedPlayerState::GetPlayerFaction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerState", "GetPlayerFaction");

	Params::TedPlayerState_GetPlayerFaction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerState.GetPreviousTeamID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedTeamID                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedTeamID ATedPlayerState::GetPreviousTeamID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerState", "GetPreviousTeamID");

	Params::TedPlayerState_GetPreviousTeamID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerState.GetRankedRow
// (Final, Native, Public, Const)
// Parameters:
// const struct FTedRankedRow              ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FTedRankedRow ATedPlayerState::GetRankedRow() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerState", "GetRankedRow");

	Params::TedPlayerState_GetRankedRow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerState.GetRankedTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedRankedTeam                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedRankedTeam ATedPlayerState::GetRankedTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerState", "GetRankedTeam");

	Params::TedPlayerState_GetRankedTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerState.GetServerType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedServerType                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedServerType ATedPlayerState::GetServerType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerState", "GetServerType");

	Params::TedPlayerState_GetServerType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerState.GetTeamID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedTeamID                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedTeamID ATedPlayerState::GetTeamID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerState", "GetTeamID");

	Params::TedPlayerState_GetTeamID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerState.GetTedPlayerID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedPlayerID                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedPlayerID ATedPlayerState::GetTedPlayerID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerState", "GetTedPlayerID");

	Params::TedPlayerState_GetTedPlayerID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerState.IsDefeated
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPlayerState::IsDefeated() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerState", "IsDefeated");

	Params::TedPlayerState_IsDefeated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerState.IsDeliDisc
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPlayerState::IsDeliDisc() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerState", "IsDeliDisc");

	Params::TedPlayerState_IsDeliDisc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerState.IsSurrendered
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedPlayerState::IsSurrendered() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerState", "IsSurrendered");

	Params::TedPlayerState_IsSurrendered Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerState.ServerAcceptHydraInfo
// (Net, NetReliable, Native, Event, Public, NetServer, Const)
// Parameters:
// const struct FPlayerHydraInfo&          PlayerHydraInfo                                        (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void ATedPlayerState::ServerAcceptHydraInfo(const struct FPlayerHydraInfo& PlayerHydraInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerState", "ServerAcceptHydraInfo");

	Params::TedPlayerState_ServerAcceptHydraInfo Parms{};

	Parms.PlayerHydraInfo = std::move(PlayerHydraInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerStatePanel.GetAllContent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class ATedPlayerState*>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ATedPlayerState*> UTedPlayerStatePanel::GetAllContent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerStatePanel", "GetAllContent");

	Params::TedPlayerStatePanel_GetAllContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerStatePanel.GetContent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             SlotIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedPlayerState*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedPlayerState* UTedPlayerStatePanel::GetContent(const int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerStatePanel", "GetContent");

	Params::TedPlayerStatePanel_GetContent Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPlayerStatePanel.OnAllPlayersStarted
// (Final, Native, Private, HasOutParams)
// Parameters:
// const TArray<class APlayerState*>&      PlayerState                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedPlayerStatePanel::OnAllPlayersStarted(const TArray<class APlayerState*>& PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerStatePanel", "OnAllPlayersStarted");

	Params::TedPlayerStatePanel_OnAllPlayersStarted Parms{};

	Parms.PlayerState = std::move(PlayerState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPlayerStatePanel.SetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class ATedPlayerState*>&   InNewContent                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedPlayerStatePanel::SetContent(const TArray<class ATedPlayerState*>& InNewContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPlayerStatePanel", "SetContent");

	Params::TedPlayerStatePanel_SetContent Parms{};

	Parms.InNewContent = std::move(InNewContent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedHudPopup2Buttons.K2_OnHide
// (Event, Public, BlueprintEvent)

void UTedHudPopup2Buttons::K2_OnHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHudPopup2Buttons", "K2_OnHide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedHudPopup2Buttons.K2_OnShow
// (Event, Public, BlueprintEvent)

void UTedHudPopup2Buttons::K2_OnShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHudPopup2Buttons", "K2_OnShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedHudPopup2Buttons.No
// (Final, Native, Public, BlueprintCallable)

void UTedHudPopup2Buttons::No()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHudPopup2Buttons", "No");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedHudPopup2Buttons.Yes
// (Final, Native, Public, BlueprintCallable)

void UTedHudPopup2Buttons::Yes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHudPopup2Buttons", "Yes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedHudPopup1Button.K2_OnHide
// (Event, Public, BlueprintEvent)

void UTedHudPopup1Button::K2_OnHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHudPopup1Button", "K2_OnHide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedHudPopup1Button.K2_OnShow
// (Event, Public, BlueprintEvent)

void UTedHudPopup1Button::K2_OnShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedHudPopup1Button", "K2_OnShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedPopupButtonsPanel.SetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FTedPopupButton>&   InContent                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UTedPopupButtonsPanel::SetContent(const TArray<struct FTedPopupButton>& InContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPopupButtonsPanel", "SetContent");

	Params::TedPopupButtonsPanel_SetContent Parms{};

	Parms.InContent = std::move(InContent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPopupButtonsPanel.GetContentAll
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const TArray<struct FTedPopupButton>    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

const TArray<struct FTedPopupButton> UTedPopupButtonsPanel::GetContentAll() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPopupButtonsPanel", "GetContentAll");

	Params::TedPopupButtonsPanel_GetContentAll Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedPowerBarWidget.OnDisplayPowerConsumption
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FTedPowerBarData&          InData                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UTedPowerBarWidget::OnDisplayPowerConsumption(const struct FTedPowerBarData& InData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPowerBarWidget", "OnDisplayPowerConsumption");

	Params::TedPowerBarWidget_OnDisplayPowerConsumption Parms{};

	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedPowerBarWidget.OnDisplayPowerProduction
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FTedPowerBarData&          InData                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UTedPowerBarWidget::OnDisplayPowerProduction(const struct FTedPowerBarData& InData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedPowerBarWidget", "OnDisplayPowerProduction");

	Params::TedPowerBarWidget_OnDisplayPowerProduction Parms{};

	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedQrCodeWidget.OnQrCodeReceived
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FProsQrCodeState&          QrCodeState                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedQrCodeWidget::OnQrCodeReceived(const struct FProsQrCodeState& QrCodeState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedQrCodeWidget", "OnQrCodeReceived");

	Params::TedQrCodeWidget_OnQrCodeReceived Parms{};

	Parms.QrCodeState = std::move(QrCodeState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedQueueOverlay.Hide
// (Final, Native, Private, BlueprintCallable)

void UTedQueueOverlay::Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedQueueOverlay", "Hide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedQueueOverlay.LeaveQueue
// (Final, Native, Private)

void UTedQueueOverlay::LeaveQueue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedQueueOverlay", "LeaveQueue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedQueueOverlay.Reveal
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// const ETedServerType                    ServerType                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedQueueOverlay::Reveal(const ETedServerType ServerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedQueueOverlay", "Reveal");

	Params::TedQueueOverlay_Reveal Parms{};

	Parms.ServerType = ServerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedQueueOverlay.SetOnlineSessionsController
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class UTedOnlineSessionsControllerWidget*SessionsController                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedQueueOverlay::SetOnlineSessionsController(class UTedOnlineSessionsControllerWidget* SessionsController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedQueueOverlay", "SetOnlineSessionsController");

	Params::TedQueueOverlay_SetOnlineSessionsController Parms{};

	Parms.SessionsController = SessionsController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedRangeDecalComponent.DisplayRange
// (Final, Native, Public, BlueprintCallable)

void UTedRangeDecalComponent::DisplayRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedRangeDecalComponent", "DisplayRange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedRangeDecalComponent.SetIsCommandSelected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsCommandSelected                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedRangeDecalComponent::SetIsCommandSelected(bool bInIsCommandSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedRangeDecalComponent", "SetIsCommandSelected");

	Params::TedRangeDecalComponent_SetIsCommandSelected Parms{};

	Parms.bInIsCommandSelected = bInIsCommandSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedRangeDecalComponent.SetRadius
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedRangeDecalComponent::SetRadius(float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedRangeDecalComponent", "SetRadius");

	Params::TedRangeDecalComponent_SetRadius Parms{};

	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedRangeDecalComponent.SetShouldDisplayPerkRange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsPerkPreviewed                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedRangeDecalComponent::SetShouldDisplayPerkRange(bool bInIsPerkPreviewed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedRangeDecalComponent", "SetShouldDisplayPerkRange");

	Params::TedRangeDecalComponent_SetShouldDisplayPerkRange Parms{};

	Parms.bInIsPerkPreviewed = bInIsPerkPreviewed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedRangeDecalComponent.SetShouldDisplayPreviewRange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInShouldDisplayUpgradeRange                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedRangeDecalComponent::SetShouldDisplayPreviewRange(bool bInShouldDisplayUpgradeRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedRangeDecalComponent", "SetShouldDisplayPreviewRange");

	Params::TedRangeDecalComponent_SetShouldDisplayPreviewRange Parms{};

	Parms.bInShouldDisplayUpgradeRange = bInShouldDisplayUpgradeRange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedRangeDecalComponent.StopDisplayRange
// (Final, Native, Public, BlueprintCallable)

void UTedRangeDecalComponent::StopDisplayRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedRangeDecalComponent", "StopDisplayRange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedRangeDecalComponent.TryFindMaxAbilityRange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UTedEntityDefinitionAsset*  EntityDefinition                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedRangeDecalComponent::TryFindMaxAbilityRange(const class UTedEntityDefinitionAsset* EntityDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedRangeDecalComponent", "TryFindMaxAbilityRange");

	Params::TedRangeDecalComponent_TryFindMaxAbilityRange Parms{};

	Parms.EntityDefinition = EntityDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedRangeDecalComponent.TryFindPostUpdateRange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UTedStructureDefinitionAsset*SructureDef                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedRangeDecalComponent::TryFindPostUpdateRange(const class UTedStructureDefinitionAsset* SructureDef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedRangeDecalComponent", "TryFindPostUpdateRange");

	Params::TedRangeDecalComponent_TryFindPostUpdateRange Parms{};

	Parms.SructureDef = SructureDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedRangeDecalComponent.GetIsCommandSelected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedRangeDecalComponent::GetIsCommandSelected() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedRangeDecalComponent", "GetIsCommandSelected");

	Params::TedRangeDecalComponent_GetIsCommandSelected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedRangeDecalComponent.GetShouldDisplayPerkRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedRangeDecalComponent::GetShouldDisplayPerkRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedRangeDecalComponent", "GetShouldDisplayPerkRange");

	Params::TedRangeDecalComponent_GetShouldDisplayPerkRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedRangeDecalComponent.GetShouldDisplayPreviewRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedRangeDecalComponent::GetShouldDisplayPreviewRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedRangeDecalComponent", "GetShouldDisplayPreviewRange");

	Params::TedRangeDecalComponent_GetShouldDisplayPreviewRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedRankingProgressionWidget.DescribeCurrentSelection
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      SelectionText                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedRankingProgressionWidget::DescribeCurrentSelection(const class FText& SelectionText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedRankingProgressionWidget", "DescribeCurrentSelection");

	Params::TedRankingProgressionWidget_DescribeCurrentSelection Parms{};

	Parms.SelectionText = std::move(SelectionText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedRankingProgressionWidget.DescribeTierProgress
// (Event, Public, BlueprintEvent)
// Parameters:
// const int32                             InCurrentRating                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedMedalTableRow_Ranked&  InCurrentMedalTierRow                                  (Parm, NativeAccessSpecifierPublic)
// const struct FTedMedalTableRow_Ranked&  InNextMedalTierRow                                     (Parm, NativeAccessSpecifierPublic)

void UTedRankingProgressionWidget::DescribeTierProgress(const int32 InCurrentRating, const struct FTedMedalTableRow_Ranked& InCurrentMedalTierRow, const struct FTedMedalTableRow_Ranked& InNextMedalTierRow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedRankingProgressionWidget", "DescribeTierProgress");

	Params::TedRankingProgressionWidget_DescribeTierProgress Parms{};

	Parms.InCurrentRating = InCurrentRating;
	Parms.InCurrentMedalTierRow = std::move(InCurrentMedalTierRow);
	Parms.InNextMedalTierRow = std::move(InNextMedalTierRow);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedRankingProgressionWidget.OnRankedFactionTierPanelSlotAction
// (Final, Native, Private)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedRankingProgressionWidget::OnRankedFactionTierPanelSlotAction(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedRankingProgressionWidget", "OnRankedFactionTierPanelSlotAction");

	Params::TedRankingProgressionWidget_OnRankedFactionTierPanelSlotAction Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedRankingProgressionWidget.OnRankedFactionTierPanelSlotActivatedState
// (Final, Native, Private)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedRankingProgressionWidget::OnRankedFactionTierPanelSlotActivatedState(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedRankingProgressionWidget", "OnRankedFactionTierPanelSlotActivatedState");

	Params::TedRankingProgressionWidget_OnRankedFactionTierPanelSlotActivatedState Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedRankingProgressionWidget.OnRankedTeamPanelSlotAction
// (Final, Native, Private)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedRankingProgressionWidget::OnRankedTeamPanelSlotAction(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedRankingProgressionWidget", "OnRankedTeamPanelSlotAction");

	Params::TedRankingProgressionWidget_OnRankedTeamPanelSlotAction Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedRankingProgressionWidget.OnRankedTeamPanelSlotActivatedState
// (Final, Native, Private)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedRankingProgressionWidget::OnRankedTeamPanelSlotActivatedState(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedRankingProgressionWidget", "OnRankedTeamPanelSlotActivatedState");

	Params::TedRankingProgressionWidget_OnRankedTeamPanelSlotActivatedState Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedRankingProgressionWidget.GetPlayerProfile
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedOnlinePlayerProfileWidget*    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedOnlinePlayerProfileWidget* UTedRankingProgressionWidget::GetPlayerProfile() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedRankingProgressionWidget", "GetPlayerProfile");

	Params::TedRankingProgressionWidget_GetPlayerProfile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedRepCurveFunctions.CurrentTime
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTedServerTime*                  OutTime                                                (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UTedRepCurveFunctions::CurrentTime(struct FTedServerTime* OutTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedRepCurveFunctions", "CurrentTime");

	Params::TedRepCurveFunctions_CurrentTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTime != nullptr)
		*OutTime = std::move(Parms.OutTime);
}


// Function Tempest.TedRepCurveFunctions.CustomTime
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedServerTime*                  OutTime                                                (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UTedRepCurveFunctions::CustomTime(float InTime, struct FTedServerTime* OutTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedRepCurveFunctions", "CustomTime");

	Params::TedRepCurveFunctions_CustomTime Parms{};

	Parms.InTime = InTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTime != nullptr)
		*OutTime = std::move(Parms.OutTime);
}


// Function Tempest.TedRepCurveFunctions.GetValueAtTime_Bool
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRepCurve_Bool&            InCurve                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FTedServerTime&            InTime                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const bool                              InValueIfEmpty                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedRepCurveFunctions::GetValueAtTime_Bool(const struct FRepCurve_Bool& InCurve, const struct FTedServerTime& InTime, const bool InValueIfEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedRepCurveFunctions", "GetValueAtTime_Bool");

	Params::TedRepCurveFunctions_GetValueAtTime_Bool Parms{};

	Parms.InCurve = std::move(InCurve);
	Parms.InTime = std::move(InTime);
	Parms.InValueIfEmpty = InValueIfEmpty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedRepCurveFunctions.GetValueAtTime_Float
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRepCurve_Float&           InCurve                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FTedServerTime&            InTime                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const float                             InValueIfEmpty                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedRepCurveFunctions::GetValueAtTime_Float(const struct FRepCurve_Float& InCurve, const struct FTedServerTime& InTime, const float InValueIfEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedRepCurveFunctions", "GetValueAtTime_Float");

	Params::TedRepCurveFunctions_GetValueAtTime_Float Parms{};

	Parms.InCurve = std::move(InCurve);
	Parms.InTime = std::move(InTime);
	Parms.InValueIfEmpty = InValueIfEmpty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedRepCurveFunctions.GetValueAtTimeAdvanced_Bool
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRepCurve_Bool&            InCurve                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FTedServerTime&            InTime                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const bool                              InValueIfEmpty                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutFromValue                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutToValue                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutCurrentValue                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutProgress                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedRepCurveFunctions::GetValueAtTimeAdvanced_Bool(const struct FRepCurve_Bool& InCurve, const struct FTedServerTime& InTime, const bool InValueIfEmpty, bool* OutFromValue, bool* OutToValue, bool* OutCurrentValue, float* OutProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedRepCurveFunctions", "GetValueAtTimeAdvanced_Bool");

	Params::TedRepCurveFunctions_GetValueAtTimeAdvanced_Bool Parms{};

	Parms.InCurve = std::move(InCurve);
	Parms.InTime = std::move(InTime);
	Parms.InValueIfEmpty = InValueIfEmpty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFromValue != nullptr)
		*OutFromValue = Parms.OutFromValue;

	if (OutToValue != nullptr)
		*OutToValue = Parms.OutToValue;

	if (OutCurrentValue != nullptr)
		*OutCurrentValue = Parms.OutCurrentValue;

	if (OutProgress != nullptr)
		*OutProgress = Parms.OutProgress;
}


// Function Tempest.TedRepCurveFunctions.GetValueAtTimeAdvanced_Float
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FRepCurve_Float&           InCurve                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FTedServerTime&            InTime                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const float                             InValueIfEmpty                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutFromValue                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutToValue                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutCurrentValue                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutProgress                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedRepCurveFunctions::GetValueAtTimeAdvanced_Float(const struct FRepCurve_Float& InCurve, const struct FTedServerTime& InTime, const float InValueIfEmpty, float* OutFromValue, float* OutToValue, float* OutCurrentValue, float* OutProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedRepCurveFunctions", "GetValueAtTimeAdvanced_Float");

	Params::TedRepCurveFunctions_GetValueAtTimeAdvanced_Float Parms{};

	Parms.InCurve = std::move(InCurve);
	Parms.InTime = std::move(InTime);
	Parms.InValueIfEmpty = InValueIfEmpty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFromValue != nullptr)
		*OutFromValue = Parms.OutFromValue;

	if (OutToValue != nullptr)
		*OutToValue = Parms.OutToValue;

	if (OutCurrentValue != nullptr)
		*OutCurrentValue = Parms.OutCurrentValue;

	if (OutProgress != nullptr)
		*OutProgress = Parms.OutProgress;
}


// Function Tempest.TedRepCurveFunctions.IsEmpty_Bool
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FRepCurve_Bool&            InCurve                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedRepCurveFunctions::IsEmpty_Bool(const struct FRepCurve_Bool& InCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedRepCurveFunctions", "IsEmpty_Bool");

	Params::TedRepCurveFunctions_IsEmpty_Bool Parms{};

	Parms.InCurve = std::move(InCurve);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedRepCurveFunctions.IsEmpty_Float
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FRepCurve_Float&           InCurve                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedRepCurveFunctions::IsEmpty_Float(const struct FRepCurve_Float& InCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedRepCurveFunctions", "IsEmpty_Float");

	Params::TedRepCurveFunctions_IsEmpty_Float Parms{};

	Parms.InCurve = std::move(InCurve);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedRepCurveFunctions.SetValue_Bool
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRepCurve_Bool&                  InCurve                                                (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FTedServerTime&            InTime                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const bool                              InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedRepCurveFunctions::SetValue_Bool(struct FRepCurve_Bool& InCurve, const struct FTedServerTime& InTime, const bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedRepCurveFunctions", "SetValue_Bool");

	Params::TedRepCurveFunctions_SetValue_Bool Parms{};

	Parms.InCurve = std::move(InCurve);
	Parms.InTime = std::move(InTime);
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	InCurve = std::move(Parms.InCurve);
}


// Function Tempest.TedRepCurveFunctions.SetValue_Float
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRepCurve_Float&                 InCurve                                                (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FTedServerTime&            InTime                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const float                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedRepCurveFunctions::SetValue_Float(struct FRepCurve_Float& InCurve, const struct FTedServerTime& InTime, const float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedRepCurveFunctions", "SetValue_Float");

	Params::TedRepCurveFunctions_SetValue_Float Parms{};

	Parms.InCurve = std::move(InCurve);
	Parms.InTime = std::move(InTime);
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	InCurve = std::move(Parms.InCurve);
}


// Function Tempest.TedSavedGameProfileInfo.ContinueCampaignFromCurrentProfile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSavedGameProfileInfo::ContinueCampaignFromCurrentProfile(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedSavedGameProfileInfo", "ContinueCampaignFromCurrentProfile");

	Params::TedSavedGameProfileInfo_ContinueCampaignFromCurrentProfile Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSavedGameProfileInfo.GetCurrentProfile
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedSavedGameProfileInfo*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedSavedGameProfileInfo* UTedSavedGameProfileInfo::GetCurrentProfile(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedSavedGameProfileInfo", "GetCurrentProfile");

	Params::TedSavedGameProfileInfo_GetCurrentProfile Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSavedGameProfileInfo.GetCampaignDifficulty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedGameDifficulty                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedGameDifficulty UTedSavedGameProfileInfo::GetCampaignDifficulty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSavedGameProfileInfo", "GetCampaignDifficulty");

	Params::TedSavedGameProfileInfo_GetCampaignDifficulty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSavedGameProfileInfo.GetCampaignFaction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedFaction                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedFaction UTedSavedGameProfileInfo::GetCampaignFaction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSavedGameProfileInfo", "GetCampaignFaction");

	Params::TedSavedGameProfileInfo_GetCampaignFaction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSavedGameProfileInfo.GetCampaignProgressInPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedSavedGameProfileInfo::GetCampaignProgressInPercentage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSavedGameProfileInfo", "GetCampaignProgressInPercentage");

	Params::TedSavedGameProfileInfo_GetCampaignProgressInPercentage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSavedGameProfileInfo.GetCurrentCampaign
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedCampaignInfo*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedCampaignInfo* UTedSavedGameProfileInfo::GetCurrentCampaign() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSavedGameProfileInfo", "GetCurrentCampaign");

	Params::TedSavedGameProfileInfo_GetCurrentCampaign Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSavedGameProfileInfo.GetCurrentMap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedMapInfo*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedMapInfo* UTedSavedGameProfileInfo::GetCurrentMap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSavedGameProfileInfo", "GetCurrentMap");

	Params::TedSavedGameProfileInfo_GetCurrentMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSavedGameProfileInfo.GetCurrentMapIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    bZeroBased                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedSavedGameProfileInfo::GetCurrentMapIndex(bool bZeroBased) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSavedGameProfileInfo", "GetCurrentMapIndex");

	Params::TedSavedGameProfileInfo_GetCurrentMapIndex Parms{};

	Parms.bZeroBased = bZeroBased;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSavedGameProfileInfo.GetLastUnlockedPlayableMap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedMapInfo*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedMapInfo* UTedSavedGameProfileInfo::GetLastUnlockedPlayableMap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSavedGameProfileInfo", "GetLastUnlockedPlayableMap");

	Params::TedSavedGameProfileInfo_GetLastUnlockedPlayableMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSavedGameProfileInfo.GetMapIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedMapInfo*                InMapInfo                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bZeroBased                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedSavedGameProfileInfo::GetMapIndex(const class UTedMapInfo* InMapInfo, bool bZeroBased) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSavedGameProfileInfo", "GetMapIndex");

	Params::TedSavedGameProfileInfo_GetMapIndex Parms{};

	Parms.InMapInfo = InMapInfo;
	Parms.bZeroBased = bZeroBased;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSavedGameProfileInfo.GetNextMap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedMapInfo*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedMapInfo* UTedSavedGameProfileInfo::GetNextMap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSavedGameProfileInfo", "GetNextMap");

	Params::TedSavedGameProfileInfo_GetNextMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSavedGameProfileInfo.GetNextMapIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    bZeroBased                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedSavedGameProfileInfo::GetNextMapIndex(bool bZeroBased) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSavedGameProfileInfo", "GetNextMapIndex");

	Params::TedSavedGameProfileInfo_GetNextMapIndex Parms{};

	Parms.bZeroBased = bZeroBased;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSavedGameProfileInfo.GetPreviousMap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedMapInfo*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedMapInfo* UTedSavedGameProfileInfo::GetPreviousMap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSavedGameProfileInfo", "GetPreviousMap");

	Params::TedSavedGameProfileInfo_GetPreviousMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSavedGameProfileInfo.HasAnyProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedSavedGameProfileInfo::HasAnyProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSavedGameProfileInfo", "HasAnyProgress");

	Params::TedSavedGameProfileInfo_HasAnyProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSavedGameProfileInfo.IsCompatible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedSavedGameProfileInfo::IsCompatible() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSavedGameProfileInfo", "IsCompatible");

	Params::TedSavedGameProfileInfo_IsCompatible Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSavedGameSlotInfo.GetSaveDisplayName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USavedGameSlotInfo*               GameSlotInfo                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedSavedGameSlotInfo::GetSaveDisplayName(class USavedGameSlotInfo* GameSlotInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSavedGameSlotInfo", "GetSaveDisplayName");

	Params::TedSavedGameSlotInfo_GetSaveDisplayName Parms{};

	Parms.GameSlotInfo = GameSlotInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSavedGameSlotInfo.IsCompatible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedSavedGameSlotInfo::IsCompatible() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSavedGameSlotInfo", "IsCompatible");

	Params::TedSavedGameSlotInfo_IsCompatible Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSavedGameSubsystem.K2_CreateNewProfile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ProfileName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSetAsCurrent                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSavedGameSubsystem::K2_CreateNewProfile(const class FString& ProfileName, bool bSetAsCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSavedGameSubsystem", "K2_CreateNewProfile");

	Params::TedSavedGameSubsystem_K2_CreateNewProfile Parms{};

	Parms.ProfileName = std::move(ProfileName);
	Parms.bSetAsCurrent = bSetAsCurrent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSaveLoadContentPanel.AttemptDeleteSaveSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USavedGameSlotInfo*               SaveSlotInfo                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSaveLoadContentPanel::AttemptDeleteSaveSlot(class USavedGameSlotInfo* SaveSlotInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSaveLoadContentPanel", "AttemptDeleteSaveSlot");

	Params::TedSaveLoadContentPanel_AttemptDeleteSaveSlot Parms{};

	Parms.SaveSlotInfo = SaveSlotInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSaveLoadContentPanel.GenerateNewSaveName
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class FString*                          NewSaveName                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSaveLoadContentPanel::GenerateNewSaveName(class FString* NewSaveName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSaveLoadContentPanel", "GenerateNewSaveName");

	Params::TedSaveLoadContentPanel_GenerateNewSaveName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (NewSaveName != nullptr)
		*NewSaveName = std::move(Parms.NewSaveName);
}


// Function Tempest.TedSaveLoadContentPanel.SetGamemodeToShowSlotsFor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const ETedSavedSlotGamemodeType         InType                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRefresh                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSaveLoadContentPanel::SetGamemodeToShowSlotsFor(const ETedSavedSlotGamemodeType InType, bool bRefresh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSaveLoadContentPanel", "SetGamemodeToShowSlotsFor");

	Params::TedSaveLoadContentPanel_SetGamemodeToShowSlotsFor Parms{};

	Parms.InType = InType;
	Parms.bRefresh = bRefresh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSaveLoadContentPanel.GetBriefingDisplayNumberForSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             SlotIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedSaveLoadContentPanel::GetBriefingDisplayNumberForSlot(const int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSaveLoadContentPanel", "GetBriefingDisplayNumberForSlot");

	Params::TedSaveLoadContentPanel_GetBriefingDisplayNumberForSlot Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSaveLoadContentPanel.GetContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedSavedGameSlotInfo*      ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedSavedGameSlotInfo* UTedSaveLoadContentPanel::GetContent(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSaveLoadContentPanel", "GetContent");

	Params::TedSaveLoadContentPanel_GetContent Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSaveLoadContentPanel.GetContentByState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const ETedContentSlotState              InState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InIndex                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class USavedGameSlotInfo*         ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class USavedGameSlotInfo* UTedSaveLoadContentPanel::GetContentByState(const ETedContentSlotState InState, const int32 InIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSaveLoadContentPanel", "GetContentByState");

	Params::TedSaveLoadContentPanel_GetContentByState Parms{};

	Parms.InState = InState;
	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSaveLoadContentPanel.GetMapInfoBySlotIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             SlotIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedMapInfo*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedMapInfo* UTedSaveLoadContentPanel::GetMapInfoBySlotIndex(const int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSaveLoadContentPanel", "GetMapInfoBySlotIndex");

	Params::TedSaveLoadContentPanel_GetMapInfoBySlotIndex Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSaveLoadContentPanel.GetSelectedContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class USavedGameSlotInfo*         ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class USavedGameSlotInfo* UTedSaveLoadContentPanel::GetSelectedContent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSaveLoadContentPanel", "GetSelectedContent");

	Params::TedSaveLoadContentPanel_GetSelectedContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSaveLoadContentPanel.GetSelectedGamemodeType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const ETedSavedSlotGamemodeType         ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const ETedSavedSlotGamemodeType UTedSaveLoadContentPanel::GetSelectedGamemodeType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSaveLoadContentPanel", "GetSelectedGamemodeType");

	Params::TedSaveLoadContentPanel_GetSelectedGamemodeType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSaveLoadContentPanel.GetSelectedMapInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedMapInfo*                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedMapInfo* UTedSaveLoadContentPanel::GetSelectedMapInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSaveLoadContentPanel", "GetSelectedMapInfo");

	Params::TedSaveLoadContentPanel_GetSelectedMapInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSaveLoadContentPanel.HasAnySaveSlots
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedSaveLoadContentPanel::HasAnySaveSlots() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSaveLoadContentPanel", "HasAnySaveSlots");

	Params::TedSaveLoadContentPanel_HasAnySaveSlots Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSaveLoadContentPanel.HasSaveFileWithName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FName&                      SlotName                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const bool UTedSaveLoadContentPanel::HasSaveFileWithName(const class FName& SlotName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSaveLoadContentPanel", "HasSaveFileWithName");

	Params::TedSaveLoadContentPanel_HasSaveFileWithName Parms{};

	Parms.SlotName = SlotName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSaveLoadContentPanel.SlotIsBriefingCheckpoint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             SlotIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedSaveLoadContentPanel::SlotIsBriefingCheckpoint(const int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSaveLoadContentPanel", "SlotIsBriefingCheckpoint");

	Params::TedSaveLoadContentPanel_SlotIsBriefingCheckpoint Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSaveLoadContentPanel.SlotIsSaveGame
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             SlotIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedSaveLoadContentPanel::SlotIsSaveGame(const int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSaveLoadContentPanel", "SlotIsSaveGame");

	Params::TedSaveLoadContentPanel_SlotIsSaveGame Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedScoreMenuScreenContextObject.New
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const bool                              bInVictory                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedScoreMenuScreenContextObject* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedScoreMenuScreenContextObject* UTedScoreMenuScreenContextObject::New(const bool bInVictory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedScoreMenuScreenContextObject", "New");

	Params::TedScoreMenuScreenContextObject_New Parms{};

	Parms.bInVictory = bInVictory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedScoreScreenGraphTab.K2_OnUserInfoReceived
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FTedUserInfo&              InUserInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    InHydraId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedScoreScreenGraphTab::K2_OnUserInfoReceived(const struct FTedUserInfo& InUserInfo, const class FString& InHydraId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreScreenGraphTab", "K2_OnUserInfoReceived");

	Params::TedScoreScreenGraphTab_K2_OnUserInfoReceived Parms{};

	Parms.InUserInfo = std::move(InUserInfo);
	Parms.InHydraId = std::move(InHydraId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedScoreScreenGraphTab.OnActivateParticipantPanelSlotState
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedScoreScreenGraphTab::OnActivateParticipantPanelSlotState(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreScreenGraphTab", "OnActivateParticipantPanelSlotState");

	Params::TedScoreScreenGraphTab_OnActivateParticipantPanelSlotState Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedScoreScreenGraphTab.OnParticipantsPanelContentChange
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelDynamic*          InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedScoreScreenGraphTab::OnParticipantsPanelContentChange(class UTedContentPanelDynamic* InContentPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreScreenGraphTab", "OnParticipantsPanelContentChange");

	Params::TedScoreScreenGraphTab_OnParticipantsPanelContentChange Parms{};

	Parms.InContentPanel = InContentPanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedScoreScreenOnlinePlayersPanel.GetSlotIDs
// (Final, Native, Private)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UTedScoreScreenOnlinePlayersPanel::GetSlotIDs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreScreenOnlinePlayersPanel", "GetSlotIDs");

	Params::TedScoreScreenOnlinePlayersPanel_GetSlotIDs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedScoreScreenOnlinePlayersPanel.PlayerDefeatOrVictoryFilter
// (Final, Native, Private, HasOutParams)
// Parameters:
// const class UTedGenericDataContentPanel*InPanel                                                (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedGenericDataContainer&  InGenericDataContainer                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const int32                             InIndex                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedScoreScreenOnlinePlayersPanel::PlayerDefeatOrVictoryFilter(const class UTedGenericDataContentPanel* InPanel, const struct FTedGenericDataContainer& InGenericDataContainer, const int32 InIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreScreenOnlinePlayersPanel", "PlayerDefeatOrVictoryFilter");

	Params::TedScoreScreenOnlinePlayersPanel_PlayerDefeatOrVictoryFilter Parms{};

	Parms.InPanel = InPanel;
	Parms.InGenericDataContainer = std::move(InGenericDataContainer);
	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedScoreScreenOnlinePlayersPanel.OnPlayerDetailSlotRegistered
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UTedUI_InstancedContent*          SlotContent                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelInstanced*        Panel                                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InIndex                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedScoreScreenOnlinePlayersPanel::OnPlayerDetailSlotRegistered(class UTedUI_InstancedContent* SlotContent, class UTedContentPanelInstanced* Panel, const int32 InIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreScreenOnlinePlayersPanel", "OnPlayerDetailSlotRegistered");

	Params::TedScoreScreenOnlinePlayersPanel_OnPlayerDetailSlotRegistered Parms{};

	Parms.SlotContent = SlotContent;
	Parms.Panel = Panel;
	Parms.InIndex = InIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedScorescreenProgressbar.RecalculateMaxValue
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedScorescreenProgressbar::RecalculateMaxValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScorescreenProgressbar", "RecalculateMaxValue");

	Params::TedScorescreenProgressbar_RecalculateMaxValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedScoreScreenRewardValueWidget.SetTitle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FText&                      InTitle                                                (ConstParm, Parm, NativeAccessSpecifierPublic)

void UTedScoreScreenRewardValueWidget::SetTitle(const class FText& InTitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreScreenRewardValueWidget", "SetTitle");

	Params::TedScoreScreenRewardValueWidget_SetTitle Parms{};

	Parms.InTitle = std::move(InTitle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedScoreScreenRewardValueWidget.SetValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InMax                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedScoreScreenRewardValueWidget::SetValue(const int32 InValue, const int32 InMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreScreenRewardValueWidget", "SetValue");

	Params::TedScoreScreenRewardValueWidget_SetValue Parms{};

	Parms.InValue = InValue;
	Parms.InMax = InMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedScoreScreenRewardValueWidget.GetConditionalVisibility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedScoreScreenRewardValueWidget::GetConditionalVisibility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreScreenRewardValueWidget", "GetConditionalVisibility");

	Params::TedScoreScreenRewardValueWidget_GetConditionalVisibility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedScoreScreenRewardValueWidget.GetMax
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedScoreScreenRewardValueWidget::GetMax() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreScreenRewardValueWidget", "GetMax");

	Params::TedScoreScreenRewardValueWidget_GetMax Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedScoreScreenRewardValueWidget.GetTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedScoreScreenRewardValueWidget::GetTitle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreScreenRewardValueWidget", "GetTitle");

	Params::TedScoreScreenRewardValueWidget_GetTitle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedScoreScreenRewardValueWidget.GetValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedScoreScreenRewardValueWidget::GetValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreScreenRewardValueWidget", "GetValue");

	Params::TedScoreScreenRewardValueWidget_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedScoreScreenRewardValueWidget.GetValueAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedScoreScreenRewardValueWidget::GetValueAlpha() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreScreenRewardValueWidget", "GetValueAlpha");

	Params::TedScoreScreenRewardValueWidget_GetValueAlpha Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedScoreScreenRewardValueWidget.GetValueText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedScoreScreenRewardValueWidget::GetValueText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreScreenRewardValueWidget", "GetValueText");

	Params::TedScoreScreenRewardValueWidget_GetValueText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedScoreScreenRewardValueWidget.HasMax
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedScoreScreenRewardValueWidget::HasMax() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreScreenRewardValueWidget", "HasMax");

	Params::TedScoreScreenRewardValueWidget_HasMax Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedScoreScreenStatsTableTab.K2_OnUserInfoReceived
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FTedUserInfo&              InUserInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    InHydraId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedScoreScreenStatsTableTab::K2_OnUserInfoReceived(const struct FTedUserInfo& InUserInfo, const class FString& InHydraId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreScreenStatsTableTab", "K2_OnUserInfoReceived");

	Params::TedScoreScreenStatsTableTab_K2_OnUserInfoReceived Parms{};

	Parms.InUserInfo = std::move(InUserInfo);
	Parms.InHydraId = std::move(InHydraId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedScoreScreenStatsTableTab.OnActivatePawnStatHeaderSlotState
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedScoreScreenStatsTableTab::OnActivatePawnStatHeaderSlotState(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreScreenStatsTableTab", "OnActivatePawnStatHeaderSlotState");

	Params::TedScoreScreenStatsTableTab_OnActivatePawnStatHeaderSlotState Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedScoreScreenStatsTableTab.OnActivateSummaryHeaderSlotState
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedScoreScreenStatsTableTab::OnActivateSummaryHeaderSlotState(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreScreenStatsTableTab", "OnActivateSummaryHeaderSlotState");

	Params::TedScoreScreenStatsTableTab_OnActivateSummaryHeaderSlotState Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedScoreScreenStatsTableTab.OnOpenTab
// (Final, Native, Public, BlueprintCallable)

void UTedScoreScreenStatsTableTab::OnOpenTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreScreenStatsTableTab", "OnOpenTab");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedScoreScreenStatsTableTab.OnSelectedParticipantChange
// (Event, Protected, BlueprintEvent)

void UTedScoreScreenStatsTableTab::OnSelectedParticipantChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreScreenStatsTableTab", "OnSelectedParticipantChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedScoreScreenStatsTableTab.OnSummaryPanelContentChange
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelDynamic*          InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedScoreScreenStatsTableTab::OnSummaryPanelContentChange(class UTedContentPanelDynamic* InContentPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScoreScreenStatsTableTab", "OnSummaryPanelContentChange");

	Params::TedScoreScreenStatsTableTab_OnSummaryPanelContentChange Parms{};

	Parms.InContentPanel = InContentPanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedScrollBox.SetBarStyle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class USlateWidgetStyleAsset*     InStyle                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedScrollBox::SetBarStyle(const class USlateWidgetStyleAsset* InStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedScrollBox", "SetBarStyle");

	Params::TedScrollBox_SetBarStyle Parms{};

	Parms.InStyle = InStyle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSelectionDetailsGarrisonedPawnsPanel.DoesContentTakeOneSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedSelectionDetailsGarrisonedPawnsPanel::DoesContentTakeOneSlot(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsGarrisonedPawnsPanel", "DoesContentTakeOneSlot");

	Params::TedSelectionDetailsGarrisonedPawnsPanel_DoesContentTakeOneSlot Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSelectionDetailsGarrisonedPawnsPanel.GetSlotPadding
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FMargin                    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

const struct FMargin UTedSelectionDetailsGarrisonedPawnsPanel::GetSlotPadding() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsGarrisonedPawnsPanel", "GetSlotPadding");

	Params::TedSelectionDetailsGarrisonedPawnsPanel_GetSlotPadding Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSelectionDetailsGarrisonedPawnsPanel.GetUnloadAllPawnsButOneShortcut
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FTedShortcutUI             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FTedShortcutUI UTedSelectionDetailsGarrisonedPawnsPanel::GetUnloadAllPawnsButOneShortcut() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsGarrisonedPawnsPanel", "GetUnloadAllPawnsButOneShortcut");

	Params::TedSelectionDetailsGarrisonedPawnsPanel_GetUnloadAllPawnsButOneShortcut Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSelectionDetailsGarrisonedPawnsPanel.GetUnloadAllPawnsButTypeShortcut
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FTedShortcutUI             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FTedShortcutUI UTedSelectionDetailsGarrisonedPawnsPanel::GetUnloadAllPawnsButTypeShortcut() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsGarrisonedPawnsPanel", "GetUnloadAllPawnsButTypeShortcut");

	Params::TedSelectionDetailsGarrisonedPawnsPanel_GetUnloadAllPawnsButTypeShortcut Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSelectionDetailsGarrisonedPawnsPanel.GetUnloadAllPawnsShortcut
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FTedShortcutUI             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FTedShortcutUI UTedSelectionDetailsGarrisonedPawnsPanel::GetUnloadAllPawnsShortcut() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsGarrisonedPawnsPanel", "GetUnloadAllPawnsShortcut");

	Params::TedSelectionDetailsGarrisonedPawnsPanel_GetUnloadAllPawnsShortcut Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSelectionDetailsGarrisonedPawnsPanel.GetUnloadPawnsByTypeShortcut
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FTedShortcutUI             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FTedShortcutUI UTedSelectionDetailsGarrisonedPawnsPanel::GetUnloadPawnsByTypeShortcut() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsGarrisonedPawnsPanel", "GetUnloadPawnsByTypeShortcut");

	Params::TedSelectionDetailsGarrisonedPawnsPanel_GetUnloadPawnsByTypeShortcut Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSelectionDetailsGarrisonedPawnsPanel.GetUnloadPawnShortcut
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FTedShortcutUI             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FTedShortcutUI UTedSelectionDetailsGarrisonedPawnsPanel::GetUnloadPawnShortcut() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsGarrisonedPawnsPanel", "GetUnloadPawnShortcut");

	Params::TedSelectionDetailsGarrisonedPawnsPanel_GetUnloadPawnShortcut Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSelectionDetailsGarrisonedPawnsWidget.OnPlayersPawnContentChange
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelDynamic*          InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSelectionDetailsGarrisonedPawnsWidget::OnPlayersPawnContentChange(class UTedContentPanelDynamic* InContentPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsGarrisonedPawnsWidget", "OnPlayersPawnContentChange");

	Params::TedSelectionDetailsGarrisonedPawnsWidget_OnPlayersPawnContentChange Parms{};

	Parms.InContentPanel = InContentPanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSelectionDetailsGarrisonedPawnsWidget.OnPlayersPawnTriggerSlotAction
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSelectionDetailsGarrisonedPawnsWidget::OnPlayersPawnTriggerSlotAction(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsGarrisonedPawnsWidget", "OnPlayersPawnTriggerSlotAction");

	Params::TedSelectionDetailsGarrisonedPawnsWidget_OnPlayersPawnTriggerSlotAction Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSelectionDetailsGarrisonedPawnsWidget.RefreshPawnsPanel
// (Final, Native, Public, BlueprintCallable)

void UTedSelectionDetailsGarrisonedPawnsWidget::RefreshPawnsPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsGarrisonedPawnsWidget", "RefreshPawnsPanel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSelectionDetailsGarrisonedPawnsWidget.SetPawnContainer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTedPawnContainerComponent*       InContainer                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSelectionDetailsGarrisonedPawnsWidget::SetPawnContainer(class UTedPawnContainerComponent* InContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsGarrisonedPawnsWidget", "SetPawnContainer");

	Params::TedSelectionDetailsGarrisonedPawnsWidget_SetPawnContainer Parms{};

	Parms.InContainer = InContainer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSelectionDetailsGarrisonedPawnsWidget.SetPawnContainerByPawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ATedPawn*                         InContainerOwner                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSelectionDetailsGarrisonedPawnsWidget::SetPawnContainerByPawn(class ATedPawn* InContainerOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsGarrisonedPawnsWidget", "SetPawnContainerByPawn");

	Params::TedSelectionDetailsGarrisonedPawnsWidget_SetPawnContainerByPawn Parms{};

	Parms.InContainerOwner = InContainerOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSelectionDetailsGarrisonedPawnsWidget.UnloadAllPawns
// (Final, Native, Public, BlueprintCallable)

void UTedSelectionDetailsGarrisonedPawnsWidget::UnloadAllPawns()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsGarrisonedPawnsWidget", "UnloadAllPawns");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSelectionDetailsGarrisonedPawnsWidget.UnloadAllPawnsButOne
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSelectionDetailsGarrisonedPawnsWidget::UnloadAllPawnsButOne(const int32 InSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsGarrisonedPawnsWidget", "UnloadAllPawnsButOne");

	Params::TedSelectionDetailsGarrisonedPawnsWidget_UnloadAllPawnsButOne Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSelectionDetailsGarrisonedPawnsWidget.UnloadPawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSelectionDetailsGarrisonedPawnsWidget::UnloadPawn(const int32 InSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsGarrisonedPawnsWidget", "UnloadPawn");

	Params::TedSelectionDetailsGarrisonedPawnsWidget_UnloadPawn Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSelectionDetailsGarrisonedPawnsWidget.UnloadPawns
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class ATedPawn*>&          InPawns                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedSelectionDetailsGarrisonedPawnsWidget::UnloadPawns(const TArray<class ATedPawn*>& InPawns)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsGarrisonedPawnsWidget", "UnloadPawns");

	Params::TedSelectionDetailsGarrisonedPawnsWidget_UnloadPawns Parms{};

	Parms.InPawns = std::move(InPawns);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSelectionDetailsGarrisonedPawnsWidget.UnloadPawnsByType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInKeepMatching                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSelectionDetailsGarrisonedPawnsWidget::UnloadPawnsByType(const int32 InSlotIndex, const bool bInKeepMatching)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsGarrisonedPawnsWidget", "UnloadPawnsByType");

	Params::TedSelectionDetailsGarrisonedPawnsWidget_UnloadPawnsByType Parms{};

	Parms.InSlotIndex = InSlotIndex;
	Parms.bInKeepMatching = bInKeepMatching;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSelectionDetailsGarrisonedPawnsWidget.GetPawnContainer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedPawnContainerComponent*       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedPawnContainerComponent* UTedSelectionDetailsGarrisonedPawnsWidget::GetPawnContainer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsGarrisonedPawnsWidget", "GetPawnContainer");

	Params::TedSelectionDetailsGarrisonedPawnsWidget_GetPawnContainer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSelectionDetailsGarrisonedPawnsWidget.GetPawnContainerOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedPawn*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedPawn* UTedSelectionDetailsGarrisonedPawnsWidget::GetPawnContainerOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetailsGarrisonedPawnsWidget", "GetPawnContainerOwner");

	Params::TedSelectionDetailsGarrisonedPawnsWidget_GetPawnContainerOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSelectionDetails_InfoSlots_Slot_Perks.OnContextChange
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelStatic*           InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          InPrevContext                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          InNewContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSelectionDetails_InfoSlots_Slot_Perks::OnContextChange(class UTedContentPanelStatic* InContentPanel, class UObject* InPrevContext, class UObject* InNewContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetails_InfoSlots_Slot_Perks", "OnContextChange");

	Params::TedSelectionDetails_InfoSlots_Slot_Perks_OnContextChange Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InPrevContext = InPrevContext;
	Parms.InNewContext = InNewContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSelectionDetails_InfoSlots_Slot_Perks.RefreshDisabledState
// (Final, Native, Public, BlueprintCallable)

void UTedSelectionDetails_InfoSlots_Slot_Perks::RefreshDisabledState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetails_InfoSlots_Slot_Perks", "RefreshDisabledState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSelectionDetails_InfoSlots_Slot_Perks.GetContextPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedPawn*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedPawn* UTedSelectionDetails_InfoSlots_Slot_Perks::GetContextPawn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionDetails_InfoSlots_Slot_Perks", "GetContextPawn");

	Params::TedSelectionDetails_InfoSlots_Slot_Perks_GetContextPawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSelectionGroupPanel.FocusCameraOnGroup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSelectionGroupPanel::FocusCameraOnGroup(const int32 InSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionGroupPanel", "FocusCameraOnGroup");

	Params::TedSelectionGroupPanel_FocusCameraOnGroup Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSelectionGroupPanel.ReceiveUpdateGroupSize
// (Event, Protected, BlueprintEvent)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InGroupIndex                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InGroupSize                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSelectionGroupPanel::ReceiveUpdateGroupSize(const int32 InSlotIndex, const int32 InGroupIndex, const int32 InGroupSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionGroupPanel", "ReceiveUpdateGroupSize");

	Params::TedSelectionGroupPanel_ReceiveUpdateGroupSize Parms{};

	Parms.InSlotIndex = InSlotIndex;
	Parms.InGroupIndex = InGroupIndex;
	Parms.InGroupSize = InGroupSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedSelectionGroupPanel.GetGroupIndex
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedSelectionGroupPanel::GetGroupIndex(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionGroupPanel", "GetGroupIndex");

	Params::TedSelectionGroupPanel_GetGroupIndex Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSelectionGroupPanel.GetSlotGroupSize
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedSelectionGroupPanel::GetSlotGroupSize(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionGroupPanel", "GetSlotGroupSize");

	Params::TedSelectionGroupPanel_GetSlotGroupSize Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSelectionGroupPanel.IsSlotEmpty
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedSelectionGroupPanel::IsSlotEmpty(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSelectionGroupPanel", "IsSlotEmpty");

	Params::TedSelectionGroupPanel_IsSlotEmpty Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSettingsScreen_GameSettings.OnTriggerButtonSlotAction
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InContentPanel                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InContentSlot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedContentSlotAction                   InAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSettingsScreen_GameSettings::OnTriggerButtonSlotAction(class UTedContentPanelBase* InContentPanel, class UTedContentPanelSlotBase* InContentSlot, ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsScreen_GameSettings", "OnTriggerButtonSlotAction");

	Params::TedSettingsScreen_GameSettings_OnTriggerButtonSlotAction Parms{};

	Parms.InContentPanel = InContentPanel;
	Parms.InContentSlot = InContentSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSettingsScreen_GameSettings.ResetBindingsToDefaults
// (Final, Native, Protected)

void UTedSettingsScreen_GameSettings::ResetBindingsToDefaults()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsScreen_GameSettings", "ResetBindingsToDefaults");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSettingsScreen_GameSettings.RunAutoBenchmark
// (Final, Native, Protected)
// Parameters:
// float                                   InDeltaTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedSettingsScreen_GameSettings::RunAutoBenchmark(float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsScreen_GameSettings", "RunAutoBenchmark");

	Params::TedSettingsScreen_GameSettings_RunAutoBenchmark Parms{};

	Parms.InDeltaTime = InDeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSettingsSlot_CheckBox.SetSourceValue
// (Final, Native, Protected)
// Parameters:
// bool                                    bInIsChecked                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSettingsSlot_CheckBox::SetSourceValue(bool bInIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsSlot_CheckBox", "SetSourceValue");

	Params::TedSettingsSlot_CheckBox_SetSourceValue Parms{};

	Parms.bInIsChecked = bInIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSettingsSlot_CheckBox.GetSourceValue
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedSettingsSlot_CheckBox::GetSourceValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsSlot_CheckBox", "GetSourceValue");

	Params::TedSettingsSlot_CheckBox_GetSourceValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSettingsSlot_InputAxis.ClearSourceValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FInputAxisKeyMapping&      InValue                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedSettingsSlot_InputAxis::ClearSourceValue(const struct FInputAxisKeyMapping& InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsSlot_InputAxis", "ClearSourceValue");

	Params::TedSettingsSlot_InputAxis_ClearSourceValue Parms{};

	Parms.InValue = std::move(InValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSettingsSlot_InputAxis.OnTriggerMappingSlotAction
// (Final, Native, Protected)
// Parameters:
// class UTedContentPanelBase*             InPanel                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedContentPanelSlotBase*         InSlot                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedContentSlotAction             InAction                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSettingsSlot_InputAxis::OnTriggerMappingSlotAction(class UTedContentPanelBase* InPanel, class UTedContentPanelSlotBase* InSlot, const ETedContentSlotAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsSlot_InputAxis", "OnTriggerMappingSlotAction");

	Params::TedSettingsSlot_InputAxis_OnTriggerMappingSlotAction Parms{};

	Parms.InPanel = InPanel;
	Parms.InSlot = InSlot;
	Parms.InAction = InAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSettingsSlot_InputAxis.SetSourceValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FInputAxisKeyMapping&      InValue                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedSettingsSlot_InputAxis::SetSourceValue(const struct FInputAxisKeyMapping& InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsSlot_InputAxis", "SetSourceValue");

	Params::TedSettingsSlot_InputAxis_SetSourceValue Parms{};

	Parms.InValue = std::move(InValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSettingsSlot_InputAxis.GetSourceValue
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const int32                             InMappingIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInputAxisKeyMapping             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FInputAxisKeyMapping UTedSettingsSlot_InputAxis::GetSourceValue(const int32 InMappingIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsSlot_InputAxis", "GetSourceValue");

	Params::TedSettingsSlot_InputAxis_GetSourceValue Parms{};

	Parms.InMappingIndex = InMappingIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSettingsSlot_InputAxis.IsPositive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedSettingsSlot_InputAxis::IsPositive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsSlot_InputAxis", "IsPositive");

	Params::TedSettingsSlot_InputAxis_IsPositive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSettingsSlot_Readonly.SetBinds
// (Final, Native, Public, BlueprintCallable)

void UTedSettingsSlot_Readonly::SetBinds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsSlot_Readonly", "SetBinds");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSettingsSlot_Readonly.SetKeyBinds
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const TArray<struct FKey>&              Binds                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedSettingsSlot_Readonly::SetKeyBinds(const TArray<struct FKey>& Binds) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsSlot_Readonly", "SetKeyBinds");

	Params::TedSettingsSlot_Readonly_SetKeyBinds Parms{};

	Parms.Binds = std::move(Binds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSettingsSlot_Section.OnExpansionChanged
// (Final, Native, Protected)
// Parameters:
// class UExpandableArea*                  InArea                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsExpanded                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSettingsSlot_Section::OnExpansionChanged(class UExpandableArea* InArea, bool bInIsExpanded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsSlot_Section", "OnExpansionChanged");

	Params::TedSettingsSlot_Section_OnExpansionChanged Parms{};

	Parms.InArea = InArea;
	Parms.bInIsExpanded = bInIsExpanded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSettingsSlot_Section.GetInnerSettingsPanel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedSettingsPanel*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedSettingsPanel* UTedSettingsSlot_Section::GetInnerSettingsPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSettingsSlot_Section", "GetInnerSettingsPanel");

	Params::TedSettingsSlot_Section_GetInnerSettingsPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedShortcutsPanel.SetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FTedShortcutChordUI>&InContent                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const bool                              bInRefreshContent                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedShortcutsPanel::SetContent(const TArray<struct FTedShortcutChordUI>& InContent, const bool bInRefreshContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedShortcutsPanel", "SetContent");

	Params::TedShortcutsPanel_SetContent Parms{};

	Parms.InContent = std::move(InContent);
	Parms.bInRefreshContent = bInRefreshContent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedShortcutsPanel.SetContentShortcuts
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FTedShortcutUI>&    InContent                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const bool                              bInRefreshContent                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedShortcutsPanel::SetContentShortcuts(const TArray<struct FTedShortcutUI>& InContent, const bool bInRefreshContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedShortcutsPanel", "SetContentShortcuts");

	Params::TedShortcutsPanel_SetContentShortcuts Parms{};

	Parms.InContent = std::move(InContent);
	Parms.bInRefreshContent = bInRefreshContent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedShortcutsPanel.GetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedShortcutChordUI*             OutContent                                             (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedShortcutsPanel::GetContent(const int32 InSlotIndex, struct FTedShortcutChordUI* OutContent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedShortcutsPanel", "GetContent");

	Params::TedShortcutsPanel_GetContent Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutContent != nullptr)
		*OutContent = std::move(Parms.OutContent);

	return Parms.ReturnValue;
}


// Function Tempest.TedShortcutsPanel.GetEmptyVisibility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedShortcutsPanel::GetEmptyVisibility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedShortcutsPanel", "GetEmptyVisibility");

	Params::TedShortcutsPanel_GetEmptyVisibility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedShortcutsPanel.GetNonEmptyVisibility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedShortcutsPanel::GetNonEmptyVisibility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedShortcutsPanel", "GetNonEmptyVisibility");

	Params::TedShortcutsPanel_GetNonEmptyVisibility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedShortcutsPanel.IsEmpty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedShortcutsPanel::IsEmpty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedShortcutsPanel", "IsEmpty");

	Params::TedShortcutsPanel_IsEmpty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedShortcutsSlot.GetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// struct FTedShortcutChordUI*             OutContent                                             (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedShortcutsSlot::GetContent(struct FTedShortcutChordUI* OutContent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedShortcutsSlot", "GetContent");

	Params::TedShortcutsSlot_GetContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutContent != nullptr)
		*OutContent = std::move(Parms.OutContent);

	return Parms.ReturnValue;
}


// Function Tempest.TedShortcutsSlot.GetContentPanel
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UTedShortcutsPanel*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedShortcutsPanel* UTedShortcutsSlot::GetContentPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedShortcutsSlot", "GetContentPanel");

	Params::TedShortcutsSlot_GetContentPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSkipUIWidget.GetSkippableSequenceText
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedSkipUIWidget::GetSkippableSequenceText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkipUIWidget", "GetSkippableSequenceText");

	Params::TedSkipUIWidget_GetSkippableSequenceText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSkipUIWidget.GetSkippingProgress
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedSkipUIWidget::GetSkippingProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSkipUIWidget", "GetSkippingProgress");

	Params::TedSkipUIWidget_GetSkippingProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStatusPanel.SetContentSourcePawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ATedPawn*                         InPawn                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedStatusPanel::SetContentSourcePawn(class ATedPawn* InPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStatusPanel", "SetContentSourcePawn");

	Params::TedStatusPanel_SetContentSourcePawn Parms{};

	Parms.InPawn = InPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStatusPanel.GetContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedStatusDefinition*       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedStatusDefinition* UTedStatusPanel::GetContent(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStatusPanel", "GetContent");

	Params::TedStatusPanel_GetContent Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStatusPanel.GetContentSourceAbilityComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedAbilityComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedAbilityComponent* UTedStatusPanel::GetContentSourceAbilityComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStatusPanel", "GetContentSourceAbilityComponent");

	Params::TedStatusPanel_GetContentSourceAbilityComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStatusPanel.GetContentSourcePawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedPawn*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedPawn* UTedStatusPanel::GetContentSourcePawn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStatusPanel", "GetContentSourcePawn");

	Params::TedStatusPanel_GetContentSourcePawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStatusPanel.GetInlinedSlotsNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedStatusPanel::GetInlinedSlotsNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStatusPanel", "GetInlinedSlotsNum");

	Params::TedStatusPanel_GetInlinedSlotsNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStatusSlot.GetContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UTedStatusDefinition*       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTedStatusDefinition* UTedStatusSlot::GetContent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStatusSlot", "GetContent");

	Params::TedStatusSlot_GetContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStatusSlot.GetDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTedStatusSlot::GetDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStatusSlot", "GetDescription");

	Params::TedStatusSlot_GetDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStatusSlot.GetDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedStatusSlot::GetDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStatusSlot", "GetDisplayName");

	Params::TedStatusSlot_GetDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStatusSlot.GetIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UTedStatusSlot::GetIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStatusSlot", "GetIcon");

	Params::TedStatusSlot_GetIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStatusSlot.GetIconMID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* UTedStatusSlot::GetIconMID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStatusSlot", "GetIconMID");

	Params::TedStatusSlot_GetIconMID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStatusSlot.GetParentPanel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedStatusPanel*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedStatusPanel* UTedStatusSlot::GetParentPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStatusSlot", "GetParentPanel");

	Params::TedStatusSlot_GetParentPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStatusSlot.GetType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETedStatusType                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedStatusType UTedStatusSlot::GetType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStatusSlot", "GetType");

	Params::TedStatusSlot_GetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStatusSlot.IsInlined
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedStatusSlot::IsInlined() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStatusSlot", "IsInlined");

	Params::TedStatusSlot_IsInlined Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureCommandButton.SelectCommand
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const bool                              bInDeselectIfAlreadySelected                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedStructureCommandButton::SelectCommand(const bool bInDeselectIfAlreadySelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureCommandButton", "SelectCommand");

	Params::TedStructureCommandButton_SelectCommand Parms{};

	Parms.bInDeselectIfAlreadySelected = bInDeselectIfAlreadySelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructureCommandButton.GetCommandShortcut
// (Final, Native, Protected, HasOutParams, BlueprintCallable, Const)
// Parameters:
// struct FInputChord*                     OutShortcut                                            (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedStructureCommandButton::GetCommandShortcut(struct FInputChord* OutShortcut) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureCommandButton", "GetCommandShortcut");

	Params::TedStructureCommandButton_GetCommandShortcut Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutShortcut != nullptr)
		*OutShortcut = std::move(Parms.OutShortcut);

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureCommandButton.GetCommandUIData
// (Final, Native, Protected, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class UTexture2D**                      OutIcon                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D**                      OutCursor                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText*                            OutName                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// class FText*                            OutDescription                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedStructureCommandButton::GetCommandUIData(class UTexture2D** OutIcon, class UTexture2D** OutCursor, class FText* OutName, class FText* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureCommandButton", "GetCommandUIData");

	Params::TedStructureCommandButton_GetCommandUIData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutIcon != nullptr)
		*OutIcon = Parms.OutIcon;

	if (OutCursor != nullptr)
		*OutCursor = Parms.OutCursor;

	if (OutName != nullptr)
		*OutName = std::move(Parms.OutName);

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureCommandButton.GetKeyCommandShortcut
// (Final, Native, Protected, HasOutParams, BlueprintCallable, Const)
// Parameters:
// struct FKey*                            OutShortcut                                            (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedStructureCommandButton::GetKeyCommandShortcut(struct FKey* OutShortcut) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureCommandButton", "GetKeyCommandShortcut");

	Params::TedStructureCommandButton_GetKeyCommandShortcut Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutShortcut != nullptr)
		*OutShortcut = std::move(Parms.OutShortcut);

	return Parms.ReturnValue;
}


// Function Tempest.TedStructurePlacementPreviewComponent.OnSetupMaterial
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         InMyMID                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UMaterialInstance*          InStructureMID                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedStructurePlacementPreviewComponent::OnSetupMaterial(class UMaterialInstanceDynamic* InMyMID, const class UMaterialInstance* InStructureMID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructurePlacementPreviewComponent", "OnSetupMaterial");

	Params::TedStructurePlacementPreviewComponent_OnSetupMaterial Parms{};

	Parms.InMyMID = InMyMID;
	Parms.InStructureMID = InStructureMID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructureGate.OnRep_Opened
// (Final, Native, Protected)

void ATedStructureGate::OnRep_Opened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureGate", "OnRep_Opened");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructureGate.OnSetOpenedCosmetic
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bInOpened                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedStructureGate::OnSetOpenedCosmetic(const bool bInOpened)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureGate", "OnSetOpenedCosmetic");

	Params::TedStructureGate_OnSetOpenedCosmetic Parms{};

	Parms.bInOpened = bInOpened;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructureGate.SetOpened
// (Final, BlueprintCosmetic, Native, Public)
// Parameters:
// const bool                              bInOpened                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedStructureGate::SetOpened(const bool bInOpened)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureGate", "SetOpened");

	Params::TedStructureGate_SetOpened Parms{};

	Parms.bInOpened = bInOpened;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructureGate.IsOpened
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedStructureGate::IsOpened() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureGate", "IsOpened");

	Params::TedStructureGate_IsOpened Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructurePlacementVolume.K2_SetRelevantDefinitions
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<TSoftObjectPtr<class UTedEntityDefinitionAsset>>&InDefinitions                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

void ATedStructurePlacementVolume::K2_SetRelevantDefinitions(const TArray<TSoftObjectPtr<class UTedEntityDefinitionAsset>>& InDefinitions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructurePlacementVolume", "K2_SetRelevantDefinitions");

	Params::TedStructurePlacementVolume_K2_SetRelevantDefinitions Parms{};

	Parms.InDefinitions = std::move(InDefinitions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructurePlacementVolume.K2_SetRelevantTech
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     InTech                                                 (ConstParm, Parm, NativeAccessSpecifierPublic)

void ATedStructurePlacementVolume::K2_SetRelevantTech(const struct FGameplayTagContainer& InTech)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructurePlacementVolume", "K2_SetRelevantTech");

	Params::TedStructurePlacementVolume_K2_SetRelevantTech Parms{};

	Parms.InTech = std::move(InTech);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructurePlacementVolume.GetRelevantTech
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagContainer      ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

const struct FGameplayTagContainer ATedStructurePlacementVolume::GetRelevantTech() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructurePlacementVolume", "GetRelevantTech");

	Params::TedStructurePlacementVolume_GetRelevantTech Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureRepairBay.OnRep_RepairSlots
// (Final, Native, Protected)

void ATedStructureRepairBay::OnRep_RepairSlots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureRepairBay", "OnRep_RepairSlots");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructureRepairBay.GetOccupiedSlotsNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ATedStructureRepairBay::GetOccupiedSlotsNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureRepairBay", "GetOccupiedSlotsNum");

	Params::TedStructureRepairBay_GetOccupiedSlotsNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureRepairBay.IsRepairingVehicle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedStructureRepairBay::IsRepairingVehicle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureRepairBay", "IsRepairingVehicle");

	Params::TedStructureRepairBay_IsRepairingVehicle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructuresPanel.ActivateSlotStateByContent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class ATedStructureBase*          InContent                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedContentSlotState              InState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInActivate                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedStructuresPanel::ActivateSlotStateByContent(const class ATedStructureBase* InContent, const ETedContentSlotState InState, const bool bInActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructuresPanel", "ActivateSlotStateByContent");

	Params::TedStructuresPanel_ActivateSlotStateByContent Parms{};

	Parms.InContent = InContent;
	Parms.InState = InState;
	Parms.bInActivate = bInActivate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructuresPanel.SetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class ATedStructureBase*>& InContent                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const bool                              bInRefreshContent                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedStructuresPanel::SetContent(const TArray<class ATedStructureBase*>& InContent, const bool bInRefreshContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructuresPanel", "SetContent");

	Params::TedStructuresPanel_SetContent Parms{};

	Parms.InContent = std::move(InContent);
	Parms.bInRefreshContent = bInRefreshContent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructuresPanel.SetUniqueContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TSet<class ATedStructureBase*>&   InContent                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const bool                              bInRefreshContent                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedStructuresPanel::SetUniqueContent(const TSet<class ATedStructureBase*>& InContent, const bool bInRefreshContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructuresPanel", "SetUniqueContent");

	Params::TedStructuresPanel_SetUniqueContent Parms{};

	Parms.InContent = std::move(InContent);
	Parms.bInRefreshContent = bInRefreshContent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructuresPanel.SwitchPage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bForwards                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedStructuresPanel::SwitchPage(bool bForwards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructuresPanel", "SwitchPage");

	Params::TedStructuresPanel_SwitchPage Parms{};

	Parms.bForwards = bForwards;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructuresPanel.GetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<class ATedStructureBase*>*       OutContent                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedStructuresPanel::GetContent(TArray<class ATedStructureBase*>* OutContent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructuresPanel", "GetContent");

	Params::TedStructuresPanel_GetContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutContent != nullptr)
		*OutContent = std::move(Parms.OutContent);

	return Parms.ReturnValue;
}


// Function Tempest.TedStructuresPanel.GetSelectedContent
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class ATedStructureBase*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedStructureBase* UTedStructuresPanel::GetSelectedContent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructuresPanel", "GetSelectedContent");

	Params::TedStructuresPanel_GetSelectedContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructuresPanel.GetSlotContent
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const int32                             InSlotIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedStructureBase*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedStructureBase* UTedStructuresPanel::GetSlotContent(const int32 InSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructuresPanel", "GetSlotContent");

	Params::TedStructuresPanel_GetSlotContent Parms{};

	Parms.InSlotIndex = InSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedStructureTower.HandleSelectionChanged
// (Final, Native, Public)
// Parameters:
// const bool                              bSelectionStateChanged                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bHoveredStateChanged                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedStructureTower::HandleSelectionChanged(const bool bSelectionStateChanged, const bool bHoveredStateChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureTower", "HandleSelectionChanged");

	Params::TedStructureTower_HandleSelectionChanged Parms{};

	Parms.bSelectionStateChanged = bSelectionStateChanged;
	Parms.bHoveredStateChanged = bHoveredStateChanged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedStructureTower.UpdateRangeDecalData
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ATedStructureTower::UpdateRangeDecalData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedStructureTower", "UpdateRangeDecalData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSubtitleWidget.GetSubtitlesScale
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedSubtitleWidget::GetSubtitlesScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedSubtitleWidget", "GetSubtitlesScale");

	Params::TedSubtitleWidget_GetSubtitlesScale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSubtitleWidget.K2_DisplaySubtitle
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedSubtitleWidget::K2_DisplaySubtitle(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSubtitleWidget", "K2_DisplaySubtitle");

	Params::TedSubtitleWidget_K2_DisplaySubtitle Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedSubtitleWidget.OnSkippableSequenceEnded
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FGameplayTag&              InSequence                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedSubtitleWidget::OnSkippableSequenceEnded(const struct FGameplayTag& InSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSubtitleWidget", "OnSkippableSequenceEnded");

	Params::TedSubtitleWidget_OnSkippableSequenceEnded Parms{};

	Parms.InSequence = std::move(InSequence);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedSubtitleWidget.EvaluateVisibility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTedSubtitleWidget::EvaluateVisibility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSubtitleWidget", "EvaluateVisibility");

	Params::TedSubtitleWidget_EvaluateVisibility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedSubtitleWidget.GetDisplayedText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UTedSubtitleWidget::GetDisplayedText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedSubtitleWidget", "GetDisplayedText");

	Params::TedSubtitleWidget_GetDisplayedText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedTelemetryManager.OnCutsceneFinished
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InPlayerID                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InCutsceneName                                         (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedTelemetryManager::OnCutsceneFinished(const class UObject* InWorldContextObject, const ETedPlayerID InPlayerID, const class FString& InCutsceneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedTelemetryManager", "OnCutsceneFinished");

	Params::TedTelemetryManager_OnCutsceneFinished Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InPlayerID = InPlayerID;
	Parms.InCutsceneName = std::move(InCutsceneName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTelemetryManager.OnCutsceneStarted
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InPlayerID                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InCutsceneName                                         (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedTelemetryManager::OnCutsceneStarted(const class UObject* InWorldContextObject, const ETedPlayerID InPlayerID, const class FString& InCutsceneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedTelemetryManager", "OnCutsceneStarted");

	Params::TedTelemetryManager_OnCutsceneStarted Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InPlayerID = InPlayerID;
	Parms.InCutsceneName = std::move(InCutsceneName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTelemetryManager.OnPawnChangedOwner
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class ATedPawn*                   InPawn                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ATedPlayerState*            InNewOwner                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ATedPlayerState*            InPreviousOwner                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedTelemetryManager::OnPawnChangedOwner(const class ATedPawn* InPawn, const class ATedPlayerState* InNewOwner, const class ATedPlayerState* InPreviousOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedTelemetryManager", "OnPawnChangedOwner");

	Params::TedTelemetryManager_OnPawnChangedOwner Parms{};

	Parms.InPawn = InPawn;
	Parms.InNewOwner = InNewOwner;
	Parms.InPreviousOwner = InPreviousOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTelemetryManager.OnPawnDied
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class ATedPawn*                   InPawn                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     InKillerActor                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedTelemetryManager::OnPawnDied(const class ATedPawn* InPawn, const class AActor* InKillerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedTelemetryManager", "OnPawnDied");

	Params::TedTelemetryManager_OnPawnDied Parms{};

	Parms.InPawn = InPawn;
	Parms.InKillerActor = InKillerActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTelemetryManager.OnPawnHealthChanged
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class ATedPawn*                   InPawn                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InHealthChange                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     InSourceActor                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedTelemetryManager::OnPawnHealthChanged(const class ATedPawn* InPawn, const float InHealthChange, const class AActor* InSourceActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedTelemetryManager", "OnPawnHealthChanged");

	Params::TedTelemetryManager_OnPawnHealthChanged Parms{};

	Parms.InPawn = InPawn;
	Parms.InHealthChange = InHealthChange;
	Parms.InSourceActor = InSourceActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTelemetryManager.OnPawnProduced
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedEntityDefinitionAsset*  InPawnDefinition                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InOwnerId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InCreditsCost                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedTelemetryManager::OnPawnProduced(const class UObject* InWorldContextObject, const class UTedEntityDefinitionAsset* InPawnDefinition, const ETedPlayerID InOwnerId, const int32 InCreditsCost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedTelemetryManager", "OnPawnProduced");

	Params::TedTelemetryManager_OnPawnProduced Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InPawnDefinition = InPawnDefinition;
	Parms.InOwnerId = InOwnerId;
	Parms.InCreditsCost = InCreditsCost;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTelemetryManager.OnPawnReplaced
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class ATedPawn*                   InReplacingPawn                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ATedPawn*                   InReplacedPawn                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedTelemetryManager::OnPawnReplaced(const class ATedPawn* InReplacingPawn, const class ATedPawn* InReplacedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedTelemetryManager", "OnPawnReplaced");

	Params::TedTelemetryManager_OnPawnReplaced Parms{};

	Parms.InReplacingPawn = InReplacingPawn;
	Parms.InReplacedPawn = InReplacedPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTelemetryManager.OnPlayerResourceChanged
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InPlayerID                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedResourceType                  InResourceType                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InResourceDelta                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedResourceChangeReason          InChangeReason                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedTelemetryManager::OnPlayerResourceChanged(const class UObject* InWorldContextObject, const ETedPlayerID InPlayerID, const ETedResourceType InResourceType, const float InResourceDelta, const ETedResourceChangeReason InChangeReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedTelemetryManager", "OnPlayerResourceChanged");

	Params::TedTelemetryManager_OnPlayerResourceChanged Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InPlayerID = InPlayerID;
	Parms.InResourceType = InResourceType;
	Parms.InResourceDelta = InResourceDelta;
	Parms.InChangeReason = InChangeReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTelemetryManager.OnPlayerSettingsChanged
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InSettingName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InNewState                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InPreviousState                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedTelemetryManager::OnPlayerSettingsChanged(const class UObject* InWorldContextObject, const class FString& InSettingName, const class FString& InNewState, const class FString& InPreviousState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedTelemetryManager", "OnPlayerSettingsChanged");

	Params::TedTelemetryManager_OnPlayerSettingsChanged Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InSettingName = std::move(InSettingName);
	Parms.InNewState = std::move(InNewState);
	Parms.InPreviousState = std::move(InPreviousState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTelemetryManager.OnStructureConstructionChanged
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedStructureDefinitionAsset*InStructureDefinition                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InOwnerId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   InConstructionLocation                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedTelemetryConstructionStatus   InConstructionStatus                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedTelemetryManager::OnStructureConstructionChanged(const class UObject* InWorldContextObject, const class UTedStructureDefinitionAsset* InStructureDefinition, const ETedPlayerID InOwnerId, const struct FVector& InConstructionLocation, const ETedTelemetryConstructionStatus InConstructionStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedTelemetryManager", "OnStructureConstructionChanged");

	Params::TedTelemetryManager_OnStructureConstructionChanged Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InStructureDefinition = InStructureDefinition;
	Parms.InOwnerId = InOwnerId;
	Parms.InConstructionLocation = std::move(InConstructionLocation);
	Parms.InConstructionStatus = InConstructionStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTelemetryManager.OnStructureSold
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class ATedStructureBase*          InSoldStructure                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InPlayerID                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedTelemetryManager::OnStructureSold(const class ATedStructureBase* InSoldStructure, const ETedPlayerID InPlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedTelemetryManager", "OnStructureSold");

	Params::TedTelemetryManager_OnStructureSold Parms{};

	Parms.InSoldStructure = InSoldStructure;
	Parms.InPlayerID = InPlayerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTelemetryManager.OnSupportPowerBeginTracking
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     InOwner                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InSupportPowerTag                                      (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   InSupportPowerLocation                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class AActor*>&            InAssociatedActors                                     (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const struct FTedTelemetrySupportPowerTrackingOptions&InOptions                                              (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)

void UTedTelemetryManager::OnSupportPowerBeginTracking(const class UObject* InWorldContextObject, const class AActor* InOwner, const struct FGameplayTag& InSupportPowerTag, const struct FVector& InSupportPowerLocation, const TArray<class AActor*>& InAssociatedActors, const struct FTedTelemetrySupportPowerTrackingOptions& InOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedTelemetryManager", "OnSupportPowerBeginTracking");

	Params::TedTelemetryManager_OnSupportPowerBeginTracking Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InOwner = InOwner;
	Parms.InSupportPowerTag = std::move(InSupportPowerTag);
	Parms.InSupportPowerLocation = std::move(InSupportPowerLocation);
	Parms.InAssociatedActors = std::move(InAssociatedActors);
	Parms.InOptions = std::move(InOptions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTelemetryManager.OnSupportPowerEndTracking
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     InOwner                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InSupportPowerTag                                      (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedTelemetryTrackedSupportPowerResultInResult                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedTelemetryManager::OnSupportPowerEndTracking(const class UObject* InWorldContextObject, const class AActor* InOwner, const struct FGameplayTag& InSupportPowerTag, const ETedTelemetryTrackedSupportPowerResult InResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedTelemetryManager", "OnSupportPowerEndTracking");

	Params::TedTelemetryManager_OnSupportPowerEndTracking Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InOwner = InOwner;
	Parms.InSupportPowerTag = std::move(InSupportPowerTag);
	Parms.InResult = InResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTelemetryManager.OnSupportPowerPawnShotProjectile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedPawn*                         InShooter                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InTarget                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedProjectile*                   InShotProjectile                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InSupportPowerTag                                      (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedTelemetryManager::OnSupportPowerPawnShotProjectile(const class UObject* InWorldContextObject, class ATedPawn* InShooter, class AActor* InTarget, class ATedProjectile* InShotProjectile, const struct FGameplayTag& InSupportPowerTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedTelemetryManager", "OnSupportPowerPawnShotProjectile");

	Params::TedTelemetryManager_OnSupportPowerPawnShotProjectile Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InShooter = InShooter;
	Parms.InTarget = InTarget;
	Parms.InShotProjectile = InShotProjectile;
	Parms.InSupportPowerTag = std::move(InSupportPowerTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTelemetryManager.OnSupportPowerProjectileDealtDamage
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContextObject                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     InOwner                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              InSupportPowerTag                                      (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ATedProjectile*             InProjectile                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class ATedPawn*>&          InDamagedPawns                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedTelemetryManager::OnSupportPowerProjectileDealtDamage(const class UObject* InWorldContextObject, const class AActor* InOwner, const struct FGameplayTag& InSupportPowerTag, const class ATedProjectile* InProjectile, const TArray<class ATedPawn*>& InDamagedPawns)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedTelemetryManager", "OnSupportPowerProjectileDealtDamage");

	Params::TedTelemetryManager_OnSupportPowerProjectileDealtDamage Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InOwner = InOwner;
	Parms.InSupportPowerTag = std::move(InSupportPowerTag);
	Parms.InProjectile = InProjectile;
	Parms.InDamagedPawns = std::move(InDamagedPawns);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTelemetryManager.HandleSupportPowerActorEndPlay
// (Final, Native, Protected)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          InEndPlayReason                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedTelemetryManager::HandleSupportPowerActorEndPlay(class AActor* InActor, EEndPlayReason InEndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTelemetryManager", "HandleSupportPowerActorEndPlay");

	Params::TedTelemetryManager_HandleSupportPowerActorEndPlay Parms{};

	Parms.InActor = InActor;
	Parms.InEndPlayReason = InEndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTelemetryManager.OnLobbyUpdate
// (Final, Native, Public)
// Parameters:
// class ATedLobbyBeaconState*             InLobbyState                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedTelemetryManager::OnLobbyUpdate(class ATedLobbyBeaconState* InLobbyState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTelemetryManager", "OnLobbyUpdate");

	Params::TedTelemetryManager_OnLobbyUpdate Parms{};

	Parms.InLobbyState = InLobbyState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTelemetryManager.OnLocalPlayerStateReplicated
// (Final, Native, Protected)
// Parameters:
// class ATedPlayerController*             PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedTelemetryManager::OnLocalPlayerStateReplicated(class ATedPlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTelemetryManager", "OnLocalPlayerStateReplicated");

	Params::TedTelemetryManager_OnLocalPlayerStateReplicated Parms{};

	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTelemetryManager.SendClientBannerClickEvent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FProsBanner&               InBanner                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedTelemetryManager::SendClientBannerClickEvent(const struct FProsBanner& InBanner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTelemetryManager", "SendClientBannerClickEvent");

	Params::TedTelemetryManager_SendClientBannerClickEvent Parms{};

	Parms.InBanner = std::move(InBanner);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTelemetryManager.SendClientBannerImpressionEvent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FProsBanner&               InBanner                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedTelemetryManager::SendClientBannerImpressionEvent(const struct FProsBanner& InBanner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTelemetryManager", "SendClientBannerImpressionEvent");

	Params::TedTelemetryManager_SendClientBannerImpressionEvent Parms{};

	Parms.InBanner = std::move(InBanner);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTelemetryManager.SendClientBannerCloseWindowEvent
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const struct FProsBanner&               InBanner                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedTelemetryManager::SendClientBannerCloseWindowEvent(const struct FProsBanner& InBanner) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTelemetryManager", "SendClientBannerCloseWindowEvent");

	Params::TedTelemetryManager_SendClientBannerCloseWindowEvent Parms{};

	Parms.InBanner = std::move(InBanner);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTelemetryManager.SendClientBannerOpenWindowEvent
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const struct FProsBanner&               InBanner                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedTelemetryManager::SendClientBannerOpenWindowEvent(const struct FProsBanner& InBanner) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTelemetryManager", "SendClientBannerOpenWindowEvent");

	Params::TedTelemetryManager_SendClientBannerOpenWindowEvent Parms{};

	Parms.InBanner = std::move(InBanner);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTelemetryManager.SendClientBannerSettingsEvent
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// const bool                              bInShowing                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedTelemetryManager::SendClientBannerSettingsEvent(const bool bInShowing) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTelemetryManager", "SendClientBannerSettingsEvent");

	Params::TedTelemetryManager_SendClientBannerSettingsEvent Parms{};

	Parms.bInShowing = bInShowing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTextWidgetInterfaceFunctions.SetData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class ITedTextWidgetInterface>Widget                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedTextWidgetConfig&      Data                                                   (ConstParm, Parm, NativeAccessSpecifierPublic)

void UTedTextWidgetInterfaceFunctions::SetData(TScriptInterface<class ITedTextWidgetInterface> Widget, const struct FTedTextWidgetConfig& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedTextWidgetInterfaceFunctions", "SetData");

	Params::TedTextWidgetInterfaceFunctions_SetData Parms{};

	Parms.Widget = Widget;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTextWidgetInterfaceFunctions.SetPrimaryColorr
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// TScriptInterface<class ITedTextWidgetInterface>Widget                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              Color                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedTextWidgetInterfaceFunctions::SetPrimaryColorr(TScriptInterface<class ITedTextWidgetInterface> Widget, const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedTextWidgetInterfaceFunctions", "SetPrimaryColorr");

	Params::TedTextWidgetInterfaceFunctions_SetPrimaryColorr Parms{};

	Parms.Widget = Widget;
	Parms.Color = std::move(Color);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTextWidgetInterfaceFunctions.SetSecondaryColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// TScriptInterface<class ITedTextWidgetInterface>Widget                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              Color                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedTextWidgetInterfaceFunctions::SetSecondaryColor(TScriptInterface<class ITedTextWidgetInterface> Widget, const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedTextWidgetInterfaceFunctions", "SetSecondaryColor");

	Params::TedTextWidgetInterfaceFunctions_SetSecondaryColor Parms{};

	Parms.Widget = Widget;
	Parms.Color = std::move(Color);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTextWidgetInterfaceFunctions.SetText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class ITedTextWidgetInterface>Widget                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      Text                                                   (ConstParm, Parm, NativeAccessSpecifierPublic)

void UTedTextWidgetInterfaceFunctions::SetText(TScriptInterface<class ITedTextWidgetInterface> Widget, const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedTextWidgetInterfaceFunctions", "SetText");

	Params::TedTextWidgetInterfaceFunctions_SetText Parms{};

	Parms.Widget = Widget;
	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTextWidgetInterfaceFunctions.SetThemedData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class ITedTextWidgetInterface>Widget                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedTextWidgetThemedConfig&Data                                                   (ConstParm, Parm, NativeAccessSpecifierPublic)
// const ETedFaction                       CurrentTheme                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedTextWidgetInterfaceFunctions::SetThemedData(TScriptInterface<class ITedTextWidgetInterface> Widget, const struct FTedTextWidgetThemedConfig& Data, const ETedFaction CurrentTheme)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedTextWidgetInterfaceFunctions", "SetThemedData");

	Params::TedTextWidgetInterfaceFunctions_SetThemedData Parms{};

	Parms.Widget = Widget;
	Parms.Data = std::move(Data);
	Parms.CurrentTheme = CurrentTheme;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTextWidgetInterfaceFunctions.SetUseSecondaryColor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class ITedTextWidgetInterface>Widget                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInUseSecondaryColor                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedTextWidgetInterfaceFunctions::SetUseSecondaryColor(TScriptInterface<class ITedTextWidgetInterface> Widget, const bool bInUseSecondaryColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedTextWidgetInterfaceFunctions", "SetUseSecondaryColor");

	Params::TedTextWidgetInterfaceFunctions_SetUseSecondaryColor Parms{};

	Parms.Widget = Widget;
	Parms.bInUseSecondaryColor = bInUseSecondaryColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTextWidgetInterface.K2_OnTextWidgetSetPrimaryColor
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FLinearColor&              InColor                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ITedTextWidgetInterface::K2_OnTextWidgetSetPrimaryColor(const struct FLinearColor& InColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("TedTextWidgetInterface", "K2_OnTextWidgetSetPrimaryColor");

	Params::TedTextWidgetInterface_K2_OnTextWidgetSetPrimaryColor Parms{};

	Parms.InColor = std::move(InColor);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function Tempest.TedTextWidgetInterface.K2_OnTextWidgetSetSecondaryColor
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FLinearColor&              InColor                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ITedTextWidgetInterface::K2_OnTextWidgetSetSecondaryColor(const struct FLinearColor& InColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("TedTextWidgetInterface", "K2_OnTextWidgetSetSecondaryColor");

	Params::TedTextWidgetInterface_K2_OnTextWidgetSetSecondaryColor Parms{};

	Parms.InColor = std::move(InColor);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function Tempest.TedTextWidgetInterface.K2_OnTextWidgetSetText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ITedTextWidgetInterface::K2_OnTextWidgetSetText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("TedTextWidgetInterface", "K2_OnTextWidgetSetText");

	Params::TedTextWidgetInterface_K2_OnTextWidgetSetText Parms{};

	Parms.InText = std::move(InText);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function Tempest.TedTextWidgetInterface.K2_OnTextWidgetSetUseSecondaryColor
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bInUseSecondaryColor                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ITedTextWidgetInterface::K2_OnTextWidgetSetUseSecondaryColor(const bool bInUseSecondaryColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("TedTextWidgetInterface", "K2_OnTextWidgetSetUseSecondaryColor");

	Params::TedTextWidgetInterface_K2_OnTextWidgetSetUseSecondaryColor Parms{};

	Parms.bInUseSecondaryColor = bInUseSecondaryColor;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function Tempest.TedTriggerVolume.SetEnabled
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInEnabled                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedTriggerVolume::SetEnabled(bool bInEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTriggerVolume", "SetEnabled");

	Params::TedTriggerVolume_SetEnabled Parms{};

	Parms.bInEnabled = bInEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedTriggerVolume.IsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedTriggerVolume::IsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTriggerVolume", "IsEnabled");

	Params::TedTriggerVolume_IsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedTriggerVolume.K2_GetFilteredOverlappingActors
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FTedPawnFilter&            InFilter                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> ATedTriggerVolume::K2_GetFilteredOverlappingActors(const struct FTedPawnFilter& InFilter) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTriggerVolume", "K2_GetFilteredOverlappingActors");

	Params::TedTriggerVolume_K2_GetFilteredOverlappingActors Parms{};

	Parms.InFilter = std::move(InFilter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedTriggerVolume.K2_GetOverlappingActors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> ATedTriggerVolume::K2_GetOverlappingActors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedTriggerVolume", "K2_GetOverlappingActors");

	Params::TedTriggerVolume_K2_GetOverlappingActors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIPresenceAgent.GetDisplayDescription
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText ITedUIPresenceAgent::GetDisplayDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("TedUIPresenceAgent", "GetDisplayDescription");

	Params::TedUIPresenceAgent_GetDisplayDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIPresenceAgent.GetDisplayName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText ITedUIPresenceAgent::GetDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("TedUIPresenceAgent", "GetDisplayName");

	Params::TedUIPresenceAgent_GetDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUIPresenceAgent.GetDisplayTexture
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* ITedUIPresenceAgent::GetDisplayTexture() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("TedUIPresenceAgent", "GetDisplayTexture");

	Params::TedUIPresenceAgent_GetDisplayTexture Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUnitSpawner.ReceiveSpawnCompleted
// (Event, Protected, BlueprintEvent)

void ATedUnitSpawner::ReceiveSpawnCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitSpawner", "ReceiveSpawnCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedUnitSpawner.ReceiveSpawnFailed
// (Event, Protected, BlueprintEvent)

void ATedUnitSpawner::ReceiveSpawnFailed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitSpawner", "ReceiveSpawnFailed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tempest.TedUnitSpawner.RequestSpawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bForce                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedUnitSpawner::RequestSpawn(const bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitSpawner", "RequestSpawn");

	Params::TedUnitSpawner_RequestSpawn Parms{};

	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUnitSpawner.GetSpawnedUnit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATedUnitBase*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedUnitBase* ATedUnitSpawner::GetSpawnedUnit() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitSpawner", "GetSpawnedUnit");

	Params::TedUnitSpawner_GetSpawnedUnit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUnitSpawner.HasSpawnedUnit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATedUnitSpawner::HasSpawnedUnit() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitSpawner", "HasSpawnedUnit");

	Params::TedUnitSpawner_HasSpawnedUnit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUnitSpawnerComponent.OnOwnerDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor*                           Owner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUnitSpawnerComponent::OnOwnerDestroyed(class AActor* Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitSpawnerComponent", "OnOwnerDestroyed");

	Params::TedUnitSpawnerComponent_OnOwnerDestroyed Parms{};

	Parms.Owner = Owner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUnitSpawnerComponent.OnRep_Units
// (Final, Native, Protected)

void UTedUnitSpawnerComponent::OnRep_Units()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitSpawnerComponent", "OnRep_Units");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUnitSpawnerComponent.SetInitialUnitSpawnEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUnitSpawnerComponent::SetInitialUnitSpawnEnabled(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitSpawnerComponent", "SetInitialUnitSpawnEnabled");

	Params::TedUnitSpawnerComponent_SetInitialUnitSpawnEnabled Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUnitSpawnerComponent.SetMaxAliveUnits
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InMaxAliveUnits                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUnitSpawnerComponent::SetMaxAliveUnits(const int32 InMaxAliveUnits)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitSpawnerComponent", "SetMaxAliveUnits");

	Params::TedUnitSpawnerComponent_SetMaxAliveUnits Parms{};

	Parms.InMaxAliveUnits = InMaxAliveUnits;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUnitSpawnerComponent.SetUnitRespawnTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const float                             InUnitRespawnTime                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUnitSpawnerComponent::SetUnitRespawnTime(const float InUnitRespawnTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitSpawnerComponent", "SetUnitRespawnTime");

	Params::TedUnitSpawnerComponent_SetUnitRespawnTime Parms{};

	Parms.InUnitRespawnTime = InUnitRespawnTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUnitSpawnerComponent.SetUnitSpawnEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUnitSpawnerComponent::SetUnitSpawnEnabled(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitSpawnerComponent", "SetUnitSpawnEnabled");

	Params::TedUnitSpawnerComponent_SetUnitSpawnEnabled Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUnitSpawnerComponent.GetMaxAliveUnits
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedUnitSpawnerComponent::GetMaxAliveUnits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitSpawnerComponent", "GetMaxAliveUnits");

	Params::TedUnitSpawnerComponent_GetMaxAliveUnits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUnitSpawnerComponent.GetSpawnedUnits
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class ATedUnitBase*>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ATedUnitBase*> UTedUnitSpawnerComponent::GetSpawnedUnits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitSpawnerComponent", "GetSpawnedUnits");

	Params::TedUnitSpawnerComponent_GetSpawnedUnits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUnitSpawner_Volume.BuildSpawnInstances
// (Native, Public, BlueprintCallable)

void ATedUnitSpawner_Volume::BuildSpawnInstances()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitSpawner_Volume", "BuildSpawnInstances");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUnitSpawner_Volume.OnSaveGameLoaded
// (Final, Native, Public)
// Parameters:
// class USavedGameSlotInfo*               Slot                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedUnitSpawner_Volume::OnSaveGameLoaded(class USavedGameSlotInfo* Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitSpawner_Volume", "OnSaveGameLoaded");

	Params::TedUnitSpawner_Volume_OnSaveGameLoaded Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUnitSpawner_Volume.RequestSpawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bForce                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ATedUnitBase*>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ATedUnitBase*> ATedUnitSpawner_Volume::RequestSpawn(const bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitSpawner_Volume", "RequestSpawn");

	Params::TedUnitSpawner_Volume_RequestSpawn Parms{};

	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUnitSpawner_Volume.GetSpawnedUnits
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class ATedUnitBase*>*            OutSpawnedUnits                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void ATedUnitSpawner_Volume::GetSpawnedUnits(TArray<class ATedUnitBase*>* OutSpawnedUnits) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUnitSpawner_Volume", "GetSpawnedUnits");

	Params::TedUnitSpawner_Volume_GetSpawnedUnits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSpawnedUnits != nullptr)
		*OutSpawnedUnits = std::move(Parms.OutSpawnedUnits);
}


// Function Tempest.TedUpgradeManager.K2_ActivateUpgrade
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedUpgrade*                InUpgrade                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ATedPlayerState*            InPlayerState                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUpgradeManager::K2_ActivateUpgrade(const class UObject* WorldContextObject, const class UTedUpgrade* InUpgrade, const class ATedPlayerState* InPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUpgradeManager", "K2_ActivateUpgrade");

	Params::TedUpgradeManager_K2_ActivateUpgrade Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InUpgrade = InUpgrade;
	Parms.InPlayerState = InPlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUpgradeManager.K2_DeactivateUpgrade
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedUpgrade*                InUpgrade                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ATedPlayerState*            InPlayerState                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUpgradeManager::K2_DeactivateUpgrade(const class UObject* WorldContextObject, const class UTedUpgrade* InUpgrade, const class ATedPlayerState* InPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUpgradeManager", "K2_DeactivateUpgrade");

	Params::TedUpgradeManager_K2_DeactivateUpgrade Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InUpgrade = InUpgrade;
	Parms.InPlayerState = InPlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUpgradeManager.K2_IsUpgradeActive
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedUpgrade*                InUpgrade                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      InPlayerID                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUpgradeManager::K2_IsUpgradeActive(const class UObject* WorldContextObject, const class UTedUpgrade* InUpgrade, const ETedPlayerID InPlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUpgradeManager", "K2_IsUpgradeActive");

	Params::TedUpgradeManager_K2_IsUpgradeActive Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InUpgrade = InUpgrade;
	Parms.InPlayerID = InPlayerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUpgradeManager.HandlePawnEndPlay
// (Final, Native, Protected)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          InEndPlayReason                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUpgradeManager::HandlePawnEndPlay(class AActor* InActor, EEndPlayReason InEndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUpgradeManager", "HandlePawnEndPlay");

	Params::TedUpgradeManager_HandlePawnEndPlay Parms{};

	Parms.InActor = InActor;
	Parms.InEndPlayReason = InEndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUpgradeReplicationManager.OnRep_ReplicatedUpgradeInfo
// (Final, Native, Protected)

void ATedUpgradeReplicationManager::OnRep_ReplicatedUpgradeInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUpgradeReplicationManager", "OnRep_ReplicatedUpgradeInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUserInfoLatentFunctionLibrary.RequestUserInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContext                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& SaveInfo                                               (ConstParm, Parm, NativeAccessSpecifierPublic)
// const class FString&                    InHydraId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bOutDownloadUserInfoSucceeded                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bOutDownloadUserAvatarSucceeded                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bOutDownloadUserPreferencesSucceeded                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTedUserInfo*                    OutDownloadedUserInfo                                  (Parm, OutParm, NativeAccessSpecifierPublic)

void UTedUserInfoLatentFunctionLibrary::RequestUserInfo(class UObject* InWorldContext, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& SaveInfo, const class FString& InHydraId, bool* bOutDownloadUserInfoSucceeded, bool* bOutDownloadUserAvatarSucceeded, bool* bOutDownloadUserPreferencesSucceeded, struct FTedUserInfo* OutDownloadedUserInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUserInfoLatentFunctionLibrary", "RequestUserInfo");

	Params::TedUserInfoLatentFunctionLibrary_RequestUserInfo Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.SaveInfo = std::move(SaveInfo);
	Parms.InHydraId = std::move(InHydraId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOutDownloadUserInfoSucceeded != nullptr)
		*bOutDownloadUserInfoSucceeded = Parms.bOutDownloadUserInfoSucceeded;

	if (bOutDownloadUserAvatarSucceeded != nullptr)
		*bOutDownloadUserAvatarSucceeded = Parms.bOutDownloadUserAvatarSucceeded;

	if (bOutDownloadUserPreferencesSucceeded != nullptr)
		*bOutDownloadUserPreferencesSucceeded = Parms.bOutDownloadUserPreferencesSucceeded;

	if (OutDownloadedUserInfo != nullptr)
		*OutDownloadedUserInfo = std::move(Parms.OutDownloadedUserInfo);
}


// Function Tempest.TedUserInfoSubsystem.OnHydraLogin
// (Final, Native, Private)
// Parameters:
// const bool                              bLoginSuccessful                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUserInfoSubsystem::OnHydraLogin(const bool bLoginSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUserInfoSubsystem", "OnHydraLogin");

	Params::TedUserInfoSubsystem_OnHydraLogin Parms{};

	Parms.bLoginSuccessful = bLoginSuccessful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUserSettings.Get
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTedUserSettings*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedUserSettings* UTedUserSettings::Get()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUserSettings", "Get");

	Params::TedUserSettings_Get Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUserSettings.SetSlotToDefaults
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ETedSettingSlot                         InSettingSlot                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUserSettings::SetSlotToDefaults(ETedSettingSlot InSettingSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUserSettings", "SetSlotToDefaults");

	Params::TedUserSettings_SetSlotToDefaults Parms{};

	Parms.InSettingSlot = InSettingSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUserSettings.IsPreOrderMenuBackdropEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUserSettings::IsPreOrderMenuBackdropEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUserSettings", "IsPreOrderMenuBackdropEnabled");

	Params::TedUserSettings_IsPreOrderMenuBackdropEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.AdjustUnitSpawnLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ATedUnitBase>         UnitClass                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   InLocation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector&                         OutLocation                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   UnitRadiusMultiplier                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Extent2D                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUtils::AdjustUnitSpawnLocation(const class UObject* WorldContextObject, TSubclassOf<class ATedUnitBase> UnitClass, const struct FVector& InLocation, struct FVector& OutLocation, float UnitRadiusMultiplier, float Extent2D)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "AdjustUnitSpawnLocation");

	Params::TedUtils_AdjustUnitSpawnLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.UnitClass = UnitClass;
	Parms.InLocation = std::move(InLocation);
	Parms.OutLocation = std::move(OutLocation);
	Parms.UnitRadiusMultiplier = UnitRadiusMultiplier;
	Parms.Extent2D = Extent2D;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	OutLocation = std::move(Parms.OutLocation);

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.ApplyGEToPawnsInRange
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSubclassOf<class UGameplayEffect>Effect                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   EffectLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EffectLevel                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             EffectRadius                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedUtilsPawnFilter&       PawnFilter                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UAbilitySystemComponent*          OwnerASC                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUtils::ApplyGEToPawnsInRange(const class UObject* WorldContextObject, const TSubclassOf<class UGameplayEffect> Effect, const struct FVector& EffectLocation, float EffectLevel, const float EffectRadius, const struct FTedUtilsPawnFilter& PawnFilter, class UAbilitySystemComponent* OwnerASC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "ApplyGEToPawnsInRange");

	Params::TedUtils_ApplyGEToPawnsInRange Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Effect = Effect;
	Parms.EffectLocation = std::move(EffectLocation);
	Parms.EffectLevel = EffectLevel;
	Parms.EffectRadius = EffectRadius;
	Parms.PawnFilter = std::move(PawnFilter);
	Parms.OwnerASC = OwnerASC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUtils.CalculateFormation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   UnitCount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 Direction                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 TargetLocation                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             UnitOffset                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector2D>*               OutLocations                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UTedUtils::CalculateFormation(int32 UnitCount, const struct FVector2D& Direction, const struct FVector2D& TargetLocation, const float UnitOffset, TArray<struct FVector2D>* OutLocations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "CalculateFormation");

	Params::TedUtils_CalculateFormation Parms{};

	Parms.UnitCount = UnitCount;
	Parms.Direction = std::move(Direction);
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.UnitOffset = UnitOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLocations != nullptr)
		*OutLocations = std::move(Parms.OutLocations);
}


// Function Tempest.TedUtils.CalculatePawnsLookAtLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const TArray<class ATedPawn*>&          Pawns                                                  (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const struct FVector2D&                 ViewerLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UTedUtils::CalculatePawnsLookAtLocation(const TArray<class ATedPawn*>& Pawns, const struct FVector2D& ViewerLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "CalculatePawnsLookAtLocation");

	Params::TedUtils_CalculatePawnsLookAtLocation Parms{};

	Parms.Pawns = std::move(Pawns);
	Parms.ViewerLocation = std::move(ViewerLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.CaptureStructure
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ATedStructureBase*                Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Instigator                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      NewOwner                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceInstantCapture                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUtils::CaptureStructure(class ATedStructureBase* Target, class AActor* Instigator, const ETedPlayerID NewOwner, bool bForceInstantCapture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "CaptureStructure");

	Params::TedUtils_CaptureStructure Parms{};

	Parms.Target = Target;
	Parms.Instigator = Instigator;
	Parms.NewOwner = NewOwner;
	Parms.bForceInstantCapture = bForceInstantCapture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.ClampLocationToNavigableArea
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class ATedUnitBase*               Unit                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   TargetLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     TargetActor                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         OutAdjustedLocation                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUtils::ClampLocationToNavigableArea(const class ATedUnitBase* Unit, const struct FVector& TargetLocation, const class AActor* TargetActor, struct FVector* OutAdjustedLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "ClampLocationToNavigableArea");

	Params::TedUtils_ClampLocationToNavigableArea Parms{};

	Parms.Unit = Unit;
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAdjustedLocation != nullptr)
		*OutAdjustedLocation = std::move(Parms.OutAdjustedLocation);

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.FindClosestPawnClusterToLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TArray<class ATedUnitBase*>*            OutActorCluster                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// const struct FVector2D&                 Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUtils::FindClosestPawnClusterToLocation(TArray<class ATedUnitBase*>* OutActorCluster, const struct FVector2D& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "FindClosestPawnClusterToLocation");

	Params::TedUtils_FindClosestPawnClusterToLocation Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutActorCluster != nullptr)
		*OutActorCluster = std::move(Parms.OutActorCluster);
}


// Function Tempest.TedUtils.FindValidGroundLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSubclassOf<class UNavigationQueryFilter>FilterClass                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Extent2D                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARecastNavMesh*                   OverrideTargetNav                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUtils::FindValidGroundLocation(const class UObject* WorldContextObject, struct FVector* Location, const TSubclassOf<class UNavigationQueryFilter> FilterClass, const float Extent2D, class ARecastNavMesh* OverrideTargetNav)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "FindValidGroundLocation");

	Params::TedUtils_FindValidGroundLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.FilterClass = FilterClass;
	Parms.Extent2D = Extent2D;
	Parms.OverrideTargetNav = OverrideTargetNav;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.FindValidGroundLocationWithMinArea
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             MinArea                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bOptionalMinAreaRequirement                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSubclassOf<class UNavigationQueryFilter>FilterClass                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Extent2D                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARecastNavMesh*                   OverrideTargetNav                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUtils::FindValidGroundLocationWithMinArea(const class UObject* WorldContextObject, struct FVector* Location, const float MinArea, const bool bOptionalMinAreaRequirement, const TSubclassOf<class UNavigationQueryFilter> FilterClass, const float Extent2D, class ARecastNavMesh* OverrideTargetNav)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "FindValidGroundLocationWithMinArea");

	Params::TedUtils_FindValidGroundLocationWithMinArea Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MinArea = MinArea;
	Parms.bOptionalMinAreaRequirement = bOptionalMinAreaRequirement;
	Parms.FilterClass = FilterClass;
	Parms.Extent2D = Extent2D;
	Parms.OverrideTargetNav = OverrideTargetNav;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.GetAssetPath
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    InAsset                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTedUtils::GetAssetPath(const class UObject* InAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetAssetPath");

	Params::TedUtils_GetAssetPath Parms{};

	Parms.InAsset = InAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.GetAvailablePlayerFactions
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<ETedFaction>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<ETedFaction> UTedUtils::GetAvailablePlayerFactions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetAvailablePlayerFactions");

	Params::TedUtils_GetAvailablePlayerFactions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.GetAvailablePlayerFactions_Ranked
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<ETedRankedFaction>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<ETedRankedFaction> UTedUtils::GetAvailablePlayerFactions_Ranked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetAvailablePlayerFactions_Ranked");

	Params::TedUtils_GetAvailablePlayerFactions_Ranked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.GetAvailablePlayerTeams_Ranked
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<ETedRankedTeam>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<ETedRankedTeam> UTedUtils::GetAvailablePlayerTeams_Ranked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetAvailablePlayerTeams_Ranked");

	Params::TedUtils_GetAvailablePlayerTeams_Ranked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.GetButtonStyle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class USlateWidgetStyleAsset*           InAsset                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FButtonStyle*                    OutStyle                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUtils::GetButtonStyle(class USlateWidgetStyleAsset* InAsset, struct FButtonStyle* OutStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetButtonStyle");

	Params::TedUtils_GetButtonStyle Parms{};

	Parms.InAsset = InAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStyle != nullptr)
		*OutStyle = std::move(Parms.OutStyle);

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.GetButtonStyleFromWrapper
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTedStyleAssetWrapper&     InWrapper                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FButtonStyle*                    OutStyle                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUtils::GetButtonStyleFromWrapper(const struct FTedStyleAssetWrapper& InWrapper, struct FButtonStyle* OutStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetButtonStyleFromWrapper");

	Params::TedUtils_GetButtonStyleFromWrapper Parms{};

	Parms.InWrapper = std::move(InWrapper);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStyle != nullptr)
		*OutStyle = std::move(Parms.OutStyle);

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.GetCameraZoomPct
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bImmediate                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedUtils::GetCameraZoomPct(const class UObject* WorldContextObject, const bool bImmediate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetCameraZoomPct");

	Params::TedUtils_GetCameraZoomPct Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bImmediate = bImmediate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.GetCurrentServerType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETedServerType                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedServerType UTedUtils::GetCurrentServerType(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetCurrentServerType");

	Params::TedUtils_GetCurrentServerType Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.GetGroundLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARecastNavMesh*                   OverrideTargetNav                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Extent2D                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UTedUtils::GetGroundLocation(const class UObject* WorldContextObject, const struct FVector2D& Location, class ARecastNavMesh* OverrideTargetNav, float Extent2D)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetGroundLocation");

	Params::TedUtils_GetGroundLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Location = std::move(Location);
	Parms.OverrideTargetNav = OverrideTargetNav;
	Parms.Extent2D = Extent2D;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.GetGroundLocationAreaClass
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARecastNavMesh*                   OverrideTargetNav                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UNavArea>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UNavArea> UTedUtils::GetGroundLocationAreaClass(const class UObject* WorldContextObject, const struct FVector2D& Location, class ARecastNavMesh* OverrideTargetNav)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetGroundLocationAreaClass");

	Params::TedUtils_GetGroundLocationAreaClass Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Location = std::move(Location);
	Parms.OverrideTargetNav = OverrideTargetNav;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.GetGroundLocationAreaClassFOW
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UNavArea>             DefaultAreaClass                                       (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DefaultZOffset                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARecastNavMesh*                   OverrideTargetNav                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UNavArea>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UNavArea> UTedUtils::GetGroundLocationAreaClassFOW(const class UObject* WorldContextObject, const struct FVector2D& Location, TSubclassOf<class UNavArea> DefaultAreaClass, float DefaultZOffset, class ARecastNavMesh* OverrideTargetNav)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetGroundLocationAreaClassFOW");

	Params::TedUtils_GetGroundLocationAreaClassFOW Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Location = std::move(Location);
	Parms.DefaultAreaClass = DefaultAreaClass;
	Parms.DefaultZOffset = DefaultZOffset;
	Parms.OverrideTargetNav = OverrideTargetNav;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.GetMinMaxCoordsFromVectorArray
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const TArray<struct FVector>&           InVectorArray                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FVector*                         OutMinCoords                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         OutMaxCoords                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUtils::GetMinMaxCoordsFromVectorArray(const TArray<struct FVector>& InVectorArray, struct FVector* OutMinCoords, struct FVector* OutMaxCoords)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetMinMaxCoordsFromVectorArray");

	Params::TedUtils_GetMinMaxCoordsFromVectorArray Parms{};

	Parms.InVectorArray = std::move(InVectorArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMinCoords != nullptr)
		*OutMinCoords = std::move(Parms.OutMinCoords);

	if (OutMaxCoords != nullptr)
		*OutMaxCoords = std::move(Parms.OutMaxCoords);
}


// Function Tempest.TedUtils.GetNavMeshForClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class APawn>                PawnClass                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARecastNavMesh*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARecastNavMesh* UTedUtils::GetNavMeshForClass(class UObject* WorldContextObject, TSubclassOf<class APawn> PawnClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetNavMeshForClass");

	Params::TedUtils_GetNavMeshForClass Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PawnClass = PawnClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.GetPathLength
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 PathStart                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 PathEnd                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double*                                 OutPathLength                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARecastNavMesh*                   OverrideTargetNav                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Extent2D                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UNavigationQueryFilter>FilterClass                                            (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ENavigationQueryResult                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ENavigationQueryResult UTedUtils::GetPathLength(const class UObject* WorldContextObject, const struct FVector2D& PathStart, const struct FVector2D& PathEnd, double* OutPathLength, class ARecastNavMesh* OverrideTargetNav, float Extent2D, TSubclassOf<class UNavigationQueryFilter> FilterClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetPathLength");

	Params::TedUtils_GetPathLength Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PathStart = std::move(PathStart);
	Parms.PathEnd = std::move(PathEnd);
	Parms.OverrideTargetNav = OverrideTargetNav;
	Parms.Extent2D = Extent2D;
	Parms.FilterClass = FilterClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPathLength != nullptr)
		*OutPathLength = Parms.OutPathLength;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.GetPawnsInCone
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ATedPawn*>*                OutPawns                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Direction                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             MinLength                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             MaxLength                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Angle                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedUtilsPawnFilter&       Filter                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedUtils::GetPawnsInCone(const class UObject* WorldContextObject, TArray<class ATedPawn*>* OutPawns, const struct FVector& Location, const struct FVector& Direction, const float MinLength, const float MaxLength, const float Angle, const struct FTedUtilsPawnFilter& Filter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetPawnsInCone");

	Params::TedUtils_GetPawnsInCone Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Location = std::move(Location);
	Parms.Direction = std::move(Direction);
	Parms.MinLength = MinLength;
	Parms.MaxLength = MaxLength;
	Parms.Angle = Angle;
	Parms.Filter = std::move(Filter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPawns != nullptr)
		*OutPawns = std::move(Parms.OutPawns);
}


// Function Tempest.TedUtils.GetPawnsInRange
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ATedPawn*>*                OutPawns                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Radius                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedUtilsPawnFilter&       Filter                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTedUtils::GetPawnsInRange(const class UObject* WorldContextObject, TArray<class ATedPawn*>* OutPawns, const struct FVector& Location, const float Radius, const struct FTedUtilsPawnFilter& Filter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetPawnsInRange");

	Params::TedUtils_GetPawnsInRange Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Location = std::move(Location);
	Parms.Radius = Radius;
	Parms.Filter = std::move(Filter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPawns != nullptr)
		*OutPawns = std::move(Parms.OutPawns);
}


// Function Tempest.TedUtils.GetPlayerCameraLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UTedUtils::GetPlayerCameraLocation(const class UObject* WorldContextObject, int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetPlayerCameraLocation");

	Params::TedUtils_GetPlayerCameraLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerIndex = PlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.GetPlayerColorPreset
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      PlayerID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRTSPlayerColorPreset            ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FRTSPlayerColorPreset UTedUtils::GetPlayerColorPreset(const class UObject* WorldContextObject, const ETedPlayerID PlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetPlayerColorPreset");

	Params::TedUtils_GetPlayerColorPreset Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerID = PlayerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.GetPlayerTedPawn
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedPlayerPawn*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedPlayerPawn* UTedUtils::GetPlayerTedPawn(const class UObject* WorldContextObject, int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetPlayerTedPawn");

	Params::TedUtils_GetPlayerTedPawn Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerIndex = PlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.GetPreCinematicPlayerCameraLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UTedUtils::GetPreCinematicPlayerCameraLocation(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetPreCinematicPlayerCameraLocation");

	Params::TedUtils_GetPreCinematicPlayerCameraLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.GetPreCinematicPlayerCameraZoomPct
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedUtils::GetPreCinematicPlayerCameraZoomPct(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetPreCinematicPlayerCameraZoomPct");

	Params::TedUtils_GetPreCinematicPlayerCameraZoomPct Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.GetSelectionColorPreset
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      PlayerID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRTSSelectionColorPreset         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FRTSSelectionColorPreset UTedUtils::GetSelectionColorPreset(const class UObject* WorldContextObject, const ETedPlayerID PlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetSelectionColorPreset");

	Params::TedUtils_GetSelectionColorPreset Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerID = PlayerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.GetTeamID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class AActor*                     Target                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGenericTeamId                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGenericTeamId UTedUtils::GetTeamID(const class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetTeamID");

	Params::TedUtils_GetTeamID Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.GetTedGameState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedGameState*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedGameState* UTedUtils::GetTedGameState(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetTedGameState");

	Params::TedUtils_GetTedGameState Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.GetTedPlayerCameraComponent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTedPlayerCameraComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedPlayerCameraComponent* UTedUtils::GetTedPlayerCameraComponent(const class UObject* WorldContextObject, int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetTedPlayerCameraComponent");

	Params::TedUtils_GetTedPlayerCameraComponent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerIndex = PlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.GetTedPlayerCameraManager
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedPlayerCameraManager*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedPlayerCameraManager* UTedUtils::GetTedPlayerCameraManager(const class UObject* WorldContextObject, int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetTedPlayerCameraManager");

	Params::TedUtils_GetTedPlayerCameraManager Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerIndex = PlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.GetTedPlayerController
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedPlayerController*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedPlayerController* UTedUtils::GetTedPlayerController(const class UObject* WorldContextObject, int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetTedPlayerController");

	Params::TedUtils_GetTedPlayerController Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerIndex = PlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.GetTedPlayerControllerByPlayerID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      PlayerID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedPlayerController*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedPlayerController* UTedUtils::GetTedPlayerControllerByPlayerID(const class UObject* WorldContextObject, const ETedPlayerID PlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetTedPlayerControllerByPlayerID");

	Params::TedUtils_GetTedPlayerControllerByPlayerID Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerID = PlayerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.GetTimeForUIMaterials
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedUtils::GetTimeForUIMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetTimeForUIMaterials");

	Params::TedUtils_GetTimeForUIMaterials Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.GetWorldBounds
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBox                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FBox UTedUtils::GetWorldBounds(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "GetWorldBounds");

	Params::TedUtils_GetWorldBounds Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.HasOnlyThisCommandQueued
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class ATedUnitBase*               Unit                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UGameplayCommand>     CommandToCheck                                         (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUtils::HasOnlyThisCommandQueued(const class ATedUnitBase* Unit, TSubclassOf<class UGameplayCommand> CommandToCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "HasOnlyThisCommandQueued");

	Params::TedUtils_HasOnlyThisCommandQueued Parms{};

	Parms.Unit = Unit;
	Parms.CommandToCheck = CommandToCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.HasPlayedGameIntro
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUtils::HasPlayedGameIntro(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "HasPlayedGameIntro");

	Params::TedUtils_HasPlayedGameIntro Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.IsCampaign
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUtils::IsCampaign(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "IsCampaign");

	Params::TedUtils_IsCampaign Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.IsCinematicModeEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUtils::IsCinematicModeEnabled(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "IsCinematicModeEnabled");

	Params::TedUtils_IsCinematicModeEnabled Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.IsCommandCompound
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUtils::IsCommandCompound(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "IsCommandCompound");

	Params::TedUtils_IsCommandCompound Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.IsInsideWorldBounds
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   WorldLocation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUtils::IsInsideWorldBounds(const class UObject* WorldContextObject, const struct FVector& WorldLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "IsInsideWorldBounds");

	Params::TedUtils_IsInsideWorldBounds Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.WorldLocation = std::move(WorldLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.IsMainMenu
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUtils::IsMainMenu(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "IsMainMenu");

	Params::TedUtils_IsMainMenu Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.IsMultiplayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUtils::IsMultiplayer(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "IsMultiplayer");

	Params::TedUtils_IsMultiplayer Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.IsSkirmish
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUtils::IsSkirmish(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "IsSkirmish");

	Params::TedUtils_IsSkirmish Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.IsValidGroundLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSubclassOf<class UNavigationQueryFilter>FilterClass                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Extent2D                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARecastNavMesh*                   OverrideTargetNav                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUtils::IsValidGroundLocation(const class UObject* WorldContextObject, const struct FVector2D& Location, const TSubclassOf<class UNavigationQueryFilter> FilterClass, const float Extent2D, class ARecastNavMesh* OverrideTargetNav)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "IsValidGroundLocation");

	Params::TedUtils_IsValidGroundLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Location = std::move(Location);
	Parms.FilterClass = FilterClass;
	Parms.Extent2D = Extent2D;
	Parms.OverrideTargetNav = OverrideTargetNav;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.IsValidGroundLocationForUnit
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class ATedUnitBase*               Unit                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Extent2D                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUtils::IsValidGroundLocationForUnit(const class ATedUnitBase* Unit, const struct FVector2D& Location, const float Extent2D)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "IsValidGroundLocationForUnit");

	Params::TedUtils_IsValidGroundLocationForUnit Parms{};

	Parms.Unit = Unit;
	Parms.Location = std::move(Location);
	Parms.Extent2D = Extent2D;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.IsValidGroundLocationInRangeForUnit
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class ATedUnitBase*               Unit                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Range                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUtils::IsValidGroundLocationInRangeForUnit(const class ATedUnitBase* Unit, const struct FVector& Location, const float Range)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "IsValidGroundLocationInRangeForUnit");

	Params::TedUtils_IsValidGroundLocationInRangeForUnit Parms{};

	Parms.Unit = Unit;
	Parms.Location = std::move(Location);
	Parms.Range = Range;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.K2_DealConeDamage
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Origin                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Direction                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FConeDamageParams&         Params_0                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const TSubclassOf<class UTedDamageType> DamageTypeClass                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedUtilsPawnFilter&       Filter                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const TSubclassOf<class UGameplayEffect>EffectToApply                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ATedPawn*>                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ATedPawn*> UTedUtils::K2_DealConeDamage(const class UObject* WorldContextObject, const struct FVector& Origin, const struct FVector& Direction, const struct FConeDamageParams& Params_0, const TSubclassOf<class UTedDamageType> DamageTypeClass, class AActor* DamageCauser, const struct FTedUtilsPawnFilter& Filter, const TSubclassOf<class UGameplayEffect> EffectToApply)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "K2_DealConeDamage");

	Params::TedUtils_K2_DealConeDamage Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Origin = std::move(Origin);
	Parms.Direction = std::move(Direction);
	Parms.Params_0 = std::move(Params_0);
	Parms.DamageTypeClass = DamageTypeClass;
	Parms.DamageCauser = DamageCauser;
	Parms.Filter = std::move(Filter);
	Parms.EffectToApply = EffectToApply;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.K2_DealDamage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageTarget                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             DamageAmount                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSubclassOf<class UTedDamageType> DamageTypeClass                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSubclassOf<class UGameplayEffect>EffectToApply                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedUtils::K2_DealDamage(const class UObject* WorldContextObject, class AActor* DamageTarget, const float DamageAmount, const TSubclassOf<class UTedDamageType> DamageTypeClass, class AActor* DamageCauser, const TSubclassOf<class UGameplayEffect> EffectToApply)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "K2_DealDamage");

	Params::TedUtils_K2_DealDamage Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.DamageTarget = DamageTarget;
	Parms.DamageAmount = DamageAmount;
	Parms.DamageTypeClass = DamageTypeClass;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectToApply = EffectToApply;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.K2_DealRadialDamage
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Origin                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRadialDamageParams&       Params_0                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const TSubclassOf<class UTedDamageType> DamageTypeClass                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTedUtilsPawnFilter&       Filter                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const TSubclassOf<class UGameplayEffect>EffectToApply                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ATedPawn*>                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ATedPawn*> UTedUtils::K2_DealRadialDamage(const class UObject* WorldContextObject, const struct FVector& Origin, const struct FRadialDamageParams& Params_0, const TSubclassOf<class UTedDamageType> DamageTypeClass, class AActor* DamageCauser, const struct FTedUtilsPawnFilter& Filter, const TSubclassOf<class UGameplayEffect> EffectToApply)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "K2_DealRadialDamage");

	Params::TedUtils_K2_DealRadialDamage Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Origin = std::move(Origin);
	Parms.Params_0 = std::move(Params_0);
	Parms.DamageTypeClass = DamageTypeClass;
	Parms.DamageCauser = DamageCauser;
	Parms.Filter = std::move(Filter);
	Parms.EffectToApply = EffectToApply;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.LoadMainMenu
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    InWorldContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUtils::LoadMainMenu(const class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "LoadMainMenu");

	Params::TedUtils_LoadMainMenu Parms{};

	Parms.InWorldContext = InWorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUtils.MoveUnitAlongPath
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class ATedUnitBase*               Unit                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FVector>&           Path                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   AcceptanceRadius                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAIRequestID                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAIRequestID UTedUtils::MoveUnitAlongPath(const class ATedUnitBase* Unit, const TArray<struct FVector>& Path, float AcceptanceRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "MoveUnitAlongPath");

	Params::TedUtils_MoveUnitAlongPath Parms{};

	Parms.Unit = Unit;
	Parms.Path = std::move(Path);
	Parms.AcceptanceRadius = AcceptanceRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.MoveUnitAlongSpline
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class ATedUnitBase*               Unit                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class USplineComponent*           Spline                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             StartingPointIdx                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             FinishPointIdx                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AcceptanceRadius                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAIRequestID                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAIRequestID UTedUtils::MoveUnitAlongSpline(const class ATedUnitBase* Unit, const class USplineComponent* Spline, const int32 StartingPointIdx, const int32 FinishPointIdx, float AcceptanceRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "MoveUnitAlongSpline");

	Params::TedUtils_MoveUnitAlongSpline Parms{};

	Parms.Unit = Unit;
	Parms.Spline = Spline;
	Parms.StartingPointIdx = StartingPointIdx;
	Parms.FinishPointIdx = FinishPointIdx;
	Parms.AcceptanceRadius = AcceptanceRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.OpenBriefingLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedMapInfo*                InMap                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUtils::OpenBriefingLevel(const class UObject* WorldContextObject, const class UTedMapInfo* InMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "OpenBriefingLevel");

	Params::TedUtils_OpenBriefingLevel Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InMap = InMap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.OpenBriefingLevelWithOptions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedMapInfo*                InMap                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InOptions                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUtils::OpenBriefingLevelWithOptions(const class UObject* WorldContextObject, const class UTedMapInfo* InMap, const class FString& InOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "OpenBriefingLevelWithOptions");

	Params::TedUtils_OpenBriefingLevelWithOptions Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InMap = InMap;
	Parms.InOptions = std::move(InOptions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.OpenLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedMapInfo*                InMap                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUtils::OpenLevel(const class UObject* WorldContextObject, const class UTedMapInfo* InMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "OpenLevel");

	Params::TedUtils_OpenLevel Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InMap = InMap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUtils.OpenLevelWithOptions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedMapInfo*                InMap                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InOptions                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUtils::OpenLevelWithOptions(const class UObject* WorldContextObject, const class UTedMapInfo* InMap, const class FString& InOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "OpenLevelWithOptions");

	Params::TedUtils_OpenLevelWithOptions Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InMap = InMap;
	Parms.InOptions = std::move(InOptions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUtils.PlayAnnouncement
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UTedAnnouncement>     AnnouncementClass                                      (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UObject*                    OptionalObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUtils::PlayAnnouncement(const class UObject* WorldContextObject, int32 PlayerIndex, TSubclassOf<class UTedAnnouncement> AnnouncementClass, const class UObject* OptionalObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "PlayAnnouncement");

	Params::TedUtils_PlayAnnouncement Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerIndex = PlayerIndex;
	Parms.AnnouncementClass = AnnouncementClass;
	Parms.OptionalObject = OptionalObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUtils.PlayFOWAwareWorldCameraShake
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UCameraShakeBase>     Shake                                                  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Epicenter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InnerRadius                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OuterRadius                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Falloff                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOrientShakeTowardsEpicenter                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUtils::PlayFOWAwareWorldCameraShake(const class UObject* WorldContextObject, TSubclassOf<class UCameraShakeBase> Shake, const struct FVector& Epicenter, float InnerRadius, float OuterRadius, float Falloff, bool bOrientShakeTowardsEpicenter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "PlayFOWAwareWorldCameraShake");

	Params::TedUtils_PlayFOWAwareWorldCameraShake Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Shake = Shake;
	Parms.Epicenter = std::move(Epicenter);
	Parms.InnerRadius = InnerRadius;
	Parms.OuterRadius = OuterRadius;
	Parms.Falloff = Falloff;
	Parms.bOrientShakeTowardsEpicenter = bOrientShakeTowardsEpicenter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUtils.RequestBatchSpawn
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class ATedUnitSpawner*>&   Spawners                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const bool                              bForce                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ATedUnitBase*>*            OutSpawnedUnits                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UTedUtils::RequestBatchSpawn(const TArray<class ATedUnitSpawner*>& Spawners, const bool bForce, TArray<class ATedUnitBase*>* OutSpawnedUnits)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "RequestBatchSpawn");

	Params::TedUtils_RequestBatchSpawn Parms{};

	Parms.Spawners = std::move(Spawners);
	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSpawnedUnits != nullptr)
		*OutSpawnedUnits = std::move(Parms.OutSpawnedUnits);
}


// Function Tempest.TedUtils.SetCameraZoomPct
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             ZoomPct                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUtils::SetCameraZoomPct(const class UObject* WorldContextObject, const float ZoomPct)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "SetCameraZoomPct");

	Params::TedUtils_SetCameraZoomPct Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ZoomPct = ZoomPct;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUtils.SetCinematicModeEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bEnabled                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bAffectsHUD                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    CutsceneName                                           (ConstParm, Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUtils::SetCinematicModeEnabled(const class UObject* WorldContextObject, const bool bEnabled, const bool bAffectsHUD, const class FString& CutsceneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "SetCinematicModeEnabled");

	Params::TedUtils_SetCinematicModeEnabled Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bEnabled = bEnabled;
	Parms.bAffectsHUD = bAffectsHUD;
	Parms.CutsceneName = std::move(CutsceneName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUtils.SetConsoleVariable_Bool
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InName                                                 (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUtils::SetConsoleVariable_Bool(const class FString& InName, const bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "SetConsoleVariable_Bool");

	Params::TedUtils_SetConsoleVariable_Bool Parms{};

	Parms.InName = std::move(InName);
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUtils.SetConsoleVariable_Float
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InName                                                 (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUtils::SetConsoleVariable_Float(const class FString& InName, const float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "SetConsoleVariable_Float");

	Params::TedUtils_SetConsoleVariable_Float Parms{};

	Parms.InName = std::move(InName);
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUtils.SetConsoleVariable_Integer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InName                                                 (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUtils::SetConsoleVariable_Integer(const class FString& InName, const int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "SetConsoleVariable_Integer");

	Params::TedUtils_SetConsoleVariable_Integer Parms{};

	Parms.InName = std::move(InName);
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUtils.SetConsoleVariable_String
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InName                                                 (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InValue                                                (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUtils::SetConsoleVariable_String(const class FString& InName, const class FString& InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "SetConsoleVariable_String");

	Params::TedUtils_SetConsoleVariable_String Parms{};

	Parms.InName = std::move(InName);
	Parms.InValue = std::move(InValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUtils.SetMinimapState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMinimapStateMode                       MinimapStateMode                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedPlayerState*                  InPlayerState                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUtils::SetMinimapState(const class UObject* WorldContextObject, EMinimapStateMode MinimapStateMode, class ATedPlayerState* InPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "SetMinimapState");

	Params::TedUtils_SetMinimapState Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MinimapStateMode = MinimapStateMode;
	Parms.InPlayerState = InPlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUtils.SetPlayedGameIntro
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bPlayedGameIntro                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUtils::SetPlayedGameIntro(const class UObject* WorldContextObject, const bool bPlayedGameIntro)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "SetPlayedGameIntro");

	Params::TedUtils_SetPlayedGameIntro Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bPlayedGameIntro = bPlayedGameIntro;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUtils.SetUseInverseSquaredFalloff
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPointLightComponent*             PointLight                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bUseInverseSquaredFalloff                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUtils::SetUseInverseSquaredFalloff(class UPointLightComponent* PointLight, const bool bUseInverseSquaredFalloff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "SetUseInverseSquaredFalloff");

	Params::TedUtils_SetUseInverseSquaredFalloff Parms{};

	Parms.PointLight = PointLight;
	Parms.bUseInverseSquaredFalloff = bUseInverseSquaredFalloff;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUtils.SpawnStructure
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      Owner                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ATedStructureBase>    StructureClass                                         (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   SpawnLocation                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedStructureBase*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedStructureBase* UTedUtils::SpawnStructure(const class UObject* WorldContextObject, const ETedPlayerID Owner, TSubclassOf<class ATedStructureBase> StructureClass, const struct FVector& SpawnLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "SpawnStructure");

	Params::TedUtils_SpawnStructure Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Owner = Owner;
	Parms.StructureClass = StructureClass;
	Parms.SpawnLocation = std::move(SpawnLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.SpawnUnit
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// TSubclassOf<class ATedUnitBase>         UnitClass                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedPlayerState*                  Owner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTransform&                SpawnTransform                                         (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedUnitBase*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedUnitBase* UTedUtils::SpawnUnit(TSubclassOf<class ATedUnitBase> UnitClass, class ATedPlayerState* Owner, const struct FTransform& SpawnTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "SpawnUnit");

	Params::TedUtils_SpawnUnit Parms{};

	Parms.UnitClass = UnitClass;
	Parms.Owner = Owner;
	Parms.SpawnTransform = std::move(SpawnTransform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.SpawnUnitForPlayer
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ATedUnitBase>         UnitClass                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETedPlayerID                      PlayerID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTransform&                SpawnTransform                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedUnitBase*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATedUnitBase* UTedUtils::SpawnUnitForPlayer(const class UObject* WorldContextObject, TSubclassOf<class ATedUnitBase> UnitClass, const ETedPlayerID PlayerID, const struct FTransform& SpawnTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "SpawnUnitForPlayer");

	Params::TedUtils_SpawnUnitForPlayer Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.UnitClass = UnitClass;
	Parms.PlayerID = PlayerID;
	Parms.SpawnTransform = std::move(SpawnTransform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.SyncCurrentCommand
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class AActor*>&            CommandActors                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedUtils::SyncCurrentCommand(const TArray<class AActor*>& CommandActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "SyncCurrentCommand");

	Params::TedUtils_SyncCurrentCommand Parms{};

	Parms.CommandActors = std::move(CommandActors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUtils.SyncCurrentCommands
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class AActor*>&            CommandActors                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTedUtils::SyncCurrentCommands(const TArray<class AActor*>& CommandActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "SyncCurrentCommands");

	Params::TedUtils_SyncCurrentCommands Parms{};

	Parms.CommandActors = std::move(CommandActors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUtils.TedGetDefaultObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const TSubclassOf<class UObject>&       Class_0                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UObject*                    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UObject* UTedUtils::TedGetDefaultObject(const TSubclassOf<class UObject>& Class_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "TedGetDefaultObject");

	Params::TedUtils_TedGetDefaultObject Parms{};

	Parms.Class_0 = Class_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.TeleportCamera
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   TargetLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUtils::TeleportCamera(const class UObject* WorldContextObject, const struct FVector& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "TeleportCamera");

	Params::TedUtils_TeleportCamera Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TargetLocation = std::move(TargetLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUtils.TestReachability
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   StartLocation                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   EndLocation                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TSubclassOf<class UNavigationQueryFilter>FilterClass                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ARecastNavMesh*             OverrideTargetNav                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedUtils::TestReachability(const class UObject* WorldContextObject, const struct FVector& StartLocation, const struct FVector& EndLocation, const TSubclassOf<class UNavigationQueryFilter> FilterClass, const class ARecastNavMesh* OverrideTargetNav)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "TestReachability");

	Params::TedUtils_TestReachability Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.StartLocation = std::move(StartLocation);
	Parms.EndLocation = std::move(EndLocation);
	Parms.FilterClass = FilterClass;
	Parms.OverrideTargetNav = OverrideTargetNav;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedUtils.UnsetConsoleVariable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InName                                                 (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUtils::UnsetConsoleVariable(const class FString& InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "UnsetConsoleVariable");

	Params::TedUtils_UnsetConsoleVariable Parms{};

	Parms.InName = std::move(InName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedUtils.WaitForMovieToFinish
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedUtils::WaitForMovieToFinish(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedUtils", "WaitForMovieToFinish");

	Params::TedUtils_WaitForMovieToFinish Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedVehicle_Harvester.OnRep_CurrentResource
// (Final, Native, Protected)

void ATedVehicle_Harvester::OnRep_CurrentResource()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedVehicle_Harvester", "OnRep_CurrentResource");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedVehicle_Harvester.SetResourceDepositSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InResourceDepositSpeed                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedVehicle_Harvester::SetResourceDepositSpeed(const int32 InResourceDepositSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedVehicle_Harvester", "SetResourceDepositSpeed");

	Params::TedVehicle_Harvester_SetResourceDepositSpeed Parms{};

	Parms.InResourceDepositSpeed = InResourceDepositSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedVehicle_Harvester.SetResourceHarvestSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InResourceHarvestSpeed                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedVehicle_Harvester::SetResourceHarvestSpeed(const int32 InResourceHarvestSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedVehicle_Harvester", "SetResourceHarvestSpeed");

	Params::TedVehicle_Harvester_SetResourceHarvestSpeed Parms{};

	Parms.InResourceHarvestSpeed = InResourceHarvestSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedVehicle_Harvester.SetResourceMaxCapacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InResourceMaxCapacity                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedVehicle_Harvester::SetResourceMaxCapacity(const int32 InResourceMaxCapacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedVehicle_Harvester", "SetResourceMaxCapacity");

	Params::TedVehicle_Harvester_SetResourceMaxCapacity Parms{};

	Parms.InResourceMaxCapacity = InResourceMaxCapacity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedVehicle_Harvester.K2_OnResourceChange
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// float                                   ResourceToMaxCapacityPct                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedVehicle_Harvester::K2_OnResourceChange(float ResourceToMaxCapacityPct) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedVehicle_Harvester", "K2_OnResourceChange");

	Params::TedVehicle_Harvester_K2_OnResourceChange Parms{};

	Parms.ResourceToMaxCapacityPct = ResourceToMaxCapacityPct;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedVehicle_MobileRefinery.GetPawnContainer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTedPawnContainerComponent*       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedPawnContainerComponent* ATedVehicle_MobileRefinery::GetPawnContainer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedVehicle_MobileRefinery", "GetPawnContainer");

	Params::TedVehicle_MobileRefinery_GetPawnContainer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedVetiDomeHelper.SetActive
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInActive                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedVetiDomeHelper::SetActive(bool bInActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedVetiDomeHelper", "SetActive");

	Params::TedVetiDomeHelper_SetActive Parms{};

	Parms.bInActive = bInActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedWeapon.OnPlayerStateOuterEndPlay
// (Final, Native, Protected)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedWeapon::OnPlayerStateOuterEndPlay(class AActor* Actor, EEndPlayReason Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "OnPlayerStateOuterEndPlay");

	Params::TedWeapon_OnPlayerStateOuterEndPlay Parms{};

	Parms.Actor = Actor;
	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedWeapon.CanAttackGround
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedWeapon::CanAttackGround() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "CanAttackGround");

	Params::TedWeapon_CanAttackGround Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.CanRechargeAmmoAutomatically
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedWeapon::CanRechargeAmmoAutomatically() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "CanRechargeAmmoAutomatically");

	Params::TedWeapon_CanRechargeAmmoAutomatically Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.GetAmmoCountMax
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedWeapon::GetAmmoCountMax() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "GetAmmoCountMax");

	Params::TedWeapon_GetAmmoCountMax Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.GetAmmoCountPerRecharge
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedWeapon::GetAmmoCountPerRecharge() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "GetAmmoCountPerRecharge");

	Params::TedWeapon_GetAmmoCountPerRecharge Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.GetAmmoCountStart
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedWeapon::GetAmmoCountStart() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "GetAmmoCountStart");

	Params::TedWeapon_GetAmmoCountStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.GetAmmoCountUse
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedWeapon::GetAmmoCountUse() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "GetAmmoCountUse");

	Params::TedWeapon_GetAmmoCountUse Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.GetAmmoRechargeCutoff
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedWeapon::GetAmmoRechargeCutoff() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "GetAmmoRechargeCutoff");

	Params::TedWeapon_GetAmmoRechargeCutoff Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.GetAmmoRechargeTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedWeapon::GetAmmoRechargeTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "GetAmmoRechargeTime");

	Params::TedWeapon_GetAmmoRechargeTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.GetAttackCooldown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedWeapon::GetAttackCooldown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "GetAttackCooldown");

	Params::TedWeapon_GetAttackCooldown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.GetAttackGraceRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedWeapon::GetAttackGraceRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "GetAttackGraceRange");

	Params::TedWeapon_GetAttackGraceRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.GetAttackRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedWeapon::GetAttackRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "GetAttackRange");

	Params::TedWeapon_GetAttackRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.GetAttackRangeThreshold
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedWeapon::GetAttackRangeThreshold() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "GetAttackRangeThreshold");

	Params::TedWeapon_GetAttackRangeThreshold Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.GetConeDamageParams
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FConeDamageParams          ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FConeDamageParams UTedWeapon::GetConeDamageParams() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "GetConeDamageParams");

	Params::TedWeapon_GetConeDamageParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.GetDamageAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedWeapon::GetDamageAmount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "GetDamageAmount");

	Params::TedWeapon_GetDamageAmount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.GetDamageKind
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EDamageKind                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EDamageKind UTedWeapon::GetDamageKind() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "GetDamageKind");

	Params::TedWeapon_GetDamageKind Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.GetDamageType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UTedDamageType>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UTedDamageType> UTedWeapon::GetDamageType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "GetDamageType");

	Params::TedWeapon_GetDamageType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.GetDefinitionId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag UTedWeapon::GetDefinitionId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "GetDefinitionId");

	Params::TedWeapon_GetDefinitionId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.GetEffectsToApplyOnDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class UGameplayEffect*>    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

const TArray<class UGameplayEffect*> UTedWeapon::GetEffectsToApplyOnDamage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "GetEffectsToApplyOnDamage");

	Params::TedWeapon_GetEffectsToApplyOnDamage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.GetGuardRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const bool                              bForAI                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedWeapon::GetGuardRange(const bool bForAI) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "GetGuardRange");

	Params::TedWeapon_GetGuardRange Parms{};

	Parms.bForAI = bForAI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.GetOwnedTags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer UTedWeapon::GetOwnedTags() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "GetOwnedTags");

	Params::TedWeapon_GetOwnedTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.GetPointDamageAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTedWeapon::GetPointDamageAmount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "GetPointDamageAmount");

	Params::TedWeapon_GetPointDamageAmount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.GetProjectileClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class ATedProjectile>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class ATedProjectile> UTedWeapon::GetProjectileClass() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "GetProjectileClass");

	Params::TedWeapon_GetProjectileClass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.GetRadialDamageParams
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FRadialDamageParams        ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FRadialDamageParams UTedWeapon::GetRadialDamageParams() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "GetRadialDamageParams");

	Params::TedWeapon_GetRadialDamageParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.GetSourceTagRequirements
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagRequirements         ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagRequirements UTedWeapon::GetSourceTagRequirements() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "GetSourceTagRequirements");

	Params::TedWeapon_GetSourceTagRequirements Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.GetTargetingDomains
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagContainer      ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGameplayTagContainer UTedWeapon::GetTargetingDomains() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "GetTargetingDomains");

	Params::TedWeapon_GetTargetingDomains Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.GetTargetTagRequirements
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagRequirements         ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagRequirements UTedWeapon::GetTargetTagRequirements() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "GetTargetTagRequirements");

	Params::TedWeapon_GetTargetTagRequirements Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.GetWeaponPriority
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UTedWeapon::GetWeaponPriority() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "GetWeaponPriority");

	Params::TedWeapon_GetWeaponPriority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.HasAutoAttack
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedWeapon::HasAutoAttack() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "HasAutoAttack");

	Params::TedWeapon_HasAutoAttack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.HasFakeWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedWeapon::HasFakeWeapon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "HasFakeWeapon");

	Params::TedWeapon_HasFakeWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.IsDealingFullDamageToTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedWeapon::IsDealingFullDamageToTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "IsDealingFullDamageToTarget");

	Params::TedWeapon_IsDealingFullDamageToTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.IsDealingInstantDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedWeapon::IsDealingInstantDamage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "IsDealingInstantDamage");

	Params::TedWeapon_IsDealingInstantDamage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.IsMeleeWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedWeapon::IsMeleeWeapon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "IsMeleeWeapon");

	Params::TedWeapon_IsMeleeWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWeapon.ShouldApplyRadialDamageToFriendlies
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTedWeapon::ShouldApplyRadialDamageToFriendlies() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWeapon", "ShouldApplyRadialDamageToFriendlies");

	Params::TedWeapon_ShouldApplyRadialDamageToFriendlies Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWindEffectManager.RequestWindEffect
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UTedWindEffectConfig*       WindConfig                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedWindEffectManager::RequestWindEffect(const class UObject* WorldContextObject, const class UTedWindEffectConfig* WindConfig, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedWindEffectManager", "RequestWindEffect");

	Params::TedWindEffectManager_RequestWindEffect Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.WindConfig = WindConfig;
	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedWorkerButton_TempestWorkers.OnUpdateIdleState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    NewIdleState                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedWorkerButton_TempestWorkers::OnUpdateIdleState(bool NewIdleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWorkerButton_TempestWorkers", "OnUpdateIdleState");

	Params::TedWorkerButton_TempestWorkers_OnUpdateIdleState Parms{};

	Parms.NewIdleState = NewIdleState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedWorkerSlot.ClearDamageIcon
// (Final, Native, Public)

void UTedWorkerSlot::ClearDamageIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWorkerSlot", "ClearDamageIcon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedWorkerSlot.GetParentWorkerWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UTedWorkersWidget*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTedWorkersWidget* UTedWorkerSlot::GetParentWorkerWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWorkerSlot", "GetParentWorkerWidget");

	Params::TedWorkerSlot_GetParentWorkerWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWorkerSlot.OnWorkerHealthChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// const float                             OldValue                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             NewValue                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedWorkerSlot::OnWorkerHealthChanged(const float OldValue, const float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWorkerSlot", "OnWorkerHealthChanged");

	Params::TedWorkerSlot_OnWorkerHealthChanged Parms{};

	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TedWorkersWidget_TempestWorkers.GetState_TempestWorkerIdle
// (Final, Native, Static, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// ETedContentSlotState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETedContentSlotState UTedWorkersWidget_TempestWorkers::GetState_TempestWorkerIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TedWorkersWidget_TempestWorkers", "GetState_TempestWorkerIdle");

	Params::TedWorkersWidget_TempestWorkers_GetState_TempestWorkerIdle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWorkersWidget_TempestWorkers.GetCapacityFill
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class ATedPawn*                   Pawn                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTedWorkersWidget_TempestWorkers::GetCapacityFill(const class ATedPawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWorkersWidget_TempestWorkers", "GetCapacityFill");

	Params::TedWorkersWidget_TempestWorkers_GetCapacityFill Parms{};

	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TedWorldHintActor.DestroyHint
// (Native, Event, Public, BlueprintEvent)

void ATedWorldHintActor::DestroyHint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWorldHintActor", "DestroyHint");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedWorldHintActor.OnTargetActorEndPlay
// (Final, Native, Protected)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          EndPlayReason                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedWorldHintActor::OnTargetActorEndPlay(class AActor* Actor, EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWorldHintActor", "OnTargetActorEndPlay");

	Params::TedWorldHintActor_OnTargetActorEndPlay Parms{};

	Parms.Actor = Actor;
	Parms.EndPlayReason = EndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedWorldHintActor.OnTargetPawnDeath
// (Final, Native, Protected)
// Parameters:
// class ATedPawn*                         Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedWorldHintActor::OnTargetPawnDeath(class ATedPawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWorldHintActor", "OnTargetPawnDeath");

	Params::TedWorldHintActor_OnTargetPawnDeath Parms{};

	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedWorldHintActor.OnTargetPawnVisibilityChanged
// (Final, Native, Protected)
// Parameters:
// class ATedPawn*                         Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedWorldHintActor::OnTargetPawnVisibilityChanged(class ATedPawn* Pawn, bool bIsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWorldHintActor", "OnTargetPawnVisibilityChanged");

	Params::TedWorldHintActor_OnTargetPawnVisibilityChanged Parms{};

	Parms.Pawn = Pawn;
	Parms.bIsVisible = bIsVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedWorldHintActor.OnTargetPickedUp
// (Final, Native, Protected)
// Parameters:
// class ATedUnitBase*                     PickedUpBy                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATedPickupActor*                  PickupActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedWorldHintActor::OnTargetPickedUp(class ATedUnitBase* PickedUpBy, class ATedPickupActor* PickupActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWorldHintActor", "OnTargetPickedUp");

	Params::TedWorldHintActor_OnTargetPickedUp Parms{};

	Parms.PickedUpBy = PickedUpBy;
	Parms.PickupActor = PickupActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedWorldHintActor.OnTargetRemoved
// (Final, Native, Protected)

void ATedWorldHintActor::OnTargetRemoved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWorldHintActor", "OnTargetRemoved");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedWorldHintActor.SetHintData
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UTedHintsAsset*                   HintData                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           AttachedToActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATedWorldHintActor::SetHintData(class UTedHintsAsset* HintData, class AActor* AttachedToActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWorldHintActor", "SetHintData");

	Params::TedWorldHintActor_SetHintData Parms{};

	Parms.HintData = HintData;
	Parms.AttachedToActor = AttachedToActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TedWorldHintWidget.SetHintData
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UTedHintsAsset*                   HintData                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTedWorldHintWidget::SetHintData(class UTedHintsAsset* HintData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedWorldHintWidget", "SetHintData");

	Params::TedWorldHintWidget_SetHintData Parms{};

	Parms.HintData = HintData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TempestFieldElementProxy.AddElementComponent
// (Final, Native, Protected, BlueprintCallable, Const)
// Parameters:
// class USceneComponent*                  Comp                                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTempestFieldElementProxy::AddElementComponent(class USceneComponent* Comp) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldElementProxy", "AddElementComponent");

	Params::TempestFieldElementProxy_AddElementComponent Parms{};

	Parms.Comp = Comp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TempestFieldElementProxy.AddElementComponentOfClass
// (Final, Native, Protected, HasDefaults, BlueprintCallable, Const)
// Parameters:
// const TSubclassOf<class USceneComponent>CompClass                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTransform&                Transform                                              (ConstParm, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USceneComponent* UTempestFieldElementProxy::AddElementComponentOfClass(const TSubclassOf<class USceneComponent> CompClass, const struct FTransform& Transform) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldElementProxy", "AddElementComponentOfClass");

	Params::TempestFieldElementProxy_AddElementComponentOfClass Parms{};

	Parms.CompClass = CompClass;
	Parms.Transform = std::move(Transform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TempestFieldElementProxy.AddElementSMInstance
// (Final, Native, Protected, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class UStaticMesh*                      StaticMesh                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTransform&                Transform                                              (ConstParm, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             NumCustomDataFloats                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFieldTileElementISMData         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FFieldTileElementISMData UTempestFieldElementProxy::AddElementSMInstance(class UStaticMesh* StaticMesh, const struct FTransform& Transform, const int32 NumCustomDataFloats) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldElementProxy", "AddElementSMInstance");

	Params::TempestFieldElementProxy_AddElementSMInstance Parms{};

	Parms.StaticMesh = StaticMesh;
	Parms.Transform = std::move(Transform);
	Parms.NumCustomDataFloats = NumCustomDataFloats;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TempestFieldElementProxy.GetElementComponent
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TSubclassOf<class USceneComponent>CompClass                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USceneComponent* UTempestFieldElementProxy::GetElementComponent(const TSubclassOf<class USceneComponent> CompClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldElementProxy", "GetElementComponent");

	Params::TempestFieldElementProxy_GetElementComponent Parms{};

	Parms.CompClass = CompClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TempestFieldElementProxy.GetElementComponents
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TSubclassOf<class USceneComponent>CompClass                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class USceneComponent*>          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class USceneComponent*> UTempestFieldElementProxy::GetElementComponents(const TSubclassOf<class USceneComponent> CompClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldElementProxy", "GetElementComponents");

	Params::TempestFieldElementProxy_GetElementComponents Parms{};

	Parms.CompClass = CompClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TempestFieldElementProxy.GetElementCurrentStage
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETempestFieldElementStage               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETempestFieldElementStage UTempestFieldElementProxy::GetElementCurrentStage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldElementProxy", "GetElementCurrentStage");

	Params::TempestFieldElementProxy_GetElementCurrentStage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TempestFieldElementProxy.GetElementNextStage
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETempestFieldElementStage               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETempestFieldElementStage UTempestFieldElementProxy::GetElementNextStage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldElementProxy", "GetElementNextStage");

	Params::TempestFieldElementProxy_GetElementNextStage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TempestFieldElementProxy.GetElementRandomTransforms
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FTransform>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FTransform> UTempestFieldElementProxy::GetElementRandomTransforms() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldElementProxy", "GetElementRandomTransforms");

	Params::TempestFieldElementProxy_GetElementRandomTransforms Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TempestFieldElementProxy.GetElementSMInstance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             InstanceIndex                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFieldTileElementISMData         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FFieldTileElementISMData UTempestFieldElementProxy::GetElementSMInstance(const int32 InstanceIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldElementProxy", "GetElementSMInstance");

	Params::TempestFieldElementProxy_GetElementSMInstance Parms{};

	Parms.InstanceIndex = InstanceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TempestFieldElementProxy.GetElementSMInstanceCount
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTempestFieldElementProxy::GetElementSMInstanceCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldElementProxy", "GetElementSMInstanceCount");

	Params::TempestFieldElementProxy_GetElementSMInstanceCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TempestFieldElementProxy.GetElementSMInstances
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FFieldTileElementISMData> ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<struct FFieldTileElementISMData> UTempestFieldElementProxy::GetElementSMInstances() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldElementProxy", "GetElementSMInstances");

	Params::TempestFieldElementProxy_GetElementSMInstances Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TempestFieldElementProxy.GetElementTransform
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform UTempestFieldElementProxy::GetElementTransform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldElementProxy", "GetElementTransform");

	Params::TempestFieldElementProxy_GetElementTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TempestFieldElementProxy.GetElementTransitionData
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float*                                  OutProgress                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETempestFieldElementStage*              OutFromStage                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETempestFieldElementStage*              OutToStage                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTempestFieldElementProxy::GetElementTransitionData(float* OutProgress, ETempestFieldElementStage* OutFromStage, ETempestFieldElementStage* OutToStage) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldElementProxy", "GetElementTransitionData");

	Params::TempestFieldElementProxy_GetElementTransitionData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutProgress != nullptr)
		*OutProgress = Parms.OutProgress;

	if (OutFromStage != nullptr)
		*OutFromStage = Parms.OutFromStage;

	if (OutToStage != nullptr)
		*OutToStage = Parms.OutToStage;
}


// Function Tempest.TempestFieldElementProxy.GetElementTransitionProgress
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTempestFieldElementProxy::GetElementTransitionProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldElementProxy", "GetElementTransitionProgress");

	Params::TempestFieldElementProxy_GetElementTransitionProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TempestFieldElementProxy.IsGeneratedInEditor
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTempestFieldElementProxy::IsGeneratedInEditor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldElementProxy", "IsGeneratedInEditor");

	Params::TempestFieldElementProxy_IsGeneratedInEditor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TempestFieldElementProxy.K2_BeginTransition
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// const ETempestFieldElementStage         PrevStage                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETempestFieldElementStage         NextStage                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTempestFieldElementProxy::K2_BeginTransition(const ETempestFieldElementStage PrevStage, const ETempestFieldElementStage NextStage) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldElementProxy", "K2_BeginTransition");

	Params::TempestFieldElementProxy_K2_BeginTransition Parms{};

	Parms.PrevStage = PrevStage;
	Parms.NextStage = NextStage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TempestFieldElementProxy.K2_EndTransition
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// const ETempestFieldElementStage         PrevStage                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETempestFieldElementStage         NextStage                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTempestFieldElementProxy::K2_EndTransition(const ETempestFieldElementStage PrevStage, const ETempestFieldElementStage NextStage) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldElementProxy", "K2_EndTransition");

	Params::TempestFieldElementProxy_K2_EndTransition Parms{};

	Parms.PrevStage = PrevStage;
	Parms.NextStage = NextStage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tempest.TempestFieldElementProxy.K2_InitializeElement
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FRandomStream&                   RandomStream                                           (Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTempestFieldElementProxy::K2_InitializeElement(struct FRandomStream& RandomStream) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldElementProxy", "K2_InitializeElement");

	Params::TempestFieldElementProxy_K2_InitializeElement Parms{};

	Parms.RandomStream = std::move(RandomStream);

	UObject::ProcessEvent(Func, &Parms);

	RandomStream = std::move(Parms.RandomStream);
}


// Function Tempest.TempestFieldElementProxy.K2_ProcessTransition
// (Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// float&                                  Progress                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             DeltaTime                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETempestFieldElementStage         PrevStage                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETempestFieldElementStage         NextStage                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTempestFieldElementProxy::K2_ProcessTransition(float& Progress, const float DeltaTime, const ETempestFieldElementStage PrevStage, const ETempestFieldElementStage NextStage) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldElementProxy", "K2_ProcessTransition");

	Params::TempestFieldElementProxy_K2_ProcessTransition Parms{};

	Parms.Progress = Progress;
	Parms.DeltaTime = DeltaTime;
	Parms.PrevStage = PrevStage;
	Parms.NextStage = NextStage;

	UObject::ProcessEvent(Func, &Parms);

	Progress = Parms.Progress;
}


// Function Tempest.TempestFieldElementProxy.MarkComponentRenderStateDirty
// (Final, Native, Protected, BlueprintCallable, Const)
// Parameters:
// class UPrimitiveComponent*              PrimComp                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTempestFieldElementProxy::MarkComponentRenderStateDirty(class UPrimitiveComponent* PrimComp) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldElementProxy", "MarkComponentRenderStateDirty");

	Params::TempestFieldElementProxy_MarkComponentRenderStateDirty Parms{};

	Parms.PrimComp = PrimComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TempestFieldElementProxy.RemoveAllElementComponents
// (Final, Native, Protected, BlueprintCallable, Const)
// Parameters:
// const float                             DestroyDelay                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTempestFieldElementProxy::RemoveAllElementComponents(const float DestroyDelay) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldElementProxy", "RemoveAllElementComponents");

	Params::TempestFieldElementProxy_RemoveAllElementComponents Parms{};

	Parms.DestroyDelay = DestroyDelay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TempestFieldElementProxy.RemoveElementComponent
// (Final, Native, Protected, BlueprintCallable, Const)
// Parameters:
// class USceneComponent*                  Comp                                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             DestroyDelay                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTempestFieldElementProxy::RemoveElementComponent(class USceneComponent* Comp, const float DestroyDelay) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldElementProxy", "RemoveElementComponent");

	Params::TempestFieldElementProxy_RemoveElementComponent Parms{};

	Parms.Comp = Comp;
	Parms.DestroyDelay = DestroyDelay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TempestFieldElementProxy.RemoveElementComponents
// (Final, Native, Protected, BlueprintCallable, Const)
// Parameters:
// const TSubclassOf<class USceneComponent>CompClass                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             DestroyDelay                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTempestFieldElementProxy::RemoveElementComponents(const TSubclassOf<class USceneComponent> CompClass, const float DestroyDelay) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldElementProxy", "RemoveElementComponents");

	Params::TempestFieldElementProxy_RemoveElementComponents Parms{};

	Parms.CompClass = CompClass;
	Parms.DestroyDelay = DestroyDelay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TempestFieldVolume.OnRep_RepFieldTileStage
// (Final, Native, Protected)

void ATempestFieldVolume::OnRep_RepFieldTileStage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldVolume", "OnRep_RepFieldTileStage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TempestFieldVolume.OnRep_RepFieldTilesVisibility
// (Final, Native, Protected)

void ATempestFieldVolume::OnRep_RepFieldTilesVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldVolume", "OnRep_RepFieldTilesVisibility");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tempest.TempestFieldVolume.GetClosestUnclaimedResourceTile
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector&                   InLocation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         OutClosestLocation                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTestReachability                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ATedUnitBase*               InUnit                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ATempestFieldVolume::GetClosestUnclaimedResourceTile(const struct FVector& InLocation, struct FVector* OutClosestLocation, bool bTestReachability, const class ATedUnitBase* InUnit) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldVolume", "GetClosestUnclaimedResourceTile");

	Params::TempestFieldVolume_GetClosestUnclaimedResourceTile Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.bTestReachability = bTestReachability;
	Parms.InUnit = InUnit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutClosestLocation != nullptr)
		*OutClosestLocation = std::move(Parms.OutClosestLocation);

	return Parms.ReturnValue;
}


// Function Tempest.TempestFieldVolume.GetResourceAtWorldLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector&                   Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ATempestFieldVolume::GetResourceAtWorldLocation(const struct FVector& Location) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldVolume", "GetResourceAtWorldLocation");

	Params::TempestFieldVolume_GetResourceAtWorldLocation Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TempestFieldVolume.GetResourceLeft
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ATempestFieldVolume::GetResourceLeft() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldVolume", "GetResourceLeft");

	Params::TempestFieldVolume_GetResourceLeft Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TempestFieldVolume.GetResourcePct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ATempestFieldVolume::GetResourcePct() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldVolume", "GetResourcePct");

	Params::TempestFieldVolume_GetResourcePct Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TempestFieldVolume.GetVisibleResourceLeft
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ATempestFieldVolume::GetVisibleResourceLeft() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldVolume", "GetVisibleResourceLeft");

	Params::TempestFieldVolume_GetVisibleResourceLeft Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TempestFieldVolume.GetVisibleResourcePct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ATempestFieldVolume::GetVisibleResourcePct() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldVolume", "GetVisibleResourcePct");

	Params::TempestFieldVolume_GetVisibleResourcePct Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TempestFieldVolume.HasUnlcaimedResourceTile
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATempestFieldVolume::HasUnlcaimedResourceTile() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldVolume", "HasUnlcaimedResourceTile");

	Params::TempestFieldVolume_HasUnlcaimedResourceTile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TempestFieldVolume.IsResourceDepleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATempestFieldVolume::IsResourceDepleted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldVolume", "IsResourceDepleted");

	Params::TempestFieldVolume_IsResourceDepleted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tempest.TempestFieldVolume.NumClaimedTiles
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ATempestFieldVolume::NumClaimedTiles() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestFieldVolume", "NumClaimedTiles");

	Params::TempestFieldVolume_NumClaimedTiles Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

