#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCue_Status_Heal_Default

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GCue_Status_Heal_Default.GCue_Status_Heal_Default_C.OnRemove
// 0x0120 (0x0120 - 0x0000)
struct GCue_Status_Heal_Default_C_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnRemove_ReturnValue;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCue_Status_Heal_Default_C_OnRemove) == 0x000008, "Wrong alignment on GCue_Status_Heal_Default_C_OnRemove");
static_assert(sizeof(GCue_Status_Heal_Default_C_OnRemove) == 0x000120, "Wrong size on GCue_Status_Heal_Default_C_OnRemove");
static_assert(offsetof(GCue_Status_Heal_Default_C_OnRemove, MyTarget) == 0x000000, "Member 'GCue_Status_Heal_Default_C_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(GCue_Status_Heal_Default_C_OnRemove, Parameters) == 0x000008, "Member 'GCue_Status_Heal_Default_C_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(GCue_Status_Heal_Default_C_OnRemove, ReturnValue) == 0x0000E0, "Member 'GCue_Status_Heal_Default_C_OnRemove::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCue_Status_Heal_Default_C_OnRemove, Temp_int_Array_Index_Variable) == 0x0000E4, "Member 'GCue_Status_Heal_Default_C_OnRemove::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GCue_Status_Heal_Default_C_OnRemove, CallFunc_OnRemove_ReturnValue) == 0x0000E8, "Member 'GCue_Status_Heal_Default_C_OnRemove::CallFunc_OnRemove_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCue_Status_Heal_Default_C_OnRemove, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'GCue_Status_Heal_Default_C_OnRemove::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GCue_Status_Heal_Default_C_OnRemove, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000F8, "Member 'GCue_Status_Heal_Default_C_OnRemove::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCue_Status_Heal_Default_C_OnRemove, CallFunc_Array_Length_ReturnValue) == 0x000110, "Member 'GCue_Status_Heal_Default_C_OnRemove::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCue_Status_Heal_Default_C_OnRemove, Temp_int_Loop_Counter_Variable) == 0x000114, "Member 'GCue_Status_Heal_Default_C_OnRemove::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GCue_Status_Heal_Default_C_OnRemove, CallFunc_IsValid_ReturnValue) == 0x000118, "Member 'GCue_Status_Heal_Default_C_OnRemove::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCue_Status_Heal_Default_C_OnRemove, CallFunc_Less_IntInt_ReturnValue) == 0x000119, "Member 'GCue_Status_Heal_Default_C_OnRemove::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCue_Status_Heal_Default_C_OnRemove, CallFunc_Add_IntInt_ReturnValue) == 0x00011C, "Member 'GCue_Status_Heal_Default_C_OnRemove::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function GCue_Status_Heal_Default.GCue_Status_Heal_Default_C.WhileActive
// 0x0250 (0x0250 - 0x0000)
struct GCue_Status_Heal_Default_C_WhileActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WhileActive_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATedUnitBase*                           K2Node_DynamicCast_AsTed_Unit_Base;                // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetGroundLocation_ReturnValue;            // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0158(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GCue_Status_Heal_Default_C_WhileActive) == 0x000008, "Wrong alignment on GCue_Status_Heal_Default_C_WhileActive");
static_assert(sizeof(GCue_Status_Heal_Default_C_WhileActive) == 0x000250, "Wrong size on GCue_Status_Heal_Default_C_WhileActive");
static_assert(offsetof(GCue_Status_Heal_Default_C_WhileActive, MyTarget) == 0x000000, "Member 'GCue_Status_Heal_Default_C_WhileActive::MyTarget' has a wrong offset!");
static_assert(offsetof(GCue_Status_Heal_Default_C_WhileActive, Parameters) == 0x000008, "Member 'GCue_Status_Heal_Default_C_WhileActive::Parameters' has a wrong offset!");
static_assert(offsetof(GCue_Status_Heal_Default_C_WhileActive, ReturnValue) == 0x0000E0, "Member 'GCue_Status_Heal_Default_C_WhileActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCue_Status_Heal_Default_C_WhileActive, Temp_int_Array_Index_Variable) == 0x0000E4, "Member 'GCue_Status_Heal_Default_C_WhileActive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GCue_Status_Heal_Default_C_WhileActive, CallFunc_WhileActive_ReturnValue) == 0x0000E8, "Member 'GCue_Status_Heal_Default_C_WhileActive::CallFunc_WhileActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCue_Status_Heal_Default_C_WhileActive, K2Node_DynamicCast_AsTed_Unit_Base) == 0x0000F0, "Member 'GCue_Status_Heal_Default_C_WhileActive::K2Node_DynamicCast_AsTed_Unit_Base' has a wrong offset!");
static_assert(offsetof(GCue_Status_Heal_Default_C_WhileActive, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'GCue_Status_Heal_Default_C_WhileActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCue_Status_Heal_Default_C_WhileActive, Temp_int_Loop_Counter_Variable) == 0x0000FC, "Member 'GCue_Status_Heal_Default_C_WhileActive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GCue_Status_Heal_Default_C_WhileActive, CallFunc_Add_IntInt_ReturnValue) == 0x000100, "Member 'GCue_Status_Heal_Default_C_WhileActive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCue_Status_Heal_Default_C_WhileActive, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000108, "Member 'GCue_Status_Heal_Default_C_WhileActive::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCue_Status_Heal_Default_C_WhileActive, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000120, "Member 'GCue_Status_Heal_Default_C_WhileActive::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCue_Status_Heal_Default_C_WhileActive, CallFunc_GetGroundLocation_ReturnValue) == 0x000130, "Member 'GCue_Status_Heal_Default_C_WhileActive::CallFunc_GetGroundLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCue_Status_Heal_Default_C_WhileActive, CallFunc_Array_Get_Item) == 0x000148, "Member 'GCue_Status_Heal_Default_C_WhileActive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GCue_Status_Heal_Default_C_WhileActive, CallFunc_Array_Length_ReturnValue) == 0x000150, "Member 'GCue_Status_Heal_Default_C_WhileActive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCue_Status_Heal_Default_C_WhileActive, CallFunc_Less_IntInt_ReturnValue) == 0x000154, "Member 'GCue_Status_Heal_Default_C_WhileActive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCue_Status_Heal_Default_C_WhileActive, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000158, "Member 'GCue_Status_Heal_Default_C_WhileActive::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

}

