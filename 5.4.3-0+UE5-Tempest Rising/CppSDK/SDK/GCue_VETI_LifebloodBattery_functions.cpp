#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCue_VETI_LifebloodBattery

#include "Basic.hpp"

#include "GCue_VETI_LifebloodBattery_classes.hpp"
#include "GCue_VETI_LifebloodBattery_parameters.hpp"


namespace SDK
{

// Function GCue_VETI_LifebloodBattery.GCue_VETI_LifebloodBattery_C.ExecuteUbergraph_GCue_VETI_LifebloodBattery
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGCue_VETI_LifebloodBattery_C::ExecuteUbergraph_GCue_VETI_LifebloodBattery(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCue_VETI_LifebloodBattery_C", "ExecuteUbergraph_GCue_VETI_LifebloodBattery");

	Params::GCue_VETI_LifebloodBattery_C_ExecuteUbergraph_GCue_VETI_LifebloodBattery Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GCue_VETI_LifebloodBattery.GCue_VETI_LifebloodBattery_C.OnReceiveGravityManipulators
// (Public, BlueprintCallable, BlueprintEvent)

void AGCue_VETI_LifebloodBattery_C::OnReceiveGravityManipulators()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCue_VETI_LifebloodBattery_C", "OnReceiveGravityManipulators");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCue_VETI_LifebloodBattery.GCue_VETI_LifebloodBattery_C.OnReceiveLifebloodBattery
// (Public, BlueprintCallable, BlueprintEvent)

void AGCue_VETI_LifebloodBattery_C::OnReceiveLifebloodBattery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCue_VETI_LifebloodBattery_C", "OnReceiveLifebloodBattery");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCue_VETI_LifebloodBattery.GCue_VETI_LifebloodBattery_C.OnReceiveRegrowthProtocols
// (Public, BlueprintCallable, BlueprintEvent)

void AGCue_VETI_LifebloodBattery_C::OnReceiveRegrowthProtocols()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCue_VETI_LifebloodBattery_C", "OnReceiveRegrowthProtocols");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCue_VETI_LifebloodBattery.GCue_VETI_LifebloodBattery_C.OnReceiveShield
// (Public, BlueprintCallable, BlueprintEvent)

void AGCue_VETI_LifebloodBattery_C::OnReceiveShield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCue_VETI_LifebloodBattery_C", "OnReceiveShield");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCue_VETI_LifebloodBattery.GCue_VETI_LifebloodBattery_C.OnReceiveSpecificDeathEnlightened
// (Public, BlueprintCallable, BlueprintEvent)

void AGCue_VETI_LifebloodBattery_C::OnReceiveSpecificDeathEnlightened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCue_VETI_LifebloodBattery_C", "OnReceiveSpecificDeathEnlightened");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCue_VETI_LifebloodBattery.GCue_VETI_LifebloodBattery_C.WhileActive
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayCueParameters&    Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AGCue_VETI_LifebloodBattery_C::WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCue_VETI_LifebloodBattery_C", "WhileActive");

	Params::GCue_VETI_LifebloodBattery_C_WhileActive Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

