#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ScoreScreen_Objective_Slot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Tempest_structs.hpp"
#include "Tempest_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ScoreScreen_Objective_Slot.WBP_ScoreScreen_Objective_Slot_C
// 0x0070 (0x04B0 - 0x0440)
class UWBP_ScoreScreen_Objective_Slot_C final : public UTedObjectiveSlot
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0440(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Activate;                                          // 0x0448(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       IntroAnim;                                         // 0x0450(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_BG_Left;                                     // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_BG_Redacted;                                 // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_BG_Right;                                    // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Light;                                       // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Light_Frame;                                 // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        Objective_WS;                                      // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_ObjectiveDescription;                         // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_GlowingWidget_Text_Fill_C*         Text_ObjectiveName;                                // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_GlowingWidget_Text_Fill_C*         TextBlock_Value;                                   // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(double RequsitionGained)> OnActivated;                             // 0x04A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot(int32 EntryPoint);
	void Get_Background_Material(EObjectiveState InState, class UMaterialInterface** Out);
	void Get_Light_Frame_Material(EObjectiveState InState, class UMaterialInterface** Out);
	void Get_Light_Material(EObjectiveState InState, class UMaterialInterface** Out);
	void PlayActivationAnim();
	void PreConstruct(bool IsDesignTime);
	void Refresh_Image_Material(class UImage* InImage, class UMaterialInterface* InMaterial);
	void RefreshTextColors(EObjectiveState InState);
	void RefreshUI();
	void SetActivatedSlotColour();
	void SetInitialTextColors();
	void Show();
	void UpdatePrimaryText(const class FText& InText);
	void UpdateSecondaryText(const class FText& InText);
	void UpdateValueText(int32 InValue);
	void WidgetAnimationEvt_Activate_K2Node_WidgetAnimationEvent_0();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ScoreScreen_Objective_Slot_C">();
	}
	static class UWBP_ScoreScreen_Objective_Slot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ScoreScreen_Objective_Slot_C>();
	}
};
static_assert(alignof(UWBP_ScoreScreen_Objective_Slot_C) == 0x000008, "Wrong alignment on UWBP_ScoreScreen_Objective_Slot_C");
static_assert(sizeof(UWBP_ScoreScreen_Objective_Slot_C) == 0x0004B0, "Wrong size on UWBP_ScoreScreen_Objective_Slot_C");
static_assert(offsetof(UWBP_ScoreScreen_Objective_Slot_C, UberGraphFrame) == 0x000440, "Member 'UWBP_ScoreScreen_Objective_Slot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ScoreScreen_Objective_Slot_C, Activate) == 0x000448, "Member 'UWBP_ScoreScreen_Objective_Slot_C::Activate' has a wrong offset!");
static_assert(offsetof(UWBP_ScoreScreen_Objective_Slot_C, IntroAnim) == 0x000450, "Member 'UWBP_ScoreScreen_Objective_Slot_C::IntroAnim' has a wrong offset!");
static_assert(offsetof(UWBP_ScoreScreen_Objective_Slot_C, Image_BG_Left) == 0x000458, "Member 'UWBP_ScoreScreen_Objective_Slot_C::Image_BG_Left' has a wrong offset!");
static_assert(offsetof(UWBP_ScoreScreen_Objective_Slot_C, Image_BG_Redacted) == 0x000460, "Member 'UWBP_ScoreScreen_Objective_Slot_C::Image_BG_Redacted' has a wrong offset!");
static_assert(offsetof(UWBP_ScoreScreen_Objective_Slot_C, Image_BG_Right) == 0x000468, "Member 'UWBP_ScoreScreen_Objective_Slot_C::Image_BG_Right' has a wrong offset!");
static_assert(offsetof(UWBP_ScoreScreen_Objective_Slot_C, Image_Light) == 0x000470, "Member 'UWBP_ScoreScreen_Objective_Slot_C::Image_Light' has a wrong offset!");
static_assert(offsetof(UWBP_ScoreScreen_Objective_Slot_C, Image_Light_Frame) == 0x000478, "Member 'UWBP_ScoreScreen_Objective_Slot_C::Image_Light_Frame' has a wrong offset!");
static_assert(offsetof(UWBP_ScoreScreen_Objective_Slot_C, Objective_WS) == 0x000480, "Member 'UWBP_ScoreScreen_Objective_Slot_C::Objective_WS' has a wrong offset!");
static_assert(offsetof(UWBP_ScoreScreen_Objective_Slot_C, Text_ObjectiveDescription) == 0x000488, "Member 'UWBP_ScoreScreen_Objective_Slot_C::Text_ObjectiveDescription' has a wrong offset!");
static_assert(offsetof(UWBP_ScoreScreen_Objective_Slot_C, Text_ObjectiveName) == 0x000490, "Member 'UWBP_ScoreScreen_Objective_Slot_C::Text_ObjectiveName' has a wrong offset!");
static_assert(offsetof(UWBP_ScoreScreen_Objective_Slot_C, TextBlock_Value) == 0x000498, "Member 'UWBP_ScoreScreen_Objective_Slot_C::TextBlock_Value' has a wrong offset!");
static_assert(offsetof(UWBP_ScoreScreen_Objective_Slot_C, OnActivated) == 0x0004A0, "Member 'UWBP_ScoreScreen_Objective_Slot_C::OnActivated' has a wrong offset!");

}

