#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HUD_BuildingGrid_Slot

#include "Basic.hpp"

#include "Tempest_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_HUD_BuildingGrid_Slot.WBP_HUD_BuildingGrid_Slot_C.EvaluateIconOpacity
// 0x0028 (0x0028 - 0x0000)
struct WBP_HUD_BuildingGrid_Slot_C_EvaluateIconOpacity final
{
public:
	double                                        Return_Value;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Local_Opacity_Default;                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Local_Opacity_Disabled;                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Local_Opacity_MissingPrerequisites;                // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETedContentSlotState                          CallFunc_GetMissingPrerequisitesSlotState_ReturnValue; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStateActive_ReturnValue;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStateActive_ReturnValue_1;              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_BuildingGrid_Slot_C_EvaluateIconOpacity) == 0x000008, "Wrong alignment on WBP_HUD_BuildingGrid_Slot_C_EvaluateIconOpacity");
static_assert(sizeof(WBP_HUD_BuildingGrid_Slot_C_EvaluateIconOpacity) == 0x000028, "Wrong size on WBP_HUD_BuildingGrid_Slot_C_EvaluateIconOpacity");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_EvaluateIconOpacity, Return_Value) == 0x000000, "Member 'WBP_HUD_BuildingGrid_Slot_C_EvaluateIconOpacity::Return_Value' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_EvaluateIconOpacity, Local_Opacity_Default) == 0x000008, "Member 'WBP_HUD_BuildingGrid_Slot_C_EvaluateIconOpacity::Local_Opacity_Default' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_EvaluateIconOpacity, Local_Opacity_Disabled) == 0x000010, "Member 'WBP_HUD_BuildingGrid_Slot_C_EvaluateIconOpacity::Local_Opacity_Disabled' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_EvaluateIconOpacity, Local_Opacity_MissingPrerequisites) == 0x000018, "Member 'WBP_HUD_BuildingGrid_Slot_C_EvaluateIconOpacity::Local_Opacity_MissingPrerequisites' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_EvaluateIconOpacity, CallFunc_GetMissingPrerequisitesSlotState_ReturnValue) == 0x000020, "Member 'WBP_HUD_BuildingGrid_Slot_C_EvaluateIconOpacity::CallFunc_GetMissingPrerequisitesSlotState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_EvaluateIconOpacity, CallFunc_IsStateActive_ReturnValue) == 0x000021, "Member 'WBP_HUD_BuildingGrid_Slot_C_EvaluateIconOpacity::CallFunc_IsStateActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_EvaluateIconOpacity, CallFunc_IsStateActive_ReturnValue_1) == 0x000022, "Member 'WBP_HUD_BuildingGrid_Slot_C_EvaluateIconOpacity::CallFunc_IsStateActive_ReturnValue_1' has a wrong offset!");

// Function WBP_HUD_BuildingGrid_Slot.WBP_HUD_BuildingGrid_Slot_C.ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot
// 0x0058 (0x0058 - 0x0000)
struct WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETedContentSlotState                          K2Node_Event_InState;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInActivated;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_InQueuedCount;                        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInPaused;                            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInCompleted;                         // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInRunning;                           // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InProgress;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UTedUnitDefinitionAsset*          K2Node_Event_InDefinition_1;                       // 0x0020(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_2;         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UTedEntityDefinitionAsset*        K2Node_Event_InDefinition_2;                       // 0x0038(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_3;         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UTedStructureDefinitionAsset*     K2Node_Event_InDefinition;                         // 0x0048(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetProgress_Value_ImplicitCast;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot) == 0x000008, "Wrong alignment on WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot");
static_assert(sizeof(WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot) == 0x000058, "Wrong size on WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot, EntryPoint) == 0x000000, "Member 'WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot, K2Node_Event_InState) == 0x000004, "Member 'WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot::K2Node_Event_InState' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot, K2Node_Event_bInActivated) == 0x000005, "Member 'WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot::K2Node_Event_bInActivated' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot, K2Node_SwitchEnum_CmpSuccess) == 0x000006, "Member 'WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000010, "Member 'WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot, K2Node_Event_InQueuedCount) == 0x000018, "Member 'WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot::K2Node_Event_InQueuedCount' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot, K2Node_Event_bInPaused) == 0x000019, "Member 'WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot::K2Node_Event_bInPaused' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot, K2Node_Event_bInCompleted) == 0x00001A, "Member 'WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot::K2Node_Event_bInCompleted' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot, K2Node_Event_bInRunning) == 0x00001B, "Member 'WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot::K2Node_Event_bInRunning' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot, K2Node_Event_InProgress) == 0x00001C, "Member 'WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot::K2Node_Event_InProgress' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot, K2Node_Event_InDefinition_1) == 0x000020, "Member 'WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot::K2Node_Event_InDefinition_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot, K2Node_SwitchEnum_CmpSuccess_1) == 0x000028, "Member 'WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot, CallFunc_Greater_ByteByte_ReturnValue) == 0x000029, "Member 'WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot, CallFunc_GetDynamicMaterial_ReturnValue_2) == 0x000030, "Member 'WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot::CallFunc_GetDynamicMaterial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot, K2Node_Event_InDefinition_2) == 0x000038, "Member 'WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot::K2Node_Event_InDefinition_2' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot, CallFunc_GetDynamicMaterial_ReturnValue_3) == 0x000040, "Member 'WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot::CallFunc_GetDynamicMaterial_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot, K2Node_Event_InDefinition) == 0x000048, "Member 'WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot::K2Node_Event_InDefinition' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot, CallFunc_SetProgress_Value_ImplicitCast) == 0x000050, "Member 'WBP_HUD_BuildingGrid_Slot_C_ExecuteUbergraph_WBP_HUD_BuildingGrid_Slot::CallFunc_SetProgress_Value_ImplicitCast' has a wrong offset!");

// Function WBP_HUD_BuildingGrid_Slot.WBP_HUD_BuildingGrid_Slot_C.OnActivateState
// 0x0002 (0x0002 - 0x0000)
struct WBP_HUD_BuildingGrid_Slot_C_OnActivateState final
{
public:
	ETedContentSlotState                          InState;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInActivated;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_BuildingGrid_Slot_C_OnActivateState) == 0x000001, "Wrong alignment on WBP_HUD_BuildingGrid_Slot_C_OnActivateState");
static_assert(sizeof(WBP_HUD_BuildingGrid_Slot_C_OnActivateState) == 0x000002, "Wrong size on WBP_HUD_BuildingGrid_Slot_C_OnActivateState");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_OnActivateState, InState) == 0x000000, "Member 'WBP_HUD_BuildingGrid_Slot_C_OnActivateState::InState' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_OnActivateState, bInActivated) == 0x000001, "Member 'WBP_HUD_BuildingGrid_Slot_C_OnActivateState::bInActivated' has a wrong offset!");

// Function WBP_HUD_BuildingGrid_Slot.WBP_HUD_BuildingGrid_Slot_C.OnRefresh_Common
// 0x0008 (0x0008 - 0x0000)
struct WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Common final
{
public:
	const class UTedEntityDefinitionAsset*        InDefinition;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Common) == 0x000008, "Wrong alignment on WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Common");
static_assert(sizeof(WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Common) == 0x000008, "Wrong size on WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Common");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Common, InDefinition) == 0x000000, "Member 'WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Common::InDefinition' has a wrong offset!");

// Function WBP_HUD_BuildingGrid_Slot.WBP_HUD_BuildingGrid_Slot_C.OnRefresh_Progress
// 0x0008 (0x0008 - 0x0000)
struct WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Progress final
{
public:
	uint8                                         InQueuedCount;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInPaused;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInCompleted;                                      // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInRunning;                                        // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InProgress;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Progress) == 0x000004, "Wrong alignment on WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Progress");
static_assert(sizeof(WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Progress) == 0x000008, "Wrong size on WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Progress");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Progress, InQueuedCount) == 0x000000, "Member 'WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Progress::InQueuedCount' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Progress, bInPaused) == 0x000001, "Member 'WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Progress::bInPaused' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Progress, bInCompleted) == 0x000002, "Member 'WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Progress::bInCompleted' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Progress, bInRunning) == 0x000003, "Member 'WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Progress::bInRunning' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Progress, InProgress) == 0x000004, "Member 'WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Progress::InProgress' has a wrong offset!");

// Function WBP_HUD_BuildingGrid_Slot.WBP_HUD_BuildingGrid_Slot_C.OnRefresh_Structure
// 0x0008 (0x0008 - 0x0000)
struct WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Structure final
{
public:
	const class UTedStructureDefinitionAsset*     InDefinition;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Structure) == 0x000008, "Wrong alignment on WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Structure");
static_assert(sizeof(WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Structure) == 0x000008, "Wrong size on WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Structure");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Structure, InDefinition) == 0x000000, "Member 'WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Structure::InDefinition' has a wrong offset!");

// Function WBP_HUD_BuildingGrid_Slot.WBP_HUD_BuildingGrid_Slot_C.OnRefresh_Unit
// 0x0008 (0x0008 - 0x0000)
struct WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Unit final
{
public:
	const class UTedUnitDefinitionAsset*          InDefinition;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Unit) == 0x000008, "Wrong alignment on WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Unit");
static_assert(sizeof(WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Unit) == 0x000008, "Wrong size on WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Unit");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Unit, InDefinition) == 0x000000, "Member 'WBP_HUD_BuildingGrid_Slot_C_OnRefresh_Unit::InDefinition' has a wrong offset!");

// Function WBP_HUD_BuildingGrid_Slot.WBP_HUD_BuildingGrid_Slot_C.RefreshHoverEffectVisibility
// 0x0005 (0x0005 - 0x0000)
struct WBP_HUD_BuildingGrid_Slot_C_RefreshHoverEffectVisibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStateActive_ReturnValue;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_BuildingGrid_Slot_C_RefreshHoverEffectVisibility) == 0x000001, "Wrong alignment on WBP_HUD_BuildingGrid_Slot_C_RefreshHoverEffectVisibility");
static_assert(sizeof(WBP_HUD_BuildingGrid_Slot_C_RefreshHoverEffectVisibility) == 0x000005, "Wrong size on WBP_HUD_BuildingGrid_Slot_C_RefreshHoverEffectVisibility");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_RefreshHoverEffectVisibility, Temp_bool_Variable) == 0x000000, "Member 'WBP_HUD_BuildingGrid_Slot_C_RefreshHoverEffectVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_RefreshHoverEffectVisibility, Temp_byte_Variable) == 0x000001, "Member 'WBP_HUD_BuildingGrid_Slot_C_RefreshHoverEffectVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_RefreshHoverEffectVisibility, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_HUD_BuildingGrid_Slot_C_RefreshHoverEffectVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_RefreshHoverEffectVisibility, CallFunc_IsStateActive_ReturnValue) == 0x000003, "Member 'WBP_HUD_BuildingGrid_Slot_C_RefreshHoverEffectVisibility::CallFunc_IsStateActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_RefreshHoverEffectVisibility, K2Node_Select_Default) == 0x000004, "Member 'WBP_HUD_BuildingGrid_Slot_C_RefreshHoverEffectVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_HUD_BuildingGrid_Slot.WBP_HUD_BuildingGrid_Slot_C.RefreshIconVisibility
// 0x0028 (0x0028 - 0x0000)
struct WBP_HUD_BuildingGrid_Slot_C_RefreshIconVisibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EvaluateIconOpacity_Return_Value;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStateActive_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_BuildingGrid_Slot_C_RefreshIconVisibility) == 0x000008, "Wrong alignment on WBP_HUD_BuildingGrid_Slot_C_RefreshIconVisibility");
static_assert(sizeof(WBP_HUD_BuildingGrid_Slot_C_RefreshIconVisibility) == 0x000028, "Wrong size on WBP_HUD_BuildingGrid_Slot_C_RefreshIconVisibility");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_RefreshIconVisibility, Temp_bool_Variable) == 0x000000, "Member 'WBP_HUD_BuildingGrid_Slot_C_RefreshIconVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_RefreshIconVisibility, Temp_byte_Variable) == 0x000001, "Member 'WBP_HUD_BuildingGrid_Slot_C_RefreshIconVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_RefreshIconVisibility, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_HUD_BuildingGrid_Slot_C_RefreshIconVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_RefreshIconVisibility, CallFunc_EvaluateIconOpacity_Return_Value) == 0x000008, "Member 'WBP_HUD_BuildingGrid_Slot_C_RefreshIconVisibility::CallFunc_EvaluateIconOpacity_Return_Value' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_RefreshIconVisibility, CallFunc_IsStateActive_ReturnValue) == 0x000010, "Member 'WBP_HUD_BuildingGrid_Slot_C_RefreshIconVisibility::CallFunc_IsStateActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_RefreshIconVisibility, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000018, "Member 'WBP_HUD_BuildingGrid_Slot_C_RefreshIconVisibility::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_RefreshIconVisibility, K2Node_Select_Default) == 0x000020, "Member 'WBP_HUD_BuildingGrid_Slot_C_RefreshIconVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_RefreshIconVisibility, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000024, "Member 'WBP_HUD_BuildingGrid_Slot_C_RefreshIconVisibility::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function WBP_HUD_BuildingGrid_Slot.WBP_HUD_BuildingGrid_Slot_C.RefreshStateText
// 0x0048 (0x0048 - 0x0000)
struct WBP_HUD_BuildingGrid_Slot_C_RefreshStateText final
{
public:
	bool                                          bReady;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bQueued;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStructure_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0010)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0018(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0028(0x0010)()
	class FText                                   CallFunc_TextToUpper_ReturnValue_1;                // 0x0038(0x0010)()
};
static_assert(alignof(WBP_HUD_BuildingGrid_Slot_C_RefreshStateText) == 0x000008, "Wrong alignment on WBP_HUD_BuildingGrid_Slot_C_RefreshStateText");
static_assert(sizeof(WBP_HUD_BuildingGrid_Slot_C_RefreshStateText) == 0x000048, "Wrong size on WBP_HUD_BuildingGrid_Slot_C_RefreshStateText");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_RefreshStateText, bReady) == 0x000000, "Member 'WBP_HUD_BuildingGrid_Slot_C_RefreshStateText::bReady' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_RefreshStateText, bQueued) == 0x000001, "Member 'WBP_HUD_BuildingGrid_Slot_C_RefreshStateText::bQueued' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_RefreshStateText, CallFunc_IsStructure_ReturnValue) == 0x000002, "Member 'WBP_HUD_BuildingGrid_Slot_C_RefreshStateText::CallFunc_IsStructure_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_RefreshStateText, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'WBP_HUD_BuildingGrid_Slot_C_RefreshStateText::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_RefreshStateText, CallFunc_TextToUpper_ReturnValue) == 0x000018, "Member 'WBP_HUD_BuildingGrid_Slot_C_RefreshStateText::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_RefreshStateText, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000028, "Member 'WBP_HUD_BuildingGrid_Slot_C_RefreshStateText::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_RefreshStateText, CallFunc_TextToUpper_ReturnValue_1) == 0x000038, "Member 'WBP_HUD_BuildingGrid_Slot_C_RefreshStateText::CallFunc_TextToUpper_ReturnValue_1' has a wrong offset!");

// Function WBP_HUD_BuildingGrid_Slot.WBP_HUD_BuildingGrid_Slot_C.SetCount
// 0x0020 (0x0020 - 0x0000)
struct WBP_HUD_BuildingGrid_Slot_C_SetCount final
{
public:
	uint8                                         InCount;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ByteToText_ReturnValue;              // 0x0008(0x0010)()
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue;        // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_BuildingGrid_Slot_C_SetCount) == 0x000008, "Wrong alignment on WBP_HUD_BuildingGrid_Slot_C_SetCount");
static_assert(sizeof(WBP_HUD_BuildingGrid_Slot_C_SetCount) == 0x000020, "Wrong size on WBP_HUD_BuildingGrid_Slot_C_SetCount");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetCount, InCount) == 0x000000, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetCount::InCount' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetCount, Temp_byte_Variable) == 0x000001, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetCount::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetCount, CallFunc_Conv_ByteToText_ReturnValue) == 0x000008, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetCount::CallFunc_Conv_ByteToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetCount, Temp_byte_Variable_1) == 0x000018, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetCount::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetCount, Temp_bool_Variable) == 0x000019, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetCount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetCount, CallFunc_GreaterEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetCount::CallFunc_GreaterEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetCount, K2Node_Select_Default) == 0x00001B, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetCount::K2Node_Select_Default' has a wrong offset!");

// Function WBP_HUD_BuildingGrid_Slot.WBP_HUD_BuildingGrid_Slot_C.SetIcon
// 0x0010 (0x0010 - 0x0000)
struct WBP_HUD_BuildingGrid_Slot_C_SetIcon final
{
public:
	class UTexture2D*                             InIcon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_BuildingGrid_Slot_C_SetIcon) == 0x000008, "Wrong alignment on WBP_HUD_BuildingGrid_Slot_C_SetIcon");
static_assert(sizeof(WBP_HUD_BuildingGrid_Slot_C_SetIcon) == 0x000010, "Wrong size on WBP_HUD_BuildingGrid_Slot_C_SetIcon");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetIcon, InIcon) == 0x000000, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetIcon::InIcon' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetIcon, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetIcon::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WBP_HUD_BuildingGrid_Slot.WBP_HUD_BuildingGrid_Slot_C.SetPausedTextState
// 0x0001 (0x0001 - 0x0000)
struct WBP_HUD_BuildingGrid_Slot_C_SetPausedTextState final
{
public:
	bool                                          Condition;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_BuildingGrid_Slot_C_SetPausedTextState) == 0x000001, "Wrong alignment on WBP_HUD_BuildingGrid_Slot_C_SetPausedTextState");
static_assert(sizeof(WBP_HUD_BuildingGrid_Slot_C_SetPausedTextState) == 0x000001, "Wrong size on WBP_HUD_BuildingGrid_Slot_C_SetPausedTextState");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetPausedTextState, Condition) == 0x000000, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetPausedTextState::Condition' has a wrong offset!");

// Function WBP_HUD_BuildingGrid_Slot.WBP_HUD_BuildingGrid_Slot_C.SetProgress
// 0x0048 (0x0048 - 0x0000)
struct WBP_HUD_BuildingGrid_Slot_C_SetProgress final
{
public:
	bool                                          bPaused;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCompleted;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Value;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAnythingQueued;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRunning;                                          // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Local_ProgressVisibility;                          // 0x0012(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_BuildingGrid_Slot_C_SetProgress) == 0x000008, "Wrong alignment on WBP_HUD_BuildingGrid_Slot_C_SetProgress");
static_assert(sizeof(WBP_HUD_BuildingGrid_Slot_C_SetProgress) == 0x000048, "Wrong size on WBP_HUD_BuildingGrid_Slot_C_SetProgress");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetProgress, bPaused) == 0x000000, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetProgress::bPaused' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetProgress, bCompleted) == 0x000001, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetProgress::bCompleted' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetProgress, Value) == 0x000008, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetProgress::Value' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetProgress, bAnythingQueued) == 0x000010, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetProgress::bAnythingQueued' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetProgress, bRunning) == 0x000011, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetProgress::bRunning' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetProgress, Local_ProgressVisibility) == 0x000012, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetProgress::Local_ProgressVisibility' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetProgress, Temp_byte_Variable) == 0x000013, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetProgress::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetProgress, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetProgress::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetProgress, Temp_byte_Variable_1) == 0x000020, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetProgress::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetProgress, Temp_bool_Variable) == 0x000021, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetProgress::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetProgress, Temp_byte_Variable_2) == 0x000022, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetProgress::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetProgress, Temp_byte_Variable_3) == 0x000023, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetProgress::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetProgress, Temp_bool_Variable_1) == 0x000024, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetProgress::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetProgress, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000025, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetProgress::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetProgress, CallFunc_Not_PreBool_ReturnValue) == 0x000026, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetProgress::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetProgress, K2Node_Select_Default) == 0x000027, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetProgress::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetProgress, CallFunc_BooleanOR_ReturnValue) == 0x000028, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetProgress::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetProgress, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000030, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetProgress::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetProgress, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetProgress::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetProgress, CallFunc_BooleanOR_ReturnValue_1) == 0x000039, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetProgress::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetProgress, CallFunc_BooleanAND_ReturnValue) == 0x00003A, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetProgress::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetProgress, K2Node_Select_Default_1) == 0x00003B, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetProgress::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetProgress, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x00003C, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetProgress::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_SetProgress, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000040, "Member 'WBP_HUD_BuildingGrid_Slot_C_SetProgress::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function WBP_HUD_BuildingGrid_Slot.WBP_HUD_BuildingGrid_Slot_C.GetMaterialsSupportingStates
// 0x0020 (0x0020 - 0x0000)
struct WBP_HUD_BuildingGrid_Slot_C_GetMaterialsSupportingStates final
{
public:
	TArray<class UMaterialInstanceDynamic*>       OutMIDs;                                           // 0x0000(0x0010)(Parm, OutParm)
	TArray<class UMaterialInstanceDynamic*>       K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(WBP_HUD_BuildingGrid_Slot_C_GetMaterialsSupportingStates) == 0x000008, "Wrong alignment on WBP_HUD_BuildingGrid_Slot_C_GetMaterialsSupportingStates");
static_assert(sizeof(WBP_HUD_BuildingGrid_Slot_C_GetMaterialsSupportingStates) == 0x000020, "Wrong size on WBP_HUD_BuildingGrid_Slot_C_GetMaterialsSupportingStates");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_GetMaterialsSupportingStates, OutMIDs) == 0x000000, "Member 'WBP_HUD_BuildingGrid_Slot_C_GetMaterialsSupportingStates::OutMIDs' has a wrong offset!");
static_assert(offsetof(WBP_HUD_BuildingGrid_Slot_C_GetMaterialsSupportingStates, K2Node_MakeArray_Array) == 0x000010, "Member 'WBP_HUD_BuildingGrid_Slot_C_GetMaterialsSupportingStates::K2Node_MakeArray_Array' has a wrong offset!");

}

