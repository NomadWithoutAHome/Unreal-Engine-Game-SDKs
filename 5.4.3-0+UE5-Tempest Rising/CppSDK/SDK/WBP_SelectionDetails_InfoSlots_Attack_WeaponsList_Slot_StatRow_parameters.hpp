#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow.WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C.ColorTextAndChangeIcon
// 0x0001 (0x0001 - 0x0000)
struct WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ColorTextAndChangeIcon final
{
public:
	bool                                          IsBuff;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ColorTextAndChangeIcon) == 0x000001, "Wrong alignment on WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ColorTextAndChangeIcon");
static_assert(sizeof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ColorTextAndChangeIcon) == 0x000001, "Wrong size on WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ColorTextAndChangeIcon");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ColorTextAndChangeIcon, IsBuff) == 0x000000, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ColorTextAndChangeIcon::IsBuff' has a wrong offset!");

// Function WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow.WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C.DisplayModifierIconAndImage
// 0x0001 (0x0001 - 0x0000)
struct WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_DisplayModifierIconAndImage final
{
public:
	bool                                          ShouldDisplay;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_DisplayModifierIconAndImage) == 0x000001, "Wrong alignment on WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_DisplayModifierIconAndImage");
static_assert(sizeof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_DisplayModifierIconAndImage) == 0x000001, "Wrong size on WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_DisplayModifierIconAndImage");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_DisplayModifierIconAndImage, ShouldDisplay) == 0x000000, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_DisplayModifierIconAndImage::ShouldDisplay' has a wrong offset!");

// Function WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow.WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C.FormatModifierToText
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText final
{
public:
	double                                        Modifer;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBuff;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Reversed;                                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxFractionDigits;                                 // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CompletedText;                                     // 0x0010(0x0010)(Parm, OutParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0028(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00A0(0x0010)()
};
static_assert(alignof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText) == 0x000008, "Wrong alignment on WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText");
static_assert(sizeof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText) == 0x0000B0, "Wrong size on WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText, Modifer) == 0x000000, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText::Modifer' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText, IsBuff) == 0x000008, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText::IsBuff' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText, Reversed) == 0x000009, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText::Reversed' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText, MaxFractionDigits) == 0x00000C, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText::MaxFractionDigits' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText, CompletedText) == 0x000010, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText::CompletedText' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000028, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText, CallFunc_Conv_TextToString_ReturnValue) == 0x000038, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000050, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText, CallFunc_SelectString_ReturnValue) == 0x000060, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000080, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000090, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText, CallFunc_Conv_StringToText_ReturnValue) == 0x0000A0, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_FormatModifierToText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow.WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C.SetLabelAndValue
// 0x0048 (0x0048 - 0x0000)
struct WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_SetLabelAndValue final
{
public:
	class FText                                   Label;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Value;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	double                                        Modifier;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Reversed;                                          // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxFractionDigits;                                 // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldDisplayModifierAndIsBuff_ShouldDisplay; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldDisplayModifierAndIsBuff_IsBuff;    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FormatModifierToText_CompletedText;       // 0x0038(0x0010)()
};
static_assert(alignof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_SetLabelAndValue) == 0x000008, "Wrong alignment on WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_SetLabelAndValue");
static_assert(sizeof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_SetLabelAndValue) == 0x000048, "Wrong size on WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_SetLabelAndValue");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_SetLabelAndValue, Label) == 0x000000, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_SetLabelAndValue::Label' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_SetLabelAndValue, Value) == 0x000010, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_SetLabelAndValue::Value' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_SetLabelAndValue, Modifier) == 0x000020, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_SetLabelAndValue::Modifier' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_SetLabelAndValue, Reversed) == 0x000028, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_SetLabelAndValue::Reversed' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_SetLabelAndValue, MaxFractionDigits) == 0x00002C, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_SetLabelAndValue::MaxFractionDigits' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_SetLabelAndValue, CallFunc_ShouldDisplayModifierAndIsBuff_ShouldDisplay) == 0x000030, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_SetLabelAndValue::CallFunc_ShouldDisplayModifierAndIsBuff_ShouldDisplay' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_SetLabelAndValue, CallFunc_ShouldDisplayModifierAndIsBuff_IsBuff) == 0x000031, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_SetLabelAndValue::CallFunc_ShouldDisplayModifierAndIsBuff_IsBuff' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_SetLabelAndValue, CallFunc_FormatModifierToText_CompletedText) == 0x000038, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_SetLabelAndValue::CallFunc_FormatModifierToText_CompletedText' has a wrong offset!");

// Function WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow.WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C.ShouldDisplayModifierAndIsBuff
// 0x0018 (0x0018 - 0x0000)
struct WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ShouldDisplayModifierAndIsBuff final
{
public:
	double                                        Modifier;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Reversed;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldDisplay;                                     // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBuff;                                            // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanNAND_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ShouldDisplayModifierAndIsBuff) == 0x000008, "Wrong alignment on WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ShouldDisplayModifierAndIsBuff");
static_assert(sizeof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ShouldDisplayModifierAndIsBuff) == 0x000018, "Wrong size on WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ShouldDisplayModifierAndIsBuff");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ShouldDisplayModifierAndIsBuff, Modifier) == 0x000000, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ShouldDisplayModifierAndIsBuff::Modifier' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ShouldDisplayModifierAndIsBuff, Reversed) == 0x000008, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ShouldDisplayModifierAndIsBuff::Reversed' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ShouldDisplayModifierAndIsBuff, ShouldDisplay) == 0x000009, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ShouldDisplayModifierAndIsBuff::ShouldDisplay' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ShouldDisplayModifierAndIsBuff, IsBuff) == 0x00000A, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ShouldDisplayModifierAndIsBuff::IsBuff' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ShouldDisplayModifierAndIsBuff, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x00000B, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ShouldDisplayModifierAndIsBuff::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ShouldDisplayModifierAndIsBuff, CallFunc_Less_DoubleDouble_ReturnValue) == 0x00000C, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ShouldDisplayModifierAndIsBuff::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ShouldDisplayModifierAndIsBuff, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00000D, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ShouldDisplayModifierAndIsBuff::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ShouldDisplayModifierAndIsBuff, CallFunc_Not_PreBool_ReturnValue) == 0x00000E, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ShouldDisplayModifierAndIsBuff::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ShouldDisplayModifierAndIsBuff, CallFunc_BooleanAND_ReturnValue) == 0x00000F, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ShouldDisplayModifierAndIsBuff::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ShouldDisplayModifierAndIsBuff, CallFunc_BooleanNAND_ReturnValue) == 0x000010, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C_ShouldDisplayModifierAndIsBuff::CallFunc_BooleanNAND_ReturnValue' has a wrong offset!");

}

