#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_DistributionMode

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "AIModule_structs.hpp"
#include "Tempest_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_DistributionMode.GA_DistributionMode_C.ExecuteUbergraph_GA_DistributionMode
// 0x0038 (0x0038 - 0x0000)
struct GA_DistributionMode_C_ExecuteUbergraph_GA_DistributionMode final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ATedPawn*                               CallFunc_GetTedPawnFromActorInfo_ReturnValue;      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MeetsPowerRequirements_RequirementsMet;   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_DistributionMode_C_ExecuteUbergraph_GA_DistributionMode) == 0x000008, "Wrong alignment on GA_DistributionMode_C_ExecuteUbergraph_GA_DistributionMode");
static_assert(sizeof(GA_DistributionMode_C_ExecuteUbergraph_GA_DistributionMode) == 0x000038, "Wrong size on GA_DistributionMode_C_ExecuteUbergraph_GA_DistributionMode");
static_assert(offsetof(GA_DistributionMode_C_ExecuteUbergraph_GA_DistributionMode, EntryPoint) == 0x000000, "Member 'GA_DistributionMode_C_ExecuteUbergraph_GA_DistributionMode::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_ExecuteUbergraph_GA_DistributionMode, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GA_DistributionMode_C_ExecuteUbergraph_GA_DistributionMode::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_ExecuteUbergraph_GA_DistributionMode, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'GA_DistributionMode_C_ExecuteUbergraph_GA_DistributionMode::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_ExecuteUbergraph_GA_DistributionMode, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000020, "Member 'GA_DistributionMode_C_ExecuteUbergraph_GA_DistributionMode::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_ExecuteUbergraph_GA_DistributionMode, CallFunc_GetTedPawnFromActorInfo_ReturnValue) == 0x000028, "Member 'GA_DistributionMode_C_ExecuteUbergraph_GA_DistributionMode::CallFunc_GetTedPawnFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_ExecuteUbergraph_GA_DistributionMode, K2Node_Event_bWasCancelled) == 0x000030, "Member 'GA_DistributionMode_C_ExecuteUbergraph_GA_DistributionMode::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_ExecuteUbergraph_GA_DistributionMode, CallFunc_MeetsPowerRequirements_RequirementsMet) == 0x000031, "Member 'GA_DistributionMode_C_ExecuteUbergraph_GA_DistributionMode::CallFunc_MeetsPowerRequirements_RequirementsMet' has a wrong offset!");

// Function GA_DistributionMode.GA_DistributionMode_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_DistributionMode_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_DistributionMode_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_DistributionMode_C_K2_OnEndAbility");
static_assert(sizeof(GA_DistributionMode_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_DistributionMode_C_K2_OnEndAbility");
static_assert(offsetof(GA_DistributionMode_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_DistributionMode_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_DistributionMode.GA_DistributionMode_C.GetPawnsInRange
// 0x0230 (0x0230 - 0x0000)
struct GA_DistributionMode_C_GetPawnsInRange final
{
public:
	const class AActor*                           AvatarActor;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Range;                                             // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTedUtilsPawnFilter                    Filter;                                            // 0x0010(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class ATedPawn*>                       OutPawns;                                          // 0x00E0(0x0010)(Parm, OutParm)
	struct FVector                                Location;                                          // 0x00F0(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_DistributionMode;                               // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ATedPawn*                               K2Node_DynamicCast_AsTed_Pawn;                     // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x0120(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGenericTeamId                         CallFunc_GetTeamID_ReturnValue;                    // 0x0138(0x0001)(NoDestructor, HasGetValueTypeHash)
	struct FTedAttitudeFilter                     K2Node_MakeStruct_TedAttitudeFilter;               // 0x0139(0x0002)(NoDestructor)
	uint8                                         Pad_13B[0x5];                                      // 0x013B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ATedPawn*>                       K2Node_MakeArray_Array;                            // 0x0140(0x0010)(ReferenceParm)
	struct FTedUtilsPawnFilter                    K2Node_MakeStruct_TedUtilsPawnFilter;              // 0x0150(0x00D0)()
	TArray<class ATedPawn*>                       CallFunc_GetPawnsInRange_OutPawns;                 // 0x0220(0x0010)(ReferenceParm)
};
static_assert(alignof(GA_DistributionMode_C_GetPawnsInRange) == 0x000008, "Wrong alignment on GA_DistributionMode_C_GetPawnsInRange");
static_assert(sizeof(GA_DistributionMode_C_GetPawnsInRange) == 0x000230, "Wrong size on GA_DistributionMode_C_GetPawnsInRange");
static_assert(offsetof(GA_DistributionMode_C_GetPawnsInRange, AvatarActor) == 0x000000, "Member 'GA_DistributionMode_C_GetPawnsInRange::AvatarActor' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_GetPawnsInRange, Range) == 0x000008, "Member 'GA_DistributionMode_C_GetPawnsInRange::Range' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_GetPawnsInRange, Filter) == 0x000010, "Member 'GA_DistributionMode_C_GetPawnsInRange::Filter' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_GetPawnsInRange, OutPawns) == 0x0000E0, "Member 'GA_DistributionMode_C_GetPawnsInRange::OutPawns' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_GetPawnsInRange, Location) == 0x0000F0, "Member 'GA_DistributionMode_C_GetPawnsInRange::Location' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_GetPawnsInRange, GE_DistributionMode) == 0x000108, "Member 'GA_DistributionMode_C_GetPawnsInRange::GE_DistributionMode' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_GetPawnsInRange, K2Node_DynamicCast_AsTed_Pawn) == 0x000110, "Member 'GA_DistributionMode_C_GetPawnsInRange::K2Node_DynamicCast_AsTed_Pawn' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_GetPawnsInRange, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'GA_DistributionMode_C_GetPawnsInRange::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_GetPawnsInRange, Temp_struct_Variable) == 0x000120, "Member 'GA_DistributionMode_C_GetPawnsInRange::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_GetPawnsInRange, CallFunc_GetTeamID_ReturnValue) == 0x000138, "Member 'GA_DistributionMode_C_GetPawnsInRange::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_GetPawnsInRange, K2Node_MakeStruct_TedAttitudeFilter) == 0x000139, "Member 'GA_DistributionMode_C_GetPawnsInRange::K2Node_MakeStruct_TedAttitudeFilter' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_GetPawnsInRange, K2Node_MakeArray_Array) == 0x000140, "Member 'GA_DistributionMode_C_GetPawnsInRange::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_GetPawnsInRange, K2Node_MakeStruct_TedUtilsPawnFilter) == 0x000150, "Member 'GA_DistributionMode_C_GetPawnsInRange::K2Node_MakeStruct_TedUtilsPawnFilter' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_GetPawnsInRange, CallFunc_GetPawnsInRange_OutPawns) == 0x000220, "Member 'GA_DistributionMode_C_GetPawnsInRange::CallFunc_GetPawnsInRange_OutPawns' has a wrong offset!");

// Function GA_DistributionMode.GA_DistributionMode_C.K2_CanActivateAbility
// 0x0098 (0x0098 - 0x0000)
struct GA_DistributionMode_C_K2_CanActivateAbility final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FGameplayAbilitySpecHandle             Handle;                                            // 0x0048(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  RelevantTags;                                      // 0x0050(0x0020)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATedPawn*                               K2Node_DynamicCast_AsTed_Pawn;                     // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetCurrentMontage_ReturnValue;            // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MeetsPowerRequirements_RequirementsMet;   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_DistributionMode_C_K2_CanActivateAbility) == 0x000008, "Wrong alignment on GA_DistributionMode_C_K2_CanActivateAbility");
static_assert(sizeof(GA_DistributionMode_C_K2_CanActivateAbility) == 0x000098, "Wrong size on GA_DistributionMode_C_K2_CanActivateAbility");
static_assert(offsetof(GA_DistributionMode_C_K2_CanActivateAbility, ActorInfo) == 0x000000, "Member 'GA_DistributionMode_C_K2_CanActivateAbility::ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_K2_CanActivateAbility, Handle) == 0x000048, "Member 'GA_DistributionMode_C_K2_CanActivateAbility::Handle' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_K2_CanActivateAbility, RelevantTags) == 0x000050, "Member 'GA_DistributionMode_C_K2_CanActivateAbility::RelevantTags' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_K2_CanActivateAbility, ReturnValue) == 0x000070, "Member 'GA_DistributionMode_C_K2_CanActivateAbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_K2_CanActivateAbility, K2Node_DynamicCast_AsTed_Pawn) == 0x000078, "Member 'GA_DistributionMode_C_K2_CanActivateAbility::K2Node_DynamicCast_AsTed_Pawn' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_K2_CanActivateAbility, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'GA_DistributionMode_C_K2_CanActivateAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_K2_CanActivateAbility, CallFunc_GetCurrentMontage_ReturnValue) == 0x000088, "Member 'GA_DistributionMode_C_K2_CanActivateAbility::CallFunc_GetCurrentMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_K2_CanActivateAbility, CallFunc_MeetsPowerRequirements_RequirementsMet) == 0x000090, "Member 'GA_DistributionMode_C_K2_CanActivateAbility::CallFunc_MeetsPowerRequirements_RequirementsMet' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_K2_CanActivateAbility, CallFunc_IsValid_ReturnValue) == 0x000091, "Member 'GA_DistributionMode_C_K2_CanActivateAbility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_K2_CanActivateAbility, CallFunc_Not_PreBool_ReturnValue) == 0x000092, "Member 'GA_DistributionMode_C_K2_CanActivateAbility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_K2_CanActivateAbility, CallFunc_BooleanAND_ReturnValue) == 0x000093, "Member 'GA_DistributionMode_C_K2_CanActivateAbility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GA_DistributionMode.GA_DistributionMode_C.MeetsPowerRequirements
// 0x0090 (0x0090 - 0x0000)
struct GA_DistributionMode_C_MeetsPowerRequirements final
{
public:
	class ATedPawn*                               Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          RequirementsMet;                                   // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTedPlayerData*                         CallFunc_GetOwningPlayerData_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ETedPlayerID                                  CallFunc_GetOwningPlayerID_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPowerConsumption_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsUpgradeActive_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPower_ReturnValue;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTedPlayerData*                         CallFunc_GetOwningPlayerData_ReturnValue_1;        // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPowerBase_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInLowPowerMode_ReturnValue;             // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_DistributionMode_C_MeetsPowerRequirements) == 0x000008, "Wrong alignment on GA_DistributionMode_C_MeetsPowerRequirements");
static_assert(sizeof(GA_DistributionMode_C_MeetsPowerRequirements) == 0x000090, "Wrong size on GA_DistributionMode_C_MeetsPowerRequirements");
static_assert(offsetof(GA_DistributionMode_C_MeetsPowerRequirements, Pawn) == 0x000000, "Member 'GA_DistributionMode_C_MeetsPowerRequirements::Pawn' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_MeetsPowerRequirements, RequirementsMet) == 0x000008, "Member 'GA_DistributionMode_C_MeetsPowerRequirements::RequirementsMet' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_MeetsPowerRequirements, CallFunc_GetOwningPlayerData_ReturnValue) == 0x000010, "Member 'GA_DistributionMode_C_MeetsPowerRequirements::CallFunc_GetOwningPlayerData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_MeetsPowerRequirements, CallFunc_GetOwningPlayerID_ReturnValue) == 0x000018, "Member 'GA_DistributionMode_C_MeetsPowerRequirements::CallFunc_GetOwningPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_MeetsPowerRequirements, CallFunc_GetPowerConsumption_ReturnValue) == 0x00001C, "Member 'GA_DistributionMode_C_MeetsPowerRequirements::CallFunc_GetPowerConsumption_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_MeetsPowerRequirements, CallFunc_K2_IsUpgradeActive_ReturnValue) == 0x000020, "Member 'GA_DistributionMode_C_MeetsPowerRequirements::CallFunc_K2_IsUpgradeActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_MeetsPowerRequirements, CallFunc_GetPower_ReturnValue) == 0x000024, "Member 'GA_DistributionMode_C_MeetsPowerRequirements::CallFunc_GetPower_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_MeetsPowerRequirements, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'GA_DistributionMode_C_MeetsPowerRequirements::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_MeetsPowerRequirements, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'GA_DistributionMode_C_MeetsPowerRequirements::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_MeetsPowerRequirements, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000038, "Member 'GA_DistributionMode_C_MeetsPowerRequirements::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_MeetsPowerRequirements, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000048, "Member 'GA_DistributionMode_C_MeetsPowerRequirements::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_MeetsPowerRequirements, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000050, "Member 'GA_DistributionMode_C_MeetsPowerRequirements::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_MeetsPowerRequirements, CallFunc_GetOwningPlayerData_ReturnValue_1) == 0x000058, "Member 'GA_DistributionMode_C_MeetsPowerRequirements::CallFunc_GetOwningPlayerData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_MeetsPowerRequirements, CallFunc_GetPowerBase_ReturnValue) == 0x000060, "Member 'GA_DistributionMode_C_MeetsPowerRequirements::CallFunc_GetPowerBase_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_MeetsPowerRequirements, CallFunc_IsInLowPowerMode_ReturnValue) == 0x000064, "Member 'GA_DistributionMode_C_MeetsPowerRequirements::CallFunc_IsInLowPowerMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_MeetsPowerRequirements, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000068, "Member 'GA_DistributionMode_C_MeetsPowerRequirements::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_MeetsPowerRequirements, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000070, "Member 'GA_DistributionMode_C_MeetsPowerRequirements::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_MeetsPowerRequirements, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000078, "Member 'GA_DistributionMode_C_MeetsPowerRequirements::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_MeetsPowerRequirements, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000080, "Member 'GA_DistributionMode_C_MeetsPowerRequirements::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_DistributionMode_C_MeetsPowerRequirements, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000088, "Member 'GA_DistributionMode_C_MeetsPowerRequirements::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");

}

