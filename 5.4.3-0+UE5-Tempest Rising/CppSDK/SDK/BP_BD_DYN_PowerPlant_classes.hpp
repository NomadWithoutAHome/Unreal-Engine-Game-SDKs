#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BD_DYN_PowerPlant

#include "Basic.hpp"

#include "PhysicsCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Tempest_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BD_DYN_PowerPlant.BP_BD_DYN_PowerPlant_C
// 0x0110 (0x1B10 - 0x1A00)
class ABP_BD_DYN_PowerPlant_C final : public ATedStructureBase
{
public:
	uint8                                         Pad_19F8[0x8];                                     // 0x19F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1A00(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      PS_DustStructurePlacement_01_ParamSize;            // 0x1A08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      PS_DustDYNDrillPlacement_01;                       // 0x1A10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_BuildingAmbience_C*                 BP_BuildingAmbience;                               // 0x1A18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        FireSFX;                                           // 0x1A20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_PowerBeam;                                      // 0x1A28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      PS_LightningDYNPowerplantOptimized_01;             // 0x1A30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight_1;                                      // 0x1A38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Fire3;                                          // 0x1A40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Fire2;                                          // 0x1A48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Fire1;                                          // 0x1A50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          HitBox6;                                           // 0x1A58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          HitBox2;                                           // 0x1A60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          HitBox3;                                           // 0x1A68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          HitBox7;                                           // 0x1A70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         TL_DeactivateAndDestroy_Dissolve_574D55B44C65C6CABE561080232E2CEC; // 0x1A78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_DeactivateAndDestroy__Direction_574D55B44C65C6CABE561080232E2CEC; // 0x1A7C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A7D[0x3];                                     // 0x1A7D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_DeactivateAndDestroy;                           // 0x1A80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TL_Explosion_Dissolve_7F483F9F4D10B0956318E09DD6BFE14D; // 0x1A88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TL_Explosion_Explosion_7F483F9F4D10B0956318E09DD6BFE14D; // 0x1A8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_Explosion__Direction_7F483F9F4D10B0956318E09DD6BFE14D; // 0x1A90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A91[0x7];                                     // 0x1A91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_Explosion;                                      // 0x1A98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TL_OnDeath_NewTrack_1_1DAAF88A4A98AC7D7BA81AA0E4172D34; // 0x1AA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_OnDeath__Direction_1DAAF88A4A98AC7D7BA81AA0E4172D34; // 0x1AA4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AA5[0x3];                                     // 0x1AA5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_OnDeath;                                        // 0x1AA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CachedActorLocation;                               // 0x1AB0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Explosion_Strength;                                // 0x1AC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Explosion_Radius;                                  // 0x1AD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Explosion_Falloff_Exp;                             // 0x1AD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Explosion_Slot_Array;                              // 0x1AE0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 Explosion_Slot_Current;                            // 0x1AF0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          Explosion_Slot_Found;                              // 0x1B00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B01[0x3];                                     // 0x1B01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CachedSurfaceType;                                 // 0x1B04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimMontageLength;                                 // 0x1B08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Destructible(TArray<class UStaticMesh*>& DestMeshes, TArray<struct FVector>& DestMeshes_Locations, TArray<struct FRotator>& DestMeshes_Rotators, const struct FVector& MeshScale, TArray<class UFXSystemAsset*>& DestMeshes_exploFX, TArray<double>& DestMeshes_exploFX_Scale, TArray<class UFXSystemAsset*>& DestMeshes_attachedFX, TArray<double>& DestMeshes_attachedFX_Scale, TArray<struct FVector>& DestMeshes_LinearImpulse, TArray<struct FVector>& DestMeshes_AngularImpulse, TArray<class AStaticMeshActor*>* SpawnedMeshesArray, TArray<class UFXSystemComponent*>* SpawnedAttachedFXArray);
	void Destructible_PP_Custom_Setup(class USkeletalMeshComponent* Skeletal_Mesh, TArray<class UStaticMesh*>* DestMeshes, TArray<struct FVector>* DestMeshes_Locations, TArray<struct FRotator>* DestMeshes_Rotators, struct FVector* MeshScale, TArray<class UFXSystemAsset*>* DestMeshes_FX, TArray<double>* DestMeshes_FX_Scale, TArray<class UFXSystemAsset*>* DestMeshes_FXattached, TArray<double>* DestMeshes_FXattached_Scale, TArray<struct FVector>* DestMeshes_LinearImpulse, TArray<struct FVector>* DestMeshes_AngularImpulse);
	void ExecuteUbergraph_BP_BD_DYN_PowerPlant(int32 EntryPoint);
	void Found_Free_Explosion_Slot();
	void GetIdleEffectComponents(TArray<class USceneComponent*>* Components);
	void K2_OnEndSellingStructure();
	void ReceiveBeginPlay();
	void ReceiveOnDeath();
	void ReceiveUpdateHealthEffects(float HealthPct);
	void TL_DeactivateAndDestroy__Deactivate_FX__EventFunc();
	void TL_DeactivateAndDestroy__FinishedFunc();
	void TL_DeactivateAndDestroy__UpdateFunc();
	void TL_Explosion__FinishedFunc();
	void TL_Explosion__UpdateFunc();
	void TL_OnDeath__Explosion__EventFunc();
	void TL_OnDeath__ExplosionAudio__EventFunc();
	void TL_OnDeath__FinishedFunc();
	void TL_OnDeath__SpawnChunks__EventFunc();
	void TL_OnDeath__SpawnDecal__EventFunc();
	void TL_OnDeath__UpdateFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BD_DYN_PowerPlant_C">();
	}
	static class ABP_BD_DYN_PowerPlant_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BD_DYN_PowerPlant_C>();
	}
};
static_assert(alignof(ABP_BD_DYN_PowerPlant_C) == 0x000010, "Wrong alignment on ABP_BD_DYN_PowerPlant_C");
static_assert(sizeof(ABP_BD_DYN_PowerPlant_C) == 0x001B10, "Wrong size on ABP_BD_DYN_PowerPlant_C");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, UberGraphFrame) == 0x001A00, "Member 'ABP_BD_DYN_PowerPlant_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, PS_DustStructurePlacement_01_ParamSize) == 0x001A08, "Member 'ABP_BD_DYN_PowerPlant_C::PS_DustStructurePlacement_01_ParamSize' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, PS_DustDYNDrillPlacement_01) == 0x001A10, "Member 'ABP_BD_DYN_PowerPlant_C::PS_DustDYNDrillPlacement_01' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, BP_BuildingAmbience) == 0x001A18, "Member 'ABP_BD_DYN_PowerPlant_C::BP_BuildingAmbience' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, FireSFX) == 0x001A20, "Member 'ABP_BD_DYN_PowerPlant_C::FireSFX' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, NS_PowerBeam) == 0x001A28, "Member 'ABP_BD_DYN_PowerPlant_C::NS_PowerBeam' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, PS_LightningDYNPowerplantOptimized_01) == 0x001A30, "Member 'ABP_BD_DYN_PowerPlant_C::PS_LightningDYNPowerplantOptimized_01' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, PointLight_1) == 0x001A38, "Member 'ABP_BD_DYN_PowerPlant_C::PointLight_1' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, NS_Fire3) == 0x001A40, "Member 'ABP_BD_DYN_PowerPlant_C::NS_Fire3' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, NS_Fire2) == 0x001A48, "Member 'ABP_BD_DYN_PowerPlant_C::NS_Fire2' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, NS_Fire1) == 0x001A50, "Member 'ABP_BD_DYN_PowerPlant_C::NS_Fire1' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, HitBox6) == 0x001A58, "Member 'ABP_BD_DYN_PowerPlant_C::HitBox6' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, HitBox2) == 0x001A60, "Member 'ABP_BD_DYN_PowerPlant_C::HitBox2' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, HitBox3) == 0x001A68, "Member 'ABP_BD_DYN_PowerPlant_C::HitBox3' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, HitBox7) == 0x001A70, "Member 'ABP_BD_DYN_PowerPlant_C::HitBox7' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, TL_DeactivateAndDestroy_Dissolve_574D55B44C65C6CABE561080232E2CEC) == 0x001A78, "Member 'ABP_BD_DYN_PowerPlant_C::TL_DeactivateAndDestroy_Dissolve_574D55B44C65C6CABE561080232E2CEC' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, TL_DeactivateAndDestroy__Direction_574D55B44C65C6CABE561080232E2CEC) == 0x001A7C, "Member 'ABP_BD_DYN_PowerPlant_C::TL_DeactivateAndDestroy__Direction_574D55B44C65C6CABE561080232E2CEC' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, TL_DeactivateAndDestroy) == 0x001A80, "Member 'ABP_BD_DYN_PowerPlant_C::TL_DeactivateAndDestroy' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, TL_Explosion_Dissolve_7F483F9F4D10B0956318E09DD6BFE14D) == 0x001A88, "Member 'ABP_BD_DYN_PowerPlant_C::TL_Explosion_Dissolve_7F483F9F4D10B0956318E09DD6BFE14D' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, TL_Explosion_Explosion_7F483F9F4D10B0956318E09DD6BFE14D) == 0x001A8C, "Member 'ABP_BD_DYN_PowerPlant_C::TL_Explosion_Explosion_7F483F9F4D10B0956318E09DD6BFE14D' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, TL_Explosion__Direction_7F483F9F4D10B0956318E09DD6BFE14D) == 0x001A90, "Member 'ABP_BD_DYN_PowerPlant_C::TL_Explosion__Direction_7F483F9F4D10B0956318E09DD6BFE14D' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, TL_Explosion) == 0x001A98, "Member 'ABP_BD_DYN_PowerPlant_C::TL_Explosion' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, TL_OnDeath_NewTrack_1_1DAAF88A4A98AC7D7BA81AA0E4172D34) == 0x001AA0, "Member 'ABP_BD_DYN_PowerPlant_C::TL_OnDeath_NewTrack_1_1DAAF88A4A98AC7D7BA81AA0E4172D34' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, TL_OnDeath__Direction_1DAAF88A4A98AC7D7BA81AA0E4172D34) == 0x001AA4, "Member 'ABP_BD_DYN_PowerPlant_C::TL_OnDeath__Direction_1DAAF88A4A98AC7D7BA81AA0E4172D34' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, TL_OnDeath) == 0x001AA8, "Member 'ABP_BD_DYN_PowerPlant_C::TL_OnDeath' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, CachedActorLocation) == 0x001AB0, "Member 'ABP_BD_DYN_PowerPlant_C::CachedActorLocation' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, Explosion_Strength) == 0x001AC8, "Member 'ABP_BD_DYN_PowerPlant_C::Explosion_Strength' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, Explosion_Radius) == 0x001AD0, "Member 'ABP_BD_DYN_PowerPlant_C::Explosion_Radius' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, Explosion_Falloff_Exp) == 0x001AD8, "Member 'ABP_BD_DYN_PowerPlant_C::Explosion_Falloff_Exp' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, Explosion_Slot_Array) == 0x001AE0, "Member 'ABP_BD_DYN_PowerPlant_C::Explosion_Slot_Array' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, Explosion_Slot_Current) == 0x001AF0, "Member 'ABP_BD_DYN_PowerPlant_C::Explosion_Slot_Current' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, Explosion_Slot_Found) == 0x001B00, "Member 'ABP_BD_DYN_PowerPlant_C::Explosion_Slot_Found' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, CachedSurfaceType) == 0x001B04, "Member 'ABP_BD_DYN_PowerPlant_C::CachedSurfaceType' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C, AnimMontageLength) == 0x001B08, "Member 'ABP_BD_DYN_PowerPlant_C::AnimMontageLength' has a wrong offset!");

}

