#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TedUpgradeLogic_PlanPowerAdjustement

#include "Basic.hpp"

#include "Tempest_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass TedUpgradeLogic_PlanPowerAdjustement.TedUpgradeLogic_PlanPowerAdjustement_C
// 0x0020 (0x0050 - 0x0030)
class UTedUpgradeLogic_PlanPowerAdjustement_C : public UTedCustomUpgradeLogic
{
public:
	int32                                         BasePowerCost;                                     // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PowerCostIncrease;                                 // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           LogisticsPlanTag;                                  // 0x0038(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           MartialPlanTag;                                    // 0x0040(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SecurityPlanTag;                                   // 0x0048(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void K2_ApplyUpgrade(const struct FTedActiveUpgrade& InActiveUpgrade) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TedUpgradeLogic_PlanPowerAdjustement_C">();
	}
	static class UTedUpgradeLogic_PlanPowerAdjustement_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTedUpgradeLogic_PlanPowerAdjustement_C>();
	}
};
static_assert(alignof(UTedUpgradeLogic_PlanPowerAdjustement_C) == 0x000008, "Wrong alignment on UTedUpgradeLogic_PlanPowerAdjustement_C");
static_assert(sizeof(UTedUpgradeLogic_PlanPowerAdjustement_C) == 0x000050, "Wrong size on UTedUpgradeLogic_PlanPowerAdjustement_C");
static_assert(offsetof(UTedUpgradeLogic_PlanPowerAdjustement_C, BasePowerCost) == 0x000030, "Member 'UTedUpgradeLogic_PlanPowerAdjustement_C::BasePowerCost' has a wrong offset!");
static_assert(offsetof(UTedUpgradeLogic_PlanPowerAdjustement_C, PowerCostIncrease) == 0x000034, "Member 'UTedUpgradeLogic_PlanPowerAdjustement_C::PowerCostIncrease' has a wrong offset!");
static_assert(offsetof(UTedUpgradeLogic_PlanPowerAdjustement_C, LogisticsPlanTag) == 0x000038, "Member 'UTedUpgradeLogic_PlanPowerAdjustement_C::LogisticsPlanTag' has a wrong offset!");
static_assert(offsetof(UTedUpgradeLogic_PlanPowerAdjustement_C, MartialPlanTag) == 0x000040, "Member 'UTedUpgradeLogic_PlanPowerAdjustement_C::MartialPlanTag' has a wrong offset!");
static_assert(offsetof(UTedUpgradeLogic_PlanPowerAdjustement_C, SecurityPlanTag) == 0x000048, "Member 'UTedUpgradeLogic_PlanPowerAdjustement_C::SecurityPlanTag' has a wrong offset!");

}

