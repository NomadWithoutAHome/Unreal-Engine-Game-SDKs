#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot.WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C.ExecuteUbergraph_WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot
// 0x0004 (0x0004 - 0x0000)
struct WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_ExecuteUbergraph_WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_ExecuteUbergraph_WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot) == 0x000004, "Wrong alignment on WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_ExecuteUbergraph_WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot");
static_assert(sizeof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_ExecuteUbergraph_WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot) == 0x000004, "Wrong size on WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_ExecuteUbergraph_WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_ExecuteUbergraph_WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot, EntryPoint) == 0x000000, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_ExecuteUbergraph_WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot::EntryPoint' has a wrong offset!");

// Function WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot.WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C.Refresh Parameters
// 0x0170 (0x0170 - 0x0000)
struct WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters final
{
public:
	float                                         CallFunc_GetAttackRange_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTargetDomainsText_ReturnValue;         // 0x0008(0x0010)()
	float                                         CallFunc_GetAttackRange_ReturnValue_1;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0020(0x0010)()
	float                                         CallFunc_GetRechargeTime_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0038(0x0010)()
	bool                                          CallFunc_GetRechargesAutomatically_ReturnValue;    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAmmoCount_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0050(0x0010)()
	float                                         CallFunc_GetDamage_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttackSpeed_ReturnValue;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetUsesAmmo_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRechargeTime_ReturnValue_1;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDamage_ReturnValue_1;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTargetDomainsText_ReturnValue_1;       // 0x0088(0x0010)()
	class FText                                   CallFunc_GetDamageType_ReturnValue;                // 0x0098(0x0010)(ConstParm)
	float                                         CallFunc_GetAttackSpeed_ReturnValue_1;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttackRange_ReturnValue_2;             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_2;          // 0x00C0(0x0010)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_3;          // 0x00D0(0x0010)()
	float                                         CallFunc_GetDamage_ReturnValue_2;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_4;          // 0x00E8(0x0010)()
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast;     // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast_1;   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1;   // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_2;   // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_3;   // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast_2;   // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast_3;   // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_2;   // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast_4;   // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_3;   // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters) == 0x000008, "Wrong alignment on WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters");
static_assert(sizeof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters) == 0x000170, "Wrong size on WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_GetAttackRange_ReturnValue) == 0x000000, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_GetAttackRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_GetTargetDomainsText_ReturnValue) == 0x000008, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_GetTargetDomainsText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_GetAttackRange_ReturnValue_1) == 0x000018, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_GetAttackRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000020, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_GetRechargeTime_ReturnValue) == 0x000030, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_GetRechargeTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000038, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_GetRechargesAutomatically_ReturnValue) == 0x000048, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_GetRechargesAutomatically_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_GetAmmoCount_ReturnValue) == 0x00004C, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_GetAmmoCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_Conv_IntToText_ReturnValue) == 0x000050, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_GetDamage_ReturnValue) == 0x000060, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_GetDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_GetAttackSpeed_ReturnValue) == 0x000064, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_GetAttackSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_GetUsesAmmo_ReturnValue) == 0x000068, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_GetUsesAmmo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_GetRechargeTime_ReturnValue_1) == 0x00006C, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_GetRechargeTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_GetDamage_ReturnValue_1) == 0x000070, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_GetDamage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000078, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000080, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_GetTargetDomainsText_ReturnValue_1) == 0x000088, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_GetTargetDomainsText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_GetDamageType_ReturnValue) == 0x000098, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_GetDamageType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_GetAttackSpeed_ReturnValue_1) == 0x0000A8, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_GetAttackSpeed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_GetAttackRange_ReturnValue_2) == 0x0000AC, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_GetAttackRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0000B8, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_Conv_DoubleToText_ReturnValue_2) == 0x0000C0, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_Conv_DoubleToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_Conv_DoubleToText_ReturnValue_3) == 0x0000D0, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_Conv_DoubleToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_GetDamage_ReturnValue_2) == 0x0000E0, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_GetDamage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_Conv_DoubleToText_ReturnValue_4) == 0x0000E8, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_Conv_DoubleToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x0000F8, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000100, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_Conv_DoubleToText_Value_ImplicitCast) == 0x000108, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_Conv_DoubleToText_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_Conv_DoubleToText_Value_ImplicitCast_1) == 0x000110, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_Conv_DoubleToText_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000118, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1) == 0x000120, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_2) == 0x000128, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_3) == 0x000130, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000138, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_Conv_DoubleToText_Value_ImplicitCast_2) == 0x000140, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_Conv_DoubleToText_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x000148, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_Conv_DoubleToText_Value_ImplicitCast_3) == 0x000150, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_Conv_DoubleToText_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_2) == 0x000158, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_Conv_DoubleToText_Value_ImplicitCast_4) == 0x000160, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_Conv_DoubleToText_Value_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_3) == 0x000168, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_Refresh_Parameters::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");

// Function WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot.WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C.RefreshVerticalSeparator
// 0x000C (0x000C - 0x0000)
struct WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_RefreshVerticalSeparator final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotIndex_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_RefreshVerticalSeparator) == 0x000004, "Wrong alignment on WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_RefreshVerticalSeparator");
static_assert(sizeof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_RefreshVerticalSeparator) == 0x00000C, "Wrong size on WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_RefreshVerticalSeparator");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_RefreshVerticalSeparator, Temp_bool_Variable) == 0x000000, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_RefreshVerticalSeparator::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_RefreshVerticalSeparator, Temp_byte_Variable) == 0x000001, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_RefreshVerticalSeparator::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_RefreshVerticalSeparator, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_RefreshVerticalSeparator::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_RefreshVerticalSeparator, CallFunc_GetSlotIndex_ReturnValue) == 0x000004, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_RefreshVerticalSeparator::CallFunc_GetSlotIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_RefreshVerticalSeparator, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_RefreshVerticalSeparator::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_RefreshVerticalSeparator, K2Node_Select_Default) == 0x000009, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_RefreshVerticalSeparator::K2Node_Select_Default' has a wrong offset!");

// Function WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot.WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C.SetMaxDesiredWidth
// 0x0010 (0x0010 - 0x0000)
struct WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetMaxDesiredWidth final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetMaxDesiredWidth) == 0x000008, "Wrong alignment on WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetMaxDesiredWidth");
static_assert(sizeof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetMaxDesiredWidth) == 0x000010, "Wrong size on WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetMaxDesiredWidth");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetMaxDesiredWidth, Value) == 0x000000, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetMaxDesiredWidth::Value' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetMaxDesiredWidth, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000004, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetMaxDesiredWidth::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetMaxDesiredWidth, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000008, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetMaxDesiredWidth::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot.WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C.SetMinDesiredWidth
// 0x0010 (0x0010 - 0x0000)
struct WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetMinDesiredWidth final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetMinDesiredWidth) == 0x000008, "Wrong alignment on WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetMinDesiredWidth");
static_assert(sizeof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetMinDesiredWidth) == 0x000010, "Wrong size on WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetMinDesiredWidth");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetMinDesiredWidth, Value) == 0x000000, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetMinDesiredWidth::Value' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetMinDesiredWidth, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000004, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetMinDesiredWidth::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetMinDesiredWidth, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000008, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetMinDesiredWidth::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot.WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C.SetWidthOverride
// 0x0010 (0x0010 - 0x0000)
struct WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetWidthOverride final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetWidthOverride) == 0x000008, "Wrong alignment on WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetWidthOverride");
static_assert(sizeof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetWidthOverride) == 0x000010, "Wrong size on WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetWidthOverride");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetWidthOverride, Value) == 0x000000, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetWidthOverride::Value' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetWidthOverride, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000004, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetWidthOverride::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetWidthOverride, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000008, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_SetWidthOverride::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot.WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C.UpdateSizeBox
// 0x000C (0x000C - 0x0000)
struct WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_UpdateSizeBox final
{
public:
	float                                         CallFunc_GetUnitCardWeaponWidthWidth_OutFixedWidth; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetUnitCardWeaponWidthWidth_OutMinWidth;  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetUnitCardWeaponWidthWidth_OutMaxWidth;  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_UpdateSizeBox) == 0x000004, "Wrong alignment on WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_UpdateSizeBox");
static_assert(sizeof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_UpdateSizeBox) == 0x00000C, "Wrong size on WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_UpdateSizeBox");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_UpdateSizeBox, CallFunc_GetUnitCardWeaponWidthWidth_OutFixedWidth) == 0x000000, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_UpdateSizeBox::CallFunc_GetUnitCardWeaponWidthWidth_OutFixedWidth' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_UpdateSizeBox, CallFunc_GetUnitCardWeaponWidthWidth_OutMinWidth) == 0x000004, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_UpdateSizeBox::CallFunc_GetUnitCardWeaponWidthWidth_OutMinWidth' has a wrong offset!");
static_assert(offsetof(WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_UpdateSizeBox, CallFunc_GetUnitCardWeaponWidthWidth_OutMaxWidth) == 0x000008, "Member 'WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_C_UpdateSizeBox::CallFunc_GetUnitCardWeaponWidthWidth_OutMaxWidth' has a wrong offset!");

}

