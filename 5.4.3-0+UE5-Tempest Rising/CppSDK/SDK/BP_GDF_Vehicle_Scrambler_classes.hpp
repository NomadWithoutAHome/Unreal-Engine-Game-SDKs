#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GDF_Vehicle_Scrambler

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_Vehicle_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GDF_Vehicle_Scrambler.BP_GDF_Vehicle_Scrambler_C
// 0x0050 (0x1D20 - 0x1CD0)
class ABP_GDF_Vehicle_Scrambler_C final : public ABP_Vehicle_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_GDF_Vehicle_Scrambler_C;         // 0x1CD0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               PS_StealthEnable_01_Vehicle;                       // 0x1CD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_SmokeVehicleDamagedHeavy;                       // 0x1CE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_SmokeVehicleDamagedLight;                       // 0x1CE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_SmokeVehicleDamagedMedium;                      // 0x1CF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_JetEngine_BR;                                   // 0x1CF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_JetEngine_BL;                                   // 0x1D00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_JetEngine_FL;                                   // 0x1D08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_JetEngine_FR;                                   // 0x1D10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Temp;                                           // 0x1D18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void Added_193BEE5E43DEC824D430D3841C0B2B8A();
	void ExecuteUbergraph_BP_GDF_Vehicle_Scrambler(int32 EntryPoint);
	void ReceiveBeginMovement();
	void ReceiveBeginPlay();
	void ReceiveEndMovement();
	void ReceiveOnDeath();
	void ReceiveUpdateHealthEffects(float HealthPct);
	void Removed_E358B4194BF402528866F1A9D2F91720();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GDF_Vehicle_Scrambler_C">();
	}
	static class ABP_GDF_Vehicle_Scrambler_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GDF_Vehicle_Scrambler_C>();
	}
};
static_assert(alignof(ABP_GDF_Vehicle_Scrambler_C) == 0x000010, "Wrong alignment on ABP_GDF_Vehicle_Scrambler_C");
static_assert(sizeof(ABP_GDF_Vehicle_Scrambler_C) == 0x001D20, "Wrong size on ABP_GDF_Vehicle_Scrambler_C");
static_assert(offsetof(ABP_GDF_Vehicle_Scrambler_C, UberGraphFrame_BP_GDF_Vehicle_Scrambler_C) == 0x001CD0, "Member 'ABP_GDF_Vehicle_Scrambler_C::UberGraphFrame_BP_GDF_Vehicle_Scrambler_C' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_Scrambler_C, PS_StealthEnable_01_Vehicle) == 0x001CD8, "Member 'ABP_GDF_Vehicle_Scrambler_C::PS_StealthEnable_01_Vehicle' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_Scrambler_C, PS_SmokeVehicleDamagedHeavy) == 0x001CE0, "Member 'ABP_GDF_Vehicle_Scrambler_C::PS_SmokeVehicleDamagedHeavy' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_Scrambler_C, PS_SmokeVehicleDamagedLight) == 0x001CE8, "Member 'ABP_GDF_Vehicle_Scrambler_C::PS_SmokeVehicleDamagedLight' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_Scrambler_C, PS_SmokeVehicleDamagedMedium) == 0x001CF0, "Member 'ABP_GDF_Vehicle_Scrambler_C::PS_SmokeVehicleDamagedMedium' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_Scrambler_C, PS_JetEngine_BR) == 0x001CF8, "Member 'ABP_GDF_Vehicle_Scrambler_C::PS_JetEngine_BR' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_Scrambler_C, PS_JetEngine_BL) == 0x001D00, "Member 'ABP_GDF_Vehicle_Scrambler_C::PS_JetEngine_BL' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_Scrambler_C, PS_JetEngine_FL) == 0x001D08, "Member 'ABP_GDF_Vehicle_Scrambler_C::PS_JetEngine_FL' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_Scrambler_C, PS_JetEngine_FR) == 0x001D10, "Member 'ABP_GDF_Vehicle_Scrambler_C::PS_JetEngine_FR' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_Scrambler_C, SM_Temp) == 0x001D18, "Member 'ABP_GDF_Vehicle_Scrambler_C::SM_Temp' has a wrong offset!");

}

