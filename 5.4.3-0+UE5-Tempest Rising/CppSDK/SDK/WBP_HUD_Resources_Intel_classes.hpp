#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HUD_Resources_Intel

#include "Basic.hpp"

#include "Tempest_structs.hpp"
#include "Tempest_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_HUD_Resources_Intel.WBP_HUD_Resources_Intel_C
// 0x0020 (0x0430 - 0x0410)
class UWBP_HUD_Resources_Intel_C final : public UTedPlayerDataWidget
{
public:
	class UWidgetAnimation*                       Anim_Show;                                         // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Value;                                   // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FGameplayTag                           PlayingAnim;                                       // 0x0420(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bAreResourcesVisible;                              // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRelevant;                                         // 0x0429(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnAnimationFinished(const class UWidgetAnimation* Animation);
	void OnPlayWidgetAnimation(const struct FGameplayTag& InAnim);
	void OnResourcesChange_Handler(class UTedPlayerData* InPlayerData, const struct FTedPlayerDataResources& InPrevious, const struct FTedPlayerDataResources& InCurrent);
	void SetAreResourcesVisible(bool bInValue);
	void SetRelevant(bool bInValue);
	void TryPlayAnim(bool bInShow);

	bool OnCanPlayWidgetAnimation(const struct FGameplayTag& InAnim) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_HUD_Resources_Intel_C">();
	}
	static class UWBP_HUD_Resources_Intel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_HUD_Resources_Intel_C>();
	}
};
static_assert(alignof(UWBP_HUD_Resources_Intel_C) == 0x000008, "Wrong alignment on UWBP_HUD_Resources_Intel_C");
static_assert(sizeof(UWBP_HUD_Resources_Intel_C) == 0x000430, "Wrong size on UWBP_HUD_Resources_Intel_C");
static_assert(offsetof(UWBP_HUD_Resources_Intel_C, Anim_Show) == 0x000410, "Member 'UWBP_HUD_Resources_Intel_C::Anim_Show' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Resources_Intel_C, TextBlock_Value) == 0x000418, "Member 'UWBP_HUD_Resources_Intel_C::TextBlock_Value' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Resources_Intel_C, PlayingAnim) == 0x000420, "Member 'UWBP_HUD_Resources_Intel_C::PlayingAnim' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Resources_Intel_C, bAreResourcesVisible) == 0x000428, "Member 'UWBP_HUD_Resources_Intel_C::bAreResourcesVisible' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Resources_Intel_C, bRelevant) == 0x000429, "Member 'UWBP_HUD_Resources_Intel_C::bRelevant' has a wrong offset!");

}

