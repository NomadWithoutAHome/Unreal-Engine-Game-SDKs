#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GlowingWidget_Text_Fill

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_GlowingWidget_Text_Fill.WBP_GlowingWidget_Text_Fill_C.SetFontMaterial
// 0x0008 (0x0008 - 0x0000)
struct WBP_GlowingWidget_Text_Fill_C_SetFontMaterial final
{
public:
	class UMaterialInterface*                     Material;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlowingWidget_Text_Fill_C_SetFontMaterial) == 0x000008, "Wrong alignment on WBP_GlowingWidget_Text_Fill_C_SetFontMaterial");
static_assert(sizeof(WBP_GlowingWidget_Text_Fill_C_SetFontMaterial) == 0x000008, "Wrong size on WBP_GlowingWidget_Text_Fill_C_SetFontMaterial");
static_assert(offsetof(WBP_GlowingWidget_Text_Fill_C_SetFontMaterial, Material) == 0x000000, "Member 'WBP_GlowingWidget_Text_Fill_C_SetFontMaterial::Material' has a wrong offset!");

// Function WBP_GlowingWidget_Text_Fill.WBP_GlowingWidget_Text_Fill_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_GlowingWidget_Text_Fill_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlowingWidget_Text_Fill_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_GlowingWidget_Text_Fill_C_PreConstruct");
static_assert(sizeof(WBP_GlowingWidget_Text_Fill_C_PreConstruct) == 0x000001, "Wrong size on WBP_GlowingWidget_Text_Fill_C_PreConstruct");
static_assert(offsetof(WBP_GlowingWidget_Text_Fill_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_GlowingWidget_Text_Fill_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_GlowingWidget_Text_Fill.WBP_GlowingWidget_Text_Fill_C.GetTextWidget
// 0x0008 (0x0008 - 0x0000)
struct WBP_GlowingWidget_Text_Fill_C_GetTextWidget final
{
public:
	class UTextBlock*                             OutText;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlowingWidget_Text_Fill_C_GetTextWidget) == 0x000008, "Wrong alignment on WBP_GlowingWidget_Text_Fill_C_GetTextWidget");
static_assert(sizeof(WBP_GlowingWidget_Text_Fill_C_GetTextWidget) == 0x000008, "Wrong size on WBP_GlowingWidget_Text_Fill_C_GetTextWidget");
static_assert(offsetof(WBP_GlowingWidget_Text_Fill_C_GetTextWidget, OutText) == 0x000000, "Member 'WBP_GlowingWidget_Text_Fill_C_GetTextWidget::OutText' has a wrong offset!");

// Function WBP_GlowingWidget_Text_Fill.WBP_GlowingWidget_Text_Fill_C.GetGlowTextWidget
// 0x0008 (0x0008 - 0x0000)
struct WBP_GlowingWidget_Text_Fill_C_GetGlowTextWidget final
{
public:
	class UTextBlock*                             OutText;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlowingWidget_Text_Fill_C_GetGlowTextWidget) == 0x000008, "Wrong alignment on WBP_GlowingWidget_Text_Fill_C_GetGlowTextWidget");
static_assert(sizeof(WBP_GlowingWidget_Text_Fill_C_GetGlowTextWidget) == 0x000008, "Wrong size on WBP_GlowingWidget_Text_Fill_C_GetGlowTextWidget");
static_assert(offsetof(WBP_GlowingWidget_Text_Fill_C_GetGlowTextWidget, OutText) == 0x000000, "Member 'WBP_GlowingWidget_Text_Fill_C_GetGlowTextWidget::OutText' has a wrong offset!");

// Function WBP_GlowingWidget_Text_Fill.WBP_GlowingWidget_Text_Fill_C.GetForegroundTextWidget
// 0x0008 (0x0008 - 0x0000)
struct WBP_GlowingWidget_Text_Fill_C_GetForegroundTextWidget final
{
public:
	class UTextBlock*                             OutText;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlowingWidget_Text_Fill_C_GetForegroundTextWidget) == 0x000008, "Wrong alignment on WBP_GlowingWidget_Text_Fill_C_GetForegroundTextWidget");
static_assert(sizeof(WBP_GlowingWidget_Text_Fill_C_GetForegroundTextWidget) == 0x000008, "Wrong size on WBP_GlowingWidget_Text_Fill_C_GetForegroundTextWidget");
static_assert(offsetof(WBP_GlowingWidget_Text_Fill_C_GetForegroundTextWidget, OutText) == 0x000000, "Member 'WBP_GlowingWidget_Text_Fill_C_GetForegroundTextWidget::OutText' has a wrong offset!");

// Function WBP_GlowingWidget_Text_Fill.WBP_GlowingWidget_Text_Fill_C.ExecuteUbergraph_WBP_GlowingWidget_Text_Fill
// 0x0020 (0x0020 - 0x0000)
struct WBP_GlowingWidget_Text_Fill_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Fill final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBorderSlot*                            CallFunc_SlotAsBorderSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBorderSlot*                            CallFunc_SlotAsBorderSlot_ReturnValue_1;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlowingWidget_Text_Fill_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Fill) == 0x000008, "Wrong alignment on WBP_GlowingWidget_Text_Fill_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Fill");
static_assert(sizeof(WBP_GlowingWidget_Text_Fill_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Fill) == 0x000020, "Wrong size on WBP_GlowingWidget_Text_Fill_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Fill");
static_assert(offsetof(WBP_GlowingWidget_Text_Fill_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Fill, EntryPoint) == 0x000000, "Member 'WBP_GlowingWidget_Text_Fill_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Fill::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Fill_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Fill, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_GlowingWidget_Text_Fill_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Fill::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Fill_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Fill, CallFunc_SlotAsBorderSlot_ReturnValue) == 0x000008, "Member 'WBP_GlowingWidget_Text_Fill_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Fill::CallFunc_SlotAsBorderSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Fill_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Fill, CallFunc_SlotAsBorderSlot_ReturnValue_1) == 0x000010, "Member 'WBP_GlowingWidget_Text_Fill_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Fill::CallFunc_SlotAsBorderSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Fill_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Fill, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'WBP_GlowingWidget_Text_Fill_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Fill::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

