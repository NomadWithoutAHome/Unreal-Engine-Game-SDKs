#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BD_GDF_HealingTurret

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_BD_GDF_HealingTurret.BP_BD_GDF_HealingTurret_C.ExecuteUbergraph_BP_BD_GDF_HealingTurret
// 0x0220 (0x0220 - 0x0000)
struct BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFXSystemComponent*                     CallFunc_SpawnEffectAtLocation_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        CallFunc_SpawnDecalAtLocation_ReturnValue;         // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0108(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue;               // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_202[0x2];                                      // 0x0202(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetCurrentMontage_ReturnValue;            // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive_ReturnValue_1;                    // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_212[0x2];                                      // 0x0212(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPlayRate_NewRate_ImplicitCast;         // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret) == 0x000008, "Wrong alignment on BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret");
static_assert(sizeof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret) == 0x000220, "Wrong size on BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, EntryPoint) == 0x000000, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_IsAlive_ReturnValue) == 0x000004, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, Temp_object_Variable) == 0x000008, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_RandomFloatInRange_ReturnValue) == 0x000028, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_MakeRotator_ReturnValue) == 0x000030, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, Temp_int_Loop_Counter_Variable_1) == 0x000048, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_IsDedicatedServer_ReturnValue) == 0x000060, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_Less_IntInt_ReturnValue) == 0x000061, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_Add_VectorVector_ReturnValue) == 0x000068, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_SpawnEffectAtLocation_ReturnValue) == 0x000080, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_SpawnEffectAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_SpawnDecalAtLocation_ReturnValue) == 0x000088, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_SpawnDecalAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000090, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x0000A8, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000BC, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, K2Node_MakeArray_Array) == 0x0000C8, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000D8, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0000F0, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000108, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000200, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_GetSurfaceType_ReturnValue) == 0x000201, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_GetSurfaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000204, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_GetCurrentMontage_ReturnValue) == 0x000208, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_GetCurrentMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000210, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_IsAlive_ReturnValue_1) == 0x000211, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_IsAlive_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000214, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret, CallFunc_SetPlayRate_NewRate_ImplicitCast) == 0x000218, "Member 'BP_BD_GDF_HealingTurret_C_ExecuteUbergraph_BP_BD_GDF_HealingTurret::CallFunc_SetPlayRate_NewRate_ImplicitCast' has a wrong offset!");

}

