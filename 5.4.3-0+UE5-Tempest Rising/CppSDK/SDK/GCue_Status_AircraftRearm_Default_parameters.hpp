#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCue_Status_AircraftRearm_Default

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GCue_Status_AircraftRearm_Default.GCue_Status_AircraftRearm_Default_C.OnRemove
// 0x00E8 (0x00E8 - 0x0000)
struct GCue_Status_AircraftRearm_Default_C_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCue_Status_AircraftRearm_Default_C_OnRemove) == 0x000008, "Wrong alignment on GCue_Status_AircraftRearm_Default_C_OnRemove");
static_assert(sizeof(GCue_Status_AircraftRearm_Default_C_OnRemove) == 0x0000E8, "Wrong size on GCue_Status_AircraftRearm_Default_C_OnRemove");
static_assert(offsetof(GCue_Status_AircraftRearm_Default_C_OnRemove, MyTarget) == 0x000000, "Member 'GCue_Status_AircraftRearm_Default_C_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(GCue_Status_AircraftRearm_Default_C_OnRemove, Parameters) == 0x000008, "Member 'GCue_Status_AircraftRearm_Default_C_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(GCue_Status_AircraftRearm_Default_C_OnRemove, ReturnValue) == 0x0000E0, "Member 'GCue_Status_AircraftRearm_Default_C_OnRemove::ReturnValue' has a wrong offset!");

// Function GCue_Status_AircraftRearm_Default.GCue_Status_AircraftRearm_Default_C.WhileActive
// 0x02A0 (0x02A0 - 0x0000)
struct GCue_Status_AircraftRearm_Default_C_WhileActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATedAircraft*                           K2Node_DynamicCast_AsTed_Aircraft;                 // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0xF];                                       // 0x00F1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetLandingTransform_OutTransform;         // 0x0100(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x01A8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GCue_Status_AircraftRearm_Default_C_WhileActive) == 0x000010, "Wrong alignment on GCue_Status_AircraftRearm_Default_C_WhileActive");
static_assert(sizeof(GCue_Status_AircraftRearm_Default_C_WhileActive) == 0x0002A0, "Wrong size on GCue_Status_AircraftRearm_Default_C_WhileActive");
static_assert(offsetof(GCue_Status_AircraftRearm_Default_C_WhileActive, MyTarget) == 0x000000, "Member 'GCue_Status_AircraftRearm_Default_C_WhileActive::MyTarget' has a wrong offset!");
static_assert(offsetof(GCue_Status_AircraftRearm_Default_C_WhileActive, Parameters) == 0x000008, "Member 'GCue_Status_AircraftRearm_Default_C_WhileActive::Parameters' has a wrong offset!");
static_assert(offsetof(GCue_Status_AircraftRearm_Default_C_WhileActive, ReturnValue) == 0x0000E0, "Member 'GCue_Status_AircraftRearm_Default_C_WhileActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCue_Status_AircraftRearm_Default_C_WhileActive, K2Node_DynamicCast_AsTed_Aircraft) == 0x0000E8, "Member 'GCue_Status_AircraftRearm_Default_C_WhileActive::K2Node_DynamicCast_AsTed_Aircraft' has a wrong offset!");
static_assert(offsetof(GCue_Status_AircraftRearm_Default_C_WhileActive, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'GCue_Status_AircraftRearm_Default_C_WhileActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCue_Status_AircraftRearm_Default_C_WhileActive, CallFunc_GetLandingTransform_OutTransform) == 0x000100, "Member 'GCue_Status_AircraftRearm_Default_C_WhileActive::CallFunc_GetLandingTransform_OutTransform' has a wrong offset!");
static_assert(offsetof(GCue_Status_AircraftRearm_Default_C_WhileActive, CallFunc_BreakTransform_Location) == 0x000160, "Member 'GCue_Status_AircraftRearm_Default_C_WhileActive::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(GCue_Status_AircraftRearm_Default_C_WhileActive, CallFunc_BreakTransform_Rotation) == 0x000178, "Member 'GCue_Status_AircraftRearm_Default_C_WhileActive::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(GCue_Status_AircraftRearm_Default_C_WhileActive, CallFunc_BreakTransform_Scale) == 0x000190, "Member 'GCue_Status_AircraftRearm_Default_C_WhileActive::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(GCue_Status_AircraftRearm_Default_C_WhileActive, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0001A8, "Member 'GCue_Status_AircraftRearm_Default_C_WhileActive::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

}

