#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_BD_DYN_PowerPlant

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ABP_BD_DYN_PowerPlant.ABP_BD_DYN_PowerPlant_C.ExecuteUbergraph_ABP_BD_DYN_PowerPlant
// 0x0040 (0x0040 - 0x0000)
struct ABP_BD_DYN_PowerPlant_C_ExecuteUbergraph_ABP_BD_DYN_PowerPlant final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_StructMemberSet___FloatProperty_1_ImplicitCast; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_ImplicitCast; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_BD_DYN_PowerPlant_C_ExecuteUbergraph_ABP_BD_DYN_PowerPlant) == 0x000008, "Wrong alignment on ABP_BD_DYN_PowerPlant_C_ExecuteUbergraph_ABP_BD_DYN_PowerPlant");
static_assert(sizeof(ABP_BD_DYN_PowerPlant_C_ExecuteUbergraph_ABP_BD_DYN_PowerPlant) == 0x000040, "Wrong size on ABP_BD_DYN_PowerPlant_C_ExecuteUbergraph_ABP_BD_DYN_PowerPlant");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C_ExecuteUbergraph_ABP_BD_DYN_PowerPlant, EntryPoint) == 0x000000, "Member 'ABP_BD_DYN_PowerPlant_C_ExecuteUbergraph_ABP_BD_DYN_PowerPlant::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C_ExecuteUbergraph_ABP_BD_DYN_PowerPlant, Temp_bool_Variable) == 0x000004, "Member 'ABP_BD_DYN_PowerPlant_C_ExecuteUbergraph_ABP_BD_DYN_PowerPlant::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C_ExecuteUbergraph_ABP_BD_DYN_PowerPlant, K2Node_Event_DeltaTimeX) == 0x000008, "Member 'ABP_BD_DYN_PowerPlant_C_ExecuteUbergraph_ABP_BD_DYN_PowerPlant::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C_ExecuteUbergraph_ABP_BD_DYN_PowerPlant, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'ABP_BD_DYN_PowerPlant_C_ExecuteUbergraph_ABP_BD_DYN_PowerPlant::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C_ExecuteUbergraph_ABP_BD_DYN_PowerPlant, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000018, "Member 'ABP_BD_DYN_PowerPlant_C_ExecuteUbergraph_ABP_BD_DYN_PowerPlant::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C_ExecuteUbergraph_ABP_BD_DYN_PowerPlant, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x000020, "Member 'ABP_BD_DYN_PowerPlant_C_ExecuteUbergraph_ABP_BD_DYN_PowerPlant::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C_ExecuteUbergraph_ABP_BD_DYN_PowerPlant, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ABP_BD_DYN_PowerPlant_C_ExecuteUbergraph_ABP_BD_DYN_PowerPlant::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C_ExecuteUbergraph_ABP_BD_DYN_PowerPlant, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000031, "Member 'ABP_BD_DYN_PowerPlant_C_ExecuteUbergraph_ABP_BD_DYN_PowerPlant::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C_ExecuteUbergraph_ABP_BD_DYN_PowerPlant, K2Node_StructMemberSet___FloatProperty_1_ImplicitCast) == 0x000034, "Member 'ABP_BD_DYN_PowerPlant_C_ExecuteUbergraph_ABP_BD_DYN_PowerPlant::K2Node_StructMemberSet___FloatProperty_1_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C_ExecuteUbergraph_ABP_BD_DYN_PowerPlant, K2Node_StructMemberSet___FloatProperty_ImplicitCast) == 0x000038, "Member 'ABP_BD_DYN_PowerPlant_C_ExecuteUbergraph_ABP_BD_DYN_PowerPlant::K2Node_StructMemberSet___FloatProperty_ImplicitCast' has a wrong offset!");

// Function ABP_BD_DYN_PowerPlant.ABP_BD_DYN_PowerPlant_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_BD_DYN_PowerPlant_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_BD_DYN_PowerPlant_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_BD_DYN_PowerPlant_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_BD_DYN_PowerPlant_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_BD_DYN_PowerPlant_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_BD_DYN_PowerPlant_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_BD_DYN_PowerPlant.ABP_BD_DYN_PowerPlant_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_BD_DYN_PowerPlant_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_BD_DYN_PowerPlant_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_BD_DYN_PowerPlant_C_AnimGraph");
static_assert(sizeof(ABP_BD_DYN_PowerPlant_C_AnimGraph) == 0x000010, "Wrong size on ABP_BD_DYN_PowerPlant_C_AnimGraph");
static_assert(offsetof(ABP_BD_DYN_PowerPlant_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_BD_DYN_PowerPlant_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

