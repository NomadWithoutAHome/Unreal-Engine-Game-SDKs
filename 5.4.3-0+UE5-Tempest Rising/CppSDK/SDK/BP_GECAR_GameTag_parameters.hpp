#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GECAR_GameTag

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BP_GECAR_GameTag.BP_GECAR_GameTag_C.CanApplyGameplayEffect
// 0x02D0 (0x02D0 - 0x0000)
struct BP_GECAR_GameTag_C_CanApplyGameplayEffect final
{
public:
	const class UGameplayEffect*                  GameplayEffect;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpec                    Spec;                                              // 0x0008(0x0298)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UAbilitySystemComponent*                ASC;                                               // 0x02A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x02A8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AA[0x6];                                      // 0x02AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ATedPawn*                               K2Node_DynamicCast_AsTed_Pawn;                     // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x3];                                      // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetDefinitionId_ReturnValue;              // 0x02C4(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesAnyTags_ReturnValue;               // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x02CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x02CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GECAR_GameTag_C_CanApplyGameplayEffect) == 0x000008, "Wrong alignment on BP_GECAR_GameTag_C_CanApplyGameplayEffect");
static_assert(sizeof(BP_GECAR_GameTag_C_CanApplyGameplayEffect) == 0x0002D0, "Wrong size on BP_GECAR_GameTag_C_CanApplyGameplayEffect");
static_assert(offsetof(BP_GECAR_GameTag_C_CanApplyGameplayEffect, GameplayEffect) == 0x000000, "Member 'BP_GECAR_GameTag_C_CanApplyGameplayEffect::GameplayEffect' has a wrong offset!");
static_assert(offsetof(BP_GECAR_GameTag_C_CanApplyGameplayEffect, Spec) == 0x000008, "Member 'BP_GECAR_GameTag_C_CanApplyGameplayEffect::Spec' has a wrong offset!");
static_assert(offsetof(BP_GECAR_GameTag_C_CanApplyGameplayEffect, ASC) == 0x0002A0, "Member 'BP_GECAR_GameTag_C_CanApplyGameplayEffect::ASC' has a wrong offset!");
static_assert(offsetof(BP_GECAR_GameTag_C_CanApplyGameplayEffect, ReturnValue) == 0x0002A8, "Member 'BP_GECAR_GameTag_C_CanApplyGameplayEffect::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GECAR_GameTag_C_CanApplyGameplayEffect, Temp_bool_Variable) == 0x0002A9, "Member 'BP_GECAR_GameTag_C_CanApplyGameplayEffect::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GECAR_GameTag_C_CanApplyGameplayEffect, CallFunc_GetOwner_ReturnValue) == 0x0002B0, "Member 'BP_GECAR_GameTag_C_CanApplyGameplayEffect::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GECAR_GameTag_C_CanApplyGameplayEffect, K2Node_DynamicCast_AsTed_Pawn) == 0x0002B8, "Member 'BP_GECAR_GameTag_C_CanApplyGameplayEffect::K2Node_DynamicCast_AsTed_Pawn' has a wrong offset!");
static_assert(offsetof(BP_GECAR_GameTag_C_CanApplyGameplayEffect, K2Node_DynamicCast_bSuccess) == 0x0002C0, "Member 'BP_GECAR_GameTag_C_CanApplyGameplayEffect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GECAR_GameTag_C_CanApplyGameplayEffect, CallFunc_GetDefinitionId_ReturnValue) == 0x0002C4, "Member 'BP_GECAR_GameTag_C_CanApplyGameplayEffect::CallFunc_GetDefinitionId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GECAR_GameTag_C_CanApplyGameplayEffect, CallFunc_MatchesAnyTags_ReturnValue) == 0x0002CC, "Member 'BP_GECAR_GameTag_C_CanApplyGameplayEffect::CallFunc_MatchesAnyTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GECAR_GameTag_C_CanApplyGameplayEffect, CallFunc_HasTag_ReturnValue) == 0x0002CD, "Member 'BP_GECAR_GameTag_C_CanApplyGameplayEffect::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GECAR_GameTag_C_CanApplyGameplayEffect, K2Node_Select_Default) == 0x0002CE, "Member 'BP_GECAR_GameTag_C_CanApplyGameplayEffect::K2Node_Select_Default' has a wrong offset!");

}

