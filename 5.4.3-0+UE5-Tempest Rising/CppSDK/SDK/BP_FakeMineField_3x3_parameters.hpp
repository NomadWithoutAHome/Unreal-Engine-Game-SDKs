#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FakeMineField_3x3

#include "Basic.hpp"

#include "NavGrid_structs.hpp"


namespace SDK::Params
{

// Function BP_FakeMineField_3x3.BP_FakeMineField_3x3_C.GetIdleEffectComponents
// 0x0020 (0x0020 - 0x0000)
struct BP_FakeMineField_3x3_C_GetIdleEffectComponents final
{
public:
	TArray<class USceneComponent*>                Components;                                        // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class USceneComponent*>                K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_FakeMineField_3x3_C_GetIdleEffectComponents) == 0x000008, "Wrong alignment on BP_FakeMineField_3x3_C_GetIdleEffectComponents");
static_assert(sizeof(BP_FakeMineField_3x3_C_GetIdleEffectComponents) == 0x000020, "Wrong size on BP_FakeMineField_3x3_C_GetIdleEffectComponents");
static_assert(offsetof(BP_FakeMineField_3x3_C_GetIdleEffectComponents, Components) == 0x000000, "Member 'BP_FakeMineField_3x3_C_GetIdleEffectComponents::Components' has a wrong offset!");
static_assert(offsetof(BP_FakeMineField_3x3_C_GetIdleEffectComponents, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_FakeMineField_3x3_C_GetIdleEffectComponents::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_FakeMineField_3x3.BP_FakeMineField_3x3_C.GetNavGridRelevantData
// 0x00E0 (0x00E0 - 0x0000)
struct BP_FakeMineField_3x3_C_GetNavGridRelevantData final
{
public:
	struct FNavGridRelevantData                   OutNavigationData;                                 // 0x0000(0x00E0)(Parm, OutParm)
};
static_assert(alignof(BP_FakeMineField_3x3_C_GetNavGridRelevantData) == 0x000008, "Wrong alignment on BP_FakeMineField_3x3_C_GetNavGridRelevantData");
static_assert(sizeof(BP_FakeMineField_3x3_C_GetNavGridRelevantData) == 0x0000E0, "Wrong size on BP_FakeMineField_3x3_C_GetNavGridRelevantData");
static_assert(offsetof(BP_FakeMineField_3x3_C_GetNavGridRelevantData, OutNavigationData) == 0x000000, "Member 'BP_FakeMineField_3x3_C_GetNavGridRelevantData::OutNavigationData' has a wrong offset!");

// Function BP_FakeMineField_3x3.BP_FakeMineField_3x3_C.IsNavGridRelevant
// 0x0010 (0x0010 - 0x0000)
struct BP_FakeMineField_3x3_C_IsNavGridRelevant final
{
public:
	const class ANavGrid*                         NavData;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FakeMineField_3x3_C_IsNavGridRelevant) == 0x000008, "Wrong alignment on BP_FakeMineField_3x3_C_IsNavGridRelevant");
static_assert(sizeof(BP_FakeMineField_3x3_C_IsNavGridRelevant) == 0x000010, "Wrong size on BP_FakeMineField_3x3_C_IsNavGridRelevant");
static_assert(offsetof(BP_FakeMineField_3x3_C_IsNavGridRelevant, NavData) == 0x000000, "Member 'BP_FakeMineField_3x3_C_IsNavGridRelevant::NavData' has a wrong offset!");
static_assert(offsetof(BP_FakeMineField_3x3_C_IsNavGridRelevant, ReturnValue) == 0x000008, "Member 'BP_FakeMineField_3x3_C_IsNavGridRelevant::ReturnValue' has a wrong offset!");

}

