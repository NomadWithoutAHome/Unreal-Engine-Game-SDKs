#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TempestFieldProxy_Vines

#include "Basic.hpp"

#include "Tempest_structs.hpp"
#include "Tempest_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TempestFieldProxy_Vines.BP_TempestFieldProxy_Vines_C
// 0x0038 (0x00F0 - 0x00B8)
class UBP_TempestFieldProxy_Vines_C final : public UTempestFieldElementProxy
{
public:
	class UStaticMesh*                            VineMesh;                                          // 0x00B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UMaterialInterface*                     VineDecal;                                         // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        VineDecalScale;                                    // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         FX_VineSpawn;                                      // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         FX_VineDissolve;                                   // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             VineSpawnSound;                                    // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             VineRotSound;                                      // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void K2_BeginTransition(const ETempestFieldElementStage PrevStage, const ETempestFieldElementStage NextStage) const;
	void K2_EndTransition(const ETempestFieldElementStage PrevStage, const ETempestFieldElementStage NextStage) const;
	void K2_InitializeElement(struct FRandomStream& RandomStream) const;
	void K2_ProcessTransition(float& Progress, const float DeltaTime, const ETempestFieldElementStage PrevStage, const ETempestFieldElementStage NextStage) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TempestFieldProxy_Vines_C">();
	}
	static class UBP_TempestFieldProxy_Vines_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_TempestFieldProxy_Vines_C>();
	}
};
static_assert(alignof(UBP_TempestFieldProxy_Vines_C) == 0x000008, "Wrong alignment on UBP_TempestFieldProxy_Vines_C");
static_assert(sizeof(UBP_TempestFieldProxy_Vines_C) == 0x0000F0, "Wrong size on UBP_TempestFieldProxy_Vines_C");
static_assert(offsetof(UBP_TempestFieldProxy_Vines_C, VineMesh) == 0x0000B8, "Member 'UBP_TempestFieldProxy_Vines_C::VineMesh' has a wrong offset!");
static_assert(offsetof(UBP_TempestFieldProxy_Vines_C, VineDecal) == 0x0000C0, "Member 'UBP_TempestFieldProxy_Vines_C::VineDecal' has a wrong offset!");
static_assert(offsetof(UBP_TempestFieldProxy_Vines_C, VineDecalScale) == 0x0000C8, "Member 'UBP_TempestFieldProxy_Vines_C::VineDecalScale' has a wrong offset!");
static_assert(offsetof(UBP_TempestFieldProxy_Vines_C, FX_VineSpawn) == 0x0000D0, "Member 'UBP_TempestFieldProxy_Vines_C::FX_VineSpawn' has a wrong offset!");
static_assert(offsetof(UBP_TempestFieldProxy_Vines_C, FX_VineDissolve) == 0x0000D8, "Member 'UBP_TempestFieldProxy_Vines_C::FX_VineDissolve' has a wrong offset!");
static_assert(offsetof(UBP_TempestFieldProxy_Vines_C, VineSpawnSound) == 0x0000E0, "Member 'UBP_TempestFieldProxy_Vines_C::VineSpawnSound' has a wrong offset!");
static_assert(offsetof(UBP_TempestFieldProxy_Vines_C, VineRotSound) == 0x0000E8, "Member 'UBP_TempestFieldProxy_Vines_C::VineRotSound' has a wrong offset!");

}

