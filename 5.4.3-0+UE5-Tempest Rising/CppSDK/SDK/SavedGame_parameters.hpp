#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SavedGame

#include "Basic.hpp"

#include "SavedGame_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function SavedGame.SavedGameBlueprintLibrary.AddLoadLock
// 0x0010 (0x0010 - 0x0000)
struct SavedGameBlueprintLibrary_AddLoadLock final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           LockTag;                                           // 0x0008(0x0008)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SavedGameBlueprintLibrary_AddLoadLock) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_AddLoadLock");
static_assert(sizeof(SavedGameBlueprintLibrary_AddLoadLock) == 0x000010, "Wrong size on SavedGameBlueprintLibrary_AddLoadLock");
static_assert(offsetof(SavedGameBlueprintLibrary_AddLoadLock, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_AddLoadLock::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_AddLoadLock, LockTag) == 0x000008, "Member 'SavedGameBlueprintLibrary_AddLoadLock::LockTag' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.AddSaveLock
// 0x0010 (0x0010 - 0x0000)
struct SavedGameBlueprintLibrary_AddSaveLock final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           LockTag;                                           // 0x0008(0x0008)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SavedGameBlueprintLibrary_AddSaveLock) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_AddSaveLock");
static_assert(sizeof(SavedGameBlueprintLibrary_AddSaveLock) == 0x000010, "Wrong size on SavedGameBlueprintLibrary_AddSaveLock");
static_assert(offsetof(SavedGameBlueprintLibrary_AddSaveLock, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_AddSaveLock::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_AddSaveLock, LockTag) == 0x000008, "Member 'SavedGameBlueprintLibrary_AddSaveLock::LockTag' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.AutoSave
// 0x0058 (0x0058 - 0x0000)
struct SavedGameBlueprintLibrary_AutoSave final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FLatentActionSaveGameData              LatentSaveGameData;                                // 0x0020(0x0020)(Parm, NativeAccessSpecifierPublic)
	ESavedGameActionResult                        Result;                                            // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DebugName;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SavedGameBlueprintLibrary_AutoSave) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_AutoSave");
static_assert(sizeof(SavedGameBlueprintLibrary_AutoSave) == 0x000058, "Wrong size on SavedGameBlueprintLibrary_AutoSave");
static_assert(offsetof(SavedGameBlueprintLibrary_AutoSave, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_AutoSave::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_AutoSave, LatentInfo) == 0x000008, "Member 'SavedGameBlueprintLibrary_AutoSave::LatentInfo' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_AutoSave, LatentSaveGameData) == 0x000020, "Member 'SavedGameBlueprintLibrary_AutoSave::LatentSaveGameData' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_AutoSave, Result) == 0x000040, "Member 'SavedGameBlueprintLibrary_AutoSave::Result' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_AutoSave, DebugName) == 0x000048, "Member 'SavedGameBlueprintLibrary_AutoSave::DebugName' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.CanLoadGame
// 0x0010 (0x0010 - 0x0000)
struct SavedGameBlueprintLibrary_CanLoadGame final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SavedGameBlueprintLibrary_CanLoadGame) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_CanLoadGame");
static_assert(sizeof(SavedGameBlueprintLibrary_CanLoadGame) == 0x000010, "Wrong size on SavedGameBlueprintLibrary_CanLoadGame");
static_assert(offsetof(SavedGameBlueprintLibrary_CanLoadGame, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_CanLoadGame::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_CanLoadGame, ReturnValue) == 0x000008, "Member 'SavedGameBlueprintLibrary_CanLoadGame::ReturnValue' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.CanLoadGame_Exec
// 0x0010 (0x0010 - 0x0000)
struct SavedGameBlueprintLibrary_CanLoadGame_Exec final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESavedGameYesNo                               ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SavedGameBlueprintLibrary_CanLoadGame_Exec) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_CanLoadGame_Exec");
static_assert(sizeof(SavedGameBlueprintLibrary_CanLoadGame_Exec) == 0x000010, "Wrong size on SavedGameBlueprintLibrary_CanLoadGame_Exec");
static_assert(offsetof(SavedGameBlueprintLibrary_CanLoadGame_Exec, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_CanLoadGame_Exec::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_CanLoadGame_Exec, ReturnValue) == 0x000008, "Member 'SavedGameBlueprintLibrary_CanLoadGame_Exec::ReturnValue' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.CanSaveGame
// 0x0010 (0x0010 - 0x0000)
struct SavedGameBlueprintLibrary_CanSaveGame final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SavedGameBlueprintLibrary_CanSaveGame) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_CanSaveGame");
static_assert(sizeof(SavedGameBlueprintLibrary_CanSaveGame) == 0x000010, "Wrong size on SavedGameBlueprintLibrary_CanSaveGame");
static_assert(offsetof(SavedGameBlueprintLibrary_CanSaveGame, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_CanSaveGame::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_CanSaveGame, ReturnValue) == 0x000008, "Member 'SavedGameBlueprintLibrary_CanSaveGame::ReturnValue' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.CanSaveGame_Exec
// 0x0010 (0x0010 - 0x0000)
struct SavedGameBlueprintLibrary_CanSaveGame_Exec final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESavedGameYesNo                               ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SavedGameBlueprintLibrary_CanSaveGame_Exec) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_CanSaveGame_Exec");
static_assert(sizeof(SavedGameBlueprintLibrary_CanSaveGame_Exec) == 0x000010, "Wrong size on SavedGameBlueprintLibrary_CanSaveGame_Exec");
static_assert(offsetof(SavedGameBlueprintLibrary_CanSaveGame_Exec, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_CanSaveGame_Exec::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_CanSaveGame_Exec, ReturnValue) == 0x000008, "Member 'SavedGameBlueprintLibrary_CanSaveGame_Exec::ReturnValue' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.DeleteAllSlots
// 0x0048 (0x0048 - 0x0000)
struct SavedGameBlueprintLibrary_DeleteAllSlots final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FLatentActionSaveGameData              LatentSaveGameData;                                // 0x0020(0x0020)(Parm, NativeAccessSpecifierPublic)
	ESavedGameActionResult                        Result;                                            // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SavedGameBlueprintLibrary_DeleteAllSlots) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_DeleteAllSlots");
static_assert(sizeof(SavedGameBlueprintLibrary_DeleteAllSlots) == 0x000048, "Wrong size on SavedGameBlueprintLibrary_DeleteAllSlots");
static_assert(offsetof(SavedGameBlueprintLibrary_DeleteAllSlots, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_DeleteAllSlots::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_DeleteAllSlots, LatentInfo) == 0x000008, "Member 'SavedGameBlueprintLibrary_DeleteAllSlots::LatentInfo' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_DeleteAllSlots, LatentSaveGameData) == 0x000020, "Member 'SavedGameBlueprintLibrary_DeleteAllSlots::LatentSaveGameData' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_DeleteAllSlots, Result) == 0x000040, "Member 'SavedGameBlueprintLibrary_DeleteAllSlots::Result' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.DeleteSlot
// 0x0050 (0x0050 - 0x0000)
struct SavedGameBlueprintLibrary_DeleteSlot final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FLatentActionSaveGameData              LatentSaveGameData;                                // 0x0020(0x0020)(Parm, NativeAccessSpecifierPublic)
	ESavedGameActionResult                        Result;                                            // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SlotName;                                          // 0x0044(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SavedGameBlueprintLibrary_DeleteSlot) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_DeleteSlot");
static_assert(sizeof(SavedGameBlueprintLibrary_DeleteSlot) == 0x000050, "Wrong size on SavedGameBlueprintLibrary_DeleteSlot");
static_assert(offsetof(SavedGameBlueprintLibrary_DeleteSlot, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_DeleteSlot::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_DeleteSlot, LatentInfo) == 0x000008, "Member 'SavedGameBlueprintLibrary_DeleteSlot::LatentInfo' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_DeleteSlot, LatentSaveGameData) == 0x000020, "Member 'SavedGameBlueprintLibrary_DeleteSlot::LatentSaveGameData' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_DeleteSlot, Result) == 0x000040, "Member 'SavedGameBlueprintLibrary_DeleteSlot::Result' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_DeleteSlot, SlotName) == 0x000044, "Member 'SavedGameBlueprintLibrary_DeleteSlot::SlotName' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.DeleteSlotByInfo
// 0x0050 (0x0050 - 0x0000)
struct SavedGameBlueprintLibrary_DeleteSlotByInfo final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FLatentActionSaveGameData              LatentSaveGameData;                                // 0x0020(0x0020)(Parm, NativeAccessSpecifierPublic)
	ESavedGameActionResult                        Result;                                            // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class USavedGameSlotInfo*               SlotInfo;                                          // 0x0048(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SavedGameBlueprintLibrary_DeleteSlotByInfo) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_DeleteSlotByInfo");
static_assert(sizeof(SavedGameBlueprintLibrary_DeleteSlotByInfo) == 0x000050, "Wrong size on SavedGameBlueprintLibrary_DeleteSlotByInfo");
static_assert(offsetof(SavedGameBlueprintLibrary_DeleteSlotByInfo, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_DeleteSlotByInfo::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_DeleteSlotByInfo, LatentInfo) == 0x000008, "Member 'SavedGameBlueprintLibrary_DeleteSlotByInfo::LatentInfo' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_DeleteSlotByInfo, LatentSaveGameData) == 0x000020, "Member 'SavedGameBlueprintLibrary_DeleteSlotByInfo::LatentSaveGameData' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_DeleteSlotByInfo, Result) == 0x000040, "Member 'SavedGameBlueprintLibrary_DeleteSlotByInfo::Result' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_DeleteSlotByInfo, SlotInfo) == 0x000048, "Member 'SavedGameBlueprintLibrary_DeleteSlotByInfo::SlotInfo' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.EnsureNoBadCharacters
// 0x0028 (0x0028 - 0x0000)
struct SavedGameBlueprintLibrary_EnsureNoBadCharacters final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFixedReservedNames;                               // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SavedGameBlueprintLibrary_EnsureNoBadCharacters) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_EnsureNoBadCharacters");
static_assert(sizeof(SavedGameBlueprintLibrary_EnsureNoBadCharacters) == 0x000028, "Wrong size on SavedGameBlueprintLibrary_EnsureNoBadCharacters");
static_assert(offsetof(SavedGameBlueprintLibrary_EnsureNoBadCharacters, Filename) == 0x000000, "Member 'SavedGameBlueprintLibrary_EnsureNoBadCharacters::Filename' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_EnsureNoBadCharacters, bFixedReservedNames) == 0x000010, "Member 'SavedGameBlueprintLibrary_EnsureNoBadCharacters::bFixedReservedNames' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_EnsureNoBadCharacters, ReturnValue) == 0x000018, "Member 'SavedGameBlueprintLibrary_EnsureNoBadCharacters::ReturnValue' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.FixInvalidFilenameCharacters
// 0x0020 (0x0020 - 0x0000)
struct SavedGameBlueprintLibrary_FixInvalidFilenameCharacters final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SavedGameBlueprintLibrary_FixInvalidFilenameCharacters) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_FixInvalidFilenameCharacters");
static_assert(sizeof(SavedGameBlueprintLibrary_FixInvalidFilenameCharacters) == 0x000020, "Wrong size on SavedGameBlueprintLibrary_FixInvalidFilenameCharacters");
static_assert(offsetof(SavedGameBlueprintLibrary_FixInvalidFilenameCharacters, Filename) == 0x000000, "Member 'SavedGameBlueprintLibrary_FixInvalidFilenameCharacters::Filename' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_FixInvalidFilenameCharacters, ReturnValue) == 0x000010, "Member 'SavedGameBlueprintLibrary_FixInvalidFilenameCharacters::ReturnValue' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.FixReservedNames
// 0x0020 (0x0020 - 0x0000)
struct SavedGameBlueprintLibrary_FixReservedNames final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SavedGameBlueprintLibrary_FixReservedNames) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_FixReservedNames");
static_assert(sizeof(SavedGameBlueprintLibrary_FixReservedNames) == 0x000020, "Wrong size on SavedGameBlueprintLibrary_FixReservedNames");
static_assert(offsetof(SavedGameBlueprintLibrary_FixReservedNames, Filename) == 0x000000, "Member 'SavedGameBlueprintLibrary_FixReservedNames::Filename' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_FixReservedNames, ReturnValue) == 0x000010, "Member 'SavedGameBlueprintLibrary_FixReservedNames::ReturnValue' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.GetCurrentSlotData
// 0x0010 (0x0010 - 0x0000)
struct SavedGameBlueprintLibrary_GetCurrentSlotData final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USavedGameSlotData*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SavedGameBlueprintLibrary_GetCurrentSlotData) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_GetCurrentSlotData");
static_assert(sizeof(SavedGameBlueprintLibrary_GetCurrentSlotData) == 0x000010, "Wrong size on SavedGameBlueprintLibrary_GetCurrentSlotData");
static_assert(offsetof(SavedGameBlueprintLibrary_GetCurrentSlotData, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_GetCurrentSlotData::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_GetCurrentSlotData, ReturnValue) == 0x000008, "Member 'SavedGameBlueprintLibrary_GetCurrentSlotData::ReturnValue' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.GetCurrentSlotInfo
// 0x0010 (0x0010 - 0x0000)
struct SavedGameBlueprintLibrary_GetCurrentSlotInfo final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USavedGameSlotInfo*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SavedGameBlueprintLibrary_GetCurrentSlotInfo) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_GetCurrentSlotInfo");
static_assert(sizeof(SavedGameBlueprintLibrary_GetCurrentSlotInfo) == 0x000010, "Wrong size on SavedGameBlueprintLibrary_GetCurrentSlotInfo");
static_assert(offsetof(SavedGameBlueprintLibrary_GetCurrentSlotInfo, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_GetCurrentSlotInfo::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_GetCurrentSlotInfo, ReturnValue) == 0x000008, "Member 'SavedGameBlueprintLibrary_GetCurrentSlotInfo::ReturnValue' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.GetCurrentSlotThumbnail
// 0x0010 (0x0010 - 0x0000)
struct SavedGameBlueprintLibrary_GetCurrentSlotThumbnail final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SavedGameBlueprintLibrary_GetCurrentSlotThumbnail) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_GetCurrentSlotThumbnail");
static_assert(sizeof(SavedGameBlueprintLibrary_GetCurrentSlotThumbnail) == 0x000010, "Wrong size on SavedGameBlueprintLibrary_GetCurrentSlotThumbnail");
static_assert(offsetof(SavedGameBlueprintLibrary_GetCurrentSlotThumbnail, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_GetCurrentSlotThumbnail::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_GetCurrentSlotThumbnail, ReturnValue) == 0x000008, "Member 'SavedGameBlueprintLibrary_GetCurrentSlotThumbnail::ReturnValue' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.GetDisplayNameFromReserved
// 0x0020 (0x0020 - 0x0000)
struct SavedGameBlueprintLibrary_GetDisplayNameFromReserved final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SavedGameBlueprintLibrary_GetDisplayNameFromReserved) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_GetDisplayNameFromReserved");
static_assert(sizeof(SavedGameBlueprintLibrary_GetDisplayNameFromReserved) == 0x000020, "Wrong size on SavedGameBlueprintLibrary_GetDisplayNameFromReserved");
static_assert(offsetof(SavedGameBlueprintLibrary_GetDisplayNameFromReserved, Filename) == 0x000000, "Member 'SavedGameBlueprintLibrary_GetDisplayNameFromReserved::Filename' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_GetDisplayNameFromReserved, ReturnValue) == 0x000010, "Member 'SavedGameBlueprintLibrary_GetDisplayNameFromReserved::ReturnValue' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.GetLoadedSlotInfos
// 0x0018 (0x0018 - 0x0000)
struct SavedGameBlueprintLibrary_GetLoadedSlotInfos final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USavedGameSlotInfo*>             SlotInfos;                                         // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(SavedGameBlueprintLibrary_GetLoadedSlotInfos) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_GetLoadedSlotInfos");
static_assert(sizeof(SavedGameBlueprintLibrary_GetLoadedSlotInfos) == 0x000018, "Wrong size on SavedGameBlueprintLibrary_GetLoadedSlotInfos");
static_assert(offsetof(SavedGameBlueprintLibrary_GetLoadedSlotInfos, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_GetLoadedSlotInfos::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_GetLoadedSlotInfos, SlotInfos) == 0x000008, "Member 'SavedGameBlueprintLibrary_GetLoadedSlotInfos::SlotInfos' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.GetLoadedSlotInfosWithType
// 0x0020 (0x0020 - 0x0000)
struct SavedGameBlueprintLibrary_GetLoadedSlotInfosWithType final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USavedGameSlotInfo*>             SlotInfos;                                         // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	ESavedGameSlotType                            SlotType;                                          // 0x0018(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SavedGameBlueprintLibrary_GetLoadedSlotInfosWithType) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_GetLoadedSlotInfosWithType");
static_assert(sizeof(SavedGameBlueprintLibrary_GetLoadedSlotInfosWithType) == 0x000020, "Wrong size on SavedGameBlueprintLibrary_GetLoadedSlotInfosWithType");
static_assert(offsetof(SavedGameBlueprintLibrary_GetLoadedSlotInfosWithType, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_GetLoadedSlotInfosWithType::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_GetLoadedSlotInfosWithType, SlotInfos) == 0x000008, "Member 'SavedGameBlueprintLibrary_GetLoadedSlotInfosWithType::SlotInfos' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_GetLoadedSlotInfosWithType, SlotType) == 0x000018, "Member 'SavedGameBlueprintLibrary_GetLoadedSlotInfosWithType::SlotType' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.IsLoadingGame
// 0x0010 (0x0010 - 0x0000)
struct SavedGameBlueprintLibrary_IsLoadingGame final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESavedGameYesNo                               Output;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SavedGameBlueprintLibrary_IsLoadingGame) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_IsLoadingGame");
static_assert(sizeof(SavedGameBlueprintLibrary_IsLoadingGame) == 0x000010, "Wrong size on SavedGameBlueprintLibrary_IsLoadingGame");
static_assert(offsetof(SavedGameBlueprintLibrary_IsLoadingGame, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_IsLoadingGame::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_IsLoadingGame, Output) == 0x000008, "Member 'SavedGameBlueprintLibrary_IsLoadingGame::Output' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.IsSavingGame
// 0x0010 (0x0010 - 0x0000)
struct SavedGameBlueprintLibrary_IsSavingGame final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESavedGameYesNo                               Output;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SavedGameBlueprintLibrary_IsSavingGame) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_IsSavingGame");
static_assert(sizeof(SavedGameBlueprintLibrary_IsSavingGame) == 0x000010, "Wrong size on SavedGameBlueprintLibrary_IsSavingGame");
static_assert(offsetof(SavedGameBlueprintLibrary_IsSavingGame, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_IsSavingGame::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_IsSavingGame, Output) == 0x000008, "Member 'SavedGameBlueprintLibrary_IsSavingGame::Output' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.LoadAllSlotInfos
// 0x0060 (0x0060 - 0x0000)
struct SavedGameBlueprintLibrary_LoadAllSlotInfos final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FLatentActionSaveGameData              LatentSaveGameData;                                // 0x0020(0x0020)(Parm, NativeAccessSpecifierPublic)
	ESavedGameActionResult                        Result;                                            // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USavedGameSlotInfo*>             SlotInfos;                                         // 0x0048(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bSortByRecent;                                     // 0x0058(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SavedGameBlueprintLibrary_LoadAllSlotInfos) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_LoadAllSlotInfos");
static_assert(sizeof(SavedGameBlueprintLibrary_LoadAllSlotInfos) == 0x000060, "Wrong size on SavedGameBlueprintLibrary_LoadAllSlotInfos");
static_assert(offsetof(SavedGameBlueprintLibrary_LoadAllSlotInfos, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_LoadAllSlotInfos::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_LoadAllSlotInfos, LatentInfo) == 0x000008, "Member 'SavedGameBlueprintLibrary_LoadAllSlotInfos::LatentInfo' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_LoadAllSlotInfos, LatentSaveGameData) == 0x000020, "Member 'SavedGameBlueprintLibrary_LoadAllSlotInfos::LatentSaveGameData' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_LoadAllSlotInfos, Result) == 0x000040, "Member 'SavedGameBlueprintLibrary_LoadAllSlotInfos::Result' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_LoadAllSlotInfos, SlotInfos) == 0x000048, "Member 'SavedGameBlueprintLibrary_LoadAllSlotInfos::SlotInfos' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_LoadAllSlotInfos, bSortByRecent) == 0x000058, "Member 'SavedGameBlueprintLibrary_LoadAllSlotInfos::bSortByRecent' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.LoadAllSlotInfosSync
// 0x0020 (0x0020 - 0x0000)
struct SavedGameBlueprintLibrary_LoadAllSlotInfosSync final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USavedGameSlotInfo*>             SlotInfos;                                         // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bSortByRecent;                                     // 0x0018(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SavedGameBlueprintLibrary_LoadAllSlotInfosSync) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_LoadAllSlotInfosSync");
static_assert(sizeof(SavedGameBlueprintLibrary_LoadAllSlotInfosSync) == 0x000020, "Wrong size on SavedGameBlueprintLibrary_LoadAllSlotInfosSync");
static_assert(offsetof(SavedGameBlueprintLibrary_LoadAllSlotInfosSync, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_LoadAllSlotInfosSync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_LoadAllSlotInfosSync, SlotInfos) == 0x000008, "Member 'SavedGameBlueprintLibrary_LoadAllSlotInfosSync::SlotInfos' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_LoadAllSlotInfosSync, bSortByRecent) == 0x000018, "Member 'SavedGameBlueprintLibrary_LoadAllSlotInfosSync::bSortByRecent' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.LoadLatestSlot
// 0x0010 (0x0010 - 0x0000)
struct SavedGameBlueprintLibrary_LoadLatestSlot final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SavedGameBlueprintLibrary_LoadLatestSlot) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_LoadLatestSlot");
static_assert(sizeof(SavedGameBlueprintLibrary_LoadLatestSlot) == 0x000010, "Wrong size on SavedGameBlueprintLibrary_LoadLatestSlot");
static_assert(offsetof(SavedGameBlueprintLibrary_LoadLatestSlot, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_LoadLatestSlot::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_LoadLatestSlot, ReturnValue) == 0x000008, "Member 'SavedGameBlueprintLibrary_LoadLatestSlot::ReturnValue' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.LoadSlot
// 0x0018 (0x0018 - 0x0000)
struct SavedGameBlueprintLibrary_LoadSlot final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SlotName;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SavedGameBlueprintLibrary_LoadSlot) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_LoadSlot");
static_assert(sizeof(SavedGameBlueprintLibrary_LoadSlot) == 0x000018, "Wrong size on SavedGameBlueprintLibrary_LoadSlot");
static_assert(offsetof(SavedGameBlueprintLibrary_LoadSlot, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_LoadSlot::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_LoadSlot, SlotName) == 0x000008, "Member 'SavedGameBlueprintLibrary_LoadSlot::SlotName' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_LoadSlot, ReturnValue) == 0x000010, "Member 'SavedGameBlueprintLibrary_LoadSlot::ReturnValue' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.LoadSlotByInfo
// 0x0018 (0x0018 - 0x0000)
struct SavedGameBlueprintLibrary_LoadSlotByInfo final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class USavedGameSlotInfo*               SlotInfo;                                          // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SavedGameBlueprintLibrary_LoadSlotByInfo) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_LoadSlotByInfo");
static_assert(sizeof(SavedGameBlueprintLibrary_LoadSlotByInfo) == 0x000018, "Wrong size on SavedGameBlueprintLibrary_LoadSlotByInfo");
static_assert(offsetof(SavedGameBlueprintLibrary_LoadSlotByInfo, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_LoadSlotByInfo::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_LoadSlotByInfo, SlotInfo) == 0x000008, "Member 'SavedGameBlueprintLibrary_LoadSlotByInfo::SlotInfo' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_LoadSlotByInfo, ReturnValue) == 0x000010, "Member 'SavedGameBlueprintLibrary_LoadSlotByInfo::ReturnValue' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.LoadSlotInfo
// 0x0058 (0x0058 - 0x0000)
struct SavedGameBlueprintLibrary_LoadSlotInfo final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FLatentActionSaveGameData              LatentSaveGameData;                                // 0x0020(0x0020)(Parm, NativeAccessSpecifierPublic)
	ESavedGameActionResult                        Result;                                            // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USavedGameSlotInfo*                     SlotInfo;                                          // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SlotName;                                          // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SavedGameBlueprintLibrary_LoadSlotInfo) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_LoadSlotInfo");
static_assert(sizeof(SavedGameBlueprintLibrary_LoadSlotInfo) == 0x000058, "Wrong size on SavedGameBlueprintLibrary_LoadSlotInfo");
static_assert(offsetof(SavedGameBlueprintLibrary_LoadSlotInfo, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_LoadSlotInfo::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_LoadSlotInfo, LatentInfo) == 0x000008, "Member 'SavedGameBlueprintLibrary_LoadSlotInfo::LatentInfo' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_LoadSlotInfo, LatentSaveGameData) == 0x000020, "Member 'SavedGameBlueprintLibrary_LoadSlotInfo::LatentSaveGameData' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_LoadSlotInfo, Result) == 0x000040, "Member 'SavedGameBlueprintLibrary_LoadSlotInfo::Result' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_LoadSlotInfo, SlotInfo) == 0x000048, "Member 'SavedGameBlueprintLibrary_LoadSlotInfo::SlotInfo' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_LoadSlotInfo, SlotName) == 0x000050, "Member 'SavedGameBlueprintLibrary_LoadSlotInfo::SlotName' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.QuickSave
// 0x0048 (0x0048 - 0x0000)
struct SavedGameBlueprintLibrary_QuickSave final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FLatentActionSaveGameData              LatentSaveGameData;                                // 0x0020(0x0020)(Parm, NativeAccessSpecifierPublic)
	ESavedGameActionResult                        Result;                                            // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SavedGameBlueprintLibrary_QuickSave) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_QuickSave");
static_assert(sizeof(SavedGameBlueprintLibrary_QuickSave) == 0x000048, "Wrong size on SavedGameBlueprintLibrary_QuickSave");
static_assert(offsetof(SavedGameBlueprintLibrary_QuickSave, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_QuickSave::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_QuickSave, LatentInfo) == 0x000008, "Member 'SavedGameBlueprintLibrary_QuickSave::LatentInfo' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_QuickSave, LatentSaveGameData) == 0x000020, "Member 'SavedGameBlueprintLibrary_QuickSave::LatentSaveGameData' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_QuickSave, Result) == 0x000040, "Member 'SavedGameBlueprintLibrary_QuickSave::Result' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.ReloadCurrentSlot
// 0x0010 (0x0010 - 0x0000)
struct SavedGameBlueprintLibrary_ReloadCurrentSlot final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SavedGameBlueprintLibrary_ReloadCurrentSlot) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_ReloadCurrentSlot");
static_assert(sizeof(SavedGameBlueprintLibrary_ReloadCurrentSlot) == 0x000010, "Wrong size on SavedGameBlueprintLibrary_ReloadCurrentSlot");
static_assert(offsetof(SavedGameBlueprintLibrary_ReloadCurrentSlot, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_ReloadCurrentSlot::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_ReloadCurrentSlot, ReturnValue) == 0x000008, "Member 'SavedGameBlueprintLibrary_ReloadCurrentSlot::ReturnValue' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.RemoveLoadLock
// 0x0010 (0x0010 - 0x0000)
struct SavedGameBlueprintLibrary_RemoveLoadLock final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           LockTag;                                           // 0x0008(0x0008)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SavedGameBlueprintLibrary_RemoveLoadLock) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_RemoveLoadLock");
static_assert(sizeof(SavedGameBlueprintLibrary_RemoveLoadLock) == 0x000010, "Wrong size on SavedGameBlueprintLibrary_RemoveLoadLock");
static_assert(offsetof(SavedGameBlueprintLibrary_RemoveLoadLock, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_RemoveLoadLock::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_RemoveLoadLock, LockTag) == 0x000008, "Member 'SavedGameBlueprintLibrary_RemoveLoadLock::LockTag' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.RemoveSaveLock
// 0x0010 (0x0010 - 0x0000)
struct SavedGameBlueprintLibrary_RemoveSaveLock final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           LockTag;                                           // 0x0008(0x0008)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SavedGameBlueprintLibrary_RemoveSaveLock) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_RemoveSaveLock");
static_assert(sizeof(SavedGameBlueprintLibrary_RemoveSaveLock) == 0x000010, "Wrong size on SavedGameBlueprintLibrary_RemoveSaveLock");
static_assert(offsetof(SavedGameBlueprintLibrary_RemoveSaveLock, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_RemoveSaveLock::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_RemoveSaveLock, LockTag) == 0x000008, "Member 'SavedGameBlueprintLibrary_RemoveSaveLock::LockTag' has a wrong offset!");

// Function SavedGame.SavedGameBlueprintLibrary.SaveSlot
// 0x0050 (0x0050 - 0x0000)
struct SavedGameBlueprintLibrary_SaveSlot final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FLatentActionSaveGameData              LatentSaveGameData;                                // 0x0020(0x0020)(Parm, NativeAccessSpecifierPublic)
	ESavedGameActionResult                        Result;                                            // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SlotName;                                          // 0x0044(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SavedGameBlueprintLibrary_SaveSlot) == 0x000008, "Wrong alignment on SavedGameBlueprintLibrary_SaveSlot");
static_assert(sizeof(SavedGameBlueprintLibrary_SaveSlot) == 0x000050, "Wrong size on SavedGameBlueprintLibrary_SaveSlot");
static_assert(offsetof(SavedGameBlueprintLibrary_SaveSlot, WorldContextObject) == 0x000000, "Member 'SavedGameBlueprintLibrary_SaveSlot::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_SaveSlot, LatentInfo) == 0x000008, "Member 'SavedGameBlueprintLibrary_SaveSlot::LatentInfo' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_SaveSlot, LatentSaveGameData) == 0x000020, "Member 'SavedGameBlueprintLibrary_SaveSlot::LatentSaveGameData' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_SaveSlot, Result) == 0x000040, "Member 'SavedGameBlueprintLibrary_SaveSlot::Result' has a wrong offset!");
static_assert(offsetof(SavedGameBlueprintLibrary_SaveSlot, SlotName) == 0x000044, "Member 'SavedGameBlueprintLibrary_SaveSlot::SlotName' has a wrong offset!");

// Function SavedGame.SavedGameProfileInfo.GetPrettyName
// 0x0010 (0x0010 - 0x0000)
struct SavedGameProfileInfo_GetPrettyName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SavedGameProfileInfo_GetPrettyName) == 0x000008, "Wrong alignment on SavedGameProfileInfo_GetPrettyName");
static_assert(sizeof(SavedGameProfileInfo_GetPrettyName) == 0x000010, "Wrong size on SavedGameProfileInfo_GetPrettyName");
static_assert(offsetof(SavedGameProfileInfo_GetPrettyName, ReturnValue) == 0x000000, "Member 'SavedGameProfileInfo_GetPrettyName::ReturnValue' has a wrong offset!");

// Function SavedGame.SavedGameSlotInfo.GetThumbnail
// 0x0008 (0x0008 - 0x0000)
struct SavedGameSlotInfo_GetThumbnail final
{
public:
	class UTexture2D*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SavedGameSlotInfo_GetThumbnail) == 0x000008, "Wrong alignment on SavedGameSlotInfo_GetThumbnail");
static_assert(sizeof(SavedGameSlotInfo_GetThumbnail) == 0x000008, "Wrong size on SavedGameSlotInfo_GetThumbnail");
static_assert(offsetof(SavedGameSlotInfo_GetThumbnail, ReturnValue) == 0x000000, "Member 'SavedGameSlotInfo_GetThumbnail::ReturnValue' has a wrong offset!");

// Function SavedGame.SavedGameSubsystem.OnActorDestroyed
// 0x0008 (0x0008 - 0x0000)
struct SavedGameSubsystem_OnActorDestroyed final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SavedGameSubsystem_OnActorDestroyed) == 0x000008, "Wrong alignment on SavedGameSubsystem_OnActorDestroyed");
static_assert(sizeof(SavedGameSubsystem_OnActorDestroyed) == 0x000008, "Wrong size on SavedGameSubsystem_OnActorDestroyed");
static_assert(offsetof(SavedGameSubsystem_OnActorDestroyed, Actor) == 0x000000, "Member 'SavedGameSubsystem_OnActorDestroyed::Actor' has a wrong offset!");

// Function SavedGame.SavedGameSubsystem.OnWorldSettingsEndPlay
// 0x0010 (0x0010 - 0x0000)
struct SavedGameSubsystem_OnWorldSettingsEndPlay final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEndPlayReason                                EndPlayReason;                                     // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SavedGameSubsystem_OnWorldSettingsEndPlay) == 0x000008, "Wrong alignment on SavedGameSubsystem_OnWorldSettingsEndPlay");
static_assert(sizeof(SavedGameSubsystem_OnWorldSettingsEndPlay) == 0x000010, "Wrong size on SavedGameSubsystem_OnWorldSettingsEndPlay");
static_assert(offsetof(SavedGameSubsystem_OnWorldSettingsEndPlay, Actor) == 0x000000, "Member 'SavedGameSubsystem_OnWorldSettingsEndPlay::Actor' has a wrong offset!");
static_assert(offsetof(SavedGameSubsystem_OnWorldSettingsEndPlay, EndPlayReason) == 0x000008, "Member 'SavedGameSubsystem_OnWorldSettingsEndPlay::EndPlayReason' has a wrong offset!");

}

