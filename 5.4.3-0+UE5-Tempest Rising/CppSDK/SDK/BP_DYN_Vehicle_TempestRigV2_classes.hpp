#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DYN_Vehicle_TempestRigV2

#include "Basic.hpp"

#include "PhysicsCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Tempest_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DYN_Vehicle_TempestRigV2.BP_DYN_Vehicle_TempestRigV2_C
// 0x0090 (0x1E20 - 0x1D90)
class ABP_DYN_Vehicle_TempestRigV2_C final : public ATedVehicle_MobileRefinery
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1D90(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      PS_DustStructurePlacement_01_ParamSize;            // 0x1D98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          HitBox_2;                                          // 0x1DA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_SmokeDYNTemperstRigDmgMedium_Right;             // 0x1DA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_SmokeDYNTemperstRigDmgMedium_Left;              // 0x1DB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_SmokeDYNTemperstRigDmgLight_Right;              // 0x1DB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_SmokeDYNTemperstRigDmgLight_Left;               // 0x1DC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_SmokeDYNTemperstRigDmgHeavy_Right;              // 0x1DC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_SmokeDYNTemperstRigDmgHeavy_Left;               // 0x1DD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_TracksMark_All;                                 // 0x1DD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          HitBox_1;                                          // 0x1DE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Exhaust_1;                                      // 0x1DE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    FrontLight_2;                                      // 0x1DF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    FrontLight_1;                                      // 0x1DF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        Impusle_Multiplier;                                // 0x1E00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CachedActorLocation;                               // 0x1E08(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_DYN_Vehicle_TempestRigV2(int32 EntryPoint);
	void ReceiveBeginMovement();
	void ReceiveEndMovement();
	void ReceiveOnDeath();
	void ReceiveOnPawnReplaced(class ATedPawn* ReplacedBy);
	void ReceiveTickMovement(float Speed, float MaxSpeed);
	void ReceiveUpdateHealthEffects(float HealthPct);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DYN_Vehicle_TempestRigV2_C">();
	}
	static class ABP_DYN_Vehicle_TempestRigV2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DYN_Vehicle_TempestRigV2_C>();
	}
};
static_assert(alignof(ABP_DYN_Vehicle_TempestRigV2_C) == 0x000010, "Wrong alignment on ABP_DYN_Vehicle_TempestRigV2_C");
static_assert(sizeof(ABP_DYN_Vehicle_TempestRigV2_C) == 0x001E20, "Wrong size on ABP_DYN_Vehicle_TempestRigV2_C");
static_assert(offsetof(ABP_DYN_Vehicle_TempestRigV2_C, UberGraphFrame) == 0x001D90, "Member 'ABP_DYN_Vehicle_TempestRigV2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Vehicle_TempestRigV2_C, PS_DustStructurePlacement_01_ParamSize) == 0x001D98, "Member 'ABP_DYN_Vehicle_TempestRigV2_C::PS_DustStructurePlacement_01_ParamSize' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Vehicle_TempestRigV2_C, HitBox_2) == 0x001DA0, "Member 'ABP_DYN_Vehicle_TempestRigV2_C::HitBox_2' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Vehicle_TempestRigV2_C, PS_SmokeDYNTemperstRigDmgMedium_Right) == 0x001DA8, "Member 'ABP_DYN_Vehicle_TempestRigV2_C::PS_SmokeDYNTemperstRigDmgMedium_Right' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Vehicle_TempestRigV2_C, PS_SmokeDYNTemperstRigDmgMedium_Left) == 0x001DB0, "Member 'ABP_DYN_Vehicle_TempestRigV2_C::PS_SmokeDYNTemperstRigDmgMedium_Left' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Vehicle_TempestRigV2_C, PS_SmokeDYNTemperstRigDmgLight_Right) == 0x001DB8, "Member 'ABP_DYN_Vehicle_TempestRigV2_C::PS_SmokeDYNTemperstRigDmgLight_Right' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Vehicle_TempestRigV2_C, PS_SmokeDYNTemperstRigDmgLight_Left) == 0x001DC0, "Member 'ABP_DYN_Vehicle_TempestRigV2_C::PS_SmokeDYNTemperstRigDmgLight_Left' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Vehicle_TempestRigV2_C, PS_SmokeDYNTemperstRigDmgHeavy_Right) == 0x001DC8, "Member 'ABP_DYN_Vehicle_TempestRigV2_C::PS_SmokeDYNTemperstRigDmgHeavy_Right' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Vehicle_TempestRigV2_C, PS_SmokeDYNTemperstRigDmgHeavy_Left) == 0x001DD0, "Member 'ABP_DYN_Vehicle_TempestRigV2_C::PS_SmokeDYNTemperstRigDmgHeavy_Left' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Vehicle_TempestRigV2_C, PS_TracksMark_All) == 0x001DD8, "Member 'ABP_DYN_Vehicle_TempestRigV2_C::PS_TracksMark_All' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Vehicle_TempestRigV2_C, HitBox_1) == 0x001DE0, "Member 'ABP_DYN_Vehicle_TempestRigV2_C::HitBox_1' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Vehicle_TempestRigV2_C, NS_Exhaust_1) == 0x001DE8, "Member 'ABP_DYN_Vehicle_TempestRigV2_C::NS_Exhaust_1' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Vehicle_TempestRigV2_C, FrontLight_2) == 0x001DF0, "Member 'ABP_DYN_Vehicle_TempestRigV2_C::FrontLight_2' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Vehicle_TempestRigV2_C, FrontLight_1) == 0x001DF8, "Member 'ABP_DYN_Vehicle_TempestRigV2_C::FrontLight_1' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Vehicle_TempestRigV2_C, Impusle_Multiplier) == 0x001E00, "Member 'ABP_DYN_Vehicle_TempestRigV2_C::Impusle_Multiplier' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Vehicle_TempestRigV2_C, CachedActorLocation) == 0x001E08, "Member 'ABP_DYN_Vehicle_TempestRigV2_C::CachedActorLocation' has a wrong offset!");

}

