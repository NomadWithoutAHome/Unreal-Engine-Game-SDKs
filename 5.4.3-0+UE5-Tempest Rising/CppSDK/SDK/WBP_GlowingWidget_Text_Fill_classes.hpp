#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GlowingWidget_Text_Fill

#include "Basic.hpp"

#include "WBP_GlowingWidget_Text_Core_classes.hpp"
#include "Slate_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_GlowingWidget_Text_Fill.WBP_GlowingWidget_Text_Fill_C
// 0x0020 (0x04C0 - 0x04A0)
class UWBP_GlowingWidget_Text_Fill_C final : public UWBP_GlowingWidget_Text_Core_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WBP_GlowingWidget_Text_Fill_C;      // 0x04A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             TextBlock_Glow;                                    // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Text;                                    // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EHorizontalAlignment                          HorizontalAlignment;                               // 0x04B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            VerticalAlignment;                                 // 0x04B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Justification;                                     // 0x04BA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoWrap;                                          // 0x04BB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextWrappingPolicy                           WrappingPolicy;                                    // 0x04BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextOverflowPolicy                           OverflowPolicy;                                    // 0x04BD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetFontMaterial(class UMaterialInterface* Material);
	void PreConstruct(bool IsDesignTime);
	void GetTextWidget(class UTextBlock** OutText);
	void GetGlowTextWidget(class UTextBlock** OutText);
	void GetForegroundTextWidget(class UTextBlock** OutText);
	void ExecuteUbergraph_WBP_GlowingWidget_Text_Fill(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_GlowingWidget_Text_Fill_C">();
	}
	static class UWBP_GlowingWidget_Text_Fill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_GlowingWidget_Text_Fill_C>();
	}
};
static_assert(alignof(UWBP_GlowingWidget_Text_Fill_C) == 0x000008, "Wrong alignment on UWBP_GlowingWidget_Text_Fill_C");
static_assert(sizeof(UWBP_GlowingWidget_Text_Fill_C) == 0x0004C0, "Wrong size on UWBP_GlowingWidget_Text_Fill_C");
static_assert(offsetof(UWBP_GlowingWidget_Text_Fill_C, UberGraphFrame_WBP_GlowingWidget_Text_Fill_C) == 0x0004A0, "Member 'UWBP_GlowingWidget_Text_Fill_C::UberGraphFrame_WBP_GlowingWidget_Text_Fill_C' has a wrong offset!");
static_assert(offsetof(UWBP_GlowingWidget_Text_Fill_C, TextBlock_Glow) == 0x0004A8, "Member 'UWBP_GlowingWidget_Text_Fill_C::TextBlock_Glow' has a wrong offset!");
static_assert(offsetof(UWBP_GlowingWidget_Text_Fill_C, TextBlock_Text) == 0x0004B0, "Member 'UWBP_GlowingWidget_Text_Fill_C::TextBlock_Text' has a wrong offset!");
static_assert(offsetof(UWBP_GlowingWidget_Text_Fill_C, HorizontalAlignment) == 0x0004B8, "Member 'UWBP_GlowingWidget_Text_Fill_C::HorizontalAlignment' has a wrong offset!");
static_assert(offsetof(UWBP_GlowingWidget_Text_Fill_C, VerticalAlignment) == 0x0004B9, "Member 'UWBP_GlowingWidget_Text_Fill_C::VerticalAlignment' has a wrong offset!");
static_assert(offsetof(UWBP_GlowingWidget_Text_Fill_C, Justification) == 0x0004BA, "Member 'UWBP_GlowingWidget_Text_Fill_C::Justification' has a wrong offset!");
static_assert(offsetof(UWBP_GlowingWidget_Text_Fill_C, AutoWrap) == 0x0004BB, "Member 'UWBP_GlowingWidget_Text_Fill_C::AutoWrap' has a wrong offset!");
static_assert(offsetof(UWBP_GlowingWidget_Text_Fill_C, WrappingPolicy) == 0x0004BC, "Member 'UWBP_GlowingWidget_Text_Fill_C::WrappingPolicy' has a wrong offset!");
static_assert(offsetof(UWBP_GlowingWidget_Text_Fill_C, OverflowPolicy) == 0x0004BD, "Member 'UWBP_GlowingWidget_Text_Fill_C::OverflowPolicy' has a wrong offset!");

}

