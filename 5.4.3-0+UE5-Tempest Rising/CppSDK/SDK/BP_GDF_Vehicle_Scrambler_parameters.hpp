#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GDF_Vehicle_Scrambler

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_GDF_Vehicle_Scrambler.BP_GDF_Vehicle_Scrambler_C.ExecuteUbergraph_BP_GDF_Vehicle_Scrambler
// 0x0348 (0x0348 - 0x0000)
struct BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAbilityAsync_WaitGameplayTagAdded*     CallFunc_WaitGameplayTagAddToActor_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Temp_struct_Variable;                              // 0x0030(0x00D8)(ConstParm, ContainsInstancedReference)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_1;     // 0x0108(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAbilityAsync_WaitGameplayTagRemoved*   CallFunc_WaitGameplayTagRemoveFromActor_ReturnValue; // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_HealthPct;                            // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_127[0x1];                                      // 0x0127(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0128(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_4;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0140(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x0238(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_1;       // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_2;       // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler) == 0x000008, "Wrong alignment on BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler");
static_assert(sizeof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler) == 0x000348, "Wrong size on BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, EntryPoint) == 0x000000, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, CallFunc_IsDedicatedServer_ReturnValue) == 0x000014, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000015, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000016, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x000017, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000018, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, CallFunc_WaitGameplayTagAddToActor_ReturnValue) == 0x000020, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::CallFunc_WaitGameplayTagAddToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, Temp_struct_Variable) == 0x000030, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, CallFunc_MakeLiteralGameplayTag_ReturnValue_1) == 0x000108, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::CallFunc_MakeLiteralGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, CallFunc_WaitGameplayTagRemoveFromActor_ReturnValue) == 0x000110, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::CallFunc_WaitGameplayTagRemoveFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, CallFunc_IsValid_ReturnValue_1) == 0x000118, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, K2Node_Event_HealthPct) == 0x00011C, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::K2Node_Event_HealthPct' has a wrong offset!");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000120, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000121, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x000122, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, CallFunc_Not_PreBool_ReturnValue) == 0x000123, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, CallFunc_Not_PreBool_ReturnValue_1) == 0x000124, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, CallFunc_BooleanAND_ReturnValue) == 0x000125, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, CallFunc_BooleanAND_ReturnValue_1) == 0x000126, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, K2Node_CreateDelegate_OutputDelegate_1) == 0x000128, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, CallFunc_IsDedicatedServer_ReturnValue_4) == 0x000138, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::CallFunc_IsDedicatedServer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000140, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x000238, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000330, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, CallFunc_Less_DoubleDouble_A_ImplicitCast_1) == 0x000338, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::CallFunc_Less_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler, CallFunc_Less_DoubleDouble_A_ImplicitCast_2) == 0x000340, "Member 'BP_GDF_Vehicle_Scrambler_C_ExecuteUbergraph_BP_GDF_Vehicle_Scrambler::CallFunc_Less_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");

// Function BP_GDF_Vehicle_Scrambler.BP_GDF_Vehicle_Scrambler_C.ReceiveUpdateHealthEffects
// 0x0004 (0x0004 - 0x0000)
struct BP_GDF_Vehicle_Scrambler_C_ReceiveUpdateHealthEffects final
{
public:
	float                                         HealthPct;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GDF_Vehicle_Scrambler_C_ReceiveUpdateHealthEffects) == 0x000004, "Wrong alignment on BP_GDF_Vehicle_Scrambler_C_ReceiveUpdateHealthEffects");
static_assert(sizeof(BP_GDF_Vehicle_Scrambler_C_ReceiveUpdateHealthEffects) == 0x000004, "Wrong size on BP_GDF_Vehicle_Scrambler_C_ReceiveUpdateHealthEffects");
static_assert(offsetof(BP_GDF_Vehicle_Scrambler_C_ReceiveUpdateHealthEffects, HealthPct) == 0x000000, "Member 'BP_GDF_Vehicle_Scrambler_C_ReceiveUpdateHealthEffects::HealthPct' has a wrong offset!");

}

