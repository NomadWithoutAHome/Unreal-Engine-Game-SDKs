#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GlowingWidget_Text_Core

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_GlowingWidget_Text_Core.WBP_GlowingWidget_Text_Core_C.ShowGlow
// 0x0018 (0x0018 - 0x0000)
struct WBP_GlowingWidget_Text_Core_C_ShowGlow final
{
public:
	bool                                          bInShow;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             CallFunc_GetGlowTextWidget_OutText;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlowingWidget_Text_Core_C_ShowGlow) == 0x000008, "Wrong alignment on WBP_GlowingWidget_Text_Core_C_ShowGlow");
static_assert(sizeof(WBP_GlowingWidget_Text_Core_C_ShowGlow) == 0x000018, "Wrong size on WBP_GlowingWidget_Text_Core_C_ShowGlow");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_ShowGlow, bInShow) == 0x000000, "Member 'WBP_GlowingWidget_Text_Core_C_ShowGlow::bInShow' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_ShowGlow, Temp_bool_Variable) == 0x000001, "Member 'WBP_GlowingWidget_Text_Core_C_ShowGlow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_ShowGlow, Temp_byte_Variable) == 0x000002, "Member 'WBP_GlowingWidget_Text_Core_C_ShowGlow::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_ShowGlow, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_GlowingWidget_Text_Core_C_ShowGlow::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_ShowGlow, CallFunc_GetGlowTextWidget_OutText) == 0x000008, "Member 'WBP_GlowingWidget_Text_Core_C_ShowGlow::CallFunc_GetGlowTextWidget_OutText' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_ShowGlow, K2Node_Select_Default) == 0x000010, "Member 'WBP_GlowingWidget_Text_Core_C_ShowGlow::K2Node_Select_Default' has a wrong offset!");

// Function WBP_GlowingWidget_Text_Core.WBP_GlowingWidget_Text_Core_C.SetTextColor
// 0x0020 (0x0020 - 0x0000)
struct WBP_GlowingWidget_Text_Core_C_SetTextColor final
{
public:
	struct FSlateColor                            InColor;                                           // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             CallFunc_GetForegroundTextWidget_OutText;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlowingWidget_Text_Core_C_SetTextColor) == 0x000008, "Wrong alignment on WBP_GlowingWidget_Text_Core_C_SetTextColor");
static_assert(sizeof(WBP_GlowingWidget_Text_Core_C_SetTextColor) == 0x000020, "Wrong size on WBP_GlowingWidget_Text_Core_C_SetTextColor");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_SetTextColor, InColor) == 0x000000, "Member 'WBP_GlowingWidget_Text_Core_C_SetTextColor::InColor' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_SetTextColor, CallFunc_GetForegroundTextWidget_OutText) == 0x000018, "Member 'WBP_GlowingWidget_Text_Core_C_SetTextColor::CallFunc_GetForegroundTextWidget_OutText' has a wrong offset!");

// Function WBP_GlowingWidget_Text_Core.WBP_GlowingWidget_Text_Core_C.SetText
// 0x0060 (0x0060 - 0x0000)
struct WBP_GlowingWidget_Text_Core_C_SetText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bInUpperCase;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTextBlock*>                     CallFunc_GetTextWidgets_OutTextWidgets;            // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UTextBlock*                             CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0040(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x0050(0x0010)()
};
static_assert(alignof(WBP_GlowingWidget_Text_Core_C_SetText) == 0x000008, "Wrong alignment on WBP_GlowingWidget_Text_Core_C_SetText");
static_assert(sizeof(WBP_GlowingWidget_Text_Core_C_SetText) == 0x000060, "Wrong size on WBP_GlowingWidget_Text_Core_C_SetText");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_SetText, InText) == 0x000000, "Member 'WBP_GlowingWidget_Text_Core_C_SetText::InText' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_SetText, bInUpperCase) == 0x000010, "Member 'WBP_GlowingWidget_Text_Core_C_SetText::bInUpperCase' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_SetText, Temp_int_Variable) == 0x000014, "Member 'WBP_GlowingWidget_Text_Core_C_SetText::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_SetText, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WBP_GlowingWidget_Text_Core_C_SetText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_SetText, Temp_bool_Variable) == 0x00001C, "Member 'WBP_GlowingWidget_Text_Core_C_SetText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_SetText, CallFunc_GetTextWidgets_OutTextWidgets) == 0x000020, "Member 'WBP_GlowingWidget_Text_Core_C_SetText::CallFunc_GetTextWidgets_OutTextWidgets' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_SetText, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_GlowingWidget_Text_Core_C_SetText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_SetText, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'WBP_GlowingWidget_Text_Core_C_SetText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_SetText, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'WBP_GlowingWidget_Text_Core_C_SetText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_SetText, CallFunc_TextToUpper_ReturnValue) == 0x000040, "Member 'WBP_GlowingWidget_Text_Core_C_SetText::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_SetText, K2Node_Select_Default) == 0x000050, "Member 'WBP_GlowingWidget_Text_Core_C_SetText::K2Node_Select_Default' has a wrong offset!");

// Function WBP_GlowingWidget_Text_Core.WBP_GlowingWidget_Text_Core_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_GlowingWidget_Text_Core_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlowingWidget_Text_Core_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_GlowingWidget_Text_Core_C_PreConstruct");
static_assert(sizeof(WBP_GlowingWidget_Text_Core_C_PreConstruct) == 0x000001, "Wrong size on WBP_GlowingWidget_Text_Core_C_PreConstruct");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_GlowingWidget_Text_Core_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_GlowingWidget_Text_Core.WBP_GlowingWidget_Text_Core_C.OnSetStyleAsset
// 0x0008 (0x0008 - 0x0000)
struct WBP_GlowingWidget_Text_Core_C_OnSetStyleAsset final
{
public:
	class USlateWidgetStyleAsset*                 InAsset;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlowingWidget_Text_Core_C_OnSetStyleAsset) == 0x000008, "Wrong alignment on WBP_GlowingWidget_Text_Core_C_OnSetStyleAsset");
static_assert(sizeof(WBP_GlowingWidget_Text_Core_C_OnSetStyleAsset) == 0x000008, "Wrong size on WBP_GlowingWidget_Text_Core_C_OnSetStyleAsset");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_OnSetStyleAsset, InAsset) == 0x000000, "Member 'WBP_GlowingWidget_Text_Core_C_OnSetStyleAsset::InAsset' has a wrong offset!");

// Function WBP_GlowingWidget_Text_Core.WBP_GlowingWidget_Text_Core_C.K2_OnTextWidgetSetUseSecondaryColor
// 0x0001 (0x0001 - 0x0000)
struct WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetUseSecondaryColor final
{
public:
	bool                                          bInUseSecondaryColor;                              // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetUseSecondaryColor) == 0x000001, "Wrong alignment on WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetUseSecondaryColor");
static_assert(sizeof(WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetUseSecondaryColor) == 0x000001, "Wrong size on WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetUseSecondaryColor");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetUseSecondaryColor, bInUseSecondaryColor) == 0x000000, "Member 'WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetUseSecondaryColor::bInUseSecondaryColor' has a wrong offset!");

// Function WBP_GlowingWidget_Text_Core.WBP_GlowingWidget_Text_Core_C.K2_OnTextWidgetSetText
// 0x0010 (0x0010 - 0x0000)
struct WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetText) == 0x000008, "Wrong alignment on WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetText");
static_assert(sizeof(WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetText) == 0x000010, "Wrong size on WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetText");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetText, InText) == 0x000000, "Member 'WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetText::InText' has a wrong offset!");

// Function WBP_GlowingWidget_Text_Core.WBP_GlowingWidget_Text_Core_C.K2_OnTextWidgetSetSecondaryColor
// 0x0018 (0x0018 - 0x0000)
struct WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetSecondaryColor final
{
public:
	struct FLinearColor                           InColor;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetGlowEffect_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetSecondaryColor) == 0x000008, "Wrong alignment on WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetSecondaryColor");
static_assert(sizeof(WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetSecondaryColor) == 0x000018, "Wrong size on WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetSecondaryColor");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetSecondaryColor, InColor) == 0x000000, "Member 'WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetSecondaryColor::InColor' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetSecondaryColor, CallFunc_GetGlowEffect_ReturnValue) == 0x000010, "Member 'WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetSecondaryColor::CallFunc_GetGlowEffect_ReturnValue' has a wrong offset!");

// Function WBP_GlowingWidget_Text_Core.WBP_GlowingWidget_Text_Core_C.K2_OnTextWidgetSetPrimaryColor
// 0x0024 (0x0024 - 0x0000)
struct WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetPrimaryColor final
{
public:
	struct FLinearColor                           InColor;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0010(0x0014)()
};
static_assert(alignof(WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetPrimaryColor) == 0x000004, "Wrong alignment on WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetPrimaryColor");
static_assert(sizeof(WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetPrimaryColor) == 0x000024, "Wrong size on WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetPrimaryColor");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetPrimaryColor, InColor) == 0x000000, "Member 'WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetPrimaryColor::InColor' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetPrimaryColor, K2Node_MakeStruct_SlateColor) == 0x000010, "Member 'WBP_GlowingWidget_Text_Core_C_K2_OnTextWidgetSetPrimaryColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function WBP_GlowingWidget_Text_Core.WBP_GlowingWidget_Text_Core_C.GetTextWidgets
// 0x0030 (0x0030 - 0x0000)
struct WBP_GlowingWidget_Text_Core_C_GetTextWidgets final
{
public:
	TArray<class UTextBlock*>                     OutTextWidgets;                                    // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	class UTextBlock*                             CallFunc_GetGlowTextWidget_OutText;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             CallFunc_GetForegroundTextWidget_OutText;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UTextBlock*>                     K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_GlowingWidget_Text_Core_C_GetTextWidgets) == 0x000008, "Wrong alignment on WBP_GlowingWidget_Text_Core_C_GetTextWidgets");
static_assert(sizeof(WBP_GlowingWidget_Text_Core_C_GetTextWidgets) == 0x000030, "Wrong size on WBP_GlowingWidget_Text_Core_C_GetTextWidgets");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_GetTextWidgets, OutTextWidgets) == 0x000000, "Member 'WBP_GlowingWidget_Text_Core_C_GetTextWidgets::OutTextWidgets' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_GetTextWidgets, CallFunc_GetGlowTextWidget_OutText) == 0x000010, "Member 'WBP_GlowingWidget_Text_Core_C_GetTextWidgets::CallFunc_GetGlowTextWidget_OutText' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_GetTextWidgets, CallFunc_GetForegroundTextWidget_OutText) == 0x000018, "Member 'WBP_GlowingWidget_Text_Core_C_GetTextWidgets::CallFunc_GetForegroundTextWidget_OutText' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_GetTextWidgets, K2Node_MakeArray_Array) == 0x000020, "Member 'WBP_GlowingWidget_Text_Core_C_GetTextWidgets::K2Node_MakeArray_Array' has a wrong offset!");

// Function WBP_GlowingWidget_Text_Core.WBP_GlowingWidget_Text_Core_C.GetGlowTextWidget
// 0x0008 (0x0008 - 0x0000)
struct WBP_GlowingWidget_Text_Core_C_GetGlowTextWidget final
{
public:
	class UTextBlock*                             OutText;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlowingWidget_Text_Core_C_GetGlowTextWidget) == 0x000008, "Wrong alignment on WBP_GlowingWidget_Text_Core_C_GetGlowTextWidget");
static_assert(sizeof(WBP_GlowingWidget_Text_Core_C_GetGlowTextWidget) == 0x000008, "Wrong size on WBP_GlowingWidget_Text_Core_C_GetGlowTextWidget");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_GetGlowTextWidget, OutText) == 0x000000, "Member 'WBP_GlowingWidget_Text_Core_C_GetGlowTextWidget::OutText' has a wrong offset!");

// Function WBP_GlowingWidget_Text_Core.WBP_GlowingWidget_Text_Core_C.GetGlowEffect
// 0x0010 (0x0010 - 0x0000)
struct WBP_GlowingWidget_Text_Core_C_GetGlowEffect final
{
public:
	class UMaterialInstanceDynamic*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetEffectMaterial_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlowingWidget_Text_Core_C_GetGlowEffect) == 0x000008, "Wrong alignment on WBP_GlowingWidget_Text_Core_C_GetGlowEffect");
static_assert(sizeof(WBP_GlowingWidget_Text_Core_C_GetGlowEffect) == 0x000010, "Wrong size on WBP_GlowingWidget_Text_Core_C_GetGlowEffect");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_GetGlowEffect, ReturnValue) == 0x000000, "Member 'WBP_GlowingWidget_Text_Core_C_GetGlowEffect::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_GetGlowEffect, CallFunc_GetEffectMaterial_ReturnValue) == 0x000008, "Member 'WBP_GlowingWidget_Text_Core_C_GetGlowEffect::CallFunc_GetEffectMaterial_ReturnValue' has a wrong offset!");

// Function WBP_GlowingWidget_Text_Core.WBP_GlowingWidget_Text_Core_C.GetForegroundTextWidget
// 0x0008 (0x0008 - 0x0000)
struct WBP_GlowingWidget_Text_Core_C_GetForegroundTextWidget final
{
public:
	class UTextBlock*                             OutText;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlowingWidget_Text_Core_C_GetForegroundTextWidget) == 0x000008, "Wrong alignment on WBP_GlowingWidget_Text_Core_C_GetForegroundTextWidget");
static_assert(sizeof(WBP_GlowingWidget_Text_Core_C_GetForegroundTextWidget) == 0x000008, "Wrong size on WBP_GlowingWidget_Text_Core_C_GetForegroundTextWidget");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_GetForegroundTextWidget, OutText) == 0x000000, "Member 'WBP_GlowingWidget_Text_Core_C_GetForegroundTextWidget::OutText' has a wrong offset!");

// Function WBP_GlowingWidget_Text_Core.WBP_GlowingWidget_Text_Core_C.ExecuteUbergraph_WBP_GlowingWidget_Text_Core
// 0x0068 (0x0068 - 0x0000)
struct WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTextBlock*>                     CallFunc_GetTextWidgets_OutTextWidgets;            // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTextBlock*>                     CallFunc_GetTextWidgets_OutTextWidgets_1;          // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USlateWidgetStyleAsset*                 K2Node_Event_InAsset;                              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core) == 0x000008, "Wrong alignment on WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core");
static_assert(sizeof(WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core) == 0x000068, "Wrong size on WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core, EntryPoint) == 0x000000, "Member 'WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core, CallFunc_GetTextWidgets_OutTextWidgets) == 0x000008, "Member 'WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core::CallFunc_GetTextWidgets_OutTextWidgets' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core, Temp_int_Variable) == 0x000018, "Member 'WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core, Temp_int_Variable_1) == 0x000024, "Member 'WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core, K2Node_Event_IsDesignTime) == 0x000039, "Member 'WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core, CallFunc_GetTextWidgets_OutTextWidgets_1) == 0x000040, "Member 'WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core::CallFunc_GetTextWidgets_OutTextWidgets_1' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core, K2Node_Event_InAsset) == 0x000050, "Member 'WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core::K2Node_Event_InAsset' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core, CallFunc_Less_IntInt_ReturnValue_1) == 0x000064, "Member 'WBP_GlowingWidget_Text_Core_C_ExecuteUbergraph_WBP_GlowingWidget_Text_Core::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

}

