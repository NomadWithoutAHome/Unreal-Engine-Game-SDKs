#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TedUpgradeLogic_PlanPowerAdjustement

#include "Basic.hpp"

#include "Tempest_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function TedUpgradeLogic_PlanPowerAdjustement.TedUpgradeLogic_PlanPowerAdjustement_C.K2_ApplyUpgrade
// 0x00C0 (0x00C0 - 0x0000)
struct TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade final
{
public:
	struct FTedActiveUpgrade                      InActiveUpgrade;                                   // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         TotalPlansCost;                                    // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ActivePlansNum;                                    // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTedPlayerData*                         CallFunc_GetPlayerData_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetOwnedTags_ReturnValue;                 // 0x0058(0x0020)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x00B4(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade) == 0x000008, "Wrong alignment on TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade");
static_assert(sizeof(TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade) == 0x0000C0, "Wrong size on TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade");
static_assert(offsetof(TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade, InActiveUpgrade) == 0x000000, "Member 'TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade::InActiveUpgrade' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade, TotalPlansCost) == 0x000040, "Member 'TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade::TotalPlansCost' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade, ActivePlansNum) == 0x000044, "Member 'TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade::ActivePlansNum' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade, Temp_int_Array_Index_Variable) == 0x000048, "Member 'TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade, CallFunc_IsValid_ReturnValue) == 0x00004C, "Member 'TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade, CallFunc_GetPlayerData_ReturnValue) == 0x000050, "Member 'TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade::CallFunc_GetPlayerData_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade, CallFunc_GetOwnedTags_ReturnValue) == 0x000058, "Member 'TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade::CallFunc_GetOwnedTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade, CallFunc_IsValid_ReturnValue_1) == 0x000078, "Member 'TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade, CallFunc_Greater_IntInt_ReturnValue) == 0x000080, "Member 'TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade, CallFunc_Divide_IntInt_ReturnValue) == 0x000088, "Member 'TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade, CallFunc_Multiply_IntInt_ReturnValue) == 0x00008C, "Member 'TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade, CallFunc_Add_IntInt_ReturnValue_1) == 0x000090, "Member 'TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade, CallFunc_Add_IntInt_ReturnValue_2) == 0x000094, "Member 'TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade, CallFunc_Add_IntInt_ReturnValue_3) == 0x000098, "Member 'TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade, Temp_int_Variable) == 0x00009C, "Member 'TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade, K2Node_MakeArray_Array) == 0x0000A0, "Member 'TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade, CallFunc_Array_Get_Item) == 0x0000B4, "Member 'TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade, CallFunc_HasTag_ReturnValue) == 0x0000BD, "Member 'TedUpgradeLogic_PlanPowerAdjustement_C_K2_ApplyUpgrade::CallFunc_HasTag_ReturnValue' has a wrong offset!");

}

