#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HUD_ObjectiveSlot

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Tempest_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.ExecuteUbergraph_WBP_HUD_ObjectiveSlot
// 0x0004 (0x0004 - 0x0000)
struct WBP_HUD_ObjectiveSlot_C_ExecuteUbergraph_WBP_HUD_ObjectiveSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_ObjectiveSlot_C_ExecuteUbergraph_WBP_HUD_ObjectiveSlot) == 0x000004, "Wrong alignment on WBP_HUD_ObjectiveSlot_C_ExecuteUbergraph_WBP_HUD_ObjectiveSlot");
static_assert(sizeof(WBP_HUD_ObjectiveSlot_C_ExecuteUbergraph_WBP_HUD_ObjectiveSlot) == 0x000004, "Wrong size on WBP_HUD_ObjectiveSlot_C_ExecuteUbergraph_WBP_HUD_ObjectiveSlot");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_ExecuteUbergraph_WBP_HUD_ObjectiveSlot, EntryPoint) == 0x000000, "Member 'WBP_HUD_ObjectiveSlot_C_ExecuteUbergraph_WBP_HUD_ObjectiveSlot::EntryPoint' has a wrong offset!");

// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.GetWidgetAnimations
// 0x0040 (0x0040 - 0x0000)
struct WBP_HUD_ObjectiveSlot_C_GetWidgetAnimations final
{
public:
	TArray<class UWidgetAnimation*>               OutAnimations;                                     // 0x0000(0x0010)(Parm, OutParm)
	class UWidgetAnimation*                       CallFunc_GetWidgetAnimation_OutAnim;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CallFunc_GetWidgetAnimation_OutAnim_1;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CallFunc_GetWidgetAnimation_OutAnim_2;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CallFunc_GetWidgetAnimation_OutAnim_3;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidgetAnimation*>               K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm)
};
static_assert(alignof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimations) == 0x000008, "Wrong alignment on WBP_HUD_ObjectiveSlot_C_GetWidgetAnimations");
static_assert(sizeof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimations) == 0x000040, "Wrong size on WBP_HUD_ObjectiveSlot_C_GetWidgetAnimations");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimations, OutAnimations) == 0x000000, "Member 'WBP_HUD_ObjectiveSlot_C_GetWidgetAnimations::OutAnimations' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimations, CallFunc_GetWidgetAnimation_OutAnim) == 0x000010, "Member 'WBP_HUD_ObjectiveSlot_C_GetWidgetAnimations::CallFunc_GetWidgetAnimation_OutAnim' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimations, CallFunc_GetWidgetAnimation_OutAnim_1) == 0x000018, "Member 'WBP_HUD_ObjectiveSlot_C_GetWidgetAnimations::CallFunc_GetWidgetAnimation_OutAnim_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimations, CallFunc_GetWidgetAnimation_OutAnim_2) == 0x000020, "Member 'WBP_HUD_ObjectiveSlot_C_GetWidgetAnimations::CallFunc_GetWidgetAnimation_OutAnim_2' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimations, CallFunc_GetWidgetAnimation_OutAnim_3) == 0x000028, "Member 'WBP_HUD_ObjectiveSlot_C_GetWidgetAnimations::CallFunc_GetWidgetAnimation_OutAnim_3' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimations, K2Node_MakeArray_Array) == 0x000030, "Member 'WBP_HUD_ObjectiveSlot_C_GetWidgetAnimations::K2Node_MakeArray_Array' has a wrong offset!");

// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.GetWidgetAnimationTag
// 0x0068 (0x0068 - 0x0000)
struct WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag final
{
public:
	class UWidgetAnimation*                       InAnim;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           OutAnimTag;                                        // 0x0008(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           LocalTag;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   LocalAnimTags;                                     // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm)
	class UWidgetAnimation*                       CallFunc_GetWidgetAnimation_OutAnim;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag) == 0x000008, "Wrong alignment on WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag");
static_assert(sizeof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag) == 0x000068, "Wrong size on WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag, InAnim) == 0x000000, "Member 'WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag::InAnim' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag, OutAnimTag) == 0x000008, "Member 'WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag::OutAnimTag' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag, LocalTag) == 0x000010, "Member 'WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag::LocalTag' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag, LocalAnimTags) == 0x000018, "Member 'WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag::LocalAnimTags' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag, Temp_int_Array_Index_Variable) == 0x000028, "Member 'WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag, K2Node_MakeArray_Array) == 0x000038, "Member 'WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag, CallFunc_GetWidgetAnimation_OutAnim) == 0x000048, "Member 'WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag::CallFunc_GetWidgetAnimation_OutAnim' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag, CallFunc_Array_Get_Item) == 0x000050, "Member 'WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000058, "Member 'WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.OnActivateState
// 0x0003 (0x0003 - 0x0000)
struct WBP_HUD_ObjectiveSlot_C_OnActivateState final
{
public:
	ETedContentSlotState                          InState;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInActivated;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_ObjectiveSlot_C_OnActivateState) == 0x000001, "Wrong alignment on WBP_HUD_ObjectiveSlot_C_OnActivateState");
static_assert(sizeof(WBP_HUD_ObjectiveSlot_C_OnActivateState) == 0x000003, "Wrong size on WBP_HUD_ObjectiveSlot_C_OnActivateState");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_OnActivateState, InState) == 0x000000, "Member 'WBP_HUD_ObjectiveSlot_C_OnActivateState::InState' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_OnActivateState, bInActivated) == 0x000001, "Member 'WBP_HUD_ObjectiveSlot_C_OnActivateState::bInActivated' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_OnActivateState, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'WBP_HUD_ObjectiveSlot_C_OnActivateState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.OnAnimationFinished
// 0x0018 (0x0018 - 0x0000)
struct WBP_HUD_ObjectiveSlot_C_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetWidgetAnimationTag_OutAnimTag;         // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_ObjectiveSlot_C_OnAnimationFinished) == 0x000008, "Wrong alignment on WBP_HUD_ObjectiveSlot_C_OnAnimationFinished");
static_assert(sizeof(WBP_HUD_ObjectiveSlot_C_OnAnimationFinished) == 0x000018, "Wrong size on WBP_HUD_ObjectiveSlot_C_OnAnimationFinished");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_OnAnimationFinished, Animation) == 0x000000, "Member 'WBP_HUD_ObjectiveSlot_C_OnAnimationFinished::Animation' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_OnAnimationFinished, CallFunc_GetWidgetAnimationTag_OutAnimTag) == 0x000008, "Member 'WBP_HUD_ObjectiveSlot_C_OnAnimationFinished::CallFunc_GetWidgetAnimationTag_OutAnimTag' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_OnAnimationFinished, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000010, "Member 'WBP_HUD_ObjectiveSlot_C_OnAnimationFinished::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_OnAnimationFinished, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000011, "Member 'WBP_HUD_ObjectiveSlot_C_OnAnimationFinished::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");

// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.OnAnimationStarted
// 0x0018 (0x0018 - 0x0000)
struct WBP_HUD_ObjectiveSlot_C_OnAnimationStarted final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetWidgetAnimationTag_OutAnimTag;         // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_ObjectiveSlot_C_OnAnimationStarted) == 0x000008, "Wrong alignment on WBP_HUD_ObjectiveSlot_C_OnAnimationStarted");
static_assert(sizeof(WBP_HUD_ObjectiveSlot_C_OnAnimationStarted) == 0x000018, "Wrong size on WBP_HUD_ObjectiveSlot_C_OnAnimationStarted");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_OnAnimationStarted, Animation) == 0x000000, "Member 'WBP_HUD_ObjectiveSlot_C_OnAnimationStarted::Animation' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_OnAnimationStarted, CallFunc_GetWidgetAnimationTag_OutAnimTag) == 0x000008, "Member 'WBP_HUD_ObjectiveSlot_C_OnAnimationStarted::CallFunc_GetWidgetAnimationTag_OutAnimTag' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_OnAnimationStarted, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000010, "Member 'WBP_HUD_ObjectiveSlot_C_OnAnimationStarted::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");

// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.OnPlayWidgetAnimation
// 0x0028 (0x0028 - 0x0000)
struct WBP_HUD_ObjectiveSlot_C_OnPlayWidgetAnimation final
{
public:
	struct FGameplayTag                           InAnim;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LocalAnimToPlay;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETedFaction                                   CallFunc_BranchUITheme_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       CallFunc_GetWidgetAnimation_OutAnim;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_ObjectiveSlot_C_OnPlayWidgetAnimation) == 0x000008, "Wrong alignment on WBP_HUD_ObjectiveSlot_C_OnPlayWidgetAnimation");
static_assert(sizeof(WBP_HUD_ObjectiveSlot_C_OnPlayWidgetAnimation) == 0x000028, "Wrong size on WBP_HUD_ObjectiveSlot_C_OnPlayWidgetAnimation");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_OnPlayWidgetAnimation, InAnim) == 0x000000, "Member 'WBP_HUD_ObjectiveSlot_C_OnPlayWidgetAnimation::InAnim' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_OnPlayWidgetAnimation, LocalAnimToPlay) == 0x000008, "Member 'WBP_HUD_ObjectiveSlot_C_OnPlayWidgetAnimation::LocalAnimToPlay' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_OnPlayWidgetAnimation, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000010, "Member 'WBP_HUD_ObjectiveSlot_C_OnPlayWidgetAnimation::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_OnPlayWidgetAnimation, CallFunc_BranchUITheme_ReturnValue) == 0x000011, "Member 'WBP_HUD_ObjectiveSlot_C_OnPlayWidgetAnimation::CallFunc_BranchUITheme_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_OnPlayWidgetAnimation, K2Node_SwitchEnum_CmpSuccess) == 0x000012, "Member 'WBP_HUD_ObjectiveSlot_C_OnPlayWidgetAnimation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_OnPlayWidgetAnimation, CallFunc_IsValid_ReturnValue) == 0x000013, "Member 'WBP_HUD_ObjectiveSlot_C_OnPlayWidgetAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_OnPlayWidgetAnimation, CallFunc_GetWidgetAnimation_OutAnim) == 0x000018, "Member 'WBP_HUD_ObjectiveSlot_C_OnPlayWidgetAnimation::CallFunc_GetWidgetAnimation_OutAnim' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_OnPlayWidgetAnimation, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1) == 0x000020, "Member 'WBP_HUD_ObjectiveSlot_C_OnPlayWidgetAnimation::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1' has a wrong offset!");

// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.PlayWidgetAnimationImpl
// 0x0048 (0x0048 - 0x0000)
struct WBP_HUD_ObjectiveSlot_C_PlayWidgetAnimationImpl final
{
public:
	const class UWidgetAnimation*                 InAnim;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class FText                                   InText;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	const class UFileMediaSource*                 InCheckboxAnim;                                    // 0x0018(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InGlowColor;                                       // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_Start_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_ObjectiveSlot_C_PlayWidgetAnimationImpl) == 0x000008, "Wrong alignment on WBP_HUD_ObjectiveSlot_C_PlayWidgetAnimationImpl");
static_assert(sizeof(WBP_HUD_ObjectiveSlot_C_PlayWidgetAnimationImpl) == 0x000048, "Wrong size on WBP_HUD_ObjectiveSlot_C_PlayWidgetAnimationImpl");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_PlayWidgetAnimationImpl, InAnim) == 0x000000, "Member 'WBP_HUD_ObjectiveSlot_C_PlayWidgetAnimationImpl::InAnim' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_PlayWidgetAnimationImpl, InText) == 0x000008, "Member 'WBP_HUD_ObjectiveSlot_C_PlayWidgetAnimationImpl::InText' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_PlayWidgetAnimationImpl, InCheckboxAnim) == 0x000018, "Member 'WBP_HUD_ObjectiveSlot_C_PlayWidgetAnimationImpl::InCheckboxAnim' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_PlayWidgetAnimationImpl, InGlowColor) == 0x000020, "Member 'WBP_HUD_ObjectiveSlot_C_PlayWidgetAnimationImpl::InGlowColor' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_PlayWidgetAnimationImpl, CallFunc_K2_Start_ReturnValue) == 0x000030, "Member 'WBP_HUD_ObjectiveSlot_C_PlayWidgetAnimationImpl::CallFunc_K2_Start_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_PlayWidgetAnimationImpl, CallFunc_PlayAnimationForward_ReturnValue) == 0x000038, "Member 'WBP_HUD_ObjectiveSlot_C_PlayWidgetAnimationImpl::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_PlayWidgetAnimationImpl, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000040, "Member 'WBP_HUD_ObjectiveSlot_C_PlayWidgetAnimationImpl::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_PlayWidgetAnimationImpl, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'WBP_HUD_ObjectiveSlot_C_PlayWidgetAnimationImpl::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_PlayWidgetAnimationImpl, CallFunc_Not_PreBool_ReturnValue) == 0x000042, "Member 'WBP_HUD_ObjectiveSlot_C_PlayWidgetAnimationImpl::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_PlayWidgetAnimationImpl, CallFunc_BooleanAND_ReturnValue) == 0x000043, "Member 'WBP_HUD_ObjectiveSlot_C_PlayWidgetAnimationImpl::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.RefreshCheckbox
// 0x0002 (0x0002 - 0x0000)
struct WBP_HUD_ObjectiveSlot_C_RefreshCheckbox final
{
public:
	EObjectiveState                               CallFunc_GetState_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_ObjectiveSlot_C_RefreshCheckbox) == 0x000001, "Wrong alignment on WBP_HUD_ObjectiveSlot_C_RefreshCheckbox");
static_assert(sizeof(WBP_HUD_ObjectiveSlot_C_RefreshCheckbox) == 0x000002, "Wrong size on WBP_HUD_ObjectiveSlot_C_RefreshCheckbox");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_RefreshCheckbox, CallFunc_GetState_ReturnValue) == 0x000000, "Member 'WBP_HUD_ObjectiveSlot_C_RefreshCheckbox::CallFunc_GetState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_RefreshCheckbox, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'WBP_HUD_ObjectiveSlot_C_RefreshCheckbox::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.RefreshPadding
// 0x0050 (0x0050 - 0x0000)
struct WBP_HUD_ObjectiveSlot_C_RefreshPadding final
{
public:
	float                                         CallFunc_GetIndentLevel_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_ObjectiveSlot_C_RefreshPadding) == 0x000008, "Wrong alignment on WBP_HUD_ObjectiveSlot_C_RefreshPadding");
static_assert(sizeof(WBP_HUD_ObjectiveSlot_C_RefreshPadding) == 0x000050, "Wrong size on WBP_HUD_ObjectiveSlot_C_RefreshPadding");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_RefreshPadding, CallFunc_GetIndentLevel_ReturnValue) == 0x000000, "Member 'WBP_HUD_ObjectiveSlot_C_RefreshPadding::CallFunc_GetIndentLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_RefreshPadding, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000008, "Member 'WBP_HUD_ObjectiveSlot_C_RefreshPadding::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_RefreshPadding, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_HUD_ObjectiveSlot_C_RefreshPadding::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_RefreshPadding, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'WBP_HUD_ObjectiveSlot_C_RefreshPadding::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_RefreshPadding, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000020, "Member 'WBP_HUD_ObjectiveSlot_C_RefreshPadding::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_RefreshPadding, CallFunc_MakeVector2D_ReturnValue) == 0x000028, "Member 'WBP_HUD_ObjectiveSlot_C_RefreshPadding::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_RefreshPadding, CallFunc_MakeVector2D_ReturnValue_1) == 0x000038, "Member 'WBP_HUD_ObjectiveSlot_C_RefreshPadding::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_RefreshPadding, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000048, "Member 'WBP_HUD_ObjectiveSlot_C_RefreshPadding::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.RefreshText
// 0x0010 (0x0010 - 0x0000)
struct WBP_HUD_ObjectiveSlot_C_RefreshText final
{
public:
	class FText                                   CallFunc_GetDisplayText_ReturnValue;               // 0x0000(0x0010)(ConstParm)
};
static_assert(alignof(WBP_HUD_ObjectiveSlot_C_RefreshText) == 0x000008, "Wrong alignment on WBP_HUD_ObjectiveSlot_C_RefreshText");
static_assert(sizeof(WBP_HUD_ObjectiveSlot_C_RefreshText) == 0x000010, "Wrong size on WBP_HUD_ObjectiveSlot_C_RefreshText");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_RefreshText, CallFunc_GetDisplayText_ReturnValue) == 0x000000, "Member 'WBP_HUD_ObjectiveSlot_C_RefreshText::CallFunc_GetDisplayText_ReturnValue' has a wrong offset!");

// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.RefreshTrackingVisuals
// 0x0014 (0x0014 - 0x0000)
struct WBP_HUD_ObjectiveSlot_C_RefreshTrackingVisuals final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTracked_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_ObjectiveSlot_C_RefreshTrackingVisuals) == 0x000004, "Wrong alignment on WBP_HUD_ObjectiveSlot_C_RefreshTrackingVisuals");
static_assert(sizeof(WBP_HUD_ObjectiveSlot_C_RefreshTrackingVisuals) == 0x000014, "Wrong size on WBP_HUD_ObjectiveSlot_C_RefreshTrackingVisuals");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_RefreshTrackingVisuals, Temp_bool_Variable) == 0x000000, "Member 'WBP_HUD_ObjectiveSlot_C_RefreshTrackingVisuals::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_RefreshTrackingVisuals, Temp_real_Variable) == 0x000004, "Member 'WBP_HUD_ObjectiveSlot_C_RefreshTrackingVisuals::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_RefreshTrackingVisuals, Temp_real_Variable_1) == 0x000008, "Member 'WBP_HUD_ObjectiveSlot_C_RefreshTrackingVisuals::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_RefreshTrackingVisuals, CallFunc_IsTracked_ReturnValue) == 0x00000C, "Member 'WBP_HUD_ObjectiveSlot_C_RefreshTrackingVisuals::CallFunc_IsTracked_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_RefreshTrackingVisuals, K2Node_Select_Default) == 0x000010, "Member 'WBP_HUD_ObjectiveSlot_C_RefreshTrackingVisuals::K2Node_Select_Default' has a wrong offset!");

// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.SetupCheckbox
// 0x01C0 (0x01C0 - 0x0000)
struct WBP_HUD_ObjectiveSlot_C_SetupCheckbox final
{
public:
	bool                                          bInVisible;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInChecked;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTedObjectiveMinimapMarkerConfig*       LocalDefaultObjectiveAppearance;                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            CallFunc_GetAppearanceBrush_OutBrush;              // 0x0010(0x00D0)()
	bool                                          CallFunc_GetAppearanceBrush_ReturnValue;           // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0xF];                                       // 0x00E1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_GetListBrush_ReturnValue;                 // 0x00F0(0x00D0)(ConstParm)
};
static_assert(alignof(WBP_HUD_ObjectiveSlot_C_SetupCheckbox) == 0x000010, "Wrong alignment on WBP_HUD_ObjectiveSlot_C_SetupCheckbox");
static_assert(sizeof(WBP_HUD_ObjectiveSlot_C_SetupCheckbox) == 0x0001C0, "Wrong size on WBP_HUD_ObjectiveSlot_C_SetupCheckbox");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_SetupCheckbox, bInVisible) == 0x000000, "Member 'WBP_HUD_ObjectiveSlot_C_SetupCheckbox::bInVisible' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_SetupCheckbox, bInChecked) == 0x000001, "Member 'WBP_HUD_ObjectiveSlot_C_SetupCheckbox::bInChecked' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_SetupCheckbox, LocalDefaultObjectiveAppearance) == 0x000008, "Member 'WBP_HUD_ObjectiveSlot_C_SetupCheckbox::LocalDefaultObjectiveAppearance' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_SetupCheckbox, CallFunc_GetAppearanceBrush_OutBrush) == 0x000010, "Member 'WBP_HUD_ObjectiveSlot_C_SetupCheckbox::CallFunc_GetAppearanceBrush_OutBrush' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_SetupCheckbox, CallFunc_GetAppearanceBrush_ReturnValue) == 0x0000E0, "Member 'WBP_HUD_ObjectiveSlot_C_SetupCheckbox::CallFunc_GetAppearanceBrush_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_SetupCheckbox, CallFunc_GetListBrush_ReturnValue) == 0x0000F0, "Member 'WBP_HUD_ObjectiveSlot_C_SetupCheckbox::CallFunc_GetListBrush_ReturnValue' has a wrong offset!");

// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.StopNotifications
// 0x0048 (0x0048 - 0x0000)
struct WBP_HUD_ObjectiveSlot_C_StopNotifications final
{
public:
	class UWidgetAnimation*                       InExceptAnim;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LocalAnimToStop;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidgetAnimation*>               CallFunc_GetWidgetAnimations_OutAnimations;        // 0x0020(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_ObjectiveSlot_C_StopNotifications) == 0x000008, "Wrong alignment on WBP_HUD_ObjectiveSlot_C_StopNotifications");
static_assert(sizeof(WBP_HUD_ObjectiveSlot_C_StopNotifications) == 0x000048, "Wrong size on WBP_HUD_ObjectiveSlot_C_StopNotifications");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_StopNotifications, InExceptAnim) == 0x000000, "Member 'WBP_HUD_ObjectiveSlot_C_StopNotifications::InExceptAnim' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_StopNotifications, LocalAnimToStop) == 0x000008, "Member 'WBP_HUD_ObjectiveSlot_C_StopNotifications::LocalAnimToStop' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_StopNotifications, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_HUD_ObjectiveSlot_C_StopNotifications::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_StopNotifications, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WBP_HUD_ObjectiveSlot_C_StopNotifications::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_StopNotifications, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WBP_HUD_ObjectiveSlot_C_StopNotifications::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_StopNotifications, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00001C, "Member 'WBP_HUD_ObjectiveSlot_C_StopNotifications::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_StopNotifications, CallFunc_IsAnimationPlaying_ReturnValue) == 0x00001D, "Member 'WBP_HUD_ObjectiveSlot_C_StopNotifications::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_StopNotifications, CallFunc_GetWidgetAnimations_OutAnimations) == 0x000020, "Member 'WBP_HUD_ObjectiveSlot_C_StopNotifications::CallFunc_GetWidgetAnimations_OutAnimations' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_StopNotifications, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'WBP_HUD_ObjectiveSlot_C_StopNotifications::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_StopNotifications, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_HUD_ObjectiveSlot_C_StopNotifications::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_StopNotifications, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WBP_HUD_ObjectiveSlot_C_StopNotifications::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_StopNotifications, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'WBP_HUD_ObjectiveSlot_C_StopNotifications::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.StrikeThroughContentText
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_HUD_ObjectiveSlot_C_StrikeThroughContentText final
{
public:
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0000(0x00D0)()
};
static_assert(alignof(WBP_HUD_ObjectiveSlot_C_StrikeThroughContentText) == 0x000010, "Wrong alignment on WBP_HUD_ObjectiveSlot_C_StrikeThroughContentText");
static_assert(sizeof(WBP_HUD_ObjectiveSlot_C_StrikeThroughContentText) == 0x0000D0, "Wrong size on WBP_HUD_ObjectiveSlot_C_StrikeThroughContentText");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_StrikeThroughContentText, K2Node_MakeStruct_SlateBrush) == 0x000000, "Member 'WBP_HUD_ObjectiveSlot_C_StrikeThroughContentText::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.UpdateSlotStateVisuals
// 0x0002 (0x0002 - 0x0000)
struct WBP_HUD_ObjectiveSlot_C_UpdateSlotStateVisuals final
{
public:
	bool                                          CallFunc_IsStateActive_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStateActive_ReturnValue_1;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_ObjectiveSlot_C_UpdateSlotStateVisuals) == 0x000001, "Wrong alignment on WBP_HUD_ObjectiveSlot_C_UpdateSlotStateVisuals");
static_assert(sizeof(WBP_HUD_ObjectiveSlot_C_UpdateSlotStateVisuals) == 0x000002, "Wrong size on WBP_HUD_ObjectiveSlot_C_UpdateSlotStateVisuals");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_UpdateSlotStateVisuals, CallFunc_IsStateActive_ReturnValue) == 0x000000, "Member 'WBP_HUD_ObjectiveSlot_C_UpdateSlotStateVisuals::CallFunc_IsStateActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_UpdateSlotStateVisuals, CallFunc_IsStateActive_ReturnValue_1) == 0x000001, "Member 'WBP_HUD_ObjectiveSlot_C_UpdateSlotStateVisuals::CallFunc_IsStateActive_ReturnValue_1' has a wrong offset!");

// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.GetWidgetAnimation
// 0x0018 (0x0018 - 0x0000)
struct WBP_HUD_ObjectiveSlot_C_GetWidgetAnimation final
{
public:
	struct FGameplayTag                           InAnimTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OutAnim;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimation) == 0x000008, "Wrong alignment on WBP_HUD_ObjectiveSlot_C_GetWidgetAnimation");
static_assert(sizeof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimation) == 0x000018, "Wrong size on WBP_HUD_ObjectiveSlot_C_GetWidgetAnimation");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimation, InAnimTag) == 0x000000, "Member 'WBP_HUD_ObjectiveSlot_C_GetWidgetAnimation::InAnimTag' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimation, OutAnim) == 0x000008, "Member 'WBP_HUD_ObjectiveSlot_C_GetWidgetAnimation::OutAnim' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_GetWidgetAnimation, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000010, "Member 'WBP_HUD_ObjectiveSlot_C_GetWidgetAnimation::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");

// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.OnCanPlayWidgetAnimation
// 0x0020 (0x0020 - 0x0000)
struct WBP_HUD_ObjectiveSlot_C_OnCanPlayWidgetAnimation final
{
public:
	struct FGameplayTag                           InAnim;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       CallFunc_GetWidgetAnimation_OutAnim;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_ObjectiveSlot_C_OnCanPlayWidgetAnimation) == 0x000008, "Wrong alignment on WBP_HUD_ObjectiveSlot_C_OnCanPlayWidgetAnimation");
static_assert(sizeof(WBP_HUD_ObjectiveSlot_C_OnCanPlayWidgetAnimation) == 0x000020, "Wrong size on WBP_HUD_ObjectiveSlot_C_OnCanPlayWidgetAnimation");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_OnCanPlayWidgetAnimation, InAnim) == 0x000000, "Member 'WBP_HUD_ObjectiveSlot_C_OnCanPlayWidgetAnimation::InAnim' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_OnCanPlayWidgetAnimation, ReturnValue) == 0x000008, "Member 'WBP_HUD_ObjectiveSlot_C_OnCanPlayWidgetAnimation::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_OnCanPlayWidgetAnimation, CallFunc_GetWidgetAnimation_OutAnim) == 0x000010, "Member 'WBP_HUD_ObjectiveSlot_C_OnCanPlayWidgetAnimation::CallFunc_GetWidgetAnimation_OutAnim' has a wrong offset!");
static_assert(offsetof(WBP_HUD_ObjectiveSlot_C_OnCanPlayWidgetAnimation, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_HUD_ObjectiveSlot_C_OnCanPlayWidgetAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

