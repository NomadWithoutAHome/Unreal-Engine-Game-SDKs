#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_InfantryBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ABP_InfantryBase_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Tempest_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_InfantryBase.ABP_InfantryBase_C
// 0x1CC0 (0x2240 - 0x0580)
class UABP_InfantryBase_C : public UTedAnimInstance_Infantry
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0580(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_InfantryBase::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;             // 0x0588(0x0088)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0610(0x0008)()
	struct FAnimSubsystemInstance_NodeRelevancy   AnimBlueprintExtension_NodeRelevancy;              // 0x0618(0x00A8)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x06C0(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x06C8(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x06E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x0710(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x0738(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x0760(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0788(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x07B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x07D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0800(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0828(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0850(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0878(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x08A0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x08C8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x0910(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x0930(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x0978(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x0998(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x09E0(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_7;                   // 0x0A00(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x0A48(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x0A90(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x0B00(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x0B20(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x0B68(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0B88(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0BD0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0BF0(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0C10(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x0C30(0x0070)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_6;                   // 0x0CA0(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0CE8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0D10(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0D38(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0D60(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0D88(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0DD0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0DF0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0E38(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0E58(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x0EA0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0EE8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0F30(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0F50(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x0F98(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x0FE0(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1050(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x1070(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1138(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x1158(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x1220(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1268(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x12B0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x12F8(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x1340(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x1388(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x14B0(0x0128)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x15D8(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x1620(0x0128)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1748(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1790(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x17D8(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1848(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1868(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x1930(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1978(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x19F8(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x1A20(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1B10(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x1B38(0x0048)()
	struct FAnimNode_DeadBlending                 AnimGraphNode_DeadBlending;                        // 0x1B80(0x0570)()
	struct FRotator                               K2Node_PropertyAccess_7;                           // 0x20F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_PropertyAccess_6;                           // 0x2108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_PropertyAccess_5;                           // 0x2120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_PropertyAccess_4;                           // 0x2138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_PropertyAccess_3;                           // 0x2150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_PropertyAccess_2;                           // 0x2168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_PropertyAccess_1;                           // 0x2180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_PropertyAccess;                             // 0x2184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               SpineRotation;                                     // 0x2188(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               RootRotation;                                      // 0x21A0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               RootDelta;                                         // 0x21B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               RootOffsetRot;                                     // 0x21D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Velocity;                                          // 0x21E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VelocityDelta;                                     // 0x2200(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RootOffsetLoc;                                     // 0x2218(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProcRotMaxAngle;                                   // 0x2230(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_InfantryBase_AnimGraphNode_TransitionResult_535DE5CD4ECA7F04997325A4E936D42D();
	void ExecuteUbergraph_ABP_InfantryBase(int32 EntryPoint);
	bool HasTransitionalAnimations();
	void SetIdleBreakAnimation(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateIdleBreakPlayer(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_InfantryBase_C">();
	}
	static class UABP_InfantryBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_InfantryBase_C>();
	}
};
static_assert(alignof(UABP_InfantryBase_C) == 0x000010, "Wrong alignment on UABP_InfantryBase_C");
static_assert(sizeof(UABP_InfantryBase_C) == 0x002240, "Wrong size on UABP_InfantryBase_C");
static_assert(offsetof(UABP_InfantryBase_C, UberGraphFrame) == 0x000580, "Member 'UABP_InfantryBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, __AnimBlueprintMutables) == 0x000588, "Member 'UABP_InfantryBase_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimBlueprintExtension_PropertyAccess) == 0x000610, "Member 'UABP_InfantryBase_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimBlueprintExtension_NodeRelevancy) == 0x000618, "Member 'UABP_InfantryBase_C::AnimBlueprintExtension_NodeRelevancy' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimBlueprintExtension_Base) == 0x0006C0, "Member 'UABP_InfantryBase_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_Root) == 0x0006C8, "Member 'UABP_InfantryBase_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_TransitionResult_15) == 0x0006E8, "Member 'UABP_InfantryBase_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_TransitionResult_14) == 0x000710, "Member 'UABP_InfantryBase_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_TransitionResult_13) == 0x000738, "Member 'UABP_InfantryBase_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_TransitionResult_12) == 0x000760, "Member 'UABP_InfantryBase_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_TransitionResult_11) == 0x000788, "Member 'UABP_InfantryBase_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_TransitionResult_10) == 0x0007B0, "Member 'UABP_InfantryBase_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_TransitionResult_9) == 0x0007D8, "Member 'UABP_InfantryBase_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_TransitionResult_8) == 0x000800, "Member 'UABP_InfantryBase_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_TransitionResult_7) == 0x000828, "Member 'UABP_InfantryBase_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_TransitionResult_6) == 0x000850, "Member 'UABP_InfantryBase_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_TransitionResult_5) == 0x000878, "Member 'UABP_InfantryBase_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_TransitionResult_4) == 0x0008A0, "Member 'UABP_InfantryBase_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_SequencePlayer_13) == 0x0008C8, "Member 'UABP_InfantryBase_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_StateResult_11) == 0x000910, "Member 'UABP_InfantryBase_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_SequencePlayer_12) == 0x000930, "Member 'UABP_InfantryBase_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_StateResult_10) == 0x000978, "Member 'UABP_InfantryBase_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_SequencePlayer_11) == 0x000998, "Member 'UABP_InfantryBase_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_StateResult_9) == 0x0009E0, "Member 'UABP_InfantryBase_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_BlendListByBool_7) == 0x000A00, "Member 'UABP_InfantryBase_C::AnimGraphNode_BlendListByBool_7' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_SequencePlayer_10) == 0x000A48, "Member 'UABP_InfantryBase_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_BlendSpacePlayer_3) == 0x000A90, "Member 'UABP_InfantryBase_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_StateResult_8) == 0x000B00, "Member 'UABP_InfantryBase_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_SequencePlayer_9) == 0x000B20, "Member 'UABP_InfantryBase_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_StateResult_7) == 0x000B68, "Member 'UABP_InfantryBase_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_SequencePlayer_8) == 0x000B88, "Member 'UABP_InfantryBase_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_StateResult_6) == 0x000BD0, "Member 'UABP_InfantryBase_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_ComponentToLocalSpace) == 0x000BF0, "Member 'UABP_InfantryBase_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_LocalToComponentSpace) == 0x000C10, "Member 'UABP_InfantryBase_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_BlendSpacePlayer_2) == 0x000C30, "Member 'UABP_InfantryBase_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_BlendListByBool_6) == 0x000CA0, "Member 'UABP_InfantryBase_C::AnimGraphNode_BlendListByBool_6' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_TransitionResult_3) == 0x000CE8, "Member 'UABP_InfantryBase_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_TransitionResult_2) == 0x000D10, "Member 'UABP_InfantryBase_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_TransitionResult_1) == 0x000D38, "Member 'UABP_InfantryBase_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_TransitionResult) == 0x000D60, "Member 'UABP_InfantryBase_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_SequencePlayer_7) == 0x000D88, "Member 'UABP_InfantryBase_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_StateResult_5) == 0x000DD0, "Member 'UABP_InfantryBase_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_SequencePlayer_6) == 0x000DF0, "Member 'UABP_InfantryBase_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_StateResult_4) == 0x000E38, "Member 'UABP_InfantryBase_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_SequencePlayer_5) == 0x000E58, "Member 'UABP_InfantryBase_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_BlendListByBool_5) == 0x000EA0, "Member 'UABP_InfantryBase_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_SequencePlayer_4) == 0x000EE8, "Member 'UABP_InfantryBase_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_StateResult_3) == 0x000F30, "Member 'UABP_InfantryBase_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_SequencePlayer_3) == 0x000F50, "Member 'UABP_InfantryBase_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_BlendListByBool_4) == 0x000F98, "Member 'UABP_InfantryBase_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_BlendSpacePlayer_1) == 0x000FE0, "Member 'UABP_InfantryBase_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_StateResult_2) == 0x001050, "Member 'UABP_InfantryBase_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_StateMachine_2) == 0x001070, "Member 'UABP_InfantryBase_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_StateResult_1) == 0x001138, "Member 'UABP_InfantryBase_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_StateMachine_1) == 0x001158, "Member 'UABP_InfantryBase_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_BlendListByBool_3) == 0x001220, "Member 'UABP_InfantryBase_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_SequencePlayer_2) == 0x001268, "Member 'UABP_InfantryBase_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_SequencePlayer_1) == 0x0012B0, "Member 'UABP_InfantryBase_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_BlendListByBool_2) == 0x0012F8, "Member 'UABP_InfantryBase_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_BlendListByBool_1) == 0x001340, "Member 'UABP_InfantryBase_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_ModifyBone_2) == 0x001388, "Member 'UABP_InfantryBase_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_ModifyBone_1) == 0x0014B0, "Member 'UABP_InfantryBase_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_Slot_2) == 0x0015D8, "Member 'UABP_InfantryBase_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_ModifyBone) == 0x001620, "Member 'UABP_InfantryBase_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_BlendListByBool) == 0x001748, "Member 'UABP_InfantryBase_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_SequencePlayer) == 0x001790, "Member 'UABP_InfantryBase_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_BlendSpacePlayer) == 0x0017D8, "Member 'UABP_InfantryBase_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_StateResult) == 0x001848, "Member 'UABP_InfantryBase_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_StateMachine) == 0x001868, "Member 'UABP_InfantryBase_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_Slot_1) == 0x001930, "Member 'UABP_InfantryBase_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_SaveCachedPose) == 0x001978, "Member 'UABP_InfantryBase_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_UseCachedPose_1) == 0x0019F8, "Member 'UABP_InfantryBase_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_LayeredBoneBlend) == 0x001A20, "Member 'UABP_InfantryBase_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_UseCachedPose) == 0x001B10, "Member 'UABP_InfantryBase_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_Slot) == 0x001B38, "Member 'UABP_InfantryBase_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, AnimGraphNode_DeadBlending) == 0x001B80, "Member 'UABP_InfantryBase_C::AnimGraphNode_DeadBlending' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, K2Node_PropertyAccess_7) == 0x0020F0, "Member 'UABP_InfantryBase_C::K2Node_PropertyAccess_7' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, K2Node_PropertyAccess_6) == 0x002108, "Member 'UABP_InfantryBase_C::K2Node_PropertyAccess_6' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, K2Node_PropertyAccess_5) == 0x002120, "Member 'UABP_InfantryBase_C::K2Node_PropertyAccess_5' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, K2Node_PropertyAccess_4) == 0x002138, "Member 'UABP_InfantryBase_C::K2Node_PropertyAccess_4' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, K2Node_PropertyAccess_3) == 0x002150, "Member 'UABP_InfantryBase_C::K2Node_PropertyAccess_3' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, K2Node_PropertyAccess_2) == 0x002168, "Member 'UABP_InfantryBase_C::K2Node_PropertyAccess_2' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, K2Node_PropertyAccess_1) == 0x002180, "Member 'UABP_InfantryBase_C::K2Node_PropertyAccess_1' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, K2Node_PropertyAccess) == 0x002184, "Member 'UABP_InfantryBase_C::K2Node_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, SpineRotation) == 0x002188, "Member 'UABP_InfantryBase_C::SpineRotation' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, RootRotation) == 0x0021A0, "Member 'UABP_InfantryBase_C::RootRotation' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, RootDelta) == 0x0021B8, "Member 'UABP_InfantryBase_C::RootDelta' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, RootOffsetRot) == 0x0021D0, "Member 'UABP_InfantryBase_C::RootOffsetRot' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, Velocity) == 0x0021E8, "Member 'UABP_InfantryBase_C::Velocity' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, VelocityDelta) == 0x002200, "Member 'UABP_InfantryBase_C::VelocityDelta' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, RootOffsetLoc) == 0x002218, "Member 'UABP_InfantryBase_C::RootOffsetLoc' has a wrong offset!");
static_assert(offsetof(UABP_InfantryBase_C, ProcRotMaxAngle) == 0x002230, "Member 'UABP_InfantryBase_C::ProcRotMaxAngle' has a wrong offset!");

}

