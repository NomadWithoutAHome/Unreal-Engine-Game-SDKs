#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GDF_Vehicle_Harvester

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Tempest_structs.hpp"
#include "Tempest_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GDF_Vehicle_Harvester.BP_GDF_Vehicle_Harvester_C
// 0x0050 (0x1D60 - 0x1D10)
class ABP_GDF_Vehicle_Harvester_C final : public ATedVehicle_Harvester
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1D10(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               PS_SmokeVehicleDamagedMedium;                      // 0x1D18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_SmokeVehicleDamagedLight;                       // 0x1D20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_SmokeVehicleDamagedHeavy;                       // 0x1D28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          HitBox;                                            // 0x1D30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_TracksMark_All;                                 // 0x1D38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_DamageSmoke;                                    // 0x1D40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Exhaust_All;                                    // 0x1D48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    FrontLight_2;                                      // 0x1D50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    FrontLight_1;                                      // 0x1D58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_GDF_Vehicle_Harvester(int32 EntryPoint);
	void ReceiveBeginMovement();
	void ReceiveEndMovement();
	void ReceiveOnDeath();
	void ReceiveTickMovement(float Speed, float MaxSpeed);
	void ReceiveUpdateHealthEffects(float HealthPct);

	TSubclassOf<class UTedAnnouncement> GetPawnUnderAttackAnnouncement() const;
	void K2_OnResourceChange(float ResourceToMaxCapacityPct) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GDF_Vehicle_Harvester_C">();
	}
	static class ABP_GDF_Vehicle_Harvester_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GDF_Vehicle_Harvester_C>();
	}
};
static_assert(alignof(ABP_GDF_Vehicle_Harvester_C) == 0x000010, "Wrong alignment on ABP_GDF_Vehicle_Harvester_C");
static_assert(sizeof(ABP_GDF_Vehicle_Harvester_C) == 0x001D60, "Wrong size on ABP_GDF_Vehicle_Harvester_C");
static_assert(offsetof(ABP_GDF_Vehicle_Harvester_C, UberGraphFrame) == 0x001D10, "Member 'ABP_GDF_Vehicle_Harvester_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_Harvester_C, PS_SmokeVehicleDamagedMedium) == 0x001D18, "Member 'ABP_GDF_Vehicle_Harvester_C::PS_SmokeVehicleDamagedMedium' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_Harvester_C, PS_SmokeVehicleDamagedLight) == 0x001D20, "Member 'ABP_GDF_Vehicle_Harvester_C::PS_SmokeVehicleDamagedLight' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_Harvester_C, PS_SmokeVehicleDamagedHeavy) == 0x001D28, "Member 'ABP_GDF_Vehicle_Harvester_C::PS_SmokeVehicleDamagedHeavy' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_Harvester_C, HitBox) == 0x001D30, "Member 'ABP_GDF_Vehicle_Harvester_C::HitBox' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_Harvester_C, PS_TracksMark_All) == 0x001D38, "Member 'ABP_GDF_Vehicle_Harvester_C::PS_TracksMark_All' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_Harvester_C, NS_DamageSmoke) == 0x001D40, "Member 'ABP_GDF_Vehicle_Harvester_C::NS_DamageSmoke' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_Harvester_C, NS_Exhaust_All) == 0x001D48, "Member 'ABP_GDF_Vehicle_Harvester_C::NS_Exhaust_All' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_Harvester_C, FrontLight_2) == 0x001D50, "Member 'ABP_GDF_Vehicle_Harvester_C::FrontLight_2' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_Harvester_C, FrontLight_1) == 0x001D58, "Member 'ABP_GDF_Vehicle_Harvester_C::FrontLight_1' has a wrong offset!");

}

