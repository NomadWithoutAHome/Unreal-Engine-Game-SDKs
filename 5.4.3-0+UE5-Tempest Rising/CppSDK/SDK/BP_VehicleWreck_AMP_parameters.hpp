#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VehicleWreck_AMP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_VehicleWreck_AMP.BP_VehicleWreck_AMP_C.BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x0128 (0x0128 - 0x0000)
struct BP_VehicleWreck_AMP_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit_0;                                             // 0x0030(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_VehicleWreck_AMP_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_VehicleWreck_AMP_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(BP_VehicleWreck_AMP_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000128, "Wrong size on BP_VehicleWreck_AMP_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(BP_VehicleWreck_AMP_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'BP_VehicleWreck_AMP_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_VehicleWreck_AMP_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_VehicleWreck_AMP_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'BP_VehicleWreck_AMP_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Hit_0) == 0x000030, "Member 'BP_VehicleWreck_AMP_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Hit_0' has a wrong offset!");

// Function BP_VehicleWreck_AMP.BP_VehicleWreck_AMP_C.ExecuteUbergraph_BP_VehicleWreck_AMP
// 0x0640 (0x0640 - 0x0000)
struct BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        CallFunc_SpawnDecalAtLocation_ReturnValue;         // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFXSystemComponent*                     CallFunc_SpawnEffectAtLocation_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x00B8(0x0010)(ConstParm, ReferenceParm)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x00F8(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_2;          // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue;       // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0230(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue;               // 0x0329(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32A[0x2];                                      // 0x032A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_332[0x2];                                      // 0x0332(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x03B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x03F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFXSystemComponent*                     CallFunc_SpawnEffectAtLocation_ReturnValue_1;      // 0x0408(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0410(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0428(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0440(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_1;       // 0x0458(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_1;  // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue_1;             // 0x0551(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0552(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0553(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55C[0x4];                                      // 0x055C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0560(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0578(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0590(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x05A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x05C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x05C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x05D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x05EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F4[0x4];                                      // 0x05F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x05F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0610(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62C[0x4];                                      // 0x062C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFXSystemComponent*                     CallFunc_SpawnEffectAtLocation_ReturnValue_2;      // 0x0630(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP) == 0x000008, "Wrong alignment on BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP");
static_assert(sizeof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP) == 0x000640, "Wrong size on BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, EntryPoint) == 0x000000, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, Temp_object_Variable) == 0x000008, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, Temp_object_Variable_1) == 0x000030, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_RandomFloatInRange_ReturnValue) == 0x000040, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_MakeRotator_ReturnValue) == 0x000048, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, K2Node_MakeArray_Array) == 0x000060, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_GetSocketLocation_ReturnValue) == 0x000070, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000088, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_SpawnDecalAtLocation_ReturnValue) == 0x0000A0, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_SpawnDecalAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_SpawnEffectAtLocation_ReturnValue) == 0x0000A8, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_SpawnEffectAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, K2Node_MakeArray_Array_1) == 0x0000B8, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, K2Node_ComponentBoundEvent_HitComponent) == 0x0000C8, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, K2Node_ComponentBoundEvent_OtherActor) == 0x0000D0, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, K2Node_ComponentBoundEvent_OtherComp) == 0x0000D8, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, K2Node_ComponentBoundEvent_NormalImpulse) == 0x0000E0, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, K2Node_ComponentBoundEvent_Hit) == 0x0000F8, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_GetSocketLocation_ReturnValue_2) == 0x0001F0, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_GetSocketLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_GetCollisionObjectType_ReturnValue) == 0x000208, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_GetCollisionObjectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_Add_VectorVector_ReturnValue) == 0x000210, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, K2Node_SwitchEnum_CmpSuccess) == 0x000228, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000230, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000328, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_GetSurfaceType_ReturnValue) == 0x000329, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_GetSurfaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00032C, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_bBlockingHit) == 0x000330, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_bInitialOverlap) == 0x000331, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_Time) == 0x000334, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_Distance) == 0x000338, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_Location) == 0x000340, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_ImpactPoint) == 0x000358, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_Normal) == 0x000370, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_ImpactNormal) == 0x000388, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_PhysMat) == 0x0003A0, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_HitActor) == 0x0003A8, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_HitComponent) == 0x0003B0, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_HitBoneName) == 0x0003B8, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_BoneName) == 0x0003C0, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_HitItem) == 0x0003C8, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_ElementIndex) == 0x0003CC, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_FaceIndex) == 0x0003D0, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_TraceStart) == 0x0003D8, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_TraceEnd) == 0x0003F0, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_SpawnEffectAtLocation_ReturnValue_1) == 0x000408, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_SpawnEffectAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000410, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_MakeVector_ReturnValue_1) == 0x000428, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000440, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_LineTraceSingleForObjects_OutHit_1) == 0x000458, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_LineTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_LineTraceSingleForObjects_ReturnValue_1) == 0x000550, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_LineTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_GetSurfaceType_ReturnValue_1) == 0x000551, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_GetSurfaceType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000552, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000553, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_Time_1) == 0x000554, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_Distance_1) == 0x000558, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_Location_1) == 0x000560, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000578, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_Normal_1) == 0x000590, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0005A8, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_PhysMat_1) == 0x0005C0, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_HitActor_1) == 0x0005C8, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_HitComponent_1) == 0x0005D0, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_HitBoneName_1) == 0x0005D8, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_BoneName_1) == 0x0005E0, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_HitItem_1) == 0x0005E8, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_ElementIndex_1) == 0x0005EC, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_FaceIndex_1) == 0x0005F0, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_TraceStart_1) == 0x0005F8, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_BreakHitResult_TraceEnd_1) == 0x000610, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000628, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_SpawnEffectAtLocation_ReturnValue_2) == 0x000630, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_SpawnEffectAtLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000638, "Member 'BP_VehicleWreck_AMP_C_ExecuteUbergraph_BP_VehicleWreck_AMP::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function BP_VehicleWreck_AMP.BP_VehicleWreck_AMP_C.Hit Aircraft Ground Flip Force
// 0x01D0 (0x01D0 - 0x0000)
struct BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force final
{
public:
	class USkeletalMeshComponent*                 Skeletal_Mesh;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   Bone_Name;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Rotation_Axis;                                     // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Flip_Force;                                        // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Side_Vector;                                       // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0090(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue;           // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue_1;         // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SignOfFloat_ReturnValue;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force) == 0x000010, "Wrong alignment on BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force");
static_assert(sizeof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force) == 0x0001D0, "Wrong size on BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force, Skeletal_Mesh) == 0x000000, "Member 'BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force::Skeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force, Bone_Name) == 0x000008, "Member 'BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force::Bone_Name' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force, Rotation_Axis) == 0x000010, "Member 'BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force::Rotation_Axis' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force, Flip_Force) == 0x000028, "Member 'BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force::Flip_Force' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force, Side_Vector) == 0x000030, "Member 'BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force::Side_Vector' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000058, "Member 'BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force, CallFunc_GetComponentVelocity_ReturnValue) == 0x000070, "Member 'BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000090, "Member 'BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000F0, "Member 'BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force, CallFunc_TransformDirection_ReturnValue) == 0x000108, "Member 'BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force::CallFunc_TransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force, CallFunc_VSize_ReturnValue) == 0x000120, "Member 'BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force, CallFunc_Normal_ReturnValue) == 0x000128, "Member 'BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force, CallFunc_FClamp_ReturnValue) == 0x000140, "Member 'BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force, CallFunc_Normal_ReturnValue_1) == 0x000148, "Member 'BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force, CallFunc_TransformDirection_ReturnValue_1) == 0x000160, "Member 'BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force::CallFunc_TransformDirection_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force, CallFunc_Dot_VectorVector_ReturnValue) == 0x000178, "Member 'BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000180, "Member 'BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000181, "Member 'BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force, CallFunc_SignOfFloat_ReturnValue) == 0x000188, "Member 'BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force, CallFunc_BooleanAND_ReturnValue) == 0x000190, "Member 'BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000198, "Member 'BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force, CallFunc_SelectFloat_ReturnValue) == 0x0001A0, "Member 'BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0001A8, "Member 'BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0001B0, "Member 'BP_VehicleWreck_AMP_C_Hit_Aircraft_Ground_Flip_Force::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");

// Function BP_VehicleWreck_AMP.BP_VehicleWreck_AMP_C.Initial Aircraft Destruction Force
// 0x0290 (0x0290 - 0x0000)
struct BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force final
{
public:
	class USkeletalMeshComponent*                 Skeletal_Mesh;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Static_Mesh__TEMP_;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   Bone_Name;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Rotation_Force_Axis_0;                             // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Rotation_Force_Multiplier_0;                       // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<bool>                                  Rotation_Force_Locked_Axis_0;                      // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Forward_Force_Direction_0;                         // 0x0048(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Forward_Force_0;                                   // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ActorTransform;                                    // 0x0070(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue;           // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue_1;                 // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue_2;                 // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue_1;         // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_5;                // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue_2;         // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_208[0x8];                                      // 0x0208(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0210(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force) == 0x000010, "Wrong alignment on BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force");
static_assert(sizeof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force) == 0x000290, "Wrong size on BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, Skeletal_Mesh) == 0x000000, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::Skeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, Static_Mesh__TEMP_) == 0x000008, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::Static_Mesh__TEMP_' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, Bone_Name) == 0x000010, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::Bone_Name' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, Rotation_Force_Axis_0) == 0x000018, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::Rotation_Force_Axis_0' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, Rotation_Force_Multiplier_0) == 0x000030, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::Rotation_Force_Multiplier_0' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, Rotation_Force_Locked_Axis_0) == 0x000038, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::Rotation_Force_Locked_Axis_0' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, Forward_Force_Direction_0) == 0x000048, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::Forward_Force_Direction_0' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, Forward_Force_0) == 0x000060, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::Forward_Force_0' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, ActorTransform) == 0x000070, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::ActorTransform' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000D0, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, CallFunc_TransformDirection_ReturnValue) == 0x0000E8, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::CallFunc_TransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, CallFunc_GetComponentVelocity_ReturnValue) == 0x000100, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000118, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, CallFunc_RandomBool_ReturnValue) == 0x000130, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, CallFunc_VSize_ReturnValue) == 0x000138, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, CallFunc_SelectFloat_ReturnValue) == 0x000140, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, CallFunc_RandomBool_ReturnValue_1) == 0x000148, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::CallFunc_RandomBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, CallFunc_SelectFloat_ReturnValue_1) == 0x000150, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, CallFunc_SelectFloat_ReturnValue_2) == 0x000158, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, CallFunc_SelectFloat_ReturnValue_3) == 0x000160, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, CallFunc_RandomBool_ReturnValue_2) == 0x000168, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::CallFunc_RandomBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, CallFunc_SelectFloat_ReturnValue_4) == 0x000170, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, CallFunc_TransformDirection_ReturnValue_1) == 0x000178, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::CallFunc_TransformDirection_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, CallFunc_SelectFloat_ReturnValue_5) == 0x000190, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000198, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, CallFunc_MakeVector_ReturnValue) == 0x0001B0, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0001C8, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, CallFunc_RandomFloatInRange_ReturnValue) == 0x0001E0, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, CallFunc_TransformDirection_ReturnValue_2) == 0x0001E8, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::CallFunc_TransformDirection_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000200, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, CallFunc_GetTransform_ReturnValue) == 0x000210, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000270, "Member 'BP_VehicleWreck_AMP_C_Initial_Aircraft_Destruction_Force::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");

}

