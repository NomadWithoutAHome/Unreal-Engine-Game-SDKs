#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TabsPanel_Short_Slot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Tempest_structs.hpp"
#include "Tempest_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_TabsPanel_Short_Slot.WBP_TabsPanel_Short_Slot_C
// 0x0060 (0x0490 - 0x0430)
class UWBP_TabsPanel_Short_Slot_C final : public UTedContentPanelSlotButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_GlowingWidget_Text_Fill_C*         GlowingText;                                       // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateColor                            TextColor_Default;                                 // 0x0440(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            TextColor_Selected;                                // 0x0454(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            TextColor_Hovered;                                 // 0x0468(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            TextColor_Disabled;                                // 0x047C(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void SetTextThemeColored(bool NewState);
	void SetSelectedEffect(bool bInSelected, bool bInInstant);
	void RefreshUI();
	void PreConstruct(bool IsDesignTime);
	void OnActivateState(ETedContentSlotState InState, bool bInActivated);
	void GetContentPanel(class UTedContentPanelInstanced** Out);
	class UTedUI_InstancedContent* GetContent();
	void ExecuteUbergraph_WBP_TabsPanel_Short_Slot(int32 EntryPoint);

	void GetTextColor(struct FSlateColor* TextColor_Disabled_0) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_TabsPanel_Short_Slot_C">();
	}
	static class UWBP_TabsPanel_Short_Slot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_TabsPanel_Short_Slot_C>();
	}
};
static_assert(alignof(UWBP_TabsPanel_Short_Slot_C) == 0x000008, "Wrong alignment on UWBP_TabsPanel_Short_Slot_C");
static_assert(sizeof(UWBP_TabsPanel_Short_Slot_C) == 0x000490, "Wrong size on UWBP_TabsPanel_Short_Slot_C");
static_assert(offsetof(UWBP_TabsPanel_Short_Slot_C, UberGraphFrame) == 0x000430, "Member 'UWBP_TabsPanel_Short_Slot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_TabsPanel_Short_Slot_C, GlowingText) == 0x000438, "Member 'UWBP_TabsPanel_Short_Slot_C::GlowingText' has a wrong offset!");
static_assert(offsetof(UWBP_TabsPanel_Short_Slot_C, TextColor_Default) == 0x000440, "Member 'UWBP_TabsPanel_Short_Slot_C::TextColor_Default' has a wrong offset!");
static_assert(offsetof(UWBP_TabsPanel_Short_Slot_C, TextColor_Selected) == 0x000454, "Member 'UWBP_TabsPanel_Short_Slot_C::TextColor_Selected' has a wrong offset!");
static_assert(offsetof(UWBP_TabsPanel_Short_Slot_C, TextColor_Hovered) == 0x000468, "Member 'UWBP_TabsPanel_Short_Slot_C::TextColor_Hovered' has a wrong offset!");
static_assert(offsetof(UWBP_TabsPanel_Short_Slot_C, TextColor_Disabled) == 0x00047C, "Member 'UWBP_TabsPanel_Short_Slot_C::TextColor_Disabled' has a wrong offset!");

}

