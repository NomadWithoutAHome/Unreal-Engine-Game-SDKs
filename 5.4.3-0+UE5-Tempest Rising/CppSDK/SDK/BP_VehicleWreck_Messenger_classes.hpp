#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VehicleWreck_Messenger

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Tempest_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_VehicleWreck_Messenger.BP_VehicleWreck_Messenger_C
// 0x00A0 (0x0440 - 0x03A0)
class ABP_VehicleWreck_Messenger_C final : public ATedVehicleWreckActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      PS_ExplosionVETIAircraft_02_Dissolve;              // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Dissolve_Main_Vines_Rotting_8EA3AF8645E2A7DE83FCE1A4E742E217; // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Dissolve_Main_Pod_Death_8EA3AF8645E2A7DE83FCE1A4E742E217; // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Dissolve_Main_Dissolve_Main_8EA3AF8645E2A7DE83FCE1A4E742E217; // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Dissolve_Main__Direction_8EA3AF8645E2A7DE83FCE1A4E742E217; // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C5[0x3];                                      // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Dissolve_Main;                                     // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Hit;                                               // 0x03D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Rotation_Force_Multiplier;                         // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Forward_Force;                                     // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Rotation_Force_Axis;                               // 0x03E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<bool>                                  Rotation_Force_Locked_Axis;                        // 0x0400(0x0010)(Edit, BlueprintVisible)
	struct FVector                                Forward_Force_Direction;                           // 0x0410(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentAngularDamping;                             // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StopGravity;                                       // 0x0430(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dissolved;                                         // 0x0431(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_432[0x6];                                      // 0x0432(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CurrentLinearDamping;                              // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit_0);
	void Dissolve_Main__FinishedFunc();
	void Dissolve_Main__Treat_as_Dissolved__EventFunc();
	void Dissolve_Main__UpdateFunc();
	void ExecuteUbergraph_BP_VehicleWreck_Messenger(int32 EntryPoint);
	void Initial_VETI_Aircraft_Destruction_Force(TArray<class FName>& Bones_to_Hide, class USkeletalMeshComponent* Skeletal_Mesh, class FName Bone_Name, class UStaticMeshComponent* Static_Mesh__TEMP_, const struct FVector& Rotation_Force_Axis_0, double Rotation_Force_Multiplier_0, TArray<bool>& Rotation_Force_Locked_Axis_0, const struct FVector& Forward_Force_Direction_0, double Forward_Force_0, TArray<bool>& Apply_Forward_Force_to_Parts, TArray<double>& Forward_Force_to_Parts_Multiplier, TArray<class UStaticMeshComponent*>& Parts_Meshes, double Parts_Meshes_Dir_Force_Angle, double Parts_Meshes_Dir_Force_Multiplier, double Parts_Meshes_Ang_Force_Multiplier);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_VehicleWreck_Messenger_C">();
	}
	static class ABP_VehicleWreck_Messenger_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_VehicleWreck_Messenger_C>();
	}
};
static_assert(alignof(ABP_VehicleWreck_Messenger_C) == 0x000008, "Wrong alignment on ABP_VehicleWreck_Messenger_C");
static_assert(sizeof(ABP_VehicleWreck_Messenger_C) == 0x000440, "Wrong size on ABP_VehicleWreck_Messenger_C");
static_assert(offsetof(ABP_VehicleWreck_Messenger_C, UberGraphFrame) == 0x0003A0, "Member 'ABP_VehicleWreck_Messenger_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Messenger_C, PS_ExplosionVETIAircraft_02_Dissolve) == 0x0003A8, "Member 'ABP_VehicleWreck_Messenger_C::PS_ExplosionVETIAircraft_02_Dissolve' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Messenger_C, SkeletalMesh) == 0x0003B0, "Member 'ABP_VehicleWreck_Messenger_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Messenger_C, Dissolve_Main_Vines_Rotting_8EA3AF8645E2A7DE83FCE1A4E742E217) == 0x0003B8, "Member 'ABP_VehicleWreck_Messenger_C::Dissolve_Main_Vines_Rotting_8EA3AF8645E2A7DE83FCE1A4E742E217' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Messenger_C, Dissolve_Main_Pod_Death_8EA3AF8645E2A7DE83FCE1A4E742E217) == 0x0003BC, "Member 'ABP_VehicleWreck_Messenger_C::Dissolve_Main_Pod_Death_8EA3AF8645E2A7DE83FCE1A4E742E217' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Messenger_C, Dissolve_Main_Dissolve_Main_8EA3AF8645E2A7DE83FCE1A4E742E217) == 0x0003C0, "Member 'ABP_VehicleWreck_Messenger_C::Dissolve_Main_Dissolve_Main_8EA3AF8645E2A7DE83FCE1A4E742E217' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Messenger_C, Dissolve_Main__Direction_8EA3AF8645E2A7DE83FCE1A4E742E217) == 0x0003C4, "Member 'ABP_VehicleWreck_Messenger_C::Dissolve_Main__Direction_8EA3AF8645E2A7DE83FCE1A4E742E217' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Messenger_C, Dissolve_Main) == 0x0003C8, "Member 'ABP_VehicleWreck_Messenger_C::Dissolve_Main' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Messenger_C, Hit) == 0x0003D0, "Member 'ABP_VehicleWreck_Messenger_C::Hit' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Messenger_C, Rotation_Force_Multiplier) == 0x0003D8, "Member 'ABP_VehicleWreck_Messenger_C::Rotation_Force_Multiplier' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Messenger_C, Forward_Force) == 0x0003E0, "Member 'ABP_VehicleWreck_Messenger_C::Forward_Force' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Messenger_C, Rotation_Force_Axis) == 0x0003E8, "Member 'ABP_VehicleWreck_Messenger_C::Rotation_Force_Axis' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Messenger_C, Rotation_Force_Locked_Axis) == 0x000400, "Member 'ABP_VehicleWreck_Messenger_C::Rotation_Force_Locked_Axis' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Messenger_C, Forward_Force_Direction) == 0x000410, "Member 'ABP_VehicleWreck_Messenger_C::Forward_Force_Direction' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Messenger_C, CurrentAngularDamping) == 0x000428, "Member 'ABP_VehicleWreck_Messenger_C::CurrentAngularDamping' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Messenger_C, StopGravity) == 0x000430, "Member 'ABP_VehicleWreck_Messenger_C::StopGravity' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Messenger_C, Dissolved) == 0x000431, "Member 'ABP_VehicleWreck_Messenger_C::Dissolved' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Messenger_C, CurrentLinearDamping) == 0x000438, "Member 'ABP_VehicleWreck_Messenger_C::CurrentLinearDamping' has a wrong offset!");

}

