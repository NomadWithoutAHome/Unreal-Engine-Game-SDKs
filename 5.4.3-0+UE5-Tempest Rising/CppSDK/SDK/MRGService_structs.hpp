#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MRGService

#include "Basic.hpp"


namespace SDK
{

// Enum MRGService.EMRGSPlatformAndroid
// NumValues: 0x0006
enum class EMRGSPlatformAndroid : uint8
{
	Amazon                                   = 0,
	Android                                  = 1,
	Huawei                                   = 2,
	Samsung                                  = 3,
	FacebookCloud                            = 4,
	EMRGSPlatformAndroid_MAX                 = 5,
};

// Enum MRGService.EMRGSShareResultErrorCodes
// NumValues: 0x0005
enum class EMRGSShareResultErrorCodes : uint8
{
	Unknown                                  = 0,
	PresentationInProgress                   = 1,
	NothingToShare                           = 2,
	FileProviderNotFound                     = 3,
	EMRGSShareResultErrorCodes_MAX           = 4,
};

// Enum MRGService.EMRGSShareResultStatus
// NumValues: 0x0004
enum class EMRGSShareResultStatus : uint8
{
	Unknown                                  = 0,
	Shared                                   = 1,
	NotShared                                = 2,
	EMRGSShareResultStatus_MAX               = 3,
};

// ScriptStruct MRGService.MRGSError
// 0x0028 (0x0028 - 0x0000)
struct FMRGSError final
{
public:
	int32                                         Code;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Domain;                                            // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMRGSError) == 0x000008, "Wrong alignment on FMRGSError");
static_assert(sizeof(FMRGSError) == 0x000028, "Wrong size on FMRGSError");
static_assert(offsetof(FMRGSError, Code) == 0x000000, "Member 'FMRGSError::Code' has a wrong offset!");
static_assert(offsetof(FMRGSError, Message) == 0x000008, "Member 'FMRGSError::Message' has a wrong offset!");
static_assert(offsetof(FMRGSError, Domain) == 0x000018, "Member 'FMRGSError::Domain' has a wrong offset!");

// ScriptStruct MRGService.MRGExtraOptionsAndroid
// 0x0028 (0x0028 - 0x0000)
struct FMRGExtraOptionsAndroid final
{
public:
	class FString                                 PushIcon;                                          // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PushLargeIcon;                                     // 0x0010(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMRGSPlatformAndroid                          Platform;                                          // 0x0020(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMRGExtraOptionsAndroid) == 0x000008, "Wrong alignment on FMRGExtraOptionsAndroid");
static_assert(sizeof(FMRGExtraOptionsAndroid) == 0x000028, "Wrong size on FMRGExtraOptionsAndroid");
static_assert(offsetof(FMRGExtraOptionsAndroid, PushIcon) == 0x000000, "Member 'FMRGExtraOptionsAndroid::PushIcon' has a wrong offset!");
static_assert(offsetof(FMRGExtraOptionsAndroid, PushLargeIcon) == 0x000010, "Member 'FMRGExtraOptionsAndroid::PushLargeIcon' has a wrong offset!");
static_assert(offsetof(FMRGExtraOptionsAndroid, Platform) == 0x000020, "Member 'FMRGExtraOptionsAndroid::Platform' has a wrong offset!");

// ScriptStruct MRGService.MRGExtraOptionsIOS
// 0x0018 (0x0018 - 0x0000)
struct FMRGExtraOptionsIOS final
{
public:
	class FString                                 StorePath;                                         // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldRestBadge;                                  // 0x0010(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsNotificationServiceEnabled;                     // 0x0011(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisablePaymentsCheck;                             // 0x0012(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsAutomaticPaymentTrackingEnabled;                // 0x0013(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldRequestIdfaAtStartup;                       // 0x0014(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowTrackingAuthorizationDialogOnAlliOSVersions;  // 0x0015(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMRGExtraOptionsIOS) == 0x000008, "Wrong alignment on FMRGExtraOptionsIOS");
static_assert(sizeof(FMRGExtraOptionsIOS) == 0x000018, "Wrong size on FMRGExtraOptionsIOS");
static_assert(offsetof(FMRGExtraOptionsIOS, StorePath) == 0x000000, "Member 'FMRGExtraOptionsIOS::StorePath' has a wrong offset!");
static_assert(offsetof(FMRGExtraOptionsIOS, bShouldRestBadge) == 0x000010, "Member 'FMRGExtraOptionsIOS::bShouldRestBadge' has a wrong offset!");
static_assert(offsetof(FMRGExtraOptionsIOS, bIsNotificationServiceEnabled) == 0x000011, "Member 'FMRGExtraOptionsIOS::bIsNotificationServiceEnabled' has a wrong offset!");
static_assert(offsetof(FMRGExtraOptionsIOS, bDisablePaymentsCheck) == 0x000012, "Member 'FMRGExtraOptionsIOS::bDisablePaymentsCheck' has a wrong offset!");
static_assert(offsetof(FMRGExtraOptionsIOS, bIsAutomaticPaymentTrackingEnabled) == 0x000013, "Member 'FMRGExtraOptionsIOS::bIsAutomaticPaymentTrackingEnabled' has a wrong offset!");
static_assert(offsetof(FMRGExtraOptionsIOS, bShouldRequestIdfaAtStartup) == 0x000014, "Member 'FMRGExtraOptionsIOS::bShouldRequestIdfaAtStartup' has a wrong offset!");
static_assert(offsetof(FMRGExtraOptionsIOS, bShowTrackingAuthorizationDialogOnAlliOSVersions) == 0x000015, "Member 'FMRGExtraOptionsIOS::bShowTrackingAuthorizationDialogOnAlliOSVersions' has a wrong offset!");

// ScriptStruct MRGService.MRGServiceParams
// 0x0068 (0x0068 - 0x0000)
struct FMRGServiceParams final
{
public:
	class FString                                 AppId;                                             // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AppSecret;                                         // 0x0010(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDebuggable;                                     // 0x0020(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsTestDevice;                                     // 0x0021(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsCrashReportEnabled;                             // 0x0022(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLocationTrackingEnabled;                        // 0x0023(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsUserAnonymizationEnabled;                       // 0x0024(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDeferredPushNotificationEnabled;                // 0x0025(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMRGExtraOptionsAndroid                AndroidExtraOptions;                               // 0x0028(0x0028)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FMRGExtraOptionsIOS                    IOSExtraOptions;                                   // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMRGServiceParams) == 0x000008, "Wrong alignment on FMRGServiceParams");
static_assert(sizeof(FMRGServiceParams) == 0x000068, "Wrong size on FMRGServiceParams");
static_assert(offsetof(FMRGServiceParams, AppId) == 0x000000, "Member 'FMRGServiceParams::AppId' has a wrong offset!");
static_assert(offsetof(FMRGServiceParams, AppSecret) == 0x000010, "Member 'FMRGServiceParams::AppSecret' has a wrong offset!");
static_assert(offsetof(FMRGServiceParams, bIsDebuggable) == 0x000020, "Member 'FMRGServiceParams::bIsDebuggable' has a wrong offset!");
static_assert(offsetof(FMRGServiceParams, bIsTestDevice) == 0x000021, "Member 'FMRGServiceParams::bIsTestDevice' has a wrong offset!");
static_assert(offsetof(FMRGServiceParams, bIsCrashReportEnabled) == 0x000022, "Member 'FMRGServiceParams::bIsCrashReportEnabled' has a wrong offset!");
static_assert(offsetof(FMRGServiceParams, bIsLocationTrackingEnabled) == 0x000023, "Member 'FMRGServiceParams::bIsLocationTrackingEnabled' has a wrong offset!");
static_assert(offsetof(FMRGServiceParams, bIsUserAnonymizationEnabled) == 0x000024, "Member 'FMRGServiceParams::bIsUserAnonymizationEnabled' has a wrong offset!");
static_assert(offsetof(FMRGServiceParams, bIsDeferredPushNotificationEnabled) == 0x000025, "Member 'FMRGServiceParams::bIsDeferredPushNotificationEnabled' has a wrong offset!");
static_assert(offsetof(FMRGServiceParams, AndroidExtraOptions) == 0x000028, "Member 'FMRGServiceParams::AndroidExtraOptions' has a wrong offset!");
static_assert(offsetof(FMRGServiceParams, IOSExtraOptions) == 0x000050, "Member 'FMRGServiceParams::IOSExtraOptions' has a wrong offset!");

// ScriptStruct MRGService.MRGSGeoIpInfo
// 0x0030 (0x0030 - 0x0000)
struct FMRGSGeoIpInfo final
{
public:
	class FString                                 Country;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Region;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 City;                                              // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMRGSGeoIpInfo) == 0x000008, "Wrong alignment on FMRGSGeoIpInfo");
static_assert(sizeof(FMRGSGeoIpInfo) == 0x000030, "Wrong size on FMRGSGeoIpInfo");
static_assert(offsetof(FMRGSGeoIpInfo, Country) == 0x000000, "Member 'FMRGSGeoIpInfo::Country' has a wrong offset!");
static_assert(offsetof(FMRGSGeoIpInfo, Region) == 0x000010, "Member 'FMRGSGeoIpInfo::Region' has a wrong offset!");
static_assert(offsetof(FMRGSGeoIpInfo, City) == 0x000020, "Member 'FMRGSGeoIpInfo::City' has a wrong offset!");

// ScriptStruct MRGService.MRGSPurchaseEvent
// 0x0058 (0x0058 - 0x0000)
struct FMRGSPurchaseEvent final
{
public:
	class FString                                 ProductId;                                         // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OrderId;                                           // 0x0010(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LocalizedTitle;                                    // 0x0020(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LocalizedDescription;                              // 0x0030(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Price;                                             // 0x0040(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PriceCurrency;                                     // 0x0048(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMRGSPurchaseEvent) == 0x000008, "Wrong alignment on FMRGSPurchaseEvent");
static_assert(sizeof(FMRGSPurchaseEvent) == 0x000058, "Wrong size on FMRGSPurchaseEvent");
static_assert(offsetof(FMRGSPurchaseEvent, ProductId) == 0x000000, "Member 'FMRGSPurchaseEvent::ProductId' has a wrong offset!");
static_assert(offsetof(FMRGSPurchaseEvent, OrderId) == 0x000010, "Member 'FMRGSPurchaseEvent::OrderId' has a wrong offset!");
static_assert(offsetof(FMRGSPurchaseEvent, LocalizedTitle) == 0x000020, "Member 'FMRGSPurchaseEvent::LocalizedTitle' has a wrong offset!");
static_assert(offsetof(FMRGSPurchaseEvent, LocalizedDescription) == 0x000030, "Member 'FMRGSPurchaseEvent::LocalizedDescription' has a wrong offset!");
static_assert(offsetof(FMRGSPurchaseEvent, Price) == 0x000040, "Member 'FMRGSPurchaseEvent::Price' has a wrong offset!");
static_assert(offsetof(FMRGSPurchaseEvent, PriceCurrency) == 0x000048, "Member 'FMRGSPurchaseEvent::PriceCurrency' has a wrong offset!");

// ScriptStruct MRGService.MRGSShareOptions
// 0x0060 (0x0060 - 0x0000)
struct FMRGSShareOptions final
{
public:
	class FString                                 Title;                                             // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Subject;                                           // 0x0010(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Text;                                              // 0x0020(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 URL;                                               // 0x0030(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         EmailRecipients;                                   // 0x0040(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         Files;                                             // 0x0050(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMRGSShareOptions) == 0x000008, "Wrong alignment on FMRGSShareOptions");
static_assert(sizeof(FMRGSShareOptions) == 0x000060, "Wrong size on FMRGSShareOptions");
static_assert(offsetof(FMRGSShareOptions, Title) == 0x000000, "Member 'FMRGSShareOptions::Title' has a wrong offset!");
static_assert(offsetof(FMRGSShareOptions, Subject) == 0x000010, "Member 'FMRGSShareOptions::Subject' has a wrong offset!");
static_assert(offsetof(FMRGSShareOptions, Text) == 0x000020, "Member 'FMRGSShareOptions::Text' has a wrong offset!");
static_assert(offsetof(FMRGSShareOptions, URL) == 0x000030, "Member 'FMRGSShareOptions::URL' has a wrong offset!");
static_assert(offsetof(FMRGSShareOptions, EmailRecipients) == 0x000040, "Member 'FMRGSShareOptions::EmailRecipients' has a wrong offset!");
static_assert(offsetof(FMRGSShareOptions, Files) == 0x000050, "Member 'FMRGSShareOptions::Files' has a wrong offset!");

// ScriptStruct MRGService.MRGSShareResult
// 0x0028 (0x0028 - 0x0000)
struct FMRGSShareResult final
{
public:
	EMRGSShareResultStatus                        Status;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SelectedActivity;                                  // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ChosenTarget;                                      // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMRGSShareResult) == 0x000008, "Wrong alignment on FMRGSShareResult");
static_assert(sizeof(FMRGSShareResult) == 0x000028, "Wrong size on FMRGSShareResult");
static_assert(offsetof(FMRGSShareResult, Status) == 0x000000, "Member 'FMRGSShareResult::Status' has a wrong offset!");
static_assert(offsetof(FMRGSShareResult, SelectedActivity) == 0x000008, "Member 'FMRGSShareResult::SelectedActivity' has a wrong offset!");
static_assert(offsetof(FMRGSShareResult, ChosenTarget) == 0x000018, "Member 'FMRGSShareResult::ChosenTarget' has a wrong offset!");

// ScriptStruct MRGService.MRGSUser
// 0x0020 (0x0020 - 0x0000)
struct FMRGSUser final
{
public:
	class FString                                 UserId;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         LoginTime;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         RegisterTime;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMRGSUser) == 0x000008, "Wrong alignment on FMRGSUser");
static_assert(sizeof(FMRGSUser) == 0x000020, "Wrong size on FMRGSUser");
static_assert(offsetof(FMRGSUser, UserId) == 0x000000, "Member 'FMRGSUser::UserId' has a wrong offset!");
static_assert(offsetof(FMRGSUser, LoginTime) == 0x000010, "Member 'FMRGSUser::LoginTime' has a wrong offset!");
static_assert(offsetof(FMRGSUser, RegisterTime) == 0x000018, "Member 'FMRGSUser::RegisterTime' has a wrong offset!");

}

