#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HUD_Widget

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_HUD_Widget.WBP_HUD_Widget_C.CacheStartuipSequenceOrder
// 0x0010 (0x0010 - 0x0000)
struct WBP_HUD_Widget_C_CacheStartuipSequenceOrder final
{
public:
	TArray<class UTedUserWidget*>                 K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_HUD_Widget_C_CacheStartuipSequenceOrder) == 0x000008, "Wrong alignment on WBP_HUD_Widget_C_CacheStartuipSequenceOrder");
static_assert(sizeof(WBP_HUD_Widget_C_CacheStartuipSequenceOrder) == 0x000010, "Wrong size on WBP_HUD_Widget_C_CacheStartuipSequenceOrder");
static_assert(offsetof(WBP_HUD_Widget_C_CacheStartuipSequenceOrder, K2Node_MakeArray_Array) == 0x000000, "Member 'WBP_HUD_Widget_C_CacheStartuipSequenceOrder::K2Node_MakeArray_Array' has a wrong offset!");

// Function WBP_HUD_Widget.WBP_HUD_Widget_C.ExecuteUbergraph_WBP_HUD_Widget
// 0x0004 (0x0004 - 0x0000)
struct WBP_HUD_Widget_C_ExecuteUbergraph_WBP_HUD_Widget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_Widget_C_ExecuteUbergraph_WBP_HUD_Widget) == 0x000004, "Wrong alignment on WBP_HUD_Widget_C_ExecuteUbergraph_WBP_HUD_Widget");
static_assert(sizeof(WBP_HUD_Widget_C_ExecuteUbergraph_WBP_HUD_Widget) == 0x000004, "Wrong size on WBP_HUD_Widget_C_ExecuteUbergraph_WBP_HUD_Widget");
static_assert(offsetof(WBP_HUD_Widget_C_ExecuteUbergraph_WBP_HUD_Widget, EntryPoint) == 0x000000, "Member 'WBP_HUD_Widget_C_ExecuteUbergraph_WBP_HUD_Widget::EntryPoint' has a wrong offset!");

// Function WBP_HUD_Widget.WBP_HUD_Widget_C.OnInnerWidgetAnimationEnd
// 0x0028 (0x0028 - 0x0000)
struct WBP_HUD_Widget_C_OnInnerWidgetAnimationEnd final
{
public:
	class UTedUserWidget*                         InWidget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           InAnimation;                                       // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UTedUserWidget* InWidget, const struct FGameplayTag& InAnimation)> K2Node_CreateDelegate_OutputDelegate; // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_Widget_C_OnInnerWidgetAnimationEnd) == 0x000008, "Wrong alignment on WBP_HUD_Widget_C_OnInnerWidgetAnimationEnd");
static_assert(sizeof(WBP_HUD_Widget_C_OnInnerWidgetAnimationEnd) == 0x000028, "Wrong size on WBP_HUD_Widget_C_OnInnerWidgetAnimationEnd");
static_assert(offsetof(WBP_HUD_Widget_C_OnInnerWidgetAnimationEnd, InWidget) == 0x000000, "Member 'WBP_HUD_Widget_C_OnInnerWidgetAnimationEnd::InWidget' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Widget_C_OnInnerWidgetAnimationEnd, InAnimation) == 0x000008, "Member 'WBP_HUD_Widget_C_OnInnerWidgetAnimationEnd::InAnimation' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Widget_C_OnInnerWidgetAnimationEnd, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_HUD_Widget_C_OnInnerWidgetAnimationEnd::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Widget_C_OnInnerWidgetAnimationEnd, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000020, "Member 'WBP_HUD_Widget_C_OnInnerWidgetAnimationEnd::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Widget_C_OnInnerWidgetAnimationEnd, CallFunc_Array_RemoveItem_ReturnValue) == 0x000021, "Member 'WBP_HUD_Widget_C_OnInnerWidgetAnimationEnd::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function WBP_HUD_Widget.WBP_HUD_Widget_C.OnPlayWidgetAnimation
// 0x0028 (0x0028 - 0x0000)
struct WBP_HUD_Widget_C_OnPlayWidgetAnimation final
{
public:
	struct FGameplayTag                           InAnim;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_Widget_C_OnPlayWidgetAnimation) == 0x000008, "Wrong alignment on WBP_HUD_Widget_C_OnPlayWidgetAnimation");
static_assert(sizeof(WBP_HUD_Widget_C_OnPlayWidgetAnimation) == 0x000028, "Wrong size on WBP_HUD_Widget_C_OnPlayWidgetAnimation");
static_assert(offsetof(WBP_HUD_Widget_C_OnPlayWidgetAnimation, InAnim) == 0x000000, "Member 'WBP_HUD_Widget_C_OnPlayWidgetAnimation::InAnim' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Widget_C_OnPlayWidgetAnimation, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_HUD_Widget_C_OnPlayWidgetAnimation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Widget_C_OnPlayWidgetAnimation, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000018, "Member 'WBP_HUD_Widget_C_OnPlayWidgetAnimation::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Widget_C_OnPlayWidgetAnimation, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'WBP_HUD_Widget_C_OnPlayWidgetAnimation::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function WBP_HUD_Widget.WBP_HUD_Widget_C.PlayPossibleStartupSequences
// 0x0038 (0x0038 - 0x0000)
struct WBP_HUD_Widget_C_PlayPossibleStartupSequences final
{
public:
	class UTedUserWidget*                         Local_Widget;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UTedUserWidget* InWidget, const struct FGameplayTag& InAnimation)> K2Node_CreateDelegate_OutputDelegate; // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTedUserWidget*                         CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPlayWidgetAnimation_ReturnValue;       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_Widget_C_PlayPossibleStartupSequences) == 0x000008, "Wrong alignment on WBP_HUD_Widget_C_PlayPossibleStartupSequences");
static_assert(sizeof(WBP_HUD_Widget_C_PlayPossibleStartupSequences) == 0x000038, "Wrong size on WBP_HUD_Widget_C_PlayPossibleStartupSequences");
static_assert(offsetof(WBP_HUD_Widget_C_PlayPossibleStartupSequences, Local_Widget) == 0x000000, "Member 'WBP_HUD_Widget_C_PlayPossibleStartupSequences::Local_Widget' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Widget_C_PlayPossibleStartupSequences, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'WBP_HUD_Widget_C_PlayPossibleStartupSequences::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Widget_C_PlayPossibleStartupSequences, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'WBP_HUD_Widget_C_PlayPossibleStartupSequences::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Widget_C_PlayPossibleStartupSequences, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'WBP_HUD_Widget_C_PlayPossibleStartupSequences::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Widget_C_PlayPossibleStartupSequences, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_HUD_Widget_C_PlayPossibleStartupSequences::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Widget_C_PlayPossibleStartupSequences, CallFunc_Array_RemoveItem_ReturnValue) == 0x000028, "Member 'WBP_HUD_Widget_C_PlayPossibleStartupSequences::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Widget_C_PlayPossibleStartupSequences, CallFunc_CanPlayWidgetAnimation_ReturnValue) == 0x000029, "Member 'WBP_HUD_Widget_C_PlayPossibleStartupSequences::CallFunc_CanPlayWidgetAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Widget_C_PlayPossibleStartupSequences, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x00002A, "Member 'WBP_HUD_Widget_C_PlayPossibleStartupSequences::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Widget_C_PlayPossibleStartupSequences, CallFunc_Array_Contains_ReturnValue) == 0x00002B, "Member 'WBP_HUD_Widget_C_PlayPossibleStartupSequences::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Widget_C_PlayPossibleStartupSequences, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'WBP_HUD_Widget_C_PlayPossibleStartupSequences::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Widget_C_PlayPossibleStartupSequences, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'WBP_HUD_Widget_C_PlayPossibleStartupSequences::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Widget_C_PlayPossibleStartupSequences, CallFunc_Less_IntInt_ReturnValue) == 0x000031, "Member 'WBP_HUD_Widget_C_PlayPossibleStartupSequences::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Widget_C_PlayPossibleStartupSequences, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'WBP_HUD_Widget_C_PlayPossibleStartupSequences::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_HUD_Widget.WBP_HUD_Widget_C.TryEndStartupSequence
// 0x000C (0x000C - 0x0000)
struct WBP_HUD_Widget_C_TryEndStartupSequence final
{
public:
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_Widget_C_TryEndStartupSequence) == 0x000004, "Wrong alignment on WBP_HUD_Widget_C_TryEndStartupSequence");
static_assert(sizeof(WBP_HUD_Widget_C_TryEndStartupSequence) == 0x00000C, "Wrong size on WBP_HUD_Widget_C_TryEndStartupSequence");
static_assert(offsetof(WBP_HUD_Widget_C_TryEndStartupSequence, CallFunc_Array_Contains_ReturnValue) == 0x000000, "Member 'WBP_HUD_Widget_C_TryEndStartupSequence::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Widget_C_TryEndStartupSequence, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'WBP_HUD_Widget_C_TryEndStartupSequence::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Widget_C_TryEndStartupSequence, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000008, "Member 'WBP_HUD_Widget_C_TryEndStartupSequence::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_HUD_Widget.WBP_HUD_Widget_C.OnCanPlayWidgetAnimation
// 0x000C (0x000C - 0x0000)
struct WBP_HUD_Widget_C_OnCanPlayWidgetAnimation final
{
public:
	struct FGameplayTag                           InAnim;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_Widget_C_OnCanPlayWidgetAnimation) == 0x000004, "Wrong alignment on WBP_HUD_Widget_C_OnCanPlayWidgetAnimation");
static_assert(sizeof(WBP_HUD_Widget_C_OnCanPlayWidgetAnimation) == 0x00000C, "Wrong size on WBP_HUD_Widget_C_OnCanPlayWidgetAnimation");
static_assert(offsetof(WBP_HUD_Widget_C_OnCanPlayWidgetAnimation, InAnim) == 0x000000, "Member 'WBP_HUD_Widget_C_OnCanPlayWidgetAnimation::InAnim' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Widget_C_OnCanPlayWidgetAnimation, ReturnValue) == 0x000008, "Member 'WBP_HUD_Widget_C_OnCanPlayWidgetAnimation::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Widget_C_OnCanPlayWidgetAnimation, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000009, "Member 'WBP_HUD_Widget_C_OnCanPlayWidgetAnimation::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");

}

