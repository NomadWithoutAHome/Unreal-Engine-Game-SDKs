#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VehicleWreck_Globetrotter

#include "Basic.hpp"

#include "PhysicsCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Tempest_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_VehicleWreck_Globetrotter.BP_VehicleWreck_Globetrotter_C
// 0x0150 (0x04F0 - 0x03A0)
class ABP_VehicleWreck_Globetrotter_C final : public ATedVehicleWreckActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        FireSFX;                                           // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_FireAircraftDestruction_4;                      // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_FireAircraftDestruction_3;                      // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WreckGlobetrotter_07;                           // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WreckGlobetrotter_06;                           // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_FireAircraftDestruction_2;                      // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_FireAircraftDestruction_1;                      // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WreckGlobetrotter_04;                           // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WreckGlobetrotter_05;                           // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_FireAircraftDestruction_Main;                   // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WreckGlobetrotter_03;                           // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WreckGlobetrotter_02;                           // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_408[0x8];                                      // 0x0408(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ActorTransformCache;                               // 0x0410(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VelocityVectorLength;                              // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VelocityToTransfer;                                // 0x0478(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitBaseMesh;                                       // 0x0490(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitWingLeft;                                       // 0x0491(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_492[0x6];                                      // 0x0492(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaxBaseVelocityVectorLength;                       // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EngineLeftDetach_1;                                // 0x04A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EngineLeftDetach_2;                                // 0x04A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EngineRightDetach_1;                               // 0x04A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EngineRightDetach_2;                               // 0x04A3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WingLeftDetach;                                    // 0x04A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WingRightDetach;                                   // 0x04A5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitWingRight;                                      // 0x04A6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitEngineLeft_1;                                   // 0x04A7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitEngineLeft_2;                                   // 0x04A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitEngineRight_1;                                  // 0x04A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitEngineRight_2;                                  // 0x04AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AB[0x5];                                      // 0x04AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                FinishMeshLocCache;                                // 0x04B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WingBroke;                                         // 0x04C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitBaseMeshStruct;                                 // 0x04C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CA[0x6];                                      // 0x04CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocationCache;                                  // 0x04D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_VehicleWreck_Globetrotter_SM_WreckGlobetrotter_03_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void BndEvt__BP_VehicleWreck_Globetrotter_SM_WreckGlobetrotter_04_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void BndEvt__BP_VehicleWreck_Globetrotter_SM_WreckGlobetrotter_05_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void BndEvt__BP_VehicleWreck_Globetrotter_SM_WreckGlobetrotter_06_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void BndEvt__BP_VehicleWreck_Globetrotter_SM_WreckGlobetrotter_07_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void BndEvt__BP_VehicleWreck_MediumTank_Mesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void BndEvt__BP_VehicleWreck_MediumTank_SM_WreckMediumTank_02_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ExecuteUbergraph_BP_VehicleWreck_Globetrotter(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_VehicleWreck_Globetrotter_C">();
	}
	static class ABP_VehicleWreck_Globetrotter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_VehicleWreck_Globetrotter_C>();
	}
};
static_assert(alignof(ABP_VehicleWreck_Globetrotter_C) == 0x000010, "Wrong alignment on ABP_VehicleWreck_Globetrotter_C");
static_assert(sizeof(ABP_VehicleWreck_Globetrotter_C) == 0x0004F0, "Wrong size on ABP_VehicleWreck_Globetrotter_C");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, UberGraphFrame) == 0x0003A0, "Member 'ABP_VehicleWreck_Globetrotter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, FireSFX) == 0x0003A8, "Member 'ABP_VehicleWreck_Globetrotter_C::FireSFX' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, PS_FireAircraftDestruction_4) == 0x0003B0, "Member 'ABP_VehicleWreck_Globetrotter_C::PS_FireAircraftDestruction_4' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, PS_FireAircraftDestruction_3) == 0x0003B8, "Member 'ABP_VehicleWreck_Globetrotter_C::PS_FireAircraftDestruction_3' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, SM_WreckGlobetrotter_07) == 0x0003C0, "Member 'ABP_VehicleWreck_Globetrotter_C::SM_WreckGlobetrotter_07' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, SM_WreckGlobetrotter_06) == 0x0003C8, "Member 'ABP_VehicleWreck_Globetrotter_C::SM_WreckGlobetrotter_06' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, PS_FireAircraftDestruction_2) == 0x0003D0, "Member 'ABP_VehicleWreck_Globetrotter_C::PS_FireAircraftDestruction_2' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, PS_FireAircraftDestruction_1) == 0x0003D8, "Member 'ABP_VehicleWreck_Globetrotter_C::PS_FireAircraftDestruction_1' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, SM_WreckGlobetrotter_04) == 0x0003E0, "Member 'ABP_VehicleWreck_Globetrotter_C::SM_WreckGlobetrotter_04' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, SM_WreckGlobetrotter_05) == 0x0003E8, "Member 'ABP_VehicleWreck_Globetrotter_C::SM_WreckGlobetrotter_05' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, PS_FireAircraftDestruction_Main) == 0x0003F0, "Member 'ABP_VehicleWreck_Globetrotter_C::PS_FireAircraftDestruction_Main' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, SM_WreckGlobetrotter_03) == 0x0003F8, "Member 'ABP_VehicleWreck_Globetrotter_C::SM_WreckGlobetrotter_03' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, SM_WreckGlobetrotter_02) == 0x000400, "Member 'ABP_VehicleWreck_Globetrotter_C::SM_WreckGlobetrotter_02' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, ActorTransformCache) == 0x000410, "Member 'ABP_VehicleWreck_Globetrotter_C::ActorTransformCache' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, VelocityVectorLength) == 0x000470, "Member 'ABP_VehicleWreck_Globetrotter_C::VelocityVectorLength' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, VelocityToTransfer) == 0x000478, "Member 'ABP_VehicleWreck_Globetrotter_C::VelocityToTransfer' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, HitBaseMesh) == 0x000490, "Member 'ABP_VehicleWreck_Globetrotter_C::HitBaseMesh' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, HitWingLeft) == 0x000491, "Member 'ABP_VehicleWreck_Globetrotter_C::HitWingLeft' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, MaxBaseVelocityVectorLength) == 0x000498, "Member 'ABP_VehicleWreck_Globetrotter_C::MaxBaseVelocityVectorLength' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, EngineLeftDetach_1) == 0x0004A0, "Member 'ABP_VehicleWreck_Globetrotter_C::EngineLeftDetach_1' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, EngineLeftDetach_2) == 0x0004A1, "Member 'ABP_VehicleWreck_Globetrotter_C::EngineLeftDetach_2' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, EngineRightDetach_1) == 0x0004A2, "Member 'ABP_VehicleWreck_Globetrotter_C::EngineRightDetach_1' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, EngineRightDetach_2) == 0x0004A3, "Member 'ABP_VehicleWreck_Globetrotter_C::EngineRightDetach_2' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, WingLeftDetach) == 0x0004A4, "Member 'ABP_VehicleWreck_Globetrotter_C::WingLeftDetach' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, WingRightDetach) == 0x0004A5, "Member 'ABP_VehicleWreck_Globetrotter_C::WingRightDetach' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, HitWingRight) == 0x0004A6, "Member 'ABP_VehicleWreck_Globetrotter_C::HitWingRight' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, HitEngineLeft_1) == 0x0004A7, "Member 'ABP_VehicleWreck_Globetrotter_C::HitEngineLeft_1' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, HitEngineLeft_2) == 0x0004A8, "Member 'ABP_VehicleWreck_Globetrotter_C::HitEngineLeft_2' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, HitEngineRight_1) == 0x0004A9, "Member 'ABP_VehicleWreck_Globetrotter_C::HitEngineRight_1' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, HitEngineRight_2) == 0x0004AA, "Member 'ABP_VehicleWreck_Globetrotter_C::HitEngineRight_2' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, FinishMeshLocCache) == 0x0004B0, "Member 'ABP_VehicleWreck_Globetrotter_C::FinishMeshLocCache' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, WingBroke) == 0x0004C8, "Member 'ABP_VehicleWreck_Globetrotter_C::WingBroke' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, HitBaseMeshStruct) == 0x0004C9, "Member 'ABP_VehicleWreck_Globetrotter_C::HitBaseMeshStruct' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_Globetrotter_C, HitLocationCache) == 0x0004D0, "Member 'ABP_VehicleWreck_Globetrotter_C::HitLocationCache' has a wrong offset!");

}

