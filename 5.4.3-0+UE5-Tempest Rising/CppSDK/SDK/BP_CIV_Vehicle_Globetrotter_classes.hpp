#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CIV_Vehicle_Globetrotter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_Aircraft_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CIV_Vehicle_Globetrotter.BP_CIV_Vehicle_Globetrotter_C
// 0x0070 (0x1D90 - 0x1D20)
#pragma pack(push, 0x1)
class alignas(0x10) ABP_CIV_Vehicle_Globetrotter_C : public ABP_Aircraft_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_CIV_Vehicle_Globetrotter_C;      // 0x1D18(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          HitBox4;                                           // 0x1D20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          HitBox3;                                           // 0x1D28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          HitBox2;                                           // 0x1D30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_FireAircraftDestruction_4;                      // 0x1D38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_FireAircraftDestruction_3;                      // 0x1D40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_FireAircraftDestruction_2;                      // 0x1D48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_FireAircraftDestruction_1;                      // 0x1D50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_AircraftContrail_Globtrotter_2;                 // 0x1D58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_AircraftContrail_Globtrotter_1;                 // 0x1D60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_JetEngine_02_LongBigCamOffset1;                 // 0x1D68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_JetEngine_02_LongBigCamOffset3;                 // 0x1D70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_JetEngine_02_LongBigCamOffset2;                 // 0x1D78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_JetEngine_02_LongBigCamOffset;                  // 0x1D80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_CIV_Vehicle_Globetrotter(int32 EntryPoint);
	void ReceiveOnDeath();
	void ReceiveUpdateHealthEffects(float HealthPct);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CIV_Vehicle_Globetrotter_C">();
	}
	static class ABP_CIV_Vehicle_Globetrotter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CIV_Vehicle_Globetrotter_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABP_CIV_Vehicle_Globetrotter_C) == 0x000010, "Wrong alignment on ABP_CIV_Vehicle_Globetrotter_C");
static_assert(sizeof(ABP_CIV_Vehicle_Globetrotter_C) == 0x001D90, "Wrong size on ABP_CIV_Vehicle_Globetrotter_C");
static_assert(offsetof(ABP_CIV_Vehicle_Globetrotter_C, UberGraphFrame_BP_CIV_Vehicle_Globetrotter_C) == 0x001D18, "Member 'ABP_CIV_Vehicle_Globetrotter_C::UberGraphFrame_BP_CIV_Vehicle_Globetrotter_C' has a wrong offset!");
static_assert(offsetof(ABP_CIV_Vehicle_Globetrotter_C, HitBox4) == 0x001D20, "Member 'ABP_CIV_Vehicle_Globetrotter_C::HitBox4' has a wrong offset!");
static_assert(offsetof(ABP_CIV_Vehicle_Globetrotter_C, HitBox3) == 0x001D28, "Member 'ABP_CIV_Vehicle_Globetrotter_C::HitBox3' has a wrong offset!");
static_assert(offsetof(ABP_CIV_Vehicle_Globetrotter_C, HitBox2) == 0x001D30, "Member 'ABP_CIV_Vehicle_Globetrotter_C::HitBox2' has a wrong offset!");
static_assert(offsetof(ABP_CIV_Vehicle_Globetrotter_C, PS_FireAircraftDestruction_4) == 0x001D38, "Member 'ABP_CIV_Vehicle_Globetrotter_C::PS_FireAircraftDestruction_4' has a wrong offset!");
static_assert(offsetof(ABP_CIV_Vehicle_Globetrotter_C, PS_FireAircraftDestruction_3) == 0x001D40, "Member 'ABP_CIV_Vehicle_Globetrotter_C::PS_FireAircraftDestruction_3' has a wrong offset!");
static_assert(offsetof(ABP_CIV_Vehicle_Globetrotter_C, PS_FireAircraftDestruction_2) == 0x001D48, "Member 'ABP_CIV_Vehicle_Globetrotter_C::PS_FireAircraftDestruction_2' has a wrong offset!");
static_assert(offsetof(ABP_CIV_Vehicle_Globetrotter_C, PS_FireAircraftDestruction_1) == 0x001D50, "Member 'ABP_CIV_Vehicle_Globetrotter_C::PS_FireAircraftDestruction_1' has a wrong offset!");
static_assert(offsetof(ABP_CIV_Vehicle_Globetrotter_C, PS_AircraftContrail_Globtrotter_2) == 0x001D58, "Member 'ABP_CIV_Vehicle_Globetrotter_C::PS_AircraftContrail_Globtrotter_2' has a wrong offset!");
static_assert(offsetof(ABP_CIV_Vehicle_Globetrotter_C, PS_AircraftContrail_Globtrotter_1) == 0x001D60, "Member 'ABP_CIV_Vehicle_Globetrotter_C::PS_AircraftContrail_Globtrotter_1' has a wrong offset!");
static_assert(offsetof(ABP_CIV_Vehicle_Globetrotter_C, PS_JetEngine_02_LongBigCamOffset1) == 0x001D68, "Member 'ABP_CIV_Vehicle_Globetrotter_C::PS_JetEngine_02_LongBigCamOffset1' has a wrong offset!");
static_assert(offsetof(ABP_CIV_Vehicle_Globetrotter_C, PS_JetEngine_02_LongBigCamOffset3) == 0x001D70, "Member 'ABP_CIV_Vehicle_Globetrotter_C::PS_JetEngine_02_LongBigCamOffset3' has a wrong offset!");
static_assert(offsetof(ABP_CIV_Vehicle_Globetrotter_C, PS_JetEngine_02_LongBigCamOffset2) == 0x001D78, "Member 'ABP_CIV_Vehicle_Globetrotter_C::PS_JetEngine_02_LongBigCamOffset2' has a wrong offset!");
static_assert(offsetof(ABP_CIV_Vehicle_Globetrotter_C, PS_JetEngine_02_LongBigCamOffset) == 0x001D80, "Member 'ABP_CIV_Vehicle_Globetrotter_C::PS_JetEngine_02_LongBigCamOffset' has a wrong offset!");

}

