#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InputMapping_Picker

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_InputMapping_Picker.WBP_InputMapping_Picker_C.RefreshText
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_InputMapping_Picker_C_RefreshText final
{
public:
	struct FKey                                   LocalEscapeKey;                                    // 0x0000(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FText                                   CallFunc_GetInputDisplayText_ReturnValue;          // 0x0018(0x0010)(ConstParm)
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x0028(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D8(0x0010)()
};
static_assert(alignof(WBP_InputMapping_Picker_C_RefreshText) == 0x000008, "Wrong alignment on WBP_InputMapping_Picker_C_RefreshText");
static_assert(sizeof(WBP_InputMapping_Picker_C_RefreshText) == 0x0000E8, "Wrong size on WBP_InputMapping_Picker_C_RefreshText");
static_assert(offsetof(WBP_InputMapping_Picker_C_RefreshText, LocalEscapeKey) == 0x000000, "Member 'WBP_InputMapping_Picker_C_RefreshText::LocalEscapeKey' has a wrong offset!");
static_assert(offsetof(WBP_InputMapping_Picker_C_RefreshText, CallFunc_GetInputDisplayText_ReturnValue) == 0x000018, "Member 'WBP_InputMapping_Picker_C_RefreshText::CallFunc_GetInputDisplayText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputMapping_Picker_C_RefreshText, CallFunc_Key_GetDisplayName_ReturnValue) == 0x000028, "Member 'WBP_InputMapping_Picker_C_RefreshText::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputMapping_Picker_C_RefreshText, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'WBP_InputMapping_Picker_C_RefreshText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_InputMapping_Picker_C_RefreshText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'WBP_InputMapping_Picker_C_RefreshText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_InputMapping_Picker_C_RefreshText, K2Node_MakeArray_Array) == 0x0000C8, "Member 'WBP_InputMapping_Picker_C_RefreshText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_InputMapping_Picker_C_RefreshText, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'WBP_InputMapping_Picker_C_RefreshText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_InputMapping_Picker.WBP_InputMapping_Picker_C.ExecuteUbergraph_WBP_InputMapping_Picker
// 0x0004 (0x0004 - 0x0000)
struct WBP_InputMapping_Picker_C_ExecuteUbergraph_WBP_InputMapping_Picker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputMapping_Picker_C_ExecuteUbergraph_WBP_InputMapping_Picker) == 0x000004, "Wrong alignment on WBP_InputMapping_Picker_C_ExecuteUbergraph_WBP_InputMapping_Picker");
static_assert(sizeof(WBP_InputMapping_Picker_C_ExecuteUbergraph_WBP_InputMapping_Picker) == 0x000004, "Wrong size on WBP_InputMapping_Picker_C_ExecuteUbergraph_WBP_InputMapping_Picker");
static_assert(offsetof(WBP_InputMapping_Picker_C_ExecuteUbergraph_WBP_InputMapping_Picker, EntryPoint) == 0x000000, "Member 'WBP_InputMapping_Picker_C_ExecuteUbergraph_WBP_InputMapping_Picker::EntryPoint' has a wrong offset!");

}

