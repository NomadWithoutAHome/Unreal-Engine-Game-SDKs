#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GDF_Infantry_DroneOperator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_Infantry_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GDF_Infantry_DroneOperator.BP_GDF_Infantry_DroneOperator_C
// 0x0030 (0x1BF0 - 0x1BC0)
class ABP_GDF_Infantry_DroneOperator_C final : public ABP_Infantry_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1BC0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTedRangeDecalComponent*                AbilityPreviewDecal;                               // 0x1BC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   ConsoleLight;                                      // 0x1BD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Antennalight;                                      // 0x1BD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTedUnitSpawnerComponent*               TedDroneCarrier;                                   // 0x1BE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bCachedSelected;                                   // 0x1BE8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCachedHovered;                                    // 0x1BE9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_DYN_Vehicle_TempestSphere_AbilityPreviewDecal_K2Node_ComponentBoundEvent_0_RangeDecalDelegate__DelegateSignature();
	void BndEvt__BP_DYN_Vehicle_TempestSphere_AbilityPreviewDecal_K2Node_ComponentBoundEvent_2_RangeDecalDelegate__DelegateSignature();
	void ExecuteUbergraph_BP_GDF_Infantry_DroneOperator(int32 EntryPoint);
	void OnSelectionChanged_Blueprint(const bool bIsSelected, const bool bIsHovered);
	void UpdateRangeDecal();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GDF_Infantry_DroneOperator_C">();
	}
	static class ABP_GDF_Infantry_DroneOperator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GDF_Infantry_DroneOperator_C>();
	}
};
static_assert(alignof(ABP_GDF_Infantry_DroneOperator_C) == 0x000010, "Wrong alignment on ABP_GDF_Infantry_DroneOperator_C");
static_assert(sizeof(ABP_GDF_Infantry_DroneOperator_C) == 0x001BF0, "Wrong size on ABP_GDF_Infantry_DroneOperator_C");
static_assert(offsetof(ABP_GDF_Infantry_DroneOperator_C, UberGraphFrame) == 0x001BC0, "Member 'ABP_GDF_Infantry_DroneOperator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Infantry_DroneOperator_C, AbilityPreviewDecal) == 0x001BC8, "Member 'ABP_GDF_Infantry_DroneOperator_C::AbilityPreviewDecal' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Infantry_DroneOperator_C, ConsoleLight) == 0x001BD0, "Member 'ABP_GDF_Infantry_DroneOperator_C::ConsoleLight' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Infantry_DroneOperator_C, Antennalight) == 0x001BD8, "Member 'ABP_GDF_Infantry_DroneOperator_C::Antennalight' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Infantry_DroneOperator_C, TedDroneCarrier) == 0x001BE0, "Member 'ABP_GDF_Infantry_DroneOperator_C::TedDroneCarrier' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Infantry_DroneOperator_C, bCachedSelected) == 0x001BE8, "Member 'ABP_GDF_Infantry_DroneOperator_C::bCachedSelected' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Infantry_DroneOperator_C, bCachedHovered) == 0x001BE9, "Member 'ABP_GDF_Infantry_DroneOperator_C::bCachedHovered' has a wrong offset!");

}

