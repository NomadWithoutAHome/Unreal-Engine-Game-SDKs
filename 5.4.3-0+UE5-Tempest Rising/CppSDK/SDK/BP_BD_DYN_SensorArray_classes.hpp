#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BD_DYN_SensorArray

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "Engine_structs.hpp"
#include "Tempest_structs.hpp"
#include "Tempest_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BD_DYN_SensorArray.BP_BD_DYN_SensorArray_C
// 0x0150 (0x1B50 - 0x1A00)
class ABP_BD_DYN_SensorArray_C final : public ATedStructureBase
{
public:
	uint8                                         Pad_19F8[0x8];                                     // 0x19F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1A00(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTedRangeDecalComponent*                DetectionDecal;                                    // 0x1A08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTedRangeDecalComponent*                TedRangeDecal;                                     // 0x1A10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      PS_DustStructurePlacement_01_ParamSize;            // 0x1A18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      PS_DustDYNDrillPlacement_01;                       // 0x1A20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_BuildingAmbience_C*                 BP_BuildingAmbience;                               // 0x1A28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        FireSFX;                                           // 0x1A30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SearchLight_Sensor;                                // 0x1A38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_TempestSearchlightSensor_01_Ground;             // 0x1A40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight_2;                                      // 0x1A48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight_1;                                      // 0x1A50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Fire1;                                          // 0x1A58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          HitBox1;                                           // 0x1A60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         TL_Explosion_Dissolve_2E9F7F5F4B3D6F796CAC19A5375ECC94; // 0x1A68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TL_Explosion_Explosion_2E9F7F5F4B3D6F796CAC19A5375ECC94; // 0x1A6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_Explosion__Direction_2E9F7F5F4B3D6F796CAC19A5375ECC94; // 0x1A70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A71[0x7];                                     // 0x1A71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_Explosion;                                      // 0x1A78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TL_OnDeath_NewTrack_1_A5FDB56D4AD28C9B59AD9799CDE9B09A; // 0x1A80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_OnDeath__Direction_A5FDB56D4AD28C9B59AD9799CDE9B09A; // 0x1A84(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A85[0x3];                                     // 0x1A85(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_OnDeath;                                        // 0x1A88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TL_DeactivateAndDestroy_Dissolve_970F4CB14634AD7194FFE28126329643; // 0x1A90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_DeactivateAndDestroy__Direction_970F4CB14634AD7194FFE28126329643; // 0x1A94(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A95[0x3];                                     // 0x1A95(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_DeactivateAndDestroy;                           // 0x1A98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_2_Sensor_Color_Progress_93AC1BDA471E59A7C261F8AA5640466F; // 0x1AA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_2_Sensor_Atten_Radius_93AC1BDA471E59A7C261F8AA5640466F; // 0x1AA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_2_Sensor_Outer_Cone_93AC1BDA471E59A7C261F8AA5640466F; // 0x1AA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_2_Sensor_Intensity_93AC1BDA471E59A7C261F8AA5640466F; // 0x1AAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_2_Sensor_Scattering_93AC1BDA471E59A7C261F8AA5640466F; // 0x1AB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_2__Direction_93AC1BDA471E59A7C261F8AA5640466F; // 0x1AB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AB5[0x3];                                     // 0x1AB5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_2;                                        // 0x1AB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CachedActorLocation;                               // 0x1AC0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Explosion_Strength;                                // 0x1AD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Explosion_Radius;                                  // 0x1AE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Explosion_Falloff_Exp;                             // 0x1AE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Explosion_Slot_Array;                              // 0x1AF0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 Explosion_Slot_Current;                            // 0x1B00(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          Explosion_Slot_Found;                              // 0x1B10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B11[0x7];                                     // 0x1B11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Old_Fire_Target;                                   // 0x1B18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Switching_Targets;                              // 0x1B20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B21[0x3];                                     // 0x1B21(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Sensor_Idle_Color;                                 // 0x1B24(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Sensor_Target_Color;                               // 0x1B34(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CachedSurfaceType;                                 // 0x1B44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimMontageLength;                                 // 0x1B48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_BD_DYN_SamSite_TedRangeDecal_K2Node_ComponentBoundEvent_0_OnRangeDisplayed__DelegateSignature();
	void BndEvt__BP_GDF_Infantry_CommsOfficer_DetectionDecal_K2Node_ComponentBoundEvent_1_RangeDecalDelegate__DelegateSignature();
	void Destructible(TArray<class UStaticMesh*>& DestMeshes, TArray<struct FVector>& DestMeshes_Locations, TArray<struct FRotator>& DestMeshes_Rotators, const struct FVector& MeshScale, TArray<class UFXSystemAsset*>& DestMeshes_exploFX, TArray<double>& DestMeshes_exploFX_Scale, TArray<class UFXSystemAsset*>& DestMeshes_attachedFX, TArray<double>& DestMeshes_attachedFX_Scale, TArray<struct FVector>& DestMeshes_LinearImpulse, TArray<struct FVector>& DestMeshes_AngularImpulse, TArray<class AStaticMeshActor*>* SpawnedMeshesArray, TArray<class UFXSystemComponent*>* SpawnedAttachedFXArray);
	void Destructible_SensorA_Custom_Setup(class USkeletalMeshComponent* Skeletal_Mesh, TArray<class UStaticMesh*>* DestMeshes, TArray<struct FVector>* DestMeshes_Locations, TArray<struct FRotator>* DestMeshes_Rotators, struct FVector* MeshScale, TArray<class UFXSystemAsset*>* DestMeshes_FX, TArray<double>* DestMeshes_FX_Scale, TArray<class UFXSystemAsset*>* DestMeshes_FXattached, TArray<double>* DestMeshes_FXattached_Scale, TArray<struct FVector>* DestMeshes_LinearImpulse, TArray<struct FVector>* DestMeshes_AngularImpulse);
	void ExecuteUbergraph_BP_BD_DYN_SensorArray(int32 EntryPoint);
	void Found_Free_Explosion_Slot();
	void K2_OnEndSellingStructure();
	void OnSelectionChanged_Blueprint(const bool bIsSelected, const bool bIsHovered);
	void ReceiveBeginPlay();
	void ReceiveHandlePowerStateVisuals(const bool bBlackedOut, const bool bUserPowered, const bool bSufficientPower);
	void ReceiveOnDeath();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveUpdateHealthEffects(float HealthPct);
	void Timeline_2__FinishedFunc();
	void Timeline_2__UpdateFunc();
	void TL_DeactivateAndDestroy__Deactivate_FX__EventFunc();
	void TL_DeactivateAndDestroy__FinishedFunc();
	void TL_DeactivateAndDestroy__UpdateFunc();
	void TL_Explosion__FinishedFunc();
	void TL_Explosion__UpdateFunc();
	void TL_OnDeath__Explosion__EventFunc();
	void TL_OnDeath__ExplosionAudio__EventFunc();
	void TL_OnDeath__FinishedFunc();
	void TL_OnDeath__SpawnChunks__EventFunc();
	void TL_OnDeath__SpawnDecal__EventFunc();
	void TL_OnDeath__UpdateFunc();
	void Update_Sauron_s_Eye(bool HasTarget);
	void UpdateDetectionRangeDecal();
	void UpdateRangeDecal();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BD_DYN_SensorArray_C">();
	}
	static class ABP_BD_DYN_SensorArray_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BD_DYN_SensorArray_C>();
	}
};
static_assert(alignof(ABP_BD_DYN_SensorArray_C) == 0x000010, "Wrong alignment on ABP_BD_DYN_SensorArray_C");
static_assert(sizeof(ABP_BD_DYN_SensorArray_C) == 0x001B50, "Wrong size on ABP_BD_DYN_SensorArray_C");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, UberGraphFrame) == 0x001A00, "Member 'ABP_BD_DYN_SensorArray_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, DetectionDecal) == 0x001A08, "Member 'ABP_BD_DYN_SensorArray_C::DetectionDecal' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, TedRangeDecal) == 0x001A10, "Member 'ABP_BD_DYN_SensorArray_C::TedRangeDecal' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, PS_DustStructurePlacement_01_ParamSize) == 0x001A18, "Member 'ABP_BD_DYN_SensorArray_C::PS_DustStructurePlacement_01_ParamSize' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, PS_DustDYNDrillPlacement_01) == 0x001A20, "Member 'ABP_BD_DYN_SensorArray_C::PS_DustDYNDrillPlacement_01' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, BP_BuildingAmbience) == 0x001A28, "Member 'ABP_BD_DYN_SensorArray_C::BP_BuildingAmbience' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, FireSFX) == 0x001A30, "Member 'ABP_BD_DYN_SensorArray_C::FireSFX' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, SearchLight_Sensor) == 0x001A38, "Member 'ABP_BD_DYN_SensorArray_C::SearchLight_Sensor' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, PS_TempestSearchlightSensor_01_Ground) == 0x001A40, "Member 'ABP_BD_DYN_SensorArray_C::PS_TempestSearchlightSensor_01_Ground' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, PointLight_2) == 0x001A48, "Member 'ABP_BD_DYN_SensorArray_C::PointLight_2' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, PointLight_1) == 0x001A50, "Member 'ABP_BD_DYN_SensorArray_C::PointLight_1' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, NS_Fire1) == 0x001A58, "Member 'ABP_BD_DYN_SensorArray_C::NS_Fire1' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, HitBox1) == 0x001A60, "Member 'ABP_BD_DYN_SensorArray_C::HitBox1' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, TL_Explosion_Dissolve_2E9F7F5F4B3D6F796CAC19A5375ECC94) == 0x001A68, "Member 'ABP_BD_DYN_SensorArray_C::TL_Explosion_Dissolve_2E9F7F5F4B3D6F796CAC19A5375ECC94' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, TL_Explosion_Explosion_2E9F7F5F4B3D6F796CAC19A5375ECC94) == 0x001A6C, "Member 'ABP_BD_DYN_SensorArray_C::TL_Explosion_Explosion_2E9F7F5F4B3D6F796CAC19A5375ECC94' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, TL_Explosion__Direction_2E9F7F5F4B3D6F796CAC19A5375ECC94) == 0x001A70, "Member 'ABP_BD_DYN_SensorArray_C::TL_Explosion__Direction_2E9F7F5F4B3D6F796CAC19A5375ECC94' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, TL_Explosion) == 0x001A78, "Member 'ABP_BD_DYN_SensorArray_C::TL_Explosion' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, TL_OnDeath_NewTrack_1_A5FDB56D4AD28C9B59AD9799CDE9B09A) == 0x001A80, "Member 'ABP_BD_DYN_SensorArray_C::TL_OnDeath_NewTrack_1_A5FDB56D4AD28C9B59AD9799CDE9B09A' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, TL_OnDeath__Direction_A5FDB56D4AD28C9B59AD9799CDE9B09A) == 0x001A84, "Member 'ABP_BD_DYN_SensorArray_C::TL_OnDeath__Direction_A5FDB56D4AD28C9B59AD9799CDE9B09A' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, TL_OnDeath) == 0x001A88, "Member 'ABP_BD_DYN_SensorArray_C::TL_OnDeath' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, TL_DeactivateAndDestroy_Dissolve_970F4CB14634AD7194FFE28126329643) == 0x001A90, "Member 'ABP_BD_DYN_SensorArray_C::TL_DeactivateAndDestroy_Dissolve_970F4CB14634AD7194FFE28126329643' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, TL_DeactivateAndDestroy__Direction_970F4CB14634AD7194FFE28126329643) == 0x001A94, "Member 'ABP_BD_DYN_SensorArray_C::TL_DeactivateAndDestroy__Direction_970F4CB14634AD7194FFE28126329643' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, TL_DeactivateAndDestroy) == 0x001A98, "Member 'ABP_BD_DYN_SensorArray_C::TL_DeactivateAndDestroy' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, Timeline_2_Sensor_Color_Progress_93AC1BDA471E59A7C261F8AA5640466F) == 0x001AA0, "Member 'ABP_BD_DYN_SensorArray_C::Timeline_2_Sensor_Color_Progress_93AC1BDA471E59A7C261F8AA5640466F' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, Timeline_2_Sensor_Atten_Radius_93AC1BDA471E59A7C261F8AA5640466F) == 0x001AA4, "Member 'ABP_BD_DYN_SensorArray_C::Timeline_2_Sensor_Atten_Radius_93AC1BDA471E59A7C261F8AA5640466F' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, Timeline_2_Sensor_Outer_Cone_93AC1BDA471E59A7C261F8AA5640466F) == 0x001AA8, "Member 'ABP_BD_DYN_SensorArray_C::Timeline_2_Sensor_Outer_Cone_93AC1BDA471E59A7C261F8AA5640466F' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, Timeline_2_Sensor_Intensity_93AC1BDA471E59A7C261F8AA5640466F) == 0x001AAC, "Member 'ABP_BD_DYN_SensorArray_C::Timeline_2_Sensor_Intensity_93AC1BDA471E59A7C261F8AA5640466F' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, Timeline_2_Sensor_Scattering_93AC1BDA471E59A7C261F8AA5640466F) == 0x001AB0, "Member 'ABP_BD_DYN_SensorArray_C::Timeline_2_Sensor_Scattering_93AC1BDA471E59A7C261F8AA5640466F' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, Timeline_2__Direction_93AC1BDA471E59A7C261F8AA5640466F) == 0x001AB4, "Member 'ABP_BD_DYN_SensorArray_C::Timeline_2__Direction_93AC1BDA471E59A7C261F8AA5640466F' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, Timeline_2) == 0x001AB8, "Member 'ABP_BD_DYN_SensorArray_C::Timeline_2' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, CachedActorLocation) == 0x001AC0, "Member 'ABP_BD_DYN_SensorArray_C::CachedActorLocation' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, Explosion_Strength) == 0x001AD8, "Member 'ABP_BD_DYN_SensorArray_C::Explosion_Strength' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, Explosion_Radius) == 0x001AE0, "Member 'ABP_BD_DYN_SensorArray_C::Explosion_Radius' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, Explosion_Falloff_Exp) == 0x001AE8, "Member 'ABP_BD_DYN_SensorArray_C::Explosion_Falloff_Exp' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, Explosion_Slot_Array) == 0x001AF0, "Member 'ABP_BD_DYN_SensorArray_C::Explosion_Slot_Array' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, Explosion_Slot_Current) == 0x001B00, "Member 'ABP_BD_DYN_SensorArray_C::Explosion_Slot_Current' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, Explosion_Slot_Found) == 0x001B10, "Member 'ABP_BD_DYN_SensorArray_C::Explosion_Slot_Found' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, Old_Fire_Target) == 0x001B18, "Member 'ABP_BD_DYN_SensorArray_C::Old_Fire_Target' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, Is_Switching_Targets) == 0x001B20, "Member 'ABP_BD_DYN_SensorArray_C::Is_Switching_Targets' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, Sensor_Idle_Color) == 0x001B24, "Member 'ABP_BD_DYN_SensorArray_C::Sensor_Idle_Color' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, Sensor_Target_Color) == 0x001B34, "Member 'ABP_BD_DYN_SensorArray_C::Sensor_Target_Color' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, CachedSurfaceType) == 0x001B44, "Member 'ABP_BD_DYN_SensorArray_C::CachedSurfaceType' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C, AnimMontageLength) == 0x001B48, "Member 'ABP_BD_DYN_SensorArray_C::AnimMontageLength' has a wrong offset!");

}

