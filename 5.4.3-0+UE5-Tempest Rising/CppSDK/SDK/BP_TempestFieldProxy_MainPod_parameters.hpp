#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TempestFieldProxy_MainPod

#include "Basic.hpp"

#include "STRUCT_TempestField_LightSettings_structs.hpp"
#include "Tempest_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_TempestFieldProxy_MainPod.BP_TempestFieldProxy_MainPod_C.GetScaleForStage
// 0x0018 (0x0018 - 0x0000)
struct BP_TempestFieldProxy_MainPod_C_GetScaleForStage final
{
public:
	ETempestFieldElementStage                     Stage;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Scale;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TempestFieldProxy_MainPod_C_GetScaleForStage) == 0x000008, "Wrong alignment on BP_TempestFieldProxy_MainPod_C_GetScaleForStage");
static_assert(sizeof(BP_TempestFieldProxy_MainPod_C_GetScaleForStage) == 0x000018, "Wrong size on BP_TempestFieldProxy_MainPod_C_GetScaleForStage");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_GetScaleForStage, Stage) == 0x000000, "Member 'BP_TempestFieldProxy_MainPod_C_GetScaleForStage::Stage' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_GetScaleForStage, Scale) == 0x000008, "Member 'BP_TempestFieldProxy_MainPod_C_GetScaleForStage::Scale' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_GetScaleForStage, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'BP_TempestFieldProxy_MainPod_C_GetScaleForStage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_TempestFieldProxy_MainPod.BP_TempestFieldProxy_MainPod_C.K2_BeginTransition
// 0x0180 (0x0180 - 0x0000)
struct BP_TempestFieldProxy_MainPod_C_K2_BeginTransition final
{
public:
	ETempestFieldElementStage                     PrevStage;                                         // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETempestFieldElementStage                     NextStage;                                         // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetElementComponent_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   K2Node_DynamicCast_AsPoint_Light_Component;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_5;                    // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_6;                    // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetElementTransform_ReturnValue;          // 0x0020(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetElementTransform_ReturnValue_1;        // 0x0080(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFXSystemComponent*                     CallFunc_SpawnEffectAtLocation_ReturnValue;        // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFXSystemComponent*                     CallFunc_SpawnEffectAtLocation_ReturnValue_1;      // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TempestFieldProxy_MainPod_C_K2_BeginTransition) == 0x000010, "Wrong alignment on BP_TempestFieldProxy_MainPod_C_K2_BeginTransition");
static_assert(sizeof(BP_TempestFieldProxy_MainPod_C_K2_BeginTransition) == 0x000180, "Wrong size on BP_TempestFieldProxy_MainPod_C_K2_BeginTransition");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_BeginTransition, PrevStage) == 0x000000, "Member 'BP_TempestFieldProxy_MainPod_C_K2_BeginTransition::PrevStage' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_BeginTransition, NextStage) == 0x000001, "Member 'BP_TempestFieldProxy_MainPod_C_K2_BeginTransition::NextStage' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_BeginTransition, CallFunc_GetElementComponent_ReturnValue) == 0x000008, "Member 'BP_TempestFieldProxy_MainPod_C_K2_BeginTransition::CallFunc_GetElementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_BeginTransition, K2Node_DynamicCast_AsPoint_Light_Component) == 0x000010, "Member 'BP_TempestFieldProxy_MainPod_C_K2_BeginTransition::K2Node_DynamicCast_AsPoint_Light_Component' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_BeginTransition, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_TempestFieldProxy_MainPod_C_K2_BeginTransition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_BeginTransition, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'BP_TempestFieldProxy_MainPod_C_K2_BeginTransition::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_BeginTransition, K2Node_SwitchEnum_CmpSuccess_1) == 0x00001A, "Member 'BP_TempestFieldProxy_MainPod_C_K2_BeginTransition::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_BeginTransition, K2Node_SwitchEnum_CmpSuccess_2) == 0x00001B, "Member 'BP_TempestFieldProxy_MainPod_C_K2_BeginTransition::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_BeginTransition, K2Node_SwitchEnum_CmpSuccess_3) == 0x00001C, "Member 'BP_TempestFieldProxy_MainPod_C_K2_BeginTransition::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_BeginTransition, K2Node_SwitchEnum_CmpSuccess_4) == 0x00001D, "Member 'BP_TempestFieldProxy_MainPod_C_K2_BeginTransition::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_BeginTransition, K2Node_SwitchEnum_CmpSuccess_5) == 0x00001E, "Member 'BP_TempestFieldProxy_MainPod_C_K2_BeginTransition::K2Node_SwitchEnum_CmpSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_BeginTransition, K2Node_SwitchEnum_CmpSuccess_6) == 0x00001F, "Member 'BP_TempestFieldProxy_MainPod_C_K2_BeginTransition::K2Node_SwitchEnum_CmpSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_BeginTransition, CallFunc_GetElementTransform_ReturnValue) == 0x000020, "Member 'BP_TempestFieldProxy_MainPod_C_K2_BeginTransition::CallFunc_GetElementTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_BeginTransition, CallFunc_GetElementTransform_ReturnValue_1) == 0x000080, "Member 'BP_TempestFieldProxy_MainPod_C_K2_BeginTransition::CallFunc_GetElementTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_BeginTransition, CallFunc_BreakTransform_Location) == 0x0000E0, "Member 'BP_TempestFieldProxy_MainPod_C_K2_BeginTransition::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_BeginTransition, CallFunc_BreakTransform_Rotation) == 0x0000F8, "Member 'BP_TempestFieldProxy_MainPod_C_K2_BeginTransition::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_BeginTransition, CallFunc_BreakTransform_Scale) == 0x000110, "Member 'BP_TempestFieldProxy_MainPod_C_K2_BeginTransition::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_BeginTransition, CallFunc_BreakTransform_Location_1) == 0x000128, "Member 'BP_TempestFieldProxy_MainPod_C_K2_BeginTransition::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_BeginTransition, CallFunc_BreakTransform_Rotation_1) == 0x000140, "Member 'BP_TempestFieldProxy_MainPod_C_K2_BeginTransition::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_BeginTransition, CallFunc_BreakTransform_Scale_1) == 0x000158, "Member 'BP_TempestFieldProxy_MainPod_C_K2_BeginTransition::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_BeginTransition, CallFunc_SpawnEffectAtLocation_ReturnValue) == 0x000170, "Member 'BP_TempestFieldProxy_MainPod_C_K2_BeginTransition::CallFunc_SpawnEffectAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_BeginTransition, CallFunc_SpawnEffectAtLocation_ReturnValue_1) == 0x000178, "Member 'BP_TempestFieldProxy_MainPod_C_K2_BeginTransition::CallFunc_SpawnEffectAtLocation_ReturnValue_1' has a wrong offset!");

// Function BP_TempestFieldProxy_MainPod.BP_TempestFieldProxy_MainPod_C.K2_EndTransition
// 0x00D0 (0x00D0 - 0x0000)
struct BP_TempestFieldProxy_MainPod_C_K2_EndTransition final
{
public:
	ETempestFieldElementStage                     PrevStage;                                         // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETempestFieldElementStage                     NextStage;                                         // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetElementComponent_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   K2Node_DynamicCast_AsPoint_Light_Component;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetElementTransform_ReturnValue;          // 0x0020(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFXSystemComponent*                     CallFunc_SpawnEffectAtLocation_ReturnValue;        // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TempestFieldProxy_MainPod_C_K2_EndTransition) == 0x000010, "Wrong alignment on BP_TempestFieldProxy_MainPod_C_K2_EndTransition");
static_assert(sizeof(BP_TempestFieldProxy_MainPod_C_K2_EndTransition) == 0x0000D0, "Wrong size on BP_TempestFieldProxy_MainPod_C_K2_EndTransition");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_EndTransition, PrevStage) == 0x000000, "Member 'BP_TempestFieldProxy_MainPod_C_K2_EndTransition::PrevStage' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_EndTransition, NextStage) == 0x000001, "Member 'BP_TempestFieldProxy_MainPod_C_K2_EndTransition::NextStage' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_EndTransition, CallFunc_GetElementComponent_ReturnValue) == 0x000008, "Member 'BP_TempestFieldProxy_MainPod_C_K2_EndTransition::CallFunc_GetElementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_EndTransition, K2Node_DynamicCast_AsPoint_Light_Component) == 0x000010, "Member 'BP_TempestFieldProxy_MainPod_C_K2_EndTransition::K2Node_DynamicCast_AsPoint_Light_Component' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_EndTransition, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_TempestFieldProxy_MainPod_C_K2_EndTransition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_EndTransition, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'BP_TempestFieldProxy_MainPod_C_K2_EndTransition::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_EndTransition, K2Node_SwitchEnum_CmpSuccess_1) == 0x00001A, "Member 'BP_TempestFieldProxy_MainPod_C_K2_EndTransition::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_EndTransition, K2Node_SwitchEnum_CmpSuccess_2) == 0x00001B, "Member 'BP_TempestFieldProxy_MainPod_C_K2_EndTransition::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_EndTransition, CallFunc_GetElementTransform_ReturnValue) == 0x000020, "Member 'BP_TempestFieldProxy_MainPod_C_K2_EndTransition::CallFunc_GetElementTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_EndTransition, CallFunc_BreakTransform_Location) == 0x000080, "Member 'BP_TempestFieldProxy_MainPod_C_K2_EndTransition::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_EndTransition, CallFunc_BreakTransform_Rotation) == 0x000098, "Member 'BP_TempestFieldProxy_MainPod_C_K2_EndTransition::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_EndTransition, CallFunc_BreakTransform_Scale) == 0x0000B0, "Member 'BP_TempestFieldProxy_MainPod_C_K2_EndTransition::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_EndTransition, CallFunc_SpawnEffectAtLocation_ReturnValue) == 0x0000C8, "Member 'BP_TempestFieldProxy_MainPod_C_K2_EndTransition::CallFunc_SpawnEffectAtLocation_ReturnValue' has a wrong offset!");

// Function BP_TempestFieldProxy_MainPod.BP_TempestFieldProxy_MainPod_C.K2_InitializeElement
// 0x0290 (0x0290 - 0x0000)
struct BP_TempestFieldProxy_MainPod_C_K2_InitializeElement final
{
public:
	struct FRandomStream                          RandomStream;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetElementTransform_ReturnValue;          // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFieldTileElementISMData               CallFunc_AddElementSMInstance_ReturnValue;         // 0x00C0(0x0070)(NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_BreakVector_X;                            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0210(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateInstanceTransform_ReturnValue;      // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_AddElementComponentOfClass_ReturnValue;   // 0x0278(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   K2Node_DynamicCast_AsPoint_Light_Component;        // 0x0280(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetLightFalloffExponent_NewLightFalloffExponent_ImplicitCast; // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TempestFieldProxy_MainPod_C_K2_InitializeElement) == 0x000010, "Wrong alignment on BP_TempestFieldProxy_MainPod_C_K2_InitializeElement");
static_assert(sizeof(BP_TempestFieldProxy_MainPod_C_K2_InitializeElement) == 0x000290, "Wrong size on BP_TempestFieldProxy_MainPod_C_K2_InitializeElement");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_InitializeElement, RandomStream) == 0x000000, "Member 'BP_TempestFieldProxy_MainPod_C_K2_InitializeElement::RandomStream' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_InitializeElement, CallFunc_GetElementTransform_ReturnValue) == 0x000010, "Member 'BP_TempestFieldProxy_MainPod_C_K2_InitializeElement::CallFunc_GetElementTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_InitializeElement, CallFunc_BreakTransform_Location) == 0x000070, "Member 'BP_TempestFieldProxy_MainPod_C_K2_InitializeElement::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_InitializeElement, CallFunc_BreakTransform_Rotation) == 0x000088, "Member 'BP_TempestFieldProxy_MainPod_C_K2_InitializeElement::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_InitializeElement, CallFunc_BreakTransform_Scale) == 0x0000A0, "Member 'BP_TempestFieldProxy_MainPod_C_K2_InitializeElement::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_InitializeElement, CallFunc_AddElementSMInstance_ReturnValue) == 0x0000C0, "Member 'BP_TempestFieldProxy_MainPod_C_K2_InitializeElement::CallFunc_AddElementSMInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_InitializeElement, CallFunc_BreakVector_X) == 0x000130, "Member 'BP_TempestFieldProxy_MainPod_C_K2_InitializeElement::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_InitializeElement, CallFunc_BreakVector_Y) == 0x000138, "Member 'BP_TempestFieldProxy_MainPod_C_K2_InitializeElement::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_InitializeElement, CallFunc_BreakVector_Z) == 0x000140, "Member 'BP_TempestFieldProxy_MainPod_C_K2_InitializeElement::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_InitializeElement, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000148, "Member 'BP_TempestFieldProxy_MainPod_C_K2_InitializeElement::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_InitializeElement, CallFunc_BreakTransform_Location_1) == 0x000150, "Member 'BP_TempestFieldProxy_MainPod_C_K2_InitializeElement::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_InitializeElement, CallFunc_BreakTransform_Rotation_1) == 0x000168, "Member 'BP_TempestFieldProxy_MainPod_C_K2_InitializeElement::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_InitializeElement, CallFunc_BreakTransform_Scale_1) == 0x000180, "Member 'BP_TempestFieldProxy_MainPod_C_K2_InitializeElement::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_InitializeElement, CallFunc_MakeVector_ReturnValue) == 0x000198, "Member 'BP_TempestFieldProxy_MainPod_C_K2_InitializeElement::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_InitializeElement, CallFunc_MakeTransform_ReturnValue) == 0x0001B0, "Member 'BP_TempestFieldProxy_MainPod_C_K2_InitializeElement::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_InitializeElement, CallFunc_MakeTransform_ReturnValue_1) == 0x000210, "Member 'BP_TempestFieldProxy_MainPod_C_K2_InitializeElement::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_InitializeElement, CallFunc_UpdateInstanceTransform_ReturnValue) == 0x000270, "Member 'BP_TempestFieldProxy_MainPod_C_K2_InitializeElement::CallFunc_UpdateInstanceTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_InitializeElement, CallFunc_AddElementComponentOfClass_ReturnValue) == 0x000278, "Member 'BP_TempestFieldProxy_MainPod_C_K2_InitializeElement::CallFunc_AddElementComponentOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_InitializeElement, K2Node_DynamicCast_AsPoint_Light_Component) == 0x000280, "Member 'BP_TempestFieldProxy_MainPod_C_K2_InitializeElement::K2Node_DynamicCast_AsPoint_Light_Component' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_InitializeElement, K2Node_DynamicCast_bSuccess) == 0x000288, "Member 'BP_TempestFieldProxy_MainPod_C_K2_InitializeElement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_InitializeElement, CallFunc_SetLightFalloffExponent_NewLightFalloffExponent_ImplicitCast) == 0x00028C, "Member 'BP_TempestFieldProxy_MainPod_C_K2_InitializeElement::CallFunc_SetLightFalloffExponent_NewLightFalloffExponent_ImplicitCast' has a wrong offset!");

// Function BP_TempestFieldProxy_MainPod.BP_TempestFieldProxy_MainPod_C.K2_ProcessTransition
// 0x01D0 (0x01D0 - 0x0000)
struct BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETempestFieldElementStage                     PrevStage;                                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETempestFieldElementStage                     NextStage;                                         // 0x0009(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionEntry_Progress_ImplicitCast;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0xB];                                       // 0x0025(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFieldTileElementISMData               CallFunc_GetElementSMInstance_ReturnValue;         // 0x0030(0x0070)(NoDestructor, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_GetElementComponent_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   K2Node_DynamicCast_AsPoint_Light_Component;        // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0100(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateInstanceTransform_ReturnValue;      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetElementComponents_ReturnValue;         // 0x0168(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19A[0x2];                                      // 0x019A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSetRef_Target_ImplicitCast;         // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast;           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_DeltaTime_ImplicitCast;         // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateLight_Progress_ImplicitCast;        // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateInstancedSMTransform_Progress_ImplicitCast; // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition) == 0x000010, "Wrong alignment on BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition");
static_assert(sizeof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition) == 0x0001D0, "Wrong size on BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, Progress) == 0x000000, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::Progress' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, DeltaTime) == 0x000004, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, PrevStage) == 0x000008, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::PrevStage' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, NextStage) == 0x000009, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::NextStage' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, CallFunc_FInterpTo_ReturnValue) == 0x000010, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, K2Node_FunctionEntry_Progress_ImplicitCast) == 0x000020, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::K2Node_FunctionEntry_Progress_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, K2Node_SwitchEnum_CmpSuccess) == 0x000024, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, CallFunc_GetElementSMInstance_ReturnValue) == 0x000030, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::CallFunc_GetElementSMInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, CallFunc_GetElementComponent_ReturnValue) == 0x0000A0, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::CallFunc_GetElementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, CallFunc_BreakTransform_Location) == 0x0000A8, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, CallFunc_BreakTransform_Rotation) == 0x0000C0, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, CallFunc_BreakTransform_Scale) == 0x0000D8, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, K2Node_DynamicCast_AsPoint_Light_Component) == 0x0000F0, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::K2Node_DynamicCast_AsPoint_Light_Component' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, CallFunc_MakeTransform_ReturnValue) == 0x000100, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, CallFunc_UpdateInstanceTransform_ReturnValue) == 0x000160, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::CallFunc_UpdateInstanceTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, CallFunc_GetElementComponents_ReturnValue) == 0x000168, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::CallFunc_GetElementComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, CallFunc_Array_Get_Item) == 0x000178, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, CallFunc_Array_Length_ReturnValue) == 0x000180, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, K2Node_DynamicCast_AsPrimitive_Component) == 0x000188, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, K2Node_DynamicCast_bSuccess_1) == 0x000190, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, Temp_int_Loop_Counter_Variable) == 0x000194, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, K2Node_SwitchEnum_CmpSuccess_1) == 0x000198, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, CallFunc_Less_IntInt_ReturnValue) == 0x000199, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, CallFunc_Add_IntInt_ReturnValue) == 0x00019C, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, K2Node_VariableSetRef_Target_ImplicitCast) == 0x0001A0, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::K2Node_VariableSetRef_Target_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, CallFunc_FInterpTo_Current_ImplicitCast) == 0x0001A8, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::CallFunc_FInterpTo_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, CallFunc_FInterpTo_DeltaTime_ImplicitCast) == 0x0001B0, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::CallFunc_FInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, CallFunc_UpdateLight_Progress_ImplicitCast) == 0x0001B8, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::CallFunc_UpdateLight_Progress_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition, CallFunc_UpdateInstancedSMTransform_Progress_ImplicitCast) == 0x0001C0, "Member 'BP_TempestFieldProxy_MainPod_C_K2_ProcessTransition::CallFunc_UpdateInstancedSMTransform_Progress_ImplicitCast' has a wrong offset!");

// Function BP_TempestFieldProxy_MainPod.BP_TempestFieldProxy_MainPod_C.UpdateInstancedSMTransform
// 0x01F0 (0x01F0 - 0x0000)
struct BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform final
{
public:
	double                                        Progress;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETempestFieldElementStage                     PrevStage;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETempestFieldElementStage                     NextStage;                                         // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetScaleForStage_Scale;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetScaleForStage_Scale_1;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFieldTileElementISMData               CallFunc_GetElementSMInstance_ReturnValue;         // 0x0020(0x0070)(NoDestructor, ContainsInstancedReference)
	struct FTransform                             CallFunc_GetElementTransform_ReturnValue;          // 0x0090(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0180(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateInstanceTransform_ReturnValue;      // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform) == 0x000010, "Wrong alignment on BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform");
static_assert(sizeof(BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform) == 0x0001F0, "Wrong size on BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform, Progress) == 0x000000, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform::Progress' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform, PrevStage) == 0x000008, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform::PrevStage' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform, NextStage) == 0x000009, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform::NextStage' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform, CallFunc_GetScaleForStage_Scale) == 0x000010, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform::CallFunc_GetScaleForStage_Scale' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform, CallFunc_GetScaleForStage_Scale_1) == 0x000018, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform::CallFunc_GetScaleForStage_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform, CallFunc_GetElementSMInstance_ReturnValue) == 0x000020, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform::CallFunc_GetElementSMInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform, CallFunc_GetElementTransform_ReturnValue) == 0x000090, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform::CallFunc_GetElementTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform, CallFunc_BreakTransform_Location) == 0x0000F0, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform, CallFunc_BreakTransform_Rotation) == 0x000108, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform, CallFunc_BreakTransform_Scale) == 0x000120, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000138, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000150, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform, CallFunc_VLerp_ReturnValue) == 0x000168, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform, CallFunc_MakeTransform_ReturnValue) == 0x000180, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform, CallFunc_UpdateInstanceTransform_ReturnValue) == 0x0001E0, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform::CallFunc_UpdateInstanceTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform, CallFunc_VLerp_Alpha_ImplicitCast) == 0x0001E4, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateInstancedSMTransform::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function BP_TempestFieldProxy_MainPod.BP_TempestFieldProxy_MainPod_C.UpdateLight
// 0x00E0 (0x00E0 - 0x0000)
struct BP_TempestFieldProxy_MainPod_C_UpdateLight final
{
public:
	double                                        Progress;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETempestFieldElementStage                     PrevStage;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETempestFieldElementStage                     NextStage;                                         // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_TempestField_LightSettings     CallFunc_Map_Find_Value;                           // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_TempestField_LightSettings     CallFunc_Map_Find_Value_1;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_TempestField_LightSettings     CallFunc_Map_Find_Value_2;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_TempestField_LightSettings     CallFunc_Map_Find_Value_3;                         // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_TempestField_LightSettings     CallFunc_Map_Find_Value_4;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_4;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetElementComponent_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetElementComponent_ReturnValue_1;        // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   K2Node_DynamicCast_AsPoint_Light_Component;        // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPointLightComponent*                   K2Node_DynamicCast_AsPoint_Light_Component_1;      // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast;                      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast;                      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAttenuationRadius_NewRadius_ImplicitCast; // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_A_ImplicitCast_1;                    // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast_1;                    // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast_1; // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TempestFieldProxy_MainPod_C_UpdateLight) == 0x000008, "Wrong alignment on BP_TempestFieldProxy_MainPod_C_UpdateLight");
static_assert(sizeof(BP_TempestFieldProxy_MainPod_C_UpdateLight) == 0x0000E0, "Wrong size on BP_TempestFieldProxy_MainPod_C_UpdateLight");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, Progress) == 0x000000, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::Progress' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, PrevStage) == 0x000008, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::PrevStage' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, NextStage) == 0x000009, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::NextStage' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, K2Node_SwitchEnum_CmpSuccess) == 0x00000A, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, CallFunc_Map_Find_Value) == 0x00000C, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, CallFunc_Map_Find_ReturnValue) == 0x000014, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, CallFunc_Map_Find_Value_1) == 0x000018, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, CallFunc_Map_Find_ReturnValue_1) == 0x000020, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, CallFunc_Lerp_ReturnValue) == 0x000028, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, CallFunc_Map_Find_Value_2) == 0x000030, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, CallFunc_Map_Find_ReturnValue_2) == 0x000038, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, CallFunc_Map_Find_Value_3) == 0x00003C, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, CallFunc_Map_Find_ReturnValue_3) == 0x000044, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, CallFunc_Map_Find_Value_4) == 0x000048, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::CallFunc_Map_Find_Value_4' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, CallFunc_Map_Find_ReturnValue_4) == 0x000050, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::CallFunc_Map_Find_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, K2Node_SwitchEnum_CmpSuccess_1) == 0x000051, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, CallFunc_GetElementComponent_ReturnValue) == 0x000058, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::CallFunc_GetElementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, CallFunc_GetElementComponent_ReturnValue_1) == 0x000060, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::CallFunc_GetElementComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, K2Node_DynamicCast_AsPoint_Light_Component) == 0x000068, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::K2Node_DynamicCast_AsPoint_Light_Component' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, K2Node_DynamicCast_AsPoint_Light_Component_1) == 0x000078, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::K2Node_DynamicCast_AsPoint_Light_Component_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000088, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000090, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, CallFunc_Lerp_ReturnValue_1) == 0x000098, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, CallFunc_Lerp_A_ImplicitCast) == 0x0000A8, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::CallFunc_Lerp_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, CallFunc_Lerp_B_ImplicitCast) == 0x0000B0, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::CallFunc_Lerp_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, CallFunc_SetAttenuationRadius_NewRadius_ImplicitCast) == 0x0000B8, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::CallFunc_SetAttenuationRadius_NewRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, CallFunc_Lerp_A_ImplicitCast_1) == 0x0000C0, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::CallFunc_Lerp_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, CallFunc_Lerp_B_ImplicitCast_1) == 0x0000C8, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::CallFunc_Lerp_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000D0, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x0000D8, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_MainPod_C_UpdateLight, CallFunc_SetIntensity_NewIntensity_ImplicitCast_1) == 0x0000DC, "Member 'BP_TempestFieldProxy_MainPod_C_UpdateLight::CallFunc_SetIntensity_NewIntensity_ImplicitCast_1' has a wrong offset!");

}

