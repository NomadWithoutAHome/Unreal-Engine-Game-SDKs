#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BD_GDF_ConstructionYard

#include "Basic.hpp"

#include "BP_BD_GDF_ConstructionYard_classes.hpp"
#include "BP_BD_GDF_ConstructionYard_parameters.hpp"


namespace SDK
{

// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.Destructible
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UStaticMesh*>&             DestMeshes                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FVector>&                 DestMeshes_Locations                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FRotator>&                DestMeshes_Rotators                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FVector&                   MeshScale                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UFXSystemAsset*>&          DestMeshes_exploFX                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<double>&                         DestMeshes_exploFX_Scale                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class UFXSystemAsset*>&          DestMeshes_attachedFX                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<double>&                         DestMeshes_attachedFX_Scale                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FVector>&                 DestMeshes_LinearImpulse                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FVector>&                 DestMeshes_AngularImpulse                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class AStaticMeshActor*>*        SpawnedMeshesArray                                     (Parm, OutParm)
// TArray<class UFXSystemComponent*>*      SpawnedAttachedFXArray                                 (Parm, OutParm, ContainsInstancedReference)

void ABP_BD_GDF_ConstructionYard_C::Destructible(TArray<class UStaticMesh*>& DestMeshes, TArray<struct FVector>& DestMeshes_Locations, TArray<struct FRotator>& DestMeshes_Rotators, const struct FVector& MeshScale, TArray<class UFXSystemAsset*>& DestMeshes_exploFX, TArray<double>& DestMeshes_exploFX_Scale, TArray<class UFXSystemAsset*>& DestMeshes_attachedFX, TArray<double>& DestMeshes_attachedFX_Scale, TArray<struct FVector>& DestMeshes_LinearImpulse, TArray<struct FVector>& DestMeshes_AngularImpulse, TArray<class AStaticMeshActor*>* SpawnedMeshesArray, TArray<class UFXSystemComponent*>* SpawnedAttachedFXArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "Destructible");

	Params::BP_BD_GDF_ConstructionYard_C_Destructible Parms{};

	Parms.DestMeshes = std::move(DestMeshes);
	Parms.DestMeshes_Locations = std::move(DestMeshes_Locations);
	Parms.DestMeshes_Rotators = std::move(DestMeshes_Rotators);
	Parms.MeshScale = std::move(MeshScale);
	Parms.DestMeshes_exploFX = std::move(DestMeshes_exploFX);
	Parms.DestMeshes_exploFX_Scale = std::move(DestMeshes_exploFX_Scale);
	Parms.DestMeshes_attachedFX = std::move(DestMeshes_attachedFX);
	Parms.DestMeshes_attachedFX_Scale = std::move(DestMeshes_attachedFX_Scale);
	Parms.DestMeshes_LinearImpulse = std::move(DestMeshes_LinearImpulse);
	Parms.DestMeshes_AngularImpulse = std::move(DestMeshes_AngularImpulse);

	UObject::ProcessEvent(Func, &Parms);

	DestMeshes = std::move(Parms.DestMeshes);
	DestMeshes_Locations = std::move(Parms.DestMeshes_Locations);
	DestMeshes_Rotators = std::move(Parms.DestMeshes_Rotators);
	DestMeshes_exploFX = std::move(Parms.DestMeshes_exploFX);
	DestMeshes_exploFX_Scale = std::move(Parms.DestMeshes_exploFX_Scale);
	DestMeshes_attachedFX = std::move(Parms.DestMeshes_attachedFX);
	DestMeshes_attachedFX_Scale = std::move(Parms.DestMeshes_attachedFX_Scale);
	DestMeshes_LinearImpulse = std::move(Parms.DestMeshes_LinearImpulse);
	DestMeshes_AngularImpulse = std::move(Parms.DestMeshes_AngularImpulse);

	if (SpawnedMeshesArray != nullptr)
		*SpawnedMeshesArray = std::move(Parms.SpawnedMeshesArray);

	if (SpawnedAttachedFXArray != nullptr)
		*SpawnedAttachedFXArray = std::move(Parms.SpawnedAttachedFXArray);
}


// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.Destructible Conyard Custom Setup
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           Skeletal_Mesh                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// TArray<class UStaticMesh*>*             DestMeshes                                             (Parm, OutParm)
// TArray<struct FVector>*                 DestMeshes_Locations                                   (Parm, OutParm)
// TArray<struct FRotator>*                DestMeshes_Rotators                                    (Parm, OutParm)
// struct FVector*                         MeshScale                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UFXSystemAsset*>*          DestMeshes_FX                                          (Parm, OutParm)
// TArray<double>*                         DestMeshes_FX_Scale                                    (Parm, OutParm)
// TArray<class UFXSystemAsset*>*          DestMeshes_FXattached                                  (Parm, OutParm)
// TArray<double>*                         DestMeshes_FXattached_Scale                            (Parm, OutParm)
// TArray<struct FVector>*                 DestMeshes_LinearImpulse                               (Parm, OutParm)
// TArray<struct FVector>*                 DestMeshes_AngularImpulse                              (Parm, OutParm)

void ABP_BD_GDF_ConstructionYard_C::Destructible_Conyard_Custom_Setup(class USkeletalMeshComponent* Skeletal_Mesh, TArray<class UStaticMesh*>* DestMeshes, TArray<struct FVector>* DestMeshes_Locations, TArray<struct FRotator>* DestMeshes_Rotators, struct FVector* MeshScale, TArray<class UFXSystemAsset*>* DestMeshes_FX, TArray<double>* DestMeshes_FX_Scale, TArray<class UFXSystemAsset*>* DestMeshes_FXattached, TArray<double>* DestMeshes_FXattached_Scale, TArray<struct FVector>* DestMeshes_LinearImpulse, TArray<struct FVector>* DestMeshes_AngularImpulse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "Destructible Conyard Custom Setup");

	Params::BP_BD_GDF_ConstructionYard_C_Destructible_Conyard_Custom_Setup Parms{};

	Parms.Skeletal_Mesh = Skeletal_Mesh;

	UObject::ProcessEvent(Func, &Parms);

	if (DestMeshes != nullptr)
		*DestMeshes = std::move(Parms.DestMeshes);

	if (DestMeshes_Locations != nullptr)
		*DestMeshes_Locations = std::move(Parms.DestMeshes_Locations);

	if (DestMeshes_Rotators != nullptr)
		*DestMeshes_Rotators = std::move(Parms.DestMeshes_Rotators);

	if (MeshScale != nullptr)
		*MeshScale = std::move(Parms.MeshScale);

	if (DestMeshes_FX != nullptr)
		*DestMeshes_FX = std::move(Parms.DestMeshes_FX);

	if (DestMeshes_FX_Scale != nullptr)
		*DestMeshes_FX_Scale = std::move(Parms.DestMeshes_FX_Scale);

	if (DestMeshes_FXattached != nullptr)
		*DestMeshes_FXattached = std::move(Parms.DestMeshes_FXattached);

	if (DestMeshes_FXattached_Scale != nullptr)
		*DestMeshes_FXattached_Scale = std::move(Parms.DestMeshes_FXattached_Scale);

	if (DestMeshes_LinearImpulse != nullptr)
		*DestMeshes_LinearImpulse = std::move(Parms.DestMeshes_LinearImpulse);

	if (DestMeshes_AngularImpulse != nullptr)
		*DestMeshes_AngularImpulse = std::move(Parms.DestMeshes_AngularImpulse);
}


// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.ExecuteUbergraph_BP_BD_GDF_ConstructionYard
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BD_GDF_ConstructionYard_C::ExecuteUbergraph_BP_BD_GDF_ConstructionYard(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "ExecuteUbergraph_BP_BD_GDF_ConstructionYard");

	Params::BP_BD_GDF_ConstructionYard_C_ExecuteUbergraph_BP_BD_GDF_ConstructionYard Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.Found Free Explosion Slot
// (BlueprintCallable, BlueprintEvent)

void ABP_BD_GDF_ConstructionYard_C::Found_Free_Explosion_Slot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "Found Free Explosion Slot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.GetIdleEffectComponents
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class USceneComponent*>*         Components                                             (Parm, OutParm, ContainsInstancedReference)

void ABP_BD_GDF_ConstructionYard_C::GetIdleEffectComponents(TArray<class USceneComponent*>* Components)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "GetIdleEffectComponents");

	Params::BP_BD_GDF_ConstructionYard_C_GetIdleEffectComponents Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Components != nullptr)
		*Components = std::move(Parms.Components);
}


// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.OnStartDeconstruction
// (BlueprintCallable, BlueprintEvent)

void ABP_BD_GDF_ConstructionYard_C::OnStartDeconstruction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "OnStartDeconstruction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_BD_GDF_ConstructionYard_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.ReceiveHandleConstructionVisuals
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bInConstructing                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BD_GDF_ConstructionYard_C::ReceiveHandleConstructionVisuals(const bool bInConstructing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "ReceiveHandleConstructionVisuals");

	Params::BP_BD_GDF_ConstructionYard_C_ReceiveHandleConstructionVisuals Parms{};

	Parms.bInConstructing = bInConstructing;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.ReceiveOnDeath
// (Event, Protected, BlueprintEvent)

void ABP_BD_GDF_ConstructionYard_C::ReceiveOnDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "ReceiveOnDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.ReceiveUpdateHealthEffects
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   HealthPct                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BD_GDF_ConstructionYard_C::ReceiveUpdateHealthEffects(float HealthPct)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "ReceiveUpdateHealthEffects");

	Params::BP_BD_GDF_ConstructionYard_C_ReceiveUpdateHealthEffects Parms{};

	Parms.HealthPct = HealthPct;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.Timeline_0__Explosion__EventFunc
// (BlueprintEvent)

void ABP_BD_GDF_ConstructionYard_C::Timeline_0__Explosion__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "Timeline_0__Explosion__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.Timeline_0__ExplosionAudio__EventFunc
// (BlueprintEvent)

void ABP_BD_GDF_ConstructionYard_C::Timeline_0__ExplosionAudio__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "Timeline_0__ExplosionAudio__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ABP_BD_GDF_ConstructionYard_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.Timeline_0__SpawnChunks__EventFunc
// (BlueprintEvent)

void ABP_BD_GDF_ConstructionYard_C::Timeline_0__SpawnChunks__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "Timeline_0__SpawnChunks__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.Timeline_0__SpawnDecal__EventFunc
// (BlueprintEvent)

void ABP_BD_GDF_ConstructionYard_C::Timeline_0__SpawnDecal__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "Timeline_0__SpawnDecal__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ABP_BD_GDF_ConstructionYard_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.Timeline_1__FinishedFunc
// (BlueprintEvent)

void ABP_BD_GDF_ConstructionYard_C::Timeline_1__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "Timeline_1__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.Timeline_1__UpdateFunc
// (BlueprintEvent)

void ABP_BD_GDF_ConstructionYard_C::Timeline_1__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "Timeline_1__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.Timeline__Deactivate FX__EventFunc
// (BlueprintEvent)

void ABP_BD_GDF_ConstructionYard_C::Timeline__Deactivate_FX__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "Timeline__Deactivate FX__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.Timeline__FinishedFunc
// (BlueprintEvent)

void ABP_BD_GDF_ConstructionYard_C::Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.Timeline__UpdateFunc
// (BlueprintEvent)

void ABP_BD_GDF_ConstructionYard_C::Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.TL_SwitchVisuals__FinishedFunc
// (BlueprintEvent)

void ABP_BD_GDF_ConstructionYard_C::TL_SwitchVisuals__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "TL_SwitchVisuals__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.TL_SwitchVisuals__FirstStep__EventFunc
// (BlueprintEvent)

void ABP_BD_GDF_ConstructionYard_C::TL_SwitchVisuals__FirstStep__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "TL_SwitchVisuals__FirstStep__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.TL_SwitchVisuals__FourthStep__EventFunc
// (BlueprintEvent)

void ABP_BD_GDF_ConstructionYard_C::TL_SwitchVisuals__FourthStep__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "TL_SwitchVisuals__FourthStep__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.TL_SwitchVisuals__SecondStep__EventFunc
// (BlueprintEvent)

void ABP_BD_GDF_ConstructionYard_C::TL_SwitchVisuals__SecondStep__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "TL_SwitchVisuals__SecondStep__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.TL_SwitchVisuals__ThirdStep__EventFunc
// (BlueprintEvent)

void ABP_BD_GDF_ConstructionYard_C::TL_SwitchVisuals__ThirdStep__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "TL_SwitchVisuals__ThirdStep__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.TL_SwitchVisuals__UpdateFunc
// (BlueprintEvent)

void ABP_BD_GDF_ConstructionYard_C::TL_SwitchVisuals__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "TL_SwitchVisuals__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BD_GDF_ConstructionYard.BP_BD_GDF_ConstructionYard_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_BD_GDF_ConstructionYard_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BD_GDF_ConstructionYard_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

