#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GDF_Vehicle_CommsRig

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_Vehicle_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GDF_Vehicle_CommsRig.BP_GDF_Vehicle_CommsRig_C
// 0x0060 (0x1D30 - 0x1CD0)
class ABP_GDF_Vehicle_CommsRig_C final : public ABP_Vehicle_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_GDF_Vehicle_CommsRig_C;          // 0x1CD0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTedRangeDecalComponent*                DetectionDecal;                                    // 0x1CD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTedRangeDecalComponent*                DeployedDecal;                                     // 0x1CE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTedRangeDecalComponent*                AbilityPreviewDecal;                               // 0x1CE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_SmokeVehicleDamagedHeavy;                       // 0x1CF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_SmokeVehicleDamagedMedium;                      // 0x1CF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_SmokeVehicleDamagedLight;                       // 0x1D00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          HitBox_TEST1;                                      // 0x1D08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_TracksMark_All;                                 // 0x1D10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Exhaust;                                        // 0x1D18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bCachedSelected;                                   // 0x1D20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCachedHovered;                                    // 0x1D21(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_DYN_Vehicle_TempestSphere_AbilityPreviewDecal_K2Node_ComponentBoundEvent_0_RangeDecalDelegate__DelegateSignature();
	void BndEvt__BP_DYN_Vehicle_TempestSphere_AbilityPreviewDecal_K2Node_ComponentBoundEvent_2_RangeDecalDelegate__DelegateSignature();
	void BndEvt__BP_GDF_Infantry_CommsOfficer_DetectionDecal_K2Node_ComponentBoundEvent_1_RangeDecalDelegate__DelegateSignature();
	void BndEvt__BP_GDF_Vehicle_Artillery_DeployedDecal_K2Node_ComponentBoundEvent_1_RangeDecalDelegate__DelegateSignature();
	void BndEvt__BP_GDF_Vehicle_CommsRig_DeployedDecal_K2Node_ComponentBoundEvent_4_RangeDecalDelegate__DelegateSignature();
	void CheckDeployedDecal();
	void ExecuteUbergraph_BP_GDF_Vehicle_CommsRig(int32 EntryPoint);
	void OnDeployedStateChanged(const struct FGameplayTag& CallbackTag, int32 NewCount);
	void OnSelectionChanged_Blueprint(const bool bIsSelected, const bool bIsHovered);
	void ReceiveBeginMovement();
	void ReceiveEndMovement();
	void ReceiveOnDeath();
	void ReceiveUpdateHealthEffects(float HealthPct);
	void UpdateDetectionRangeDecal();
	void UpdateRangeDecal();
	void UpdateRangeDecal_Deployed();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GDF_Vehicle_CommsRig_C">();
	}
	static class ABP_GDF_Vehicle_CommsRig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GDF_Vehicle_CommsRig_C>();
	}
};
static_assert(alignof(ABP_GDF_Vehicle_CommsRig_C) == 0x000010, "Wrong alignment on ABP_GDF_Vehicle_CommsRig_C");
static_assert(sizeof(ABP_GDF_Vehicle_CommsRig_C) == 0x001D30, "Wrong size on ABP_GDF_Vehicle_CommsRig_C");
static_assert(offsetof(ABP_GDF_Vehicle_CommsRig_C, UberGraphFrame_BP_GDF_Vehicle_CommsRig_C) == 0x001CD0, "Member 'ABP_GDF_Vehicle_CommsRig_C::UberGraphFrame_BP_GDF_Vehicle_CommsRig_C' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_CommsRig_C, DetectionDecal) == 0x001CD8, "Member 'ABP_GDF_Vehicle_CommsRig_C::DetectionDecal' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_CommsRig_C, DeployedDecal) == 0x001CE0, "Member 'ABP_GDF_Vehicle_CommsRig_C::DeployedDecal' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_CommsRig_C, AbilityPreviewDecal) == 0x001CE8, "Member 'ABP_GDF_Vehicle_CommsRig_C::AbilityPreviewDecal' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_CommsRig_C, PS_SmokeVehicleDamagedHeavy) == 0x001CF0, "Member 'ABP_GDF_Vehicle_CommsRig_C::PS_SmokeVehicleDamagedHeavy' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_CommsRig_C, PS_SmokeVehicleDamagedMedium) == 0x001CF8, "Member 'ABP_GDF_Vehicle_CommsRig_C::PS_SmokeVehicleDamagedMedium' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_CommsRig_C, PS_SmokeVehicleDamagedLight) == 0x001D00, "Member 'ABP_GDF_Vehicle_CommsRig_C::PS_SmokeVehicleDamagedLight' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_CommsRig_C, HitBox_TEST1) == 0x001D08, "Member 'ABP_GDF_Vehicle_CommsRig_C::HitBox_TEST1' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_CommsRig_C, PS_TracksMark_All) == 0x001D10, "Member 'ABP_GDF_Vehicle_CommsRig_C::PS_TracksMark_All' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_CommsRig_C, NS_Exhaust) == 0x001D18, "Member 'ABP_GDF_Vehicle_CommsRig_C::NS_Exhaust' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_CommsRig_C, bCachedSelected) == 0x001D20, "Member 'ABP_GDF_Vehicle_CommsRig_C::bCachedSelected' has a wrong offset!");
static_assert(offsetof(ABP_GDF_Vehicle_CommsRig_C, bCachedHovered) == 0x001D21, "Member 'ABP_GDF_Vehicle_CommsRig_C::bCachedHovered' has a wrong offset!");

}

