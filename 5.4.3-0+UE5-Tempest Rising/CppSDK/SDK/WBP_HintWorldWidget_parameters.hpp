#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HintWorldWidget

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_HintWorldWidget.WBP_HintWorldWidget_C.ExecuteUbergraph_WBP_HintWorldWidget
// 0x0020 (0x0020 - 0x0000)
struct WBP_HintWorldWidget_C_ExecuteUbergraph_WBP_HintWorldWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTedHintsAsset*                         K2Node_Event_HintData;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTedHintsSubsystem*                     CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HintWorldWidget_C_ExecuteUbergraph_WBP_HintWorldWidget) == 0x000008, "Wrong alignment on WBP_HintWorldWidget_C_ExecuteUbergraph_WBP_HintWorldWidget");
static_assert(sizeof(WBP_HintWorldWidget_C_ExecuteUbergraph_WBP_HintWorldWidget) == 0x000020, "Wrong size on WBP_HintWorldWidget_C_ExecuteUbergraph_WBP_HintWorldWidget");
static_assert(offsetof(WBP_HintWorldWidget_C_ExecuteUbergraph_WBP_HintWorldWidget, EntryPoint) == 0x000000, "Member 'WBP_HintWorldWidget_C_ExecuteUbergraph_WBP_HintWorldWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_HintWorldWidget_C_ExecuteUbergraph_WBP_HintWorldWidget, K2Node_Event_HintData) == 0x000008, "Member 'WBP_HintWorldWidget_C_ExecuteUbergraph_WBP_HintWorldWidget::K2Node_Event_HintData' has a wrong offset!");
static_assert(offsetof(WBP_HintWorldWidget_C_ExecuteUbergraph_WBP_HintWorldWidget, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000010, "Member 'WBP_HintWorldWidget_C_ExecuteUbergraph_WBP_HintWorldWidget::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HintWorldWidget_C_ExecuteUbergraph_WBP_HintWorldWidget, CallFunc_IsHovered_ReturnValue) == 0x000018, "Member 'WBP_HintWorldWidget_C_ExecuteUbergraph_WBP_HintWorldWidget::CallFunc_IsHovered_ReturnValue' has a wrong offset!");

// Function WBP_HintWorldWidget.WBP_HintWorldWidget_C.OnMouseButtonDown
// 0x0308 (0x0308 - 0x0000)
struct WBP_HintWorldWidget_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x0168(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0180(0x00B8)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTedHintsSubsystem*                     CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0250(0x00B8)()
};
static_assert(alignof(WBP_HintWorldWidget_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on WBP_HintWorldWidget_C_OnMouseButtonDown");
static_assert(sizeof(WBP_HintWorldWidget_C_OnMouseButtonDown) == 0x000308, "Wrong size on WBP_HintWorldWidget_C_OnMouseButtonDown");
static_assert(offsetof(WBP_HintWorldWidget_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'WBP_HintWorldWidget_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_HintWorldWidget_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'WBP_HintWorldWidget_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_HintWorldWidget_C_OnMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'WBP_HintWorldWidget_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HintWorldWidget_C_OnMouseButtonDown, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x000168, "Member 'WBP_HintWorldWidget_C_OnMouseButtonDown::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HintWorldWidget_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000180, "Member 'WBP_HintWorldWidget_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HintWorldWidget_C_OnMouseButtonDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000238, "Member 'WBP_HintWorldWidget_C_OnMouseButtonDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HintWorldWidget_C_OnMouseButtonDown, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000240, "Member 'WBP_HintWorldWidget_C_OnMouseButtonDown::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HintWorldWidget_C_OnMouseButtonDown, CallFunc_IsValid_ReturnValue) == 0x000248, "Member 'WBP_HintWorldWidget_C_OnMouseButtonDown::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HintWorldWidget_C_OnMouseButtonDown, CallFunc_Unhandled_ReturnValue) == 0x000250, "Member 'WBP_HintWorldWidget_C_OnMouseButtonDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function WBP_HintWorldWidget.WBP_HintWorldWidget_C.SetDisplayedHintText
// 0x0010 (0x0010 - 0x0000)
struct WBP_HintWorldWidget_C_SetDisplayedHintText final
{
public:
	class FText                                   NewText;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_HintWorldWidget_C_SetDisplayedHintText) == 0x000008, "Wrong alignment on WBP_HintWorldWidget_C_SetDisplayedHintText");
static_assert(sizeof(WBP_HintWorldWidget_C_SetDisplayedHintText) == 0x000010, "Wrong size on WBP_HintWorldWidget_C_SetDisplayedHintText");
static_assert(offsetof(WBP_HintWorldWidget_C_SetDisplayedHintText, NewText) == 0x000000, "Member 'WBP_HintWorldWidget_C_SetDisplayedHintText::NewText' has a wrong offset!");

// Function WBP_HintWorldWidget.WBP_HintWorldWidget_C.SetHintData
// 0x0008 (0x0008 - 0x0000)
struct WBP_HintWorldWidget_C_SetHintData final
{
public:
	class UTedHintsAsset*                         HintData;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HintWorldWidget_C_SetHintData) == 0x000008, "Wrong alignment on WBP_HintWorldWidget_C_SetHintData");
static_assert(sizeof(WBP_HintWorldWidget_C_SetHintData) == 0x000008, "Wrong size on WBP_HintWorldWidget_C_SetHintData");
static_assert(offsetof(WBP_HintWorldWidget_C_SetHintData, HintData) == 0x000000, "Member 'WBP_HintWorldWidget_C_SetHintData::HintData' has a wrong offset!");

}

