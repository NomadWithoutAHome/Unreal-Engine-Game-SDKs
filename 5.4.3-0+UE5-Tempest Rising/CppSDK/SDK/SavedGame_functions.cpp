#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SavedGame

#include "Basic.hpp"

#include "SavedGame_classes.hpp"
#include "SavedGame_parameters.hpp"


namespace SDK
{

// Function SavedGame.SavedGameActorInterface.ReceiveOnPrepareSavedGameData
// (Event, Public, BlueprintEvent)

void ISavedGameActorInterface::ReceiveOnPrepareSavedGameData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("SavedGameActorInterface", "ReceiveOnPrepareSavedGameData");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function SavedGame.SavedGameActorInterface.ReceiveOnSavedGameDataLoaded
// (Event, Public, BlueprintEvent)

void ISavedGameActorInterface::ReceiveOnSavedGameDataLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("SavedGameActorInterface", "ReceiveOnSavedGameDataLoaded");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function SavedGame.SavedGameBlueprintLibrary.AddLoadLock
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              LockTag                                                (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USavedGameBlueprintLibrary::AddLoadLock(const class UObject* WorldContextObject, const struct FGameplayTag& LockTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "AddLoadLock");

	Params::SavedGameBlueprintLibrary_AddLoadLock Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LockTag = std::move(LockTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SavedGame.SavedGameBlueprintLibrary.AddSaveLock
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              LockTag                                                (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USavedGameBlueprintLibrary::AddSaveLock(const class UObject* WorldContextObject, const struct FGameplayTag& LockTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "AddSaveLock");

	Params::SavedGameBlueprintLibrary_AddSaveLock Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LockTag = std::move(LockTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SavedGame.SavedGameBlueprintLibrary.AutoSave
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& LatentSaveGameData                                     (Parm, NativeAccessSpecifierPublic)
// ESavedGameActionResult*                 Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    DebugName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USavedGameBlueprintLibrary::AutoSave(const class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& LatentSaveGameData, ESavedGameActionResult* Result, const class FString& DebugName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "AutoSave");

	Params::SavedGameBlueprintLibrary_AutoSave Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.LatentSaveGameData = std::move(LatentSaveGameData);
	Parms.DebugName = std::move(DebugName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SavedGame.SavedGameBlueprintLibrary.CanLoadGame
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USavedGameBlueprintLibrary::CanLoadGame(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "CanLoadGame");

	Params::SavedGameBlueprintLibrary_CanLoadGame Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SavedGame.SavedGameBlueprintLibrary.CanLoadGame_Exec
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESavedGameYesNo                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESavedGameYesNo USavedGameBlueprintLibrary::CanLoadGame_Exec(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "CanLoadGame_Exec");

	Params::SavedGameBlueprintLibrary_CanLoadGame_Exec Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SavedGame.SavedGameBlueprintLibrary.CanSaveGame
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USavedGameBlueprintLibrary::CanSaveGame(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "CanSaveGame");

	Params::SavedGameBlueprintLibrary_CanSaveGame Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SavedGame.SavedGameBlueprintLibrary.CanSaveGame_Exec
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESavedGameYesNo                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESavedGameYesNo USavedGameBlueprintLibrary::CanSaveGame_Exec(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "CanSaveGame_Exec");

	Params::SavedGameBlueprintLibrary_CanSaveGame_Exec Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SavedGame.SavedGameBlueprintLibrary.DeleteAllSlots
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& LatentSaveGameData                                     (Parm, NativeAccessSpecifierPublic)
// ESavedGameActionResult*                 Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USavedGameBlueprintLibrary::DeleteAllSlots(const class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& LatentSaveGameData, ESavedGameActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "DeleteAllSlots");

	Params::SavedGameBlueprintLibrary_DeleteAllSlots Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.LatentSaveGameData = std::move(LatentSaveGameData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SavedGame.SavedGameBlueprintLibrary.DeleteSlot
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& LatentSaveGameData                                     (Parm, NativeAccessSpecifierPublic)
// ESavedGameActionResult*                 Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USavedGameBlueprintLibrary::DeleteSlot(const class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& LatentSaveGameData, ESavedGameActionResult* Result, class FName SlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "DeleteSlot");

	Params::SavedGameBlueprintLibrary_DeleteSlot Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.LatentSaveGameData = std::move(LatentSaveGameData);
	Parms.SlotName = SlotName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SavedGame.SavedGameBlueprintLibrary.DeleteSlotByInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& LatentSaveGameData                                     (Parm, NativeAccessSpecifierPublic)
// ESavedGameActionResult*                 Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class USavedGameSlotInfo*         SlotInfo                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USavedGameBlueprintLibrary::DeleteSlotByInfo(const class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& LatentSaveGameData, ESavedGameActionResult* Result, const class USavedGameSlotInfo* SlotInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "DeleteSlotByInfo");

	Params::SavedGameBlueprintLibrary_DeleteSlotByInfo Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.LatentSaveGameData = std::move(LatentSaveGameData);
	Parms.SlotInfo = SlotInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SavedGame.SavedGameBlueprintLibrary.EnsureNoBadCharacters
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFixedReservedNames                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString USavedGameBlueprintLibrary::EnsureNoBadCharacters(const class FString& Filename, bool bFixedReservedNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "EnsureNoBadCharacters");

	Params::SavedGameBlueprintLibrary_EnsureNoBadCharacters Parms{};

	Parms.Filename = std::move(Filename);
	Parms.bFixedReservedNames = bFixedReservedNames;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SavedGame.SavedGameBlueprintLibrary.FixInvalidFilenameCharacters
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString USavedGameBlueprintLibrary::FixInvalidFilenameCharacters(const class FString& Filename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "FixInvalidFilenameCharacters");

	Params::SavedGameBlueprintLibrary_FixInvalidFilenameCharacters Parms{};

	Parms.Filename = std::move(Filename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SavedGame.SavedGameBlueprintLibrary.FixReservedNames
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString USavedGameBlueprintLibrary::FixReservedNames(const class FString& Filename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "FixReservedNames");

	Params::SavedGameBlueprintLibrary_FixReservedNames Parms{};

	Parms.Filename = std::move(Filename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SavedGame.SavedGameBlueprintLibrary.GetCurrentSlotData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USavedGameSlotData*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USavedGameSlotData* USavedGameBlueprintLibrary::GetCurrentSlotData(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "GetCurrentSlotData");

	Params::SavedGameBlueprintLibrary_GetCurrentSlotData Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SavedGame.SavedGameBlueprintLibrary.GetCurrentSlotInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USavedGameSlotInfo*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USavedGameSlotInfo* USavedGameBlueprintLibrary::GetCurrentSlotInfo(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "GetCurrentSlotInfo");

	Params::SavedGameBlueprintLibrary_GetCurrentSlotInfo Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SavedGame.SavedGameBlueprintLibrary.GetCurrentSlotThumbnail
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* USavedGameBlueprintLibrary::GetCurrentSlotThumbnail(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "GetCurrentSlotThumbnail");

	Params::SavedGameBlueprintLibrary_GetCurrentSlotThumbnail Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SavedGame.SavedGameBlueprintLibrary.GetDisplayNameFromReserved
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString USavedGameBlueprintLibrary::GetDisplayNameFromReserved(const class FString& Filename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "GetDisplayNameFromReserved");

	Params::SavedGameBlueprintLibrary_GetDisplayNameFromReserved Parms{};

	Parms.Filename = std::move(Filename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SavedGame.SavedGameBlueprintLibrary.GetLoadedSlotInfos
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class USavedGameSlotInfo*>*      SlotInfos                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void USavedGameBlueprintLibrary::GetLoadedSlotInfos(const class UObject* WorldContextObject, TArray<class USavedGameSlotInfo*>* SlotInfos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "GetLoadedSlotInfos");

	Params::SavedGameBlueprintLibrary_GetLoadedSlotInfos Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SlotInfos != nullptr)
		*SlotInfos = std::move(Parms.SlotInfos);
}


// Function SavedGame.SavedGameBlueprintLibrary.GetLoadedSlotInfosWithType
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class USavedGameSlotInfo*>*      SlotInfos                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// const ESavedGameSlotType                SlotType                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USavedGameBlueprintLibrary::GetLoadedSlotInfosWithType(const class UObject* WorldContextObject, TArray<class USavedGameSlotInfo*>* SlotInfos, const ESavedGameSlotType SlotType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "GetLoadedSlotInfosWithType");

	Params::SavedGameBlueprintLibrary_GetLoadedSlotInfosWithType Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SlotType = SlotType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SlotInfos != nullptr)
		*SlotInfos = std::move(Parms.SlotInfos);
}


// Function SavedGame.SavedGameBlueprintLibrary.IsLoadingGame
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESavedGameYesNo*                        Output                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USavedGameBlueprintLibrary::IsLoadingGame(const class UObject* WorldContextObject, ESavedGameYesNo* Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "IsLoadingGame");

	Params::SavedGameBlueprintLibrary_IsLoadingGame Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function SavedGame.SavedGameBlueprintLibrary.IsSavingGame
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESavedGameYesNo*                        Output                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USavedGameBlueprintLibrary::IsSavingGame(const class UObject* WorldContextObject, ESavedGameYesNo* Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "IsSavingGame");

	Params::SavedGameBlueprintLibrary_IsSavingGame Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function SavedGame.SavedGameBlueprintLibrary.LoadAllSlotInfos
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& LatentSaveGameData                                     (Parm, NativeAccessSpecifierPublic)
// ESavedGameActionResult*                 Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class USavedGameSlotInfo*>*      SlotInfos                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// const bool                              bSortByRecent                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USavedGameBlueprintLibrary::LoadAllSlotInfos(const class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& LatentSaveGameData, ESavedGameActionResult* Result, TArray<class USavedGameSlotInfo*>* SlotInfos, const bool bSortByRecent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "LoadAllSlotInfos");

	Params::SavedGameBlueprintLibrary_LoadAllSlotInfos Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.LatentSaveGameData = std::move(LatentSaveGameData);
	Parms.bSortByRecent = bSortByRecent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

	if (SlotInfos != nullptr)
		*SlotInfos = std::move(Parms.SlotInfos);
}


// Function SavedGame.SavedGameBlueprintLibrary.LoadAllSlotInfosSync
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class USavedGameSlotInfo*>*      SlotInfos                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// const bool                              bSortByRecent                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USavedGameBlueprintLibrary::LoadAllSlotInfosSync(const class UObject* WorldContextObject, TArray<class USavedGameSlotInfo*>* SlotInfos, const bool bSortByRecent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "LoadAllSlotInfosSync");

	Params::SavedGameBlueprintLibrary_LoadAllSlotInfosSync Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bSortByRecent = bSortByRecent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SlotInfos != nullptr)
		*SlotInfos = std::move(Parms.SlotInfos);
}


// Function SavedGame.SavedGameBlueprintLibrary.LoadLatestSlot
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USavedGameBlueprintLibrary::LoadLatestSlot(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "LoadLatestSlot");

	Params::SavedGameBlueprintLibrary_LoadLatestSlot Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SavedGame.SavedGameBlueprintLibrary.LoadSlot
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USavedGameBlueprintLibrary::LoadSlot(const class UObject* WorldContextObject, class FName SlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "LoadSlot");

	Params::SavedGameBlueprintLibrary_LoadSlot Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SlotName = SlotName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SavedGame.SavedGameBlueprintLibrary.LoadSlotByInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class USavedGameSlotInfo*         SlotInfo                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USavedGameBlueprintLibrary::LoadSlotByInfo(const class UObject* WorldContextObject, const class USavedGameSlotInfo* SlotInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "LoadSlotByInfo");

	Params::SavedGameBlueprintLibrary_LoadSlotByInfo Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SlotInfo = SlotInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SavedGame.SavedGameBlueprintLibrary.LoadSlotInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& LatentSaveGameData                                     (Parm, NativeAccessSpecifierPublic)
// ESavedGameActionResult*                 Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USavedGameSlotInfo**              SlotInfo                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USavedGameBlueprintLibrary::LoadSlotInfo(const class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& LatentSaveGameData, ESavedGameActionResult* Result, class USavedGameSlotInfo** SlotInfo, class FName SlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "LoadSlotInfo");

	Params::SavedGameBlueprintLibrary_LoadSlotInfo Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.LatentSaveGameData = std::move(LatentSaveGameData);
	Parms.SlotName = SlotName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

	if (SlotInfo != nullptr)
		*SlotInfo = Parms.SlotInfo;
}


// Function SavedGame.SavedGameBlueprintLibrary.QuickSave
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& LatentSaveGameData                                     (Parm, NativeAccessSpecifierPublic)
// ESavedGameActionResult*                 Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USavedGameBlueprintLibrary::QuickSave(const class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& LatentSaveGameData, ESavedGameActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "QuickSave");

	Params::SavedGameBlueprintLibrary_QuickSave Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.LatentSaveGameData = std::move(LatentSaveGameData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SavedGame.SavedGameBlueprintLibrary.ReloadCurrentSlot
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USavedGameBlueprintLibrary::ReloadCurrentSlot(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "ReloadCurrentSlot");

	Params::SavedGameBlueprintLibrary_ReloadCurrentSlot Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SavedGame.SavedGameBlueprintLibrary.RemoveLoadLock
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              LockTag                                                (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USavedGameBlueprintLibrary::RemoveLoadLock(const class UObject* WorldContextObject, const struct FGameplayTag& LockTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "RemoveLoadLock");

	Params::SavedGameBlueprintLibrary_RemoveLoadLock Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LockTag = std::move(LockTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SavedGame.SavedGameBlueprintLibrary.RemoveSaveLock
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              LockTag                                                (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USavedGameBlueprintLibrary::RemoveSaveLock(const class UObject* WorldContextObject, const struct FGameplayTag& LockTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "RemoveSaveLock");

	Params::SavedGameBlueprintLibrary_RemoveSaveLock Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LockTag = std::move(LockTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SavedGame.SavedGameBlueprintLibrary.SaveSlot
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLatentActionSaveGameData& LatentSaveGameData                                     (Parm, NativeAccessSpecifierPublic)
// ESavedGameActionResult*                 Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USavedGameBlueprintLibrary::SaveSlot(const class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, const struct FLatentActionSaveGameData& LatentSaveGameData, ESavedGameActionResult* Result, class FName SlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SavedGameBlueprintLibrary", "SaveSlot");

	Params::SavedGameBlueprintLibrary_SaveSlot Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.LatentSaveGameData = std::move(LatentSaveGameData);
	Parms.SlotName = SlotName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SavedGame.SavedGameLevelStreamingNotifier.OnLevelHidden
// (Final, Native, Protected)

void USavedGameLevelStreamingNotifier::OnLevelHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SavedGameLevelStreamingNotifier", "OnLevelHidden");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SavedGame.SavedGameLevelStreamingNotifier.OnLevelLoaded
// (Final, Native, Protected)

void USavedGameLevelStreamingNotifier::OnLevelLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SavedGameLevelStreamingNotifier", "OnLevelLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SavedGame.SavedGameLevelStreamingNotifier.OnLevelShown
// (Final, Native, Protected)

void USavedGameLevelStreamingNotifier::OnLevelShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SavedGameLevelStreamingNotifier", "OnLevelShown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SavedGame.SavedGameLevelStreamingNotifier.OnLevelUnloaded
// (Final, Native, Protected)

void USavedGameLevelStreamingNotifier::OnLevelUnloaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SavedGameLevelStreamingNotifier", "OnLevelUnloaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SavedGame.SavedGameProfileInfo.GetPrettyName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText USavedGameProfileInfo::GetPrettyName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SavedGameProfileInfo", "GetPrettyName");

	Params::SavedGameProfileInfo_GetPrettyName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SavedGame.SavedGameSlotInfo.GetThumbnail
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* USavedGameSlotInfo::GetThumbnail() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SavedGameSlotInfo", "GetThumbnail");

	Params::SavedGameSlotInfo_GetThumbnail Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SavedGame.SavedGameSubsystem.OnActorDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USavedGameSubsystem::OnActorDestroyed(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SavedGameSubsystem", "OnActorDestroyed");

	Params::SavedGameSubsystem_OnActorDestroyed Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SavedGame.SavedGameSubsystem.OnWorldSettingsEndPlay
// (Final, Native, Protected)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EEndPlayReason                    EndPlayReason                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USavedGameSubsystem::OnWorldSettingsEndPlay(class AActor* Actor, const EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SavedGameSubsystem", "OnWorldSettingsEndPlay");

	Params::SavedGameSubsystem_OnWorldSettingsEndPlay Parms{};

	Parms.Actor = Actor;
	Parms.EndPlayReason = EndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

