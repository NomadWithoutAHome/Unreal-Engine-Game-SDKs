#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_VH_CIV_Globetrotter

#include "Basic.hpp"

#include "ABP_VH_CIV_Globetrotter_structs.hpp"
#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Tempest_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_VH_CIV_Globetrotter.ABP_VH_CIV_Globetrotter_C
// 0x01F0 (0x0610 - 0x0420)
class UABP_VH_CIV_Globetrotter_C final : public UTedAnimInstance_Aircraft
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0420(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_VH_CIV_Globetrotter::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;      // 0x0428(0x0008)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0430(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0438(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0440(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0460(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x04A8(0x0048)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x04F0(0x0118)()

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void ExecuteUbergraph_ABP_VH_CIV_Globetrotter(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_VH_CIV_Globetrotter_C">();
	}
	static class UABP_VH_CIV_Globetrotter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_VH_CIV_Globetrotter_C>();
	}
};
static_assert(alignof(UABP_VH_CIV_Globetrotter_C) == 0x000010, "Wrong alignment on UABP_VH_CIV_Globetrotter_C");
static_assert(sizeof(UABP_VH_CIV_Globetrotter_C) == 0x000610, "Wrong size on UABP_VH_CIV_Globetrotter_C");
static_assert(offsetof(UABP_VH_CIV_Globetrotter_C, UberGraphFrame) == 0x000420, "Member 'UABP_VH_CIV_Globetrotter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_VH_CIV_Globetrotter_C, __AnimBlueprintMutables) == 0x000428, "Member 'UABP_VH_CIV_Globetrotter_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_VH_CIV_Globetrotter_C, AnimBlueprintExtension_PropertyAccess) == 0x000430, "Member 'UABP_VH_CIV_Globetrotter_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_VH_CIV_Globetrotter_C, AnimBlueprintExtension_Base) == 0x000438, "Member 'UABP_VH_CIV_Globetrotter_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_VH_CIV_Globetrotter_C, AnimGraphNode_Root) == 0x000440, "Member 'UABP_VH_CIV_Globetrotter_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_VH_CIV_Globetrotter_C, AnimGraphNode_SequencePlayer) == 0x000460, "Member 'UABP_VH_CIV_Globetrotter_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_VH_CIV_Globetrotter_C, AnimGraphNode_Slot) == 0x0004A8, "Member 'UABP_VH_CIV_Globetrotter_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_VH_CIV_Globetrotter_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x0004F0, "Member 'UABP_VH_CIV_Globetrotter_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");

}

