#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NubAI

#include "Basic.hpp"

#include "NubAI_classes.hpp"
#include "NubAI_parameters.hpp"


namespace SDK
{

// Function NubAI.UtilityAIAction_BlueprintBase.FinishAbort
// (Final, Native, Protected, BlueprintCallable)

void UUtilityAIAction_BlueprintBase::FinishAbort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UtilityAIAction_BlueprintBase", "FinishAbort");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NubAI.UtilityAIAction_BlueprintBase.FinishExecute
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUtilityAIAction_BlueprintBase::FinishExecute(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UtilityAIAction_BlueprintBase", "FinishExecute");

	Params::UtilityAIAction_BlueprintBase_FinishExecute Parms{};

	Parms.bSuccess = bSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NubAI.UtilityAIAction_BlueprintBase.ReceiveAbort
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FUtilityAIActionContext&   Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUtilityAIAction_BlueprintBase::ReceiveAbort(const struct FUtilityAIActionContext& Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UtilityAIAction_BlueprintBase", "ReceiveAbort");

	Params::UtilityAIAction_BlueprintBase_ReceiveAbort Parms{};

	Parms.Context = std::move(Context);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NubAI.UtilityAIAction_BlueprintBase.ReceiveExecute
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FUtilityAIActionContext&   Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUtilityAIAction_BlueprintBase::ReceiveExecute(const struct FUtilityAIActionContext& Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UtilityAIAction_BlueprintBase", "ReceiveExecute");

	Params::UtilityAIAction_BlueprintBase_ReceiveExecute Parms{};

	Parms.Context = std::move(Context);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NubAI.UtilityAIAction_BlueprintBase.ReceiveTick
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FUtilityAIActionContext&   Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUtilityAIAction_BlueprintBase::ReceiveTick(const struct FUtilityAIActionContext& Context, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UtilityAIAction_BlueprintBase", "ReceiveTick");

	Params::UtilityAIAction_BlueprintBase_ReceiveTick Parms{};

	Parms.Context = std::move(Context);
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NubAI.UtilityAIAction_BlueprintBase.IsAborting
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUtilityAIAction_BlueprintBase::IsAborting() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UtilityAIAction_BlueprintBase", "IsAborting");

	Params::UtilityAIAction_BlueprintBase_IsAborting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NubAI.UtilityAIAction_BlueprintBase.IsExecuting
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUtilityAIAction_BlueprintBase::IsExecuting() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UtilityAIAction_BlueprintBase", "IsExecuting");

	Params::UtilityAIAction_BlueprintBase_IsExecuting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NubAI.UtilityAIBrain.AddBehaviorSet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UUtilityAIBehaviorSet*      BehaviorSet                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUtilityAIBrain::AddBehaviorSet(const class UUtilityAIBehaviorSet* BehaviorSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UtilityAIBrain", "AddBehaviorSet");

	Params::UtilityAIBrain_AddBehaviorSet Parms{};

	Parms.BehaviorSet = BehaviorSet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NubAI.UtilityAIBrain.AddLooseBehavior
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UUtilityAIBehavior*         Behavior                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUtilityAIBrain::AddLooseBehavior(const class UUtilityAIBehavior* Behavior)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UtilityAIBrain", "AddLooseBehavior");

	Params::UtilityAIBrain_AddLooseBehavior Parms{};

	Parms.Behavior = Behavior;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NubAI.UtilityAIBrain.RemoveBehaviorSet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UUtilityAIBehaviorSet*      BehaviorSet                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUtilityAIBrain::RemoveBehaviorSet(const class UUtilityAIBehaviorSet* BehaviorSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UtilityAIBrain", "RemoveBehaviorSet");

	Params::UtilityAIBrain_RemoveBehaviorSet Parms{};

	Parms.BehaviorSet = BehaviorSet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NubAI.UtilityAIBrain.RemoveLooseBehavior
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class UUtilityAIBehavior*         Behavior                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUtilityAIBrain::RemoveLooseBehavior(const class UUtilityAIBehavior* Behavior)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UtilityAIBrain", "RemoveLooseBehavior");

	Params::UtilityAIBrain_RemoveLooseBehavior Parms{};

	Parms.Behavior = Behavior;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NubAI.UtilityAIBrain.HasBehavior
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UUtilityAIBehavior*         Behavior                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUtilityAIBrain::HasBehavior(const class UUtilityAIBehavior* Behavior) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UtilityAIBrain", "HasBehavior");

	Params::UtilityAIBrain_HasBehavior Parms{};

	Parms.Behavior = Behavior;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NubAI.UtilityAIBrain.HasBehaviorSet
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UUtilityAIBehaviorSet*      BehaviorSet                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUtilityAIBrain::HasBehaviorSet(const class UUtilityAIBehaviorSet* BehaviorSet) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UtilityAIBrain", "HasBehaviorSet");

	Params::UtilityAIBrain_HasBehaviorSet Parms{};

	Parms.BehaviorSet = BehaviorSet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NubAI.UtilityAIBrain.HasLooseBehavior
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UUtilityAIBehavior*         Behavior                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUtilityAIBrain::HasLooseBehavior(const class UUtilityAIBehavior* Behavior) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UtilityAIBrain", "HasLooseBehavior");

	Params::UtilityAIBrain_HasLooseBehavior Parms{};

	Parms.Behavior = Behavior;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NubAI.UtilityAIConsideration_BlueprintBase.ReceiveCalculateScore
// (Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const struct FUtilityAIDecisionContext& Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUtilityAIConsideration_BlueprintBase::ReceiveCalculateScore(const struct FUtilityAIDecisionContext& Context) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UtilityAIConsideration_BlueprintBase", "ReceiveCalculateScore");

	Params::UtilityAIConsideration_BlueprintBase_ReceiveCalculateScore Parms{};

	Parms.Context = std::move(Context);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

