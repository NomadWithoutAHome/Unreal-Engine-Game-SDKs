#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VehicleWreck_TempestSphere

#include "Basic.hpp"

#include "PhysicsCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Tempest_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_VehicleWreck_TempestSphere.BP_VehicleWreck_TempestSphere_C
// 0x0130 (0x04D0 - 0x03A0)
class ABP_VehicleWreck_TempestSphere_C final : public ATedVehicleWreckActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               PS_SmokeTempestCore_01;                            // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Light_Core;                                        // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WreckTempestSphere_06;                          // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WreckTempestSphere_05;                          // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WreckTempestSphere_04;                          // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WreckTempestSphere_03;                          // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WreckTempestSphere_02;                          // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Emissive_Diminish_Emissive_Power_ED0472A84129ECDEA1E539A0E099A48D; // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Emissive_Diminish__Direction_ED0472A84129ECDEA1E539A0E099A48D; // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E5[0x3];                                      // 0x03E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Emissive_Diminish;                                 // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             ActorTransformCache;                               // 0x03F0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VelocityToTransfer;                                // 0x0450(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitBaseMesh;                                       // 0x0468(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitPart1;                                          // 0x0469(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46A[0x6];                                      // 0x046A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                MainMeshDestSockLocCache;                          // 0x0470(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitPart2;                                          // 0x0488(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BrokenPart1;                                       // 0x0489(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48A[0x6];                                      // 0x048A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CoreCenterPoint;                                   // 0x0490(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BrokenPart2;                                       // 0x04A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BrokenPart3;                                       // 0x04A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BrokenPart4;                                       // 0x04AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitPart3;                                          // 0x04AB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitPart4;                                          // 0x04AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitPart5;                                          // 0x04AD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AE[0x2];                                      // 0x04AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   SM_Wreck_Tempest_Sphere_06;                        // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           MeshesToEmissiveDiminish;                          // 0x04B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void BndEvt__BP_VehicleWreck_MediumTank_Mesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void BndEvt__BP_VehicleWreck_MediumTank_SM_WreckMediumTank_02_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void BndEvt__BP_VehicleWreck_TempestSphere_SM_WreckTempestSphere_04_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void BndEvt__BP_VehicleWreck_TempestSphere_SM_WreckTempestSphere_05_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void BndEvt__BP_VehicleWreck_TempestSphere_SM_WreckTempestSphere_06_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void BndEvt__BP_VehicleWreck_VoltaicTank_SM_WreckVoltaicTank_03_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void Emissive_Diminish__FinishedFunc();
	void Emissive_Diminish__UpdateFunc();
	void ExecuteUbergraph_BP_VehicleWreck_TempestSphere(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_VehicleWreck_TempestSphere_C">();
	}
	static class ABP_VehicleWreck_TempestSphere_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_VehicleWreck_TempestSphere_C>();
	}
};
static_assert(alignof(ABP_VehicleWreck_TempestSphere_C) == 0x000010, "Wrong alignment on ABP_VehicleWreck_TempestSphere_C");
static_assert(sizeof(ABP_VehicleWreck_TempestSphere_C) == 0x0004D0, "Wrong size on ABP_VehicleWreck_TempestSphere_C");
static_assert(offsetof(ABP_VehicleWreck_TempestSphere_C, UberGraphFrame) == 0x0003A0, "Member 'ABP_VehicleWreck_TempestSphere_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_TempestSphere_C, PS_SmokeTempestCore_01) == 0x0003A8, "Member 'ABP_VehicleWreck_TempestSphere_C::PS_SmokeTempestCore_01' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_TempestSphere_C, Light_Core) == 0x0003B0, "Member 'ABP_VehicleWreck_TempestSphere_C::Light_Core' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_TempestSphere_C, SM_WreckTempestSphere_06) == 0x0003B8, "Member 'ABP_VehicleWreck_TempestSphere_C::SM_WreckTempestSphere_06' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_TempestSphere_C, SM_WreckTempestSphere_05) == 0x0003C0, "Member 'ABP_VehicleWreck_TempestSphere_C::SM_WreckTempestSphere_05' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_TempestSphere_C, SM_WreckTempestSphere_04) == 0x0003C8, "Member 'ABP_VehicleWreck_TempestSphere_C::SM_WreckTempestSphere_04' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_TempestSphere_C, SM_WreckTempestSphere_03) == 0x0003D0, "Member 'ABP_VehicleWreck_TempestSphere_C::SM_WreckTempestSphere_03' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_TempestSphere_C, SM_WreckTempestSphere_02) == 0x0003D8, "Member 'ABP_VehicleWreck_TempestSphere_C::SM_WreckTempestSphere_02' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_TempestSphere_C, Emissive_Diminish_Emissive_Power_ED0472A84129ECDEA1E539A0E099A48D) == 0x0003E0, "Member 'ABP_VehicleWreck_TempestSphere_C::Emissive_Diminish_Emissive_Power_ED0472A84129ECDEA1E539A0E099A48D' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_TempestSphere_C, Emissive_Diminish__Direction_ED0472A84129ECDEA1E539A0E099A48D) == 0x0003E4, "Member 'ABP_VehicleWreck_TempestSphere_C::Emissive_Diminish__Direction_ED0472A84129ECDEA1E539A0E099A48D' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_TempestSphere_C, Emissive_Diminish) == 0x0003E8, "Member 'ABP_VehicleWreck_TempestSphere_C::Emissive_Diminish' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_TempestSphere_C, ActorTransformCache) == 0x0003F0, "Member 'ABP_VehicleWreck_TempestSphere_C::ActorTransformCache' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_TempestSphere_C, VelocityToTransfer) == 0x000450, "Member 'ABP_VehicleWreck_TempestSphere_C::VelocityToTransfer' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_TempestSphere_C, HitBaseMesh) == 0x000468, "Member 'ABP_VehicleWreck_TempestSphere_C::HitBaseMesh' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_TempestSphere_C, HitPart1) == 0x000469, "Member 'ABP_VehicleWreck_TempestSphere_C::HitPart1' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_TempestSphere_C, MainMeshDestSockLocCache) == 0x000470, "Member 'ABP_VehicleWreck_TempestSphere_C::MainMeshDestSockLocCache' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_TempestSphere_C, HitPart2) == 0x000488, "Member 'ABP_VehicleWreck_TempestSphere_C::HitPart2' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_TempestSphere_C, BrokenPart1) == 0x000489, "Member 'ABP_VehicleWreck_TempestSphere_C::BrokenPart1' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_TempestSphere_C, CoreCenterPoint) == 0x000490, "Member 'ABP_VehicleWreck_TempestSphere_C::CoreCenterPoint' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_TempestSphere_C, BrokenPart2) == 0x0004A8, "Member 'ABP_VehicleWreck_TempestSphere_C::BrokenPart2' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_TempestSphere_C, BrokenPart3) == 0x0004A9, "Member 'ABP_VehicleWreck_TempestSphere_C::BrokenPart3' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_TempestSphere_C, BrokenPart4) == 0x0004AA, "Member 'ABP_VehicleWreck_TempestSphere_C::BrokenPart4' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_TempestSphere_C, HitPart3) == 0x0004AB, "Member 'ABP_VehicleWreck_TempestSphere_C::HitPart3' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_TempestSphere_C, HitPart4) == 0x0004AC, "Member 'ABP_VehicleWreck_TempestSphere_C::HitPart4' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_TempestSphere_C, HitPart5) == 0x0004AD, "Member 'ABP_VehicleWreck_TempestSphere_C::HitPart5' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_TempestSphere_C, SM_Wreck_Tempest_Sphere_06) == 0x0004B0, "Member 'ABP_VehicleWreck_TempestSphere_C::SM_Wreck_Tempest_Sphere_06' has a wrong offset!");
static_assert(offsetof(ABP_VehicleWreck_TempestSphere_C, MeshesToEmissiveDiminish) == 0x0004B8, "Member 'ABP_VehicleWreck_TempestSphere_C::MeshesToEmissiveDiminish' has a wrong offset!");

}

