#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_VH_DYN_Hornet

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "ABP_VH_DYN_Hornet_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Tempest_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_VH_DYN_Hornet.ABP_VH_DYN_Hornet_C
// 0x0880 (0x0CA0 - 0x0420)
class UABP_VH_DYN_Hornet_C final : public UTedAnimInstance_Aircraft
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0420(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_VH_DYN_Hornet::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;            // 0x0428(0x0018)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0440(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0448(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0450(0x0020)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x0470(0x0118)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x0588(0x0070)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose_2;                      // 0x05F8(0x0010)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x0608(0x00C8)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x06D0(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x07F8(0x0020)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose_1;                      // 0x0818(0x0010)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0828(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0848(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0890(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x08B8(0x0028)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x08E0(0x0010)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x08F0(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0910(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0980(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x09A0(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0A68(0x0080)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0AE8(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0BB0(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0BD8(0x0048)()
	bool                                          IsLanding;                                         // 0x0C20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTakingOff;                                       // 0x0C21(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C22[0x6];                                      // 0x0C22(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Delta_Time_X;                                      // 0x0C28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WingRotate;                                        // 0x0C30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C38[0x8];                                      // 0x0C38(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             BodyTransform_0;                                   // 0x0C40(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VH_DYN_Hornet_AnimGraphNode_BlendListByBool_B8028B3A4DFC300C93D3508B2DE3760C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VH_DYN_Hornet_AnimGraphNode_ModifyBone_DDE85858427C945A44C651A77B702D31();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VH_DYN_Hornet_AnimGraphNode_RotationOffsetBlendSpace_80232FCA435EFC4733D44EA7C1F112B4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VH_DYN_Hornet_AnimGraphNode_TransitionResult_F3686AC046776B6217083596798C1D41();
	void ExecuteUbergraph_ABP_VH_DYN_Hornet(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_VH_DYN_Hornet_C">();
	}
	static class UABP_VH_DYN_Hornet_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_VH_DYN_Hornet_C>();
	}
};
static_assert(alignof(UABP_VH_DYN_Hornet_C) == 0x000010, "Wrong alignment on UABP_VH_DYN_Hornet_C");
static_assert(sizeof(UABP_VH_DYN_Hornet_C) == 0x000CA0, "Wrong size on UABP_VH_DYN_Hornet_C");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, UberGraphFrame) == 0x000420, "Member 'UABP_VH_DYN_Hornet_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, __AnimBlueprintMutables) == 0x000428, "Member 'UABP_VH_DYN_Hornet_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, AnimBlueprintExtension_PropertyAccess) == 0x000440, "Member 'UABP_VH_DYN_Hornet_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, AnimBlueprintExtension_Base) == 0x000448, "Member 'UABP_VH_DYN_Hornet_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, AnimGraphNode_Root) == 0x000450, "Member 'UABP_VH_DYN_Hornet_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x000470, "Member 'UABP_VH_DYN_Hornet_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, AnimGraphNode_BlendSpacePlayer_1) == 0x000588, "Member 'UABP_VH_DYN_Hornet_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, AnimGraphNode_LocalRefPose_2) == 0x0005F8, "Member 'UABP_VH_DYN_Hornet_C::AnimGraphNode_LocalRefPose_2' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, AnimGraphNode_ApplyAdditive_1) == 0x000608, "Member 'UABP_VH_DYN_Hornet_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, AnimGraphNode_ModifyBone) == 0x0006D0, "Member 'UABP_VH_DYN_Hornet_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, AnimGraphNode_ComponentToLocalSpace) == 0x0007F8, "Member 'UABP_VH_DYN_Hornet_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, AnimGraphNode_LocalRefPose_1) == 0x000818, "Member 'UABP_VH_DYN_Hornet_C::AnimGraphNode_LocalRefPose_1' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, AnimGraphNode_LocalToComponentSpace) == 0x000828, "Member 'UABP_VH_DYN_Hornet_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, AnimGraphNode_BlendListByBool) == 0x000848, "Member 'UABP_VH_DYN_Hornet_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, AnimGraphNode_TransitionResult_1) == 0x000890, "Member 'UABP_VH_DYN_Hornet_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, AnimGraphNode_TransitionResult) == 0x0008B8, "Member 'UABP_VH_DYN_Hornet_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, AnimGraphNode_LocalRefPose) == 0x0008E0, "Member 'UABP_VH_DYN_Hornet_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, AnimGraphNode_StateResult_1) == 0x0008F0, "Member 'UABP_VH_DYN_Hornet_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, AnimGraphNode_BlendSpacePlayer) == 0x000910, "Member 'UABP_VH_DYN_Hornet_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, AnimGraphNode_StateResult) == 0x000980, "Member 'UABP_VH_DYN_Hornet_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, AnimGraphNode_StateMachine) == 0x0009A0, "Member 'UABP_VH_DYN_Hornet_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, AnimGraphNode_SaveCachedPose) == 0x000A68, "Member 'UABP_VH_DYN_Hornet_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, AnimGraphNode_ApplyAdditive) == 0x000AE8, "Member 'UABP_VH_DYN_Hornet_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, AnimGraphNode_UseCachedPose) == 0x000BB0, "Member 'UABP_VH_DYN_Hornet_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, AnimGraphNode_Slot) == 0x000BD8, "Member 'UABP_VH_DYN_Hornet_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, IsLanding) == 0x000C20, "Member 'UABP_VH_DYN_Hornet_C::IsLanding' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, IsTakingOff) == 0x000C21, "Member 'UABP_VH_DYN_Hornet_C::IsTakingOff' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, Delta_Time_X) == 0x000C28, "Member 'UABP_VH_DYN_Hornet_C::Delta_Time_X' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, WingRotate) == 0x000C30, "Member 'UABP_VH_DYN_Hornet_C::WingRotate' has a wrong offset!");
static_assert(offsetof(UABP_VH_DYN_Hornet_C, BodyTransform_0) == 0x000C40, "Member 'UABP_VH_DYN_Hornet_C::BodyTransform_0' has a wrong offset!");

}

