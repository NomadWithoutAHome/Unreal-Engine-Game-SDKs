#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TempestFieldProxy_MainPod

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "STRUCT_TempestField_LightSettings_structs.hpp"
#include "Tempest_structs.hpp"
#include "Tempest_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TempestFieldProxy_MainPod.BP_TempestFieldProxy_MainPod_C
// 0x00A8 (0x0160 - 0x00B8)
class UBP_TempestFieldProxy_MainPod_C final : public UTempestFieldElementProxy
{
public:
	class UStaticMesh*                            PodMesh;                                           // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UFXSystemAsset*                         FX_PodSpawn;                                       // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UFXSystemAsset*                         FX_PodGrow;                                        // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasLight;                                         // 0x00D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           LightColor;                                        // 0x00D4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ETempestFieldElementStage, struct FSTRUCT_TempestField_LightSettings> LightStageSettings;   // 0x00E8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bUseInverseSquaredFalloff;                         // 0x0138(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LightFalloffExponent;                              // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LightZOffset;                                      // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             PodGrowthSound;                                    // 0x0150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             PodSpawnSound;                                     // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void GetScaleForStage(ETempestFieldElementStage Stage, double* Scale) const;
	void K2_BeginTransition(const ETempestFieldElementStage PrevStage, const ETempestFieldElementStage NextStage) const;
	void K2_EndTransition(const ETempestFieldElementStage PrevStage, const ETempestFieldElementStage NextStage) const;
	void K2_InitializeElement(struct FRandomStream& RandomStream) const;
	void K2_ProcessTransition(float& Progress, const float DeltaTime, const ETempestFieldElementStage PrevStage, const ETempestFieldElementStage NextStage) const;
	void UpdateInstancedSMTransform(double Progress, ETempestFieldElementStage PrevStage, ETempestFieldElementStage NextStage) const;
	void UpdateLight(double Progress, ETempestFieldElementStage PrevStage, ETempestFieldElementStage NextStage) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TempestFieldProxy_MainPod_C">();
	}
	static class UBP_TempestFieldProxy_MainPod_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_TempestFieldProxy_MainPod_C>();
	}
};
static_assert(alignof(UBP_TempestFieldProxy_MainPod_C) == 0x000008, "Wrong alignment on UBP_TempestFieldProxy_MainPod_C");
static_assert(sizeof(UBP_TempestFieldProxy_MainPod_C) == 0x000160, "Wrong size on UBP_TempestFieldProxy_MainPod_C");
static_assert(offsetof(UBP_TempestFieldProxy_MainPod_C, PodMesh) == 0x0000B8, "Member 'UBP_TempestFieldProxy_MainPod_C::PodMesh' has a wrong offset!");
static_assert(offsetof(UBP_TempestFieldProxy_MainPod_C, FX_PodSpawn) == 0x0000C0, "Member 'UBP_TempestFieldProxy_MainPod_C::FX_PodSpawn' has a wrong offset!");
static_assert(offsetof(UBP_TempestFieldProxy_MainPod_C, FX_PodGrow) == 0x0000C8, "Member 'UBP_TempestFieldProxy_MainPod_C::FX_PodGrow' has a wrong offset!");
static_assert(offsetof(UBP_TempestFieldProxy_MainPod_C, bHasLight) == 0x0000D0, "Member 'UBP_TempestFieldProxy_MainPod_C::bHasLight' has a wrong offset!");
static_assert(offsetof(UBP_TempestFieldProxy_MainPod_C, LightColor) == 0x0000D4, "Member 'UBP_TempestFieldProxy_MainPod_C::LightColor' has a wrong offset!");
static_assert(offsetof(UBP_TempestFieldProxy_MainPod_C, LightStageSettings) == 0x0000E8, "Member 'UBP_TempestFieldProxy_MainPod_C::LightStageSettings' has a wrong offset!");
static_assert(offsetof(UBP_TempestFieldProxy_MainPod_C, bUseInverseSquaredFalloff) == 0x000138, "Member 'UBP_TempestFieldProxy_MainPod_C::bUseInverseSquaredFalloff' has a wrong offset!");
static_assert(offsetof(UBP_TempestFieldProxy_MainPod_C, LightFalloffExponent) == 0x000140, "Member 'UBP_TempestFieldProxy_MainPod_C::LightFalloffExponent' has a wrong offset!");
static_assert(offsetof(UBP_TempestFieldProxy_MainPod_C, LightZOffset) == 0x000148, "Member 'UBP_TempestFieldProxy_MainPod_C::LightZOffset' has a wrong offset!");
static_assert(offsetof(UBP_TempestFieldProxy_MainPod_C, PodGrowthSound) == 0x000150, "Member 'UBP_TempestFieldProxy_MainPod_C::PodGrowthSound' has a wrong offset!");
static_assert(offsetof(UBP_TempestFieldProxy_MainPod_C, PodSpawnSound) == 0x000158, "Member 'UBP_TempestFieldProxy_MainPod_C::PodSpawnSound' has a wrong offset!");

}

