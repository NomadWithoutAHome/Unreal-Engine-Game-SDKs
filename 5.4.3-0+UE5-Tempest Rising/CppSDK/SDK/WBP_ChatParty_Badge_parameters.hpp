#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ChatParty_Badge

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Tempest_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_ChatParty_Badge.WBP_ChatParty_Badge_C.ExecuteUbergraph_WBP_ChatParty_Badge
// 0x0280 (0x0280 - 0x0000)
struct WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_7;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EChatMessageSender                            K2Node_Event_Sender;                               // 0x0048(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_Name;                                 // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0060(0x0010)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USlateBrushAsset*                       K2Node_CustomEvent_Asset;                          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            CallFunc_MakeBrushFromAsset_ReturnValue;           // 0x0080(0x00D0)()
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0160(0x00D0)()
	bool                                          K2Node_Event_bPreorder;                            // 0x0230(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0234(0x0014)()
	bool                                          K2Node_Event_bIsSameTeam;                          // 0x0248(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x024C(0x0014)()
	EChatMessageSender                            Temp_byte_Variable;                                // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast;          // 0x0274(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge) == 0x000010, "Wrong alignment on WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge");
static_assert(sizeof(WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge) == 0x000280, "Wrong size on WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge");
static_assert(offsetof(WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge, EntryPoint) == 0x000000, "Member 'WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge, Temp_object_Variable) == 0x000008, "Member 'WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge, Temp_object_Variable_1) == 0x000010, "Member 'WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge, Temp_object_Variable_2) == 0x000018, "Member 'WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge, Temp_object_Variable_3) == 0x000020, "Member 'WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge, Temp_object_Variable_4) == 0x000028, "Member 'WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge, Temp_object_Variable_5) == 0x000030, "Member 'WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge, Temp_object_Variable_6) == 0x000038, "Member 'WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge, Temp_object_Variable_7) == 0x000040, "Member 'WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge, K2Node_Event_Sender) == 0x000048, "Member 'WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge::K2Node_Event_Sender' has a wrong offset!");
static_assert(offsetof(WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge, K2Node_Event_Name) == 0x000050, "Member 'WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge::K2Node_Event_Name' has a wrong offset!");
static_assert(offsetof(WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge, CallFunc_Conv_StringToText_ReturnValue) == 0x000060, "Member 'WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge, K2Node_Event_IsDesignTime) == 0x000070, "Member 'WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge, K2Node_CustomEvent_Asset) == 0x000078, "Member 'WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge::K2Node_CustomEvent_Asset' has a wrong offset!");
static_assert(offsetof(WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge, CallFunc_MakeBrushFromAsset_ReturnValue) == 0x000080, "Member 'WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge::CallFunc_MakeBrushFromAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge, CallFunc_MakeVector2D_ReturnValue) == 0x000150, "Member 'WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge, K2Node_MakeStruct_SlateBrush) == 0x000160, "Member 'WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge, K2Node_Event_bPreorder) == 0x000230, "Member 'WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge::K2Node_Event_bPreorder' has a wrong offset!");
static_assert(offsetof(WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge, K2Node_MakeStruct_SlateColor) == 0x000234, "Member 'WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge, K2Node_Event_bIsSameTeam) == 0x000248, "Member 'WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge::K2Node_Event_bIsSameTeam' has a wrong offset!");
static_assert(offsetof(WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge, K2Node_MakeStruct_SlateColor_1) == 0x00024C, "Member 'WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge, Temp_byte_Variable) == 0x000260, "Member 'WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge, K2Node_Select_Default) == 0x000268, "Member 'WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge, CallFunc_IsValid_ReturnValue) == 0x000270, "Member 'WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge, K2Node_MakeStruct_ImageSize_ImplicitCast) == 0x000274, "Member 'WBP_ChatParty_Badge_C_ExecuteUbergraph_WBP_ChatParty_Badge::K2Node_MakeStruct_ImageSize_ImplicitCast' has a wrong offset!");

// Function WBP_ChatParty_Badge.WBP_ChatParty_Badge_C.K2_DescribePreorder
// 0x0001 (0x0001 - 0x0000)
struct WBP_ChatParty_Badge_C_K2_DescribePreorder final
{
public:
	bool                                          bPreorder;                                         // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ChatParty_Badge_C_K2_DescribePreorder) == 0x000001, "Wrong alignment on WBP_ChatParty_Badge_C_K2_DescribePreorder");
static_assert(sizeof(WBP_ChatParty_Badge_C_K2_DescribePreorder) == 0x000001, "Wrong size on WBP_ChatParty_Badge_C_K2_DescribePreorder");
static_assert(offsetof(WBP_ChatParty_Badge_C_K2_DescribePreorder, bPreorder) == 0x000000, "Member 'WBP_ChatParty_Badge_C_K2_DescribePreorder::bPreorder' has a wrong offset!");

// Function WBP_ChatParty_Badge.WBP_ChatParty_Badge_C.K2_DescribeSameTeam
// 0x0001 (0x0001 - 0x0000)
struct WBP_ChatParty_Badge_C_K2_DescribeSameTeam final
{
public:
	bool                                          bIsSameTeam;                                       // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ChatParty_Badge_C_K2_DescribeSameTeam) == 0x000001, "Wrong alignment on WBP_ChatParty_Badge_C_K2_DescribeSameTeam");
static_assert(sizeof(WBP_ChatParty_Badge_C_K2_DescribeSameTeam) == 0x000001, "Wrong size on WBP_ChatParty_Badge_C_K2_DescribeSameTeam");
static_assert(offsetof(WBP_ChatParty_Badge_C_K2_DescribeSameTeam, bIsSameTeam) == 0x000000, "Member 'WBP_ChatParty_Badge_C_K2_DescribeSameTeam::bIsSameTeam' has a wrong offset!");

// Function WBP_ChatParty_Badge.WBP_ChatParty_Badge_C.K2_DescribeSender
// 0x0001 (0x0001 - 0x0000)
struct WBP_ChatParty_Badge_C_K2_DescribeSender final
{
public:
	EChatMessageSender                            Sender;                                            // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ChatParty_Badge_C_K2_DescribeSender) == 0x000001, "Wrong alignment on WBP_ChatParty_Badge_C_K2_DescribeSender");
static_assert(sizeof(WBP_ChatParty_Badge_C_K2_DescribeSender) == 0x000001, "Wrong size on WBP_ChatParty_Badge_C_K2_DescribeSender");
static_assert(offsetof(WBP_ChatParty_Badge_C_K2_DescribeSender, Sender) == 0x000000, "Member 'WBP_ChatParty_Badge_C_K2_DescribeSender::Sender' has a wrong offset!");

// Function WBP_ChatParty_Badge.WBP_ChatParty_Badge_C.K2_DescribeSenderName
// 0x0010 (0x0010 - 0x0000)
struct WBP_ChatParty_Badge_C_K2_DescribeSenderName final
{
public:
	class FString                                 Param_Name_0;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ChatParty_Badge_C_K2_DescribeSenderName) == 0x000008, "Wrong alignment on WBP_ChatParty_Badge_C_K2_DescribeSenderName");
static_assert(sizeof(WBP_ChatParty_Badge_C_K2_DescribeSenderName) == 0x000010, "Wrong size on WBP_ChatParty_Badge_C_K2_DescribeSenderName");
static_assert(offsetof(WBP_ChatParty_Badge_C_K2_DescribeSenderName, Param_Name_0) == 0x000000, "Member 'WBP_ChatParty_Badge_C_K2_DescribeSenderName::Param_Name_0' has a wrong offset!");

// Function WBP_ChatParty_Badge.WBP_ChatParty_Badge_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_ChatParty_Badge_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ChatParty_Badge_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_ChatParty_Badge_C_PreConstruct");
static_assert(sizeof(WBP_ChatParty_Badge_C_PreConstruct) == 0x000001, "Wrong size on WBP_ChatParty_Badge_C_PreConstruct");
static_assert(offsetof(WBP_ChatParty_Badge_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_ChatParty_Badge_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_ChatParty_Badge.WBP_ChatParty_Badge_C.SetBackgroundBrush
// 0x0008 (0x0008 - 0x0000)
struct WBP_ChatParty_Badge_C_SetBackgroundBrush final
{
public:
	class USlateBrushAsset*                       Asset;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ChatParty_Badge_C_SetBackgroundBrush) == 0x000008, "Wrong alignment on WBP_ChatParty_Badge_C_SetBackgroundBrush");
static_assert(sizeof(WBP_ChatParty_Badge_C_SetBackgroundBrush) == 0x000008, "Wrong size on WBP_ChatParty_Badge_C_SetBackgroundBrush");
static_assert(offsetof(WBP_ChatParty_Badge_C_SetBackgroundBrush, Asset) == 0x000000, "Member 'WBP_ChatParty_Badge_C_SetBackgroundBrush::Asset' has a wrong offset!");

}

