#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Hydra5

#include "Basic.hpp"

#include "Pros_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "ProsSDK_structs.hpp"
#include "Hydra5_structs.hpp"


namespace SDK
{

// Class Hydra5.Hydra5AbstractDataService
// 0x0008 (0x0030 - 0x0028)
class UHydra5AbstractDataService final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UHydra5AbstractDataService* Get();

	EProsdkErrorCodeAbstractData InstantGetData(int32 LocalUserNum, const TArray<struct FAbstractDataGetRequestRecord>& RequestRecords, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeAbstractData ResultCode, const TArray<struct FAbstractDataKeyRecord>& KeyRecords)>& Delegate);
	EProsdkErrorCodeAbstractData InstantGetOwnData(int32 LocalUserNum, const class FString& ContainerName, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeAbstractData ResultCode, const TArray<struct FAbstractDataKeyRecord>& KeyRecords)>& Delegate);
	EProsdkErrorCodeAbstractData InstantGetOwnDataArray(int32 LocalUserNum, const TArray<class FString>& ContainerNames, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeAbstractData ResultCode, const TArray<struct FAbstractDataKeyRecord>& KeyRecords)>& Delegate);
	EProsdkErrorCodeAbstractData InstantWriteData(int32 LocalUserNum, const TArray<struct FAbstractDataKeyRecord>& KeyRecords, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeAbstractData ResultCode)>& Delegate);
	EProsdkErrorCodeAbstractData InstantWriteOwnData(int32 LocalUserNum, const class FString& ContainerName, const struct FAbstractDataRecord& AbstractDataRecord, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeAbstractData ResultCode)>& Delegate);
	EProsdkErrorCodeAbstractData InstantWriteOwnDataArray(int32 LocalUserNum, const TArray<struct FAbstractDataContainerRecord>& Containers, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeAbstractData ResultCode)>& Delegate);
	EProsdkErrorCodeAbstractData RequestData(int32 LocalUserNum, const TArray<struct FAbstractDataGetRequestRecord>& RequestRecords, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeAbstractData ResultCode, const TArray<struct FAbstractDataKeyRecord>& KeyRecords)>& Delegate);
	EProsdkErrorCodeAbstractData RequestOwnData(int32 LocalUserNum, const class FString& ContainerName, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeAbstractData ResultCode, const TArray<struct FAbstractDataKeyRecord>& KeyRecords)>& Delegate);
	EProsdkErrorCodeAbstractData RequestOwnDataArray(int32 LocalUserNum, const TArray<class FString>& ContainerNames, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeAbstractData ResultCode, const TArray<struct FAbstractDataKeyRecord>& KeyRecords)>& Delegate);
	EProsdkErrorCodeAbstractData ServerRequestData(const TArray<struct FAbstractDataGetRequestRecord>& RequestRecords, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeAbstractData ResultCode, const TArray<struct FAbstractDataKeyRecord>& KeyRecords)>& Delegate);
	EProsdkErrorCodeAbstractData ServerSetData(const TArray<struct FAbstractDataKeyRecord>& KeyRecords, const TDelegate<void(EProsdkErrorCodeAbstractData ResultCode)>& Delegate);
	EProsdkErrorCodeAbstractData SetData(int32 LocalUserNum, const TArray<struct FAbstractDataKeyRecord>& KeyRecords, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeAbstractData ResultCode)>& Delegate);
	EProsdkErrorCodeAbstractData SetOwnData(int32 LocalUserNum, const class FString& ContainerName, const struct FAbstractDataRecord& AbstractDataRecord, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeAbstractData ResultCode)>& Delegate);
	EProsdkErrorCodeAbstractData SetOwnDataArray(int32 LocalUserNum, const TArray<struct FAbstractDataContainerRecord>& Containers, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeAbstractData ResultCode)>& Delegate);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Hydra5AbstractDataService">();
	}
	static class UHydra5AbstractDataService* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHydra5AbstractDataService>();
	}
};
static_assert(alignof(UHydra5AbstractDataService) == 0x000008, "Wrong alignment on UHydra5AbstractDataService");
static_assert(sizeof(UHydra5AbstractDataService) == 0x000030, "Wrong size on UHydra5AbstractDataService");

// Class Hydra5.Hydra5BansService
// 0x0000 (0x0028 - 0x0028)
class UHydra5BansService final : public UObject
{
public:
	static class UHydra5BansService* Get();

	EProsdkErrorCodeDefault GetActiveUserBans(int32 LocalUserNum, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeDefault ResultCode, const TArray<struct FBanInfoRecord>& BanRecords)>& Delegate);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Hydra5BansService">();
	}
	static class UHydra5BansService* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHydra5BansService>();
	}
};
static_assert(alignof(UHydra5BansService) == 0x000008, "Wrong alignment on UHydra5BansService");
static_assert(sizeof(UHydra5BansService) == 0x000028, "Wrong size on UHydra5BansService");

// Class Hydra5.Hydra5ChallengesService
// 0x0028 (0x0050 - 0x0028)
class UHydra5ChallengesService final : public UObject
{
public:
	TMulticastInlineDelegate<void(int32 LocalUserNum, EProsServiceState State, EProsdkErrorCodeChallenges ResultCode, const class FString& ErrorMessage)> OnClientChallengeServiceStateChanged; // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x18];                                      // 0x0038(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UHydra5ChallengesService* Get();

	EProsdkErrorCodeChallenges ChallengesGet(int32 LocalUserNum, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeChallenges ResultCode, const struct FChallengeClientStatus& ClientStatus)>& Delegate);
	EProsdkErrorCodeChallenges ChallengesSubscribe(int32 LocalUserNum, const TDelegate<void(int32 LocalUserNum, const struct FChallengesUpdate& ClientUpdate)>& Delegate);
	void ChallengesUnSubscribe(int32 LocalUserNum);
	EProsdkErrorCodeChallenges ClientChallengesRegisterUsers(int32 LocalUserNum, const TArray<class FString>& Users);
	EProsdkErrorCodeChallenges ClientChallengesRemoveUsers(int32 LocalUserNum, const TArray<class FString>& Users);
	EProsdkErrorCodeChallenges ClientChallengesSubmitUserEvents(int32 LocalUserNum, const TArray<struct FChallengePerUserEvent>& Events);
	EProsdkErrorCodeChallenges ServerChallengesRegisterUsers(const TArray<class FString>& Users);
	EProsdkErrorCodeChallenges ServerChallengesRemoveUsers(const TArray<class FString>& Users);
	EProsdkErrorCodeChallenges ServerChallengesSubmitUserEvents(const TArray<struct FChallengePerUserEvent>& Events);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Hydra5ChallengesService">();
	}
	static class UHydra5ChallengesService* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHydra5ChallengesService>();
	}
};
static_assert(alignof(UHydra5ChallengesService) == 0x000008, "Wrong alignment on UHydra5ChallengesService");
static_assert(sizeof(UHydra5ChallengesService) == 0x000050, "Wrong size on UHydra5ChallengesService");
static_assert(offsetof(UHydra5ChallengesService, OnClientChallengeServiceStateChanged) == 0x000028, "Member 'UHydra5ChallengesService::OnClientChallengeServiceStateChanged' has a wrong offset!");

// Class Hydra5.Hydra5DiagnosticsService
// 0x0058 (0x0080 - 0x0028)
class UHydra5DiagnosticsService final : public UObject
{
public:
	TMulticastInlineDelegate<void(EProsdkErrorCodeDefault ErrorCode, const class FString& ErrorMessage)> OnCrashDumpUpload; // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(EProsdkErrorCodeDefault ErrorCode, const class FString& ErrorMessage)> OnCrashDumpUploadUserToken; // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x38];                                      // 0x0048(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UHydra5DiagnosticsService* Get();
	static class UHydra5DiagnosticsService* TryGet();

	EProsdkErrorCodeDefault CrashDumpUpload(const struct FDiagnosticsCrashDumpData& Data);
	EProsdkErrorCodeDefault CrashDumpUploadUserToken(const class FString& Token, const struct FDiagnosticsCrashDumpData& Data);
	EProsdkErrorCodeDefault GetCrashReporterUserToken(class FString* OutReporterToken);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Hydra5DiagnosticsService">();
	}
	static class UHydra5DiagnosticsService* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHydra5DiagnosticsService>();
	}
};
static_assert(alignof(UHydra5DiagnosticsService) == 0x000008, "Wrong alignment on UHydra5DiagnosticsService");
static_assert(sizeof(UHydra5DiagnosticsService) == 0x000080, "Wrong size on UHydra5DiagnosticsService");
static_assert(offsetof(UHydra5DiagnosticsService, OnCrashDumpUpload) == 0x000028, "Member 'UHydra5DiagnosticsService::OnCrashDumpUpload' has a wrong offset!");
static_assert(offsetof(UHydra5DiagnosticsService, OnCrashDumpUploadUserToken) == 0x000038, "Member 'UHydra5DiagnosticsService::OnCrashDumpUploadUserToken' has a wrong offset!");

// Class Hydra5.Hydra5EconomyService
// 0x00A0 (0x00C8 - 0x0028)
class UHydra5EconomyService final : public UObject
{
public:
	TMulticastInlineDelegate<void(int32 LocalUserNum, EProsServiceState State, EProsdkErrorCodeEconomy ResultCode, const class FString& Message)> OnHydraEconomyServiceStateChange; // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 LocalUserNum, const struct FEconomyUpdate& UpdateData)> OnUpdateData; // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x80];                                      // 0x0048(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UHydra5EconomyService* Get();

	EProsdkErrorCodeEconomy ApplyOffer(int32 LocalUserNum, const TArray<struct FOfferItem>& Items, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeEconomy ResultCode, const TArray<struct FEconomyApplyOfferItemError>& Errors)>& Delegate);
	void CleanupConnectCallbacks(int32 LocalUserNum);
	EProsdkErrorCodeEconomy ClientGetUsersStates(int32 LocalUserNum, const TDelegate<void(int32 LocalUserNum, const TArray<struct FEconomyUserState>& States, EProsdkErrorCodeEconomy ResultCode)>& Delegate);
	EProsdkErrorCodeEconomy Connect(int32 LocalUserNum);
	EProsdkErrorCodeEconomy Disconnect(int32 LocalUserNum);
	bool GetCachedState(int32 LocalUserNum, const class FString& ID, struct FEconomyUserState* OutState);
	struct FEconomyUserStates GetCachedStates(int32 LocalUserNum);
	int64 GetLastTransactionId(int32 LocalUserNum);
	EProsdkErrorCodeEconomy GetUserTransactions(int32 LocalUserNum, int64 FromTransactionId, int64 Count, bool bReverse, const TDelegate<void(int32 LocalUserNum, const TArray<struct FEconomyTransaction>& Transactions, EProsdkErrorCodeEconomy ResultCode)>& Delegate);
	EProsdkErrorCodeEconomy ProcessPlatformEntitlements(int32 LocalUserNum, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeEconomy ResultCode)>& Delegate);
	EProsdkErrorCodeEconomy ServerApplyOffer(const class FString& UserId, const TArray<struct FJsonOfferItem>& OfferItems, const TDelegate<void(EProsdkErrorCodeEconomy ResultCode, const TArray<struct FEconomyApplyOfferItemError>& Errors)>& Delegate);
	EProsdkErrorCodeEconomy ServerApplyUsersOffers(const TArray<struct FUserIdOffers>& UsersOffers, const TDelegate<void(const TArray<struct FUsersOffersResult>& Results)>& Delegate);
	EProsdkErrorCodeEconomy ServerGetUsersStates(const TArray<class FString>& UserIDs, const TDelegate<void(const TArray<struct FEconomyPerUserStates>& PerUserStates, EProsdkErrorCodeEconomy ResultCode)>& Delegate);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Hydra5EconomyService">();
	}
	static class UHydra5EconomyService* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHydra5EconomyService>();
	}
};
static_assert(alignof(UHydra5EconomyService) == 0x000008, "Wrong alignment on UHydra5EconomyService");
static_assert(sizeof(UHydra5EconomyService) == 0x0000C8, "Wrong size on UHydra5EconomyService");
static_assert(offsetof(UHydra5EconomyService, OnHydraEconomyServiceStateChange) == 0x000028, "Member 'UHydra5EconomyService::OnHydraEconomyServiceStateChange' has a wrong offset!");
static_assert(offsetof(UHydra5EconomyService, OnUpdateData) == 0x000038, "Member 'UHydra5EconomyService::OnUpdateData' has a wrong offset!");

// Class Hydra5.Hydra5FriendsService
// 0x00F8 (0x0120 - 0x0028)
class UHydra5FriendsService final : public UObject
{
public:
	TMulticastInlineDelegate<void(int32 LocalUserNum, EProsServiceState State, EProsdkErrorCodeFriends ResultCode, const class FString& Message)> OnHydraFriendsServiceStateChange; // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 LocalUserNum, const struct FHy5FriendsListUpdate& ListUpdateData)> OnFriendsListUpdate; // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 LocalUserNum, const struct FHy5RecentPlayersUpdate& ListUpdateData)> OnRecentPlayersUpdate; // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 LocalUserNum, const struct FHy5FriendRequestData& ReqData)> OnFriendsRequest; // 0x0058(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_68[0xB8];                                      // 0x0068(0x00B8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UHydra5FriendsService* Get();

	EProsdkErrorCodeFriends AcceptFriendRequest(int32 LocalUserNum, const class FString& ReqId, const class FString& CustomData, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeFriends ResultCode)>& Delegate);
	EProsdkErrorCodeFriends AddRecentPlayers(int32 LocalUserNum, const TArray<struct FHy5RecentPlayerNew>& Players, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeFriends ResultCode)>& Delegate);
	void CleanupConnectCallbacks(int32 LocalUserNum);
	EProsdkErrorCodeFriends Connect(int32 LocalUserNum);
	EProsdkErrorCodeFriends DeclineFriendRequest(int32 LocalUserNum, const class FString& ReqId, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeFriends ResultCode)>& Delegate);
	EProsdkErrorCodeFriends Disconnect(int32 LocalUserNum);
	EProsServiceState GetConnectionState(int32 LocalUserNum);
	struct FHy5FriendsList GetFriendsList(int32 LocalUserNum);
	struct FHy5FriendsRequests GetFriendsRequests(int32 LocalUserNum);
	struct FHy5RecentPlayersList GetRecentPlayersList(int32 LocalUserNum);
	EProsdkErrorCodeFriends RemoveFriend(int32 LocalUserNum, const class FString& UserId, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeFriends ResultCode)>& Delegate);
	EProsdkErrorCodeFriends SendFriendRequest(int32 LocalUserNum, const class FString& UserId, const class FString& CustomData, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeFriends ResultCode)>& Delegate);
	EProsdkErrorCodeFriends SetCustomData(int32 LocalUserNum, const class FString& UserId, const class FString& CustomData, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeFriends ResultCode)>& Delegate);
	EProsdkErrorCodeFriends SetDynamicData(int32 LocalUserNum, const class FString& DynData);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Hydra5FriendsService">();
	}
	static class UHydra5FriendsService* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHydra5FriendsService>();
	}
};
static_assert(alignof(UHydra5FriendsService) == 0x000008, "Wrong alignment on UHydra5FriendsService");
static_assert(sizeof(UHydra5FriendsService) == 0x000120, "Wrong size on UHydra5FriendsService");
static_assert(offsetof(UHydra5FriendsService, OnHydraFriendsServiceStateChange) == 0x000028, "Member 'UHydra5FriendsService::OnHydraFriendsServiceStateChange' has a wrong offset!");
static_assert(offsetof(UHydra5FriendsService, OnFriendsListUpdate) == 0x000038, "Member 'UHydra5FriendsService::OnFriendsListUpdate' has a wrong offset!");
static_assert(offsetof(UHydra5FriendsService, OnRecentPlayersUpdate) == 0x000048, "Member 'UHydra5FriendsService::OnRecentPlayersUpdate' has a wrong offset!");
static_assert(offsetof(UHydra5FriendsService, OnFriendsRequest) == 0x000058, "Member 'UHydra5FriendsService::OnFriendsRequest' has a wrong offset!");

// Class Hydra5.Hydra5GameConfigurationService
// 0x0058 (0x0080 - 0x0028)
class UHydra5GameConfigurationService final : public UObject
{
public:
	TMulticastInlineDelegate<void(int32 LocalUserNum)> OnClientGameConfigurationUpdated;             // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x18];                                      // 0x0038(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnServerGameConfigurationUpdated;                  // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_60[0x20];                                      // 0x0060(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UHydra5GameConfigurationService* Get();

	void GameConfigurationClearCache(int32 LocalUserNum);
	struct FLayerInfoArray GameConfigurationGetLayersInfo(int32 LocalUserNum);
	EProsdkErrorCodeGameConfiguration GameConfigurationInitializeLayers(int32 LocalUserNum, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeGameConfiguration ResultCode)>& Delegate);
	EProsdkErrorCodeGameConfiguration GetGameConfiguration(int32 LocalUserNum, const TArray<struct FLayerProperties>& Layers, const TDelegate<void(int32 LocalUserNum, const TArray<struct FLayerData>& Layers, EProsdkErrorCodeGameConfiguration ResultCode)>& Delegate);
	void ServerGameConfigurationClearCache();
	struct FLayerInfoArray ServerGameConfigurationGetLayersInfo();
	EProsdkErrorCodeGameConfiguration ServerGameConfigurationInitializeLayers(const TDelegate<void(EProsdkErrorCodeGameConfiguration ResultCode)>& Delegate);
	EProsdkErrorCodeGameConfiguration ServerGetGameConfiguration(const TArray<struct FLayerProperties>& Layers, const TDelegate<void(const TArray<struct FLayerData>& Layers, EProsdkErrorCodeGameConfiguration ResultCode)>& Delegate);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Hydra5GameConfigurationService">();
	}
	static class UHydra5GameConfigurationService* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHydra5GameConfigurationService>();
	}
};
static_assert(alignof(UHydra5GameConfigurationService) == 0x000008, "Wrong alignment on UHydra5GameConfigurationService");
static_assert(sizeof(UHydra5GameConfigurationService) == 0x000080, "Wrong size on UHydra5GameConfigurationService");
static_assert(offsetof(UHydra5GameConfigurationService, OnClientGameConfigurationUpdated) == 0x000028, "Member 'UHydra5GameConfigurationService::OnClientGameConfigurationUpdated' has a wrong offset!");
static_assert(offsetof(UHydra5GameConfigurationService, OnServerGameConfigurationUpdated) == 0x000050, "Member 'UHydra5GameConfigurationService::OnServerGameConfigurationUpdated' has a wrong offset!");

// Class Hydra5.Hydra5Interface
// 0x0000 (0x0028 - 0x0028)
class UHydra5Interface final : public UObject
{
public:
	static class UHydra5Interface* Get();

	class FString GetApplicationVersion();
	struct FDateTime GetBackendTime();
	struct FTimespan GetBackendTimeOffset();
	class FString GetRuntimeSeanseID();
	class FString GetSdkVersion();
	class FString GetTitleID();
	bool Init(const struct FProsInitSettings& InitSettings);
	bool InitUsingConfig();
	bool IsBackendTimeSynced();
	bool IsExecutingRequests();
	bool IsInitialized();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Hydra5Interface">();
	}
	static class UHydra5Interface* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHydra5Interface>();
	}
};
static_assert(alignof(UHydra5Interface) == 0x000008, "Wrong alignment on UHydra5Interface");
static_assert(sizeof(UHydra5Interface) == 0x000028, "Wrong size on UHydra5Interface");

// Class Hydra5.Hydra5SdkUtility
// 0x0000 (0x0028 - 0x0028)
class UHydra5SdkUtility final : public UObject
{
public:
	static class UHydra5SdkUtility* Get();

	struct FMemoryStatusResult GetMemoryStatus();
	EProsdkErrorCodeDefault UdpEchoAsync(const class FString& DatacentedId, int32 TimeoutMs, int32 Count, int32 ProbeDelayMs, const TDelegate<void(EProsdkErrorCodeDefault ResultCode, const class FString& ErrorMessage, const struct FUdpEchoAsyncResult& EchoResult)>& Delegate);
	void UdpEchoCancelAll();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Hydra5SdkUtility">();
	}
	static class UHydra5SdkUtility* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHydra5SdkUtility>();
	}
};
static_assert(alignof(UHydra5SdkUtility) == 0x000008, "Wrong alignment on UHydra5SdkUtility");
static_assert(sizeof(UHydra5SdkUtility) == 0x000028, "Wrong size on UHydra5SdkUtility");

// Class Hydra5.HydraSettings
// 0x0010 (0x0038 - 0x0028)
class UHydraSettings final : public UObject
{
public:
	bool                                          bEnablePresenceService;                            // 0x0028(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableSessionControlService;                      // 0x0029(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableLeaderboardsService;                        // 0x002A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableRatingsService;                             // 0x002B(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableServerService;                              // 0x002C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableEconomyService;                             // 0x002D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableAbstractDataService;                        // 0x002E(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableDiagnosticsService;                         // 0x002F(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableMessagingService;                           // 0x0030(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HydraSettings">();
	}
	static class UHydraSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHydraSettings>();
	}
};
static_assert(alignof(UHydraSettings) == 0x000008, "Wrong alignment on UHydraSettings");
static_assert(sizeof(UHydraSettings) == 0x000038, "Wrong size on UHydraSettings");
static_assert(offsetof(UHydraSettings, bEnablePresenceService) == 0x000028, "Member 'UHydraSettings::bEnablePresenceService' has a wrong offset!");
static_assert(offsetof(UHydraSettings, bEnableSessionControlService) == 0x000029, "Member 'UHydraSettings::bEnableSessionControlService' has a wrong offset!");
static_assert(offsetof(UHydraSettings, bEnableLeaderboardsService) == 0x00002A, "Member 'UHydraSettings::bEnableLeaderboardsService' has a wrong offset!");
static_assert(offsetof(UHydraSettings, bEnableRatingsService) == 0x00002B, "Member 'UHydraSettings::bEnableRatingsService' has a wrong offset!");
static_assert(offsetof(UHydraSettings, bEnableServerService) == 0x00002C, "Member 'UHydraSettings::bEnableServerService' has a wrong offset!");
static_assert(offsetof(UHydraSettings, bEnableEconomyService) == 0x00002D, "Member 'UHydraSettings::bEnableEconomyService' has a wrong offset!");
static_assert(offsetof(UHydraSettings, bEnableAbstractDataService) == 0x00002E, "Member 'UHydraSettings::bEnableAbstractDataService' has a wrong offset!");
static_assert(offsetof(UHydraSettings, bEnableDiagnosticsService) == 0x00002F, "Member 'UHydraSettings::bEnableDiagnosticsService' has a wrong offset!");
static_assert(offsetof(UHydraSettings, bEnableMessagingService) == 0x000030, "Member 'UHydraSettings::bEnableMessagingService' has a wrong offset!");

// Class Hydra5.Hydra5LeaderboardsService
// 0x0050 (0x0078 - 0x0028)
class UHydra5LeaderboardsService final : public UObject
{
public:
	TMulticastInlineDelegate<void(EProsdkErrorCodeLeaderboards ErrorCode)> OnLeaderboardsUpdate;     // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(EProsdkErrorCodeLeaderboards ErrorCode)> OnServerLeaderboardsUpdate; // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x30];                                      // 0x0048(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UHydra5LeaderboardsService* Get();

	EProsdkErrorCodeLeaderboards LeaderboardsFilteredGet(int32 LocalUserNum, const class FString& ID, bool IsPlatformSpecific, const TArray<class FString>& FilterItems, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeLeaderboards ResultCode, const TArray<struct FLeaderboardBoard>& Leaderboards)>& Delegate);
	EProsdkErrorCodeLeaderboards LeaderboardsGet(int32 LocalUserNum, const TArray<struct FLeaderboardGetRequest>& Leaderboards, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeLeaderboards ResultCode, const TArray<struct FLeaderboardBoard>& Leaderboards)>& Delegate);
	EProsdkErrorCodeLeaderboards LeaderboardsUpdate(int32 LocalUserNum, const class FString& ID, const TArray<struct FLeaderboardPlatformEntry>& Entries);
	EProsdkErrorCodeLeaderboards ServerLeaderboardsUpdate(const class FString& ID, const TArray<struct FLeaderboardPlatformEntry>& Entries);
	EProsdkErrorCodeLeaderboards ServerProsLeaderboardsUpdate(const TArray<struct FLeaderboardProsUpdate>& Updates);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Hydra5LeaderboardsService">();
	}
	static class UHydra5LeaderboardsService* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHydra5LeaderboardsService>();
	}
};
static_assert(alignof(UHydra5LeaderboardsService) == 0x000008, "Wrong alignment on UHydra5LeaderboardsService");
static_assert(sizeof(UHydra5LeaderboardsService) == 0x000078, "Wrong size on UHydra5LeaderboardsService");
static_assert(offsetof(UHydra5LeaderboardsService, OnLeaderboardsUpdate) == 0x000028, "Member 'UHydra5LeaderboardsService::OnLeaderboardsUpdate' has a wrong offset!");
static_assert(offsetof(UHydra5LeaderboardsService, OnServerLeaderboardsUpdate) == 0x000038, "Member 'UHydra5LeaderboardsService::OnServerLeaderboardsUpdate' has a wrong offset!");

// Class Hydra5.Hydra5MessagingService
// 0x00A0 (0x00C8 - 0x0028)
class UHydra5MessagingService final : public UObject
{
public:
	TMulticastInlineDelegate<void(int32 LocalUserNum, EProsServiceState State, EProsdkErrorCodeMessaging ResultCode, const class FString& Message)> OnHydraMessagingServiceStateChange; // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 LocalUserNum, const TArray<struct FMessagingMsgIncoming>& Messages)> OnIncomingMessages; // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x80];                                      // 0x0048(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UHydra5MessagingService* Get();

	void CleanupConnectCallbacks(int32 LocalUserNum);
	EProsdkErrorCodeMessaging Connect(int32 LocalUserNum);
	EProsdkErrorCodeMessaging CreateChannel(int32 LocalUserNum, const class FString& ChannelName, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeMessaging ResultCode)>& Delegate);
	EProsdkErrorCodeMessaging Disconnect(int32 LocalUserNum);
	TArray<struct FMessagingChannel> GetActiveChannels(int32 LocalUserNum);
	EProsServiceState GetConnectionState(int32 LocalUserNum);
	EProsdkErrorCodeMessaging JoinChannel(int32 LocalUserNum, const class FString& ChannelName, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeMessaging ResultCode)>& Delegate);
	EProsdkErrorCodeMessaging LeaveChannel(int32 LocalUserNum, const class FString& ChannelName, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeMessaging ResultCode)>& Delegate);
	EProsdkErrorCodeReports ReportUser(int32 LocalUserNum, const struct FReportToUser& Report, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeReports ErrCode, const struct FReportResult& Result)>& Delegate);
	EProsdkErrorCodeMessaging SendTextToChannel(int32 LocalUserNum, const class FString& ChannelName, const class FString& MsgText);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Hydra5MessagingService">();
	}
	static class UHydra5MessagingService* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHydra5MessagingService>();
	}
};
static_assert(alignof(UHydra5MessagingService) == 0x000008, "Wrong alignment on UHydra5MessagingService");
static_assert(sizeof(UHydra5MessagingService) == 0x0000C8, "Wrong size on UHydra5MessagingService");
static_assert(offsetof(UHydra5MessagingService, OnHydraMessagingServiceStateChange) == 0x000028, "Member 'UHydra5MessagingService::OnHydraMessagingServiceStateChange' has a wrong offset!");
static_assert(offsetof(UHydra5MessagingService, OnIncomingMessages) == 0x000038, "Member 'UHydra5MessagingService::OnIncomingMessages' has a wrong offset!");

// Class Hydra5.Hydra5PresenceService
// 0x0168 (0x0190 - 0x0028)
class UHydra5PresenceService final : public UObject
{
public:
	TMulticastInlineDelegate<void(int32 LocalUserNum, EProsServiceState State, EProsdkErrorCodePresence ResultCode, const class FString& Message)> OnHydraPresenceServiceStateChange; // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 LocalUserNum, const struct FPresenceUserPresenceData& Data)> OnPresenceUserPresenceDataUpdated; // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x30];                                      // 0x0048(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(int32 LocalUserNum, const struct FPartyStatus& PartyStatus, const struct FPartyStatusUpdateReason& Reason)> OnPartyUpdated; // 0x0078(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 LocalUserNum, const class FString& UserId, const EHydra5InviteEventType& EventType)> OnPartyGetInviteEvent; // 0x0088(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_98[0x30];                                      // 0x0098(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(int32 LocalUserNum, const struct FMatchmakeSessionStatus& Status, const struct FMatchmakeSessionStatusUpdateReasons& Reason)> OnMatchmakeSessionUpdated; // 0x00C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_D8[0x18];                                      // 0x00D8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(int32 LocalUserNum, const struct FPresencePenaltyInfo& Info)> OnMatchmakeGetPenalty; // 0x00F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_100[0x18];                                     // 0x0100(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(int32 LocalUserNum, const struct FPresencePendingInfo& Info)> OnMatchmakeGetPending; // 0x0118(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_128[0x68];                                     // 0x0128(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UHydra5PresenceService* Get();
	static class UHydra5PresenceService* TryGet();

	void Connect(int32 LocalUserNum, const class FString& StaticData);
	void Disconnect(int32 LocalUserNum);
	EProsdkErrorCodePresence GetUsersPresenceData(int32 LocalUserNum, const TArray<class FString>& UserIDs, const TDelegate<void(EProsdkErrorCodePresence ResultCode, const struct FPresenceUsersPresence& Data)>& Delegate);
	EProsdkErrorCodePresence MatchmakeBrowseSessions(int32 LocalUserNum, const struct FMatchmakeSessionBrowseRequest& Request, const TDelegate<void(int32 LocalUserNum, const struct FMatchmakeSessionBrowseResult& Result)>& Delegate);
	EProsdkErrorCodePresence MatchmakeGenerateJoinCode(int32 LocalUserNum, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	EProsdkErrorCodePresence MatchmakeJoinCodeReset(int32 LocalUserNum, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	EProsdkErrorCodePresence MatchmakeJoinCodeUse(int32 LocalUserNum, const class FString& JoinCode, const class FString& RatingId, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	EProsdkErrorCodePresence MatchmakeSessionChangeTeam(int32 LocalUserNum, const TArray<class FString>& UserIDs, int32 TeamID, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	EProsdkErrorCodePresence MatchmakeSessionCreate(int32 LocalUserNum, const struct FMatchmakeSessionCreateOptions& Options, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	struct FMatchmakeTurnServerResult MatchmakeSessionGetConnectionInfoTurnServer(int32 LocalUserNum);
	EProsdkErrorCodePresence MatchmakeSessionGetInfo(int32 LocalUserNum, const class FString& SessionId, const TDelegate<void(int32 LocalUserNum, const struct FMatchmakeSessionInfo& Info)>& Delegate);
	struct FMatchmakeSessionStatus MatchmakeSessionGetStatus(int32 LocalUserNum);
	EProsdkErrorCodePresence MatchmakeSessionGetTurnServer(int32 LocalUserNum, const TDelegate<void(int32 LocalUserNum, const struct FTurnServerConnectionInfo& Info, EProsdkErrorCodePresence ResultCode)>& Delegate);
	EProsdkErrorCodePresence MatchmakeSessionJoin(int32 LocalUserNum, const class FString& SessionId, const class FString& RatingId, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	EProsdkErrorCodePresence MatchmakeSessionLeave(int32 LocalUserNum, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	EProsdkErrorCodePresence MatchmakeSessionPendingAccept(int32 LocalUserNum, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	EProsdkErrorCodePresence MatchmakeSessionPendingDecline(int32 LocalUserNum, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	EProsdkErrorCodePresence MatchmakeSessionRemoveMembers(int32 LocalUserNum, const TArray<class FString>& UserIDs, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	EProsdkErrorCodePresence MatchmakeSessionSetData(int32 LocalUserNum, const class FString& Data);
	EProsdkErrorCodePresence MatchmakeSessionSetMemberData(int32 LocalUserNum, const class FString& Data);
	EProsdkErrorCodePresence MatchmakeSessionSetOwner(int32 LocalUserNum, const class FString& UserId, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	EProsdkErrorCodePresence MatchmakeSessionSetSettings(int32 LocalUserNum, const struct FMatchmakeSessionSettings& Settings);
	EProsdkErrorCodePresence MatchmakeSessionSetVariants(int32 LocalUserNum, const TArray<struct FProsSdkKeyValue>& Variants);
	EProsdkErrorCodePresence MatchmakeSessionTerminate(int32 LocalUserNum, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	EProsdkErrorCodePresence MatchmakeStart(int32 LocalUserNum, const struct FMatchmakeQueueOptions& Options, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	EProsdkErrorCodePresence MatchmakeStop(int32 LocalUserNum, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	EProsdkErrorCodePresence PartyCreate(int32 LocalUserNum, const struct FPartyCreateData& Data, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	EProsdkErrorCodePresence PartyDisband(int32 LocalUserNum, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	TArray<class FString> PartyGetInvitedUsers(int32 LocalUserNum);
	TArray<class FString> PartyGetReceivedInvites(int32 LocalUserNum);
	struct FPartyStatus PartyGetStatus(int32 LocalUserNum);
	EProsdkErrorCodePresence PartyInviteAccept(int32 LocalUserNum, const class FString& UserIDFrom, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	EProsdkErrorCodePresence PartyInviteReject(int32 LocalUserNum, const class FString& UserIDFrom, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	EProsdkErrorCodePresence PartyInviteRevoke(int32 LocalUserNum, const class FString& UserIDTo, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	EProsdkErrorCodePresence PartyInviteSend(int32 LocalUserNum, const class FString& UserIDTo, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	bool PartyIsSwitchOpInProgress(int32 LocalUserNum);
	EProsdkErrorCodePresence PartyJoin(int32 LocalUserNum, const class FString& UserId, bool PerformUserSessionCheck, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	EProsdkErrorCodePresence PartyJoinCodeGenerate(int32 LocalUserNum, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	EProsdkErrorCodePresence PartyJoinCodeReset(int32 LocalUserNum, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	EProsdkErrorCodePresence PartyJoinCodeUse(int32 LocalUserNum, const class FString& JoinCode, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	EProsdkErrorCodePresence PartyLeave(int32 LocalUserNum, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	EProsdkErrorCodePresence PartyRemoveMember(int32 LocalUserNum, const class FString& UserId, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	EProsdkErrorCodePresence PartySetData(int32 LocalUserNum, const class FString& Data);
	EProsdkErrorCodePresence PartySetLeader(int32 LocalUserNum, const class FString& UserId, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	EProsdkErrorCodePresence PartySetMemberData(int32 LocalUserNum, const class FString& Data);
	EProsdkErrorCodePresence PartySetSettings(int32 LocalUserNum, const struct FPartySettings& Settings, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePresence ResultCode)>& Delegate);
	bool RetreiveCachedUserPresenceData(int32 LocalUserNum, const class FString& UserId, struct FPresenceUserPresenceData* OutData);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Hydra5PresenceService">();
	}
	static class UHydra5PresenceService* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHydra5PresenceService>();
	}
};
static_assert(alignof(UHydra5PresenceService) == 0x000008, "Wrong alignment on UHydra5PresenceService");
static_assert(sizeof(UHydra5PresenceService) == 0x000190, "Wrong size on UHydra5PresenceService");
static_assert(offsetof(UHydra5PresenceService, OnHydraPresenceServiceStateChange) == 0x000028, "Member 'UHydra5PresenceService::OnHydraPresenceServiceStateChange' has a wrong offset!");
static_assert(offsetof(UHydra5PresenceService, OnPresenceUserPresenceDataUpdated) == 0x000038, "Member 'UHydra5PresenceService::OnPresenceUserPresenceDataUpdated' has a wrong offset!");
static_assert(offsetof(UHydra5PresenceService, OnPartyUpdated) == 0x000078, "Member 'UHydra5PresenceService::OnPartyUpdated' has a wrong offset!");
static_assert(offsetof(UHydra5PresenceService, OnPartyGetInviteEvent) == 0x000088, "Member 'UHydra5PresenceService::OnPartyGetInviteEvent' has a wrong offset!");
static_assert(offsetof(UHydra5PresenceService, OnMatchmakeSessionUpdated) == 0x0000C8, "Member 'UHydra5PresenceService::OnMatchmakeSessionUpdated' has a wrong offset!");
static_assert(offsetof(UHydra5PresenceService, OnMatchmakeGetPenalty) == 0x0000F0, "Member 'UHydra5PresenceService::OnMatchmakeGetPenalty' has a wrong offset!");
static_assert(offsetof(UHydra5PresenceService, OnMatchmakeGetPending) == 0x000118, "Member 'UHydra5PresenceService::OnMatchmakeGetPending' has a wrong offset!");

// Class Hydra5.Hydra5PrivacyService
// 0x0000 (0x0028 - 0x0028)
class UHydra5PrivacyService final : public UObject
{
public:
	static class UHydra5PrivacyService* Get();

	EProsdkErrorCodePrivacy BlockUser(int32 LocalUserNum, const class FString& UserId, const TArray<EHydra5BlockCommunicationType>& Types, const class FString& CustomData, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePrivacy ResultCode)>& Delegate);
	EProsdkErrorCodePrivacy FillBlockListFromCache(int32 LocalUserNum, struct FHy5PrivacyBlockList* OutBlockList);
	EProsdkErrorCodePrivacy GetBlockList(int32 LocalUserNum, int32 From, int32 MaxCount, const TDelegate<void(int32 LocalUserNum, const struct FHy5PrivacyBlockList& List, EProsdkErrorCodePrivacy ResultCode)>& Delegate);
	EProsdkErrorCodePrivacy GetBlockListFromCache(int32 LocalUserNum, const TDelegate<void(int32 LocalUserNum, const struct FHy5PrivacyBlockList& List, EProsdkErrorCodePrivacy ResultCode)>& Delegate);
	EProsdkErrorCodePrivacy SetCommunicationType(int32 LocalUserNum, EHydra5PrivacyType Type, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePrivacy ResultCode)>& Delegate);
	EProsdkErrorCodePrivacy UnblockUser(int32 LocalUserNum, const class FString& UserId, const TArray<EHydra5BlockCommunicationType>& Types, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePrivacy ResultCode)>& Delegate);
	EProsdkErrorCodePrivacy UpdateBlockedUser(int32 LocalUserNum, const class FString& UserId, const class FString& CustomData, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodePrivacy ResultCode)>& Delegate);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Hydra5PrivacyService">();
	}
	static class UHydra5PrivacyService* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHydra5PrivacyService>();
	}
};
static_assert(alignof(UHydra5PrivacyService) == 0x000008, "Wrong alignment on UHydra5PrivacyService");
static_assert(sizeof(UHydra5PrivacyService) == 0x000028, "Wrong size on UHydra5PrivacyService");

// Class Hydra5.Hydra5RatingsService
// 0x0000 (0x0028 - 0x0028)
class UHydra5RatingsService final : public UObject
{
public:
	static class UHydra5RatingsService* Get();

	EProsdkErrorCodeRatings ClientRatingsGet(int32 LocalUserNum, const class FString& RatingId, const TArray<class FString>& EntryIds, const TDelegate<void(int32 LocalUserNum, const TArray<struct FRatingsEntry>& Entries, EProsdkErrorCodeRatings ErrorCode)>& Delegate);
	EProsdkErrorCodeRatings ClientRatingsGetOwn(int32 LocalUserNum, const TArray<class FString>& RatingIds, bool IsIncludeHistory, const TDelegate<void(int32 LocalUserNum, const TArray<struct FRatingsEntry>& Entries, EProsdkErrorCodeRatings ErrorCode)>& Delegate);
	EProsdkErrorCodeRatings ClientRatingsUpdate(int32 LocalUserNum, const class FString& RatingId, const class FString& SessionId, const TArray<struct FRatingsUpdateEntry>& Entries, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeRatings ErrorCode)>& Delegate);
	EProsdkErrorCodeRatings ClientRatingsUpdateIndividual(int32 LocalUserNum, const class FString& RatingId, const class FString& SessionId, const TArray<struct FRatingsUpdateEntryIndividual>& Entries, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeRatings ErrorCode)>& Delegate);
	EProsdkErrorCodeRatings ClientRatingsUpdateTeam(int32 LocalUserNum, const class FString& RatingId, const class FString& SessionId, const TArray<struct FRatingsUpdateEntryTeam>& Entries, const TDelegate<void(int32 LocalUserNum, EProsdkErrorCodeRatings ErrorCode)>& Delegate);
	EProsdkErrorCodeRatings ServerRatingsGet(const class FString& RatingId, const TArray<class FString>& EntryIds, const TDelegate<void(const TArray<struct FRatingsEntry>& Entries, EProsdkErrorCodeRatings ErrorCode)>& Delegate);
	EProsdkErrorCodeRatings ServerRatingsUpdate(const class FString& RatingId, const TArray<struct FRatingsUpdateEntry>& Entries, const TDelegate<void(EProsdkErrorCodeRatings ErrorCode)>& Delegate);
	EProsdkErrorCodeRatings ServerRatingsUpdateIndividual(const class FString& RatingId, const TArray<struct FRatingsUpdateEntryIndividual>& Entries, const TDelegate<void(EProsdkErrorCodeRatings ErrorCode)>& Delegate);
	EProsdkErrorCodeRatings ServerRatingsUpdateTeam(const class FString& RatingId, const TArray<struct FRatingsUpdateEntryTeam>& Entries, const TDelegate<void(EProsdkErrorCodeRatings ErrorCode)>& Delegate);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Hydra5RatingsService">();
	}
	static class UHydra5RatingsService* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHydra5RatingsService>();
	}
};
static_assert(alignof(UHydra5RatingsService) == 0x000008, "Wrong alignment on UHydra5RatingsService");
static_assert(sizeof(UHydra5RatingsService) == 0x000028, "Wrong size on UHydra5RatingsService");

// Class Hydra5.RedstoneSocketService
// 0x00E0 (0x0108 - 0x0028)
class URedstoneSocketService final : public UObject
{
public:
	uint8                                         Pad_28[0xE0];                                      // 0x0028(0x00E0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RedstoneSocketService">();
	}
	static class URedstoneSocketService* GetDefaultObj()
	{
		return GetDefaultObjImpl<URedstoneSocketService>();
	}
};
static_assert(alignof(URedstoneSocketService) == 0x000008, "Wrong alignment on URedstoneSocketService");
static_assert(sizeof(URedstoneSocketService) == 0x000108, "Wrong size on URedstoneSocketService");

// Class Hydra5.Hydra5ServerService
// 0x00B0 (0x00D8 - 0x0028)
class UHydra5ServerService final : public UObject
{
public:
	TMulticastInlineDelegate<void(const struct FClientData& ClientData)> OnClientConnectingTicket;   // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(EProsdkErrorCodeAuthorization ErrorCode)> OnFinishSession;         // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x30];                                      // 0x0048(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(EProsServiceState State, EProsdkErrorCodeAuthorization ResultCode, const class FString& Message)> OnHydraServerServiceStateChanged; // 0x0078(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_88[0x50];                                      // 0x0088(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UHydra5ServerService* Get();
	static bool IsAvailable();
	static EProsServiceState ServerGetConnectionState();
	static EProsServiceState StandaloneGetConnectionState();
	static class UHydra5ServerService* TryGet();

	void ClientAccept(const class FString& Key);
	EProsdkErrorCodeSessionControl ClientContinueStandaloneBrowse(int32 LocalUserNum, const struct FHy5StandaloneContinuationToken& ContinuationToken, const TDelegate<void(int32 LocalUserNum, const struct FStandaloneBrowseResult& BrowseResult, EProsdkErrorCodeSessionControl ErrorCode)>& Delegate);
	void ClientReject(const class FString& Key);
	EProsdkErrorCodeSessionControl ClientRequestStandaloneBrowse(int32 LocalUserNum, int32 MaxResults, const TDelegate<void(int32 LocalUserNum, const struct FStandaloneBrowseResult& BrowseResult, EProsdkErrorCodeSessionControl ErrorCode)>& Delegate);
	EProsdkErrorCodeSessionControl ClientRequestStandaloneSignInCode(int32 LocalUserNum, const TDelegate<void(int32 LocalUserNum, const class FString& SignInCode, EProsdkErrorCodeSessionControl ErrorCode)>& Delegate);
	EProsdkErrorCodeAuthorization DsmInfoGameFinished();
	EProsdkErrorCodeAuthorization DsmInfoGameStarted();
	EProsdkErrorCodeAuthorization DsmInfoSetTagFloat(const class FString& Tag, float Value);
	EProsdkErrorCodeAuthorization DsmInfoSetTagGameMap(const class FString& Value);
	EProsdkErrorCodeAuthorization DsmInfoSetTagGameMode(const class FString& Value);
	EProsdkErrorCodeAuthorization DsmInfoSetTagInt(const class FString& Tag, int32 Value);
	EProsdkErrorCodeAuthorization DsmInfoSetTagPlayersCount(int32 Value);
	EProsdkErrorCodeAuthorization DsmInfoSetTagString(const class FString& Tag, const class FString& Value);
	EProsdkErrorCodeAuthorization FinishSession();
	struct FServerData GetActivationData();
	class FString GetDSMEndPoint();
	bool GetDSMIsSecure();
	class FString GetServerSecret();
	class FString GetStandaloneSecret();
	bool OldServerCreateOnce(const struct FServerCreateOnceOptions& InOptions);
	EProsdkErrorCodeAuthorization ServerCreateOnce(const struct FServerCreateOnceOptions& InOptions);
	bool ServerCreateOnceFromConfig();
	void ServerDisconnect();
	class FString ServerGetAccessToken();
	struct FServerContextData ServerGetContextData();
	int64 ServerGetContextSize();
	class FString ServerGetKernelSessionIdString();
	class FString ServerGetKernelSessionIdVisualAlias();
	struct FPluginEndpoint ServerGetPluginEndpoint(const class FString& PluginName);
	bool ServerIsCreated();
	EProsdkErrorCodeAuthorization ServerRemoveMembers(const TArray<class FString>& Users, const TDelegate<void(EProsdkErrorCodeAuthorization ResultCode)>& Delegate);
	EProsdkErrorCodeAuthorization ServerRequestPendingUsers(const TDelegate<void(const struct FServerPendingUsersResult& UsersResult)>& Delegate);
	EProsdkErrorCodeAuthorization ServerSetPendingMember(const class FString& UserId, const TDelegate<void(EProsdkErrorCodeAuthorization ResultCode)>& Delegate);
	EProsdkErrorCodeAuthorization SignInHeated(const struct FServerHeatedOptions& Options);
	EProsdkErrorCodeAuthorization SimpleActivate(const struct FServerSimpleInitOptions& ServerInitOptions);
	EProsdkErrorCodeAuthorization StandaloneConnectWithCode(const struct FStandaloneServerData& Options, const class FString& Code);
	bool StandaloneCreateOnce(const class FString& TitleSecret, const TArray<struct FPluginVersioned>& Plugins);
	bool StandaloneCreateOnceFromConfig();
	struct FStandaloneSessionData StandaloneCreateSessionData(const class FString& Name_0);
	void StandaloneDisconnect();
	EProsdkErrorCodeAuthorization StandaloneEnableDynastyMode(bool bIsErrorFreeModeEnabled);
	class FString StandaloneGetAccessToken();
	struct FServerContextData StandaloneGetContextData();
	int64 StandaloneGetContextSize();
	class FString StandaloneGetKernelSessionIdString();
	class FString StandaloneGetKernelSessionIdVisualAlias();
	struct FPluginEndpoint StandaloneGetPluginEndpoint(const class FString& PluginName);
	bool StandaloneIsCreated();
	EProsdkErrorCodeAuthorization StandaloneSetSessionData(const struct FStandaloneSessionData& SessionData);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Hydra5ServerService">();
	}
	static class UHydra5ServerService* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHydra5ServerService>();
	}
};
static_assert(alignof(UHydra5ServerService) == 0x000008, "Wrong alignment on UHydra5ServerService");
static_assert(sizeof(UHydra5ServerService) == 0x0000D8, "Wrong size on UHydra5ServerService");
static_assert(offsetof(UHydra5ServerService, OnClientConnectingTicket) == 0x000028, "Member 'UHydra5ServerService::OnClientConnectingTicket' has a wrong offset!");
static_assert(offsetof(UHydra5ServerService, OnFinishSession) == 0x000038, "Member 'UHydra5ServerService::OnFinishSession' has a wrong offset!");
static_assert(offsetof(UHydra5ServerService, OnHydraServerServiceStateChanged) == 0x000078, "Member 'UHydra5ServerService::OnHydraServerServiceStateChanged' has a wrong offset!");

// Class Hydra5.Hydra5ServerServiceTurn
// 0x0000 (0x0028 - 0x0028)
class UHydra5ServerServiceTurn final : public UObject
{
public:
	static class UHydra5ServerServiceTurn* Get();

	EProsdkErrorCodeDefault GetTurnConnection(const struct FTurnConnectionManual& ConnectionManual, const TDelegate<void(const struct FTurnServerConnectionInfo& Info, EProsdkErrorCodeDefault ResultCode)>& Delegate);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Hydra5ServerServiceTurn">();
	}
	static class UHydra5ServerServiceTurn* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHydra5ServerServiceTurn>();
	}
};
static_assert(alignof(UHydra5ServerServiceTurn) == 0x000008, "Wrong alignment on UHydra5ServerServiceTurn");
static_assert(sizeof(UHydra5ServerServiceTurn) == 0x000028, "Wrong size on UHydra5ServerServiceTurn");

// Class Hydra5.Hydra5SessionControlService
// 0x0038 (0x0060 - 0x0028)
class UHydra5SessionControlService final : public UObject
{
public:
	TMulticastInlineDelegate<void(const class FString& GameSessionId, const struct FSessionControlAcceptClientResult& Result, EProsdkErrorCodeSessionControl Error)> OnSessionClientAcceptResult; // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x28];                                      // 0x0038(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UHydra5SessionControlService* Get();

	EProsdkErrorCodeSessionControl GetAllDataCenters(int32 LocalUserNum, const TDelegate<void(int32 LocalUserNum, const TArray<struct FSessionControlDataCenter>& DataCenters, EProsdkErrorCodeSessionControl ResultCode)>& Delegate);
	EProsdkErrorCodeSessionControl GetAvailableDataCenters(int32 LocalUserNum, const TDelegate<void(int32 LocalUserNum, const TArray<struct FSessionControlDataCenter>& DataCenters, EProsdkErrorCodeSessionControl ResultCode)>& Delegate);
	struct FSessionControlAcceptClientResult GetCachedPolingServerResult(int32 LocalUserNum, const class FString& GameSessionId);
	EProsdkErrorCodeSessionControl StartPollingServer(int32 LocalUserNum, const class FString& GameSessionId);
	EProsdkErrorCodeSessionControl StopPollingServer(int32 LocalUserNum, const class FString& GameSessionId);
	EProsdkErrorCodeSessionControl TryToCreateSession(int32 LocalUserNum, const class FString& DataCenterId, const class FString& ServerData, bool bStartPoling, const TDelegate<void(int32 LocalUserNum, const class FString& GameSessionId, EProsdkErrorCodeSessionControl ResultCode)>& Delegate);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Hydra5SessionControlService">();
	}
	static class UHydra5SessionControlService* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHydra5SessionControlService>();
	}
};
static_assert(alignof(UHydra5SessionControlService) == 0x000008, "Wrong alignment on UHydra5SessionControlService");
static_assert(sizeof(UHydra5SessionControlService) == 0x000060, "Wrong size on UHydra5SessionControlService");
static_assert(offsetof(UHydra5SessionControlService, OnSessionClientAcceptResult) == 0x000028, "Member 'UHydra5SessionControlService::OnSessionClientAcceptResult' has a wrong offset!");

// Class Hydra5.Hydra5SignalingService
// 0x0028 (0x0050 - 0x0028)
class UHydra5SignalingService final : public UObject
{
public:
	TMulticastInlineDelegate<void(int32 LocalUserNum, EProsServiceState State, EProsdkErrorCodeDefault ResultCode, const class FString& Message)> OnHydraSignalingServiceStateChange; // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                         Pad_38[0x18];                                      // 0x0038(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UHydra5SignalingService* Get();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Hydra5SignalingService">();
	}
	static class UHydra5SignalingService* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHydra5SignalingService>();
	}
};
static_assert(alignof(UHydra5SignalingService) == 0x000008, "Wrong alignment on UHydra5SignalingService");
static_assert(sizeof(UHydra5SignalingService) == 0x000050, "Wrong size on UHydra5SignalingService");
static_assert(offsetof(UHydra5SignalingService, OnHydraSignalingServiceStateChange) == 0x000028, "Member 'UHydra5SignalingService::OnHydraSignalingServiceStateChange' has a wrong offset!");

// Class Hydra5.Hydra5TournamentsService
// 0x0000 (0x0028 - 0x0028)
class UHydra5TournamentsService final : public UObject
{
public:
	static class UHydra5TournamentsService* Get();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Hydra5TournamentsService">();
	}
	static class UHydra5TournamentsService* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHydra5TournamentsService>();
	}
};
static_assert(alignof(UHydra5TournamentsService) == 0x000008, "Wrong alignment on UHydra5TournamentsService");
static_assert(sizeof(UHydra5TournamentsService) == 0x000028, "Wrong size on UHydra5TournamentsService");

// Class Hydra5.Hydra5UserService
// 0x0000 (0x0028 - 0x0028)
class UHydra5UserService final : public UObject
{
public:
	static class UHydra5UserService* Get();

	EProsdkErrorCodeDefault GetPlatformOnlineServicesUserIdByUserId(int32 LocalUserNum, EProsProvider Provider, const TArray<class FString>& Hydra5UserIds, const TDelegate<void(int32 LocalUserNum, const TArray<struct FUserIdentityResolveResult>& Results, EProsdkErrorCodeDefault ResultCode)>& Delegate);
	EProsdkErrorCodeDefault GetUserIdByPlatformOnlineServicesUserId(int32 LocalUserNum, EProsProvider Provider, const TArray<class FString>& PlatformIds, const TDelegate<void(int32 LocalUserNum, const TArray<struct FUserIdentityResolveResult>& Results, EProsdkErrorCodeDefault ResultCode)>& Delegate);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Hydra5UserService">();
	}
	static class UHydra5UserService* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHydra5UserService>();
	}
};
static_assert(alignof(UHydra5UserService) == 0x000008, "Wrong alignment on UHydra5UserService");
static_assert(sizeof(UHydra5UserService) == 0x000028, "Wrong size on UHydra5UserService");

// Class Hydra5.Hydra5UserServiceTurn
// 0x0000 (0x0028 - 0x0028)
class UHydra5UserServiceTurn final : public UObject
{
public:
	static class UHydra5UserServiceTurn* Get();

	EProsdkErrorCodeDefault GetTurnConnection(int32 LocalUserNum, const struct FTurnConnectionManual& ConnectionManual, const TDelegate<void(int32 LocalUserNum, const struct FTurnServerConnectionInfo& Info, EProsdkErrorCodeDefault ResultCode)>& Delegate);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Hydra5UserServiceTurn">();
	}
	static class UHydra5UserServiceTurn* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHydra5UserServiceTurn>();
	}
};
static_assert(alignof(UHydra5UserServiceTurn) == 0x000008, "Wrong alignment on UHydra5UserServiceTurn");
static_assert(sizeof(UHydra5UserServiceTurn) == 0x000028, "Wrong size on UHydra5UserServiceTurn");

}

