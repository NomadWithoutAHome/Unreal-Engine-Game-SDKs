#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DYN_Vehicle_RocketBuggy

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_Vehicle_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DYN_Vehicle_RocketBuggy.BP_DYN_Vehicle_RocketBuggy_C
// 0x0060 (0x1D30 - 0x1CD0)
class ABP_DYN_Vehicle_RocketBuggy_C final : public ABP_Vehicle_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_DYN_Vehicle_RocketBuggy_C;       // 0x1CD0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTedPawnContainerComponent*             TedPawnContainer;                                  // 0x1CD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_SmokeVehicleDamagedHeavy;                       // 0x1CE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_SmokeVehicleDamagedMedium;                      // 0x1CE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_SmokeVehicleDamagedLight;                       // 0x1CF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_TracksMark_All;                                 // 0x1CF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_DamageSmoke;                                    // 0x1D00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Exhaust;                                        // 0x1D08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    FrontLight_2;                                      // 0x1D10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    FrontLight_1;                                      // 0x1D18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        DirtCurrent;                                       // 0x1D20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_DYN_Vehicle_RocketBuggy(int32 EntryPoint);
	void ReceiveBeginMovement();
	void ReceiveEndMovement();
	void ReceiveOnDeath();
	void ReceiveUpdateHealthEffects(float HealthPct);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DYN_Vehicle_RocketBuggy_C">();
	}
	static class ABP_DYN_Vehicle_RocketBuggy_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DYN_Vehicle_RocketBuggy_C>();
	}
};
static_assert(alignof(ABP_DYN_Vehicle_RocketBuggy_C) == 0x000010, "Wrong alignment on ABP_DYN_Vehicle_RocketBuggy_C");
static_assert(sizeof(ABP_DYN_Vehicle_RocketBuggy_C) == 0x001D30, "Wrong size on ABP_DYN_Vehicle_RocketBuggy_C");
static_assert(offsetof(ABP_DYN_Vehicle_RocketBuggy_C, UberGraphFrame_BP_DYN_Vehicle_RocketBuggy_C) == 0x001CD0, "Member 'ABP_DYN_Vehicle_RocketBuggy_C::UberGraphFrame_BP_DYN_Vehicle_RocketBuggy_C' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Vehicle_RocketBuggy_C, TedPawnContainer) == 0x001CD8, "Member 'ABP_DYN_Vehicle_RocketBuggy_C::TedPawnContainer' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Vehicle_RocketBuggy_C, PS_SmokeVehicleDamagedHeavy) == 0x001CE0, "Member 'ABP_DYN_Vehicle_RocketBuggy_C::PS_SmokeVehicleDamagedHeavy' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Vehicle_RocketBuggy_C, PS_SmokeVehicleDamagedMedium) == 0x001CE8, "Member 'ABP_DYN_Vehicle_RocketBuggy_C::PS_SmokeVehicleDamagedMedium' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Vehicle_RocketBuggy_C, PS_SmokeVehicleDamagedLight) == 0x001CF0, "Member 'ABP_DYN_Vehicle_RocketBuggy_C::PS_SmokeVehicleDamagedLight' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Vehicle_RocketBuggy_C, PS_TracksMark_All) == 0x001CF8, "Member 'ABP_DYN_Vehicle_RocketBuggy_C::PS_TracksMark_All' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Vehicle_RocketBuggy_C, NS_DamageSmoke) == 0x001D00, "Member 'ABP_DYN_Vehicle_RocketBuggy_C::NS_DamageSmoke' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Vehicle_RocketBuggy_C, NS_Exhaust) == 0x001D08, "Member 'ABP_DYN_Vehicle_RocketBuggy_C::NS_Exhaust' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Vehicle_RocketBuggy_C, FrontLight_2) == 0x001D10, "Member 'ABP_DYN_Vehicle_RocketBuggy_C::FrontLight_2' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Vehicle_RocketBuggy_C, FrontLight_1) == 0x001D18, "Member 'ABP_DYN_Vehicle_RocketBuggy_C::FrontLight_1' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Vehicle_RocketBuggy_C, DirtCurrent) == 0x001D20, "Member 'ABP_DYN_Vehicle_RocketBuggy_C::DirtCurrent' has a wrong offset!");

}

