#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MissionClock

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_MissionClock.WBP_MissionClock_C.DisplayCentralTimerNotification
// 0x0008 (0x0008 - 0x0000)
struct WBP_MissionClock_C_DisplayCentralTimerNotification final
{
public:
	struct FTimespan                              InTime;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MissionClock_C_DisplayCentralTimerNotification) == 0x000008, "Wrong alignment on WBP_MissionClock_C_DisplayCentralTimerNotification");
static_assert(sizeof(WBP_MissionClock_C_DisplayCentralTimerNotification) == 0x000008, "Wrong size on WBP_MissionClock_C_DisplayCentralTimerNotification");
static_assert(offsetof(WBP_MissionClock_C_DisplayCentralTimerNotification, InTime) == 0x000000, "Member 'WBP_MissionClock_C_DisplayCentralTimerNotification::InTime' has a wrong offset!");

// Function WBP_MissionClock.WBP_MissionClock_C.ExecuteUbergraph_WBP_MissionClock
// 0x0020 (0x0020 - 0x0000)
struct WBP_MissionClock_C_ExecuteUbergraph_WBP_MissionClock final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              K2Node_Event_InTime;                               // 0x0008(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_StartThemed_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MissionClock_C_ExecuteUbergraph_WBP_MissionClock) == 0x000008, "Wrong alignment on WBP_MissionClock_C_ExecuteUbergraph_WBP_MissionClock");
static_assert(sizeof(WBP_MissionClock_C_ExecuteUbergraph_WBP_MissionClock) == 0x000020, "Wrong size on WBP_MissionClock_C_ExecuteUbergraph_WBP_MissionClock");
static_assert(offsetof(WBP_MissionClock_C_ExecuteUbergraph_WBP_MissionClock, EntryPoint) == 0x000000, "Member 'WBP_MissionClock_C_ExecuteUbergraph_WBP_MissionClock::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MissionClock_C_ExecuteUbergraph_WBP_MissionClock, K2Node_Event_InTime) == 0x000008, "Member 'WBP_MissionClock_C_ExecuteUbergraph_WBP_MissionClock::K2Node_Event_InTime' has a wrong offset!");
static_assert(offsetof(WBP_MissionClock_C_ExecuteUbergraph_WBP_MissionClock, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WBP_MissionClock_C_ExecuteUbergraph_WBP_MissionClock::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionClock_C_ExecuteUbergraph_WBP_MissionClock, CallFunc_K2_StartThemed_ReturnValue) == 0x000018, "Member 'WBP_MissionClock_C_ExecuteUbergraph_WBP_MissionClock::CallFunc_K2_StartThemed_ReturnValue' has a wrong offset!");

// Function WBP_MissionClock.WBP_MissionClock_C.GetDigitBrush
// 0x01C0 (0x01C0 - 0x0000)
struct WBP_MissionClock_C_GetDigitBrush final
{
public:
	int32                                         Digit;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            NewBrush;                                          // 0x0010(0x00D0)(Parm, OutParm)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E8[0x8];                                       // 0x00E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_MakeBrushFromMaterial_ReturnValue;        // 0x00F0(0x00D0)()
};
static_assert(alignof(WBP_MissionClock_C_GetDigitBrush) == 0x000010, "Wrong alignment on WBP_MissionClock_C_GetDigitBrush");
static_assert(sizeof(WBP_MissionClock_C_GetDigitBrush) == 0x0001C0, "Wrong size on WBP_MissionClock_C_GetDigitBrush");
static_assert(offsetof(WBP_MissionClock_C_GetDigitBrush, Digit) == 0x000000, "Member 'WBP_MissionClock_C_GetDigitBrush::Digit' has a wrong offset!");
static_assert(offsetof(WBP_MissionClock_C_GetDigitBrush, NewBrush) == 0x000010, "Member 'WBP_MissionClock_C_GetDigitBrush::NewBrush' has a wrong offset!");
static_assert(offsetof(WBP_MissionClock_C_GetDigitBrush, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'WBP_MissionClock_C_GetDigitBrush::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MissionClock_C_GetDigitBrush, CallFunc_MakeBrushFromMaterial_ReturnValue) == 0x0000F0, "Member 'WBP_MissionClock_C_GetDigitBrush::CallFunc_MakeBrushFromMaterial_ReturnValue' has a wrong offset!");

// Function WBP_MissionClock.WBP_MissionClock_C.UpdateDigits
// 0x0370 (0x0370 - 0x0000)
struct WBP_MissionClock_C_UpdateDigits final
{
public:
	struct FTimespan                              Time_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSeconds_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMinutes_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_GetDigitBrush_NewBrush;                   // 0x0020(0x00D0)()
	struct FSlateBrush                            CallFunc_GetDigitBrush_NewBrush_1;                 // 0x00F0(0x00D0)()
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C8[0x8];                                      // 0x01C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_GetDigitBrush_NewBrush_2;                 // 0x01D0(0x00D0)()
	struct FSlateBrush                            CallFunc_GetDigitBrush_NewBrush_3;                 // 0x02A0(0x00D0)()
};
static_assert(alignof(WBP_MissionClock_C_UpdateDigits) == 0x000010, "Wrong alignment on WBP_MissionClock_C_UpdateDigits");
static_assert(sizeof(WBP_MissionClock_C_UpdateDigits) == 0x000370, "Wrong size on WBP_MissionClock_C_UpdateDigits");
static_assert(offsetof(WBP_MissionClock_C_UpdateDigits, Time_0) == 0x000000, "Member 'WBP_MissionClock_C_UpdateDigits::Time_0' has a wrong offset!");
static_assert(offsetof(WBP_MissionClock_C_UpdateDigits, CallFunc_GetSeconds_ReturnValue) == 0x000008, "Member 'WBP_MissionClock_C_UpdateDigits::CallFunc_GetSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionClock_C_UpdateDigits, CallFunc_GetMinutes_ReturnValue) == 0x00000C, "Member 'WBP_MissionClock_C_UpdateDigits::CallFunc_GetMinutes_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionClock_C_UpdateDigits, CallFunc_Divide_IntInt_ReturnValue) == 0x000010, "Member 'WBP_MissionClock_C_UpdateDigits::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionClock_C_UpdateDigits, CallFunc_Divide_IntInt_ReturnValue_1) == 0x000014, "Member 'WBP_MissionClock_C_UpdateDigits::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MissionClock_C_UpdateDigits, CallFunc_GetDigitBrush_NewBrush) == 0x000020, "Member 'WBP_MissionClock_C_UpdateDigits::CallFunc_GetDigitBrush_NewBrush' has a wrong offset!");
static_assert(offsetof(WBP_MissionClock_C_UpdateDigits, CallFunc_GetDigitBrush_NewBrush_1) == 0x0000F0, "Member 'WBP_MissionClock_C_UpdateDigits::CallFunc_GetDigitBrush_NewBrush_1' has a wrong offset!");
static_assert(offsetof(WBP_MissionClock_C_UpdateDigits, CallFunc_Percent_IntInt_ReturnValue) == 0x0001C0, "Member 'WBP_MissionClock_C_UpdateDigits::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MissionClock_C_UpdateDigits, CallFunc_Percent_IntInt_ReturnValue_1) == 0x0001C4, "Member 'WBP_MissionClock_C_UpdateDigits::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MissionClock_C_UpdateDigits, CallFunc_GetDigitBrush_NewBrush_2) == 0x0001D0, "Member 'WBP_MissionClock_C_UpdateDigits::CallFunc_GetDigitBrush_NewBrush_2' has a wrong offset!");
static_assert(offsetof(WBP_MissionClock_C_UpdateDigits, CallFunc_GetDigitBrush_NewBrush_3) == 0x0002A0, "Member 'WBP_MissionClock_C_UpdateDigits::CallFunc_GetDigitBrush_NewBrush_3' has a wrong offset!");

}

