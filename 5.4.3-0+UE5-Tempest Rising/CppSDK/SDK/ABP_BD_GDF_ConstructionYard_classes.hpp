#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_BD_GDF_ConstructionYard

#include "Basic.hpp"

#include "ABP_BD_GDF_ConstructionYard_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Tempest_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_BD_GDF_ConstructionYard.ABP_BD_GDF_ConstructionYard_C
// 0x0250 (0x05C0 - 0x0370)
class UABP_BD_GDF_ConstructionYard_C final : public UAnimInstance
{
public:
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_BD_GDF_ConstructionYard::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;  // 0x0378(0x000C)(HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0388(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0390(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0398(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x03B8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0400(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0448(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0490(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x04D8(0x00C8)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x05A0(0x0010)()
	bool                                          Powered;                                           // 0x05B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Working;                                           // 0x05B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BD_GDF_ConstructionYard_AnimGraphNode_SequencePlayer_228289D343EB88852CB40A8593EC3512();
	void ExecuteUbergraph_ABP_BD_GDF_ConstructionYard(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_BD_GDF_ConstructionYard_C">();
	}
	static class UABP_BD_GDF_ConstructionYard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_BD_GDF_ConstructionYard_C>();
	}
};
static_assert(alignof(UABP_BD_GDF_ConstructionYard_C) == 0x000010, "Wrong alignment on UABP_BD_GDF_ConstructionYard_C");
static_assert(sizeof(UABP_BD_GDF_ConstructionYard_C) == 0x0005C0, "Wrong size on UABP_BD_GDF_ConstructionYard_C");
static_assert(offsetof(UABP_BD_GDF_ConstructionYard_C, UberGraphFrame) == 0x000370, "Member 'UABP_BD_GDF_ConstructionYard_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_BD_GDF_ConstructionYard_C, __AnimBlueprintMutables) == 0x000378, "Member 'UABP_BD_GDF_ConstructionYard_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_BD_GDF_ConstructionYard_C, AnimBlueprintExtension_PropertyAccess) == 0x000388, "Member 'UABP_BD_GDF_ConstructionYard_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_BD_GDF_ConstructionYard_C, AnimBlueprintExtension_Base) == 0x000390, "Member 'UABP_BD_GDF_ConstructionYard_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_BD_GDF_ConstructionYard_C, AnimGraphNode_Root) == 0x000398, "Member 'UABP_BD_GDF_ConstructionYard_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_BD_GDF_ConstructionYard_C, AnimGraphNode_Slot) == 0x0003B8, "Member 'UABP_BD_GDF_ConstructionYard_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_BD_GDF_ConstructionYard_C, AnimGraphNode_SequencePlayer_1) == 0x000400, "Member 'UABP_BD_GDF_ConstructionYard_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_BD_GDF_ConstructionYard_C, AnimGraphNode_BlendListByBool) == 0x000448, "Member 'UABP_BD_GDF_ConstructionYard_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_BD_GDF_ConstructionYard_C, AnimGraphNode_SequencePlayer) == 0x000490, "Member 'UABP_BD_GDF_ConstructionYard_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_BD_GDF_ConstructionYard_C, AnimGraphNode_ApplyAdditive) == 0x0004D8, "Member 'UABP_BD_GDF_ConstructionYard_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_BD_GDF_ConstructionYard_C, AnimGraphNode_LocalRefPose) == 0x0005A0, "Member 'UABP_BD_GDF_ConstructionYard_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UABP_BD_GDF_ConstructionYard_C, Powered) == 0x0005B0, "Member 'UABP_BD_GDF_ConstructionYard_C::Powered' has a wrong offset!");
static_assert(offsetof(UABP_BD_GDF_ConstructionYard_C, Working) == 0x0005B1, "Member 'UABP_BD_GDF_ConstructionYard_C::Working' has a wrong offset!");

}

