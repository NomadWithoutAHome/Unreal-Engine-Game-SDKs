#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ScoreScreen_Objective_Slot

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Tempest_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_ScoreScreen_Objective_Slot.WBP_ScoreScreen_Objective_Slot_C.ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot
// 0x0150 (0x0150 - 0x0000)
struct WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRequisition_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetObjectiveContentData_OutPrimaryText;   // 0x0008(0x0010)()
	class FText                                   CallFunc_GetObjectiveContentData_OutSecondaryText; // 0x0018(0x0010)()
	EObjectiveState                               CallFunc_GetObjectiveContentData_OutObjectiveState; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UTedObjectiveObj*                 CallFunc_GetObjectiveContentData_ReturnValue;      // 0x0030(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Get_Light_Frame_Material_Out;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Get_Light_Material_Out;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Get_Background_Material_Out;              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetObjectiveContentData_OutPrimaryText_1; // 0x0060(0x0010)()
	class FText                                   CallFunc_GetObjectiveContentData_OutSecondaryText_1; // 0x0070(0x0010)()
	EObjectiveState                               CallFunc_GetObjectiveContentData_OutObjectiveState_1; // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UTedObjectiveObj*                 CallFunc_GetObjectiveContentData_ReturnValue_1;    // 0x0088(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRequisition_ReturnValue_1;             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetObjectiveContentData_OutPrimaryText_2; // 0x00B0(0x0010)()
	class FText                                   CallFunc_GetObjectiveContentData_OutSecondaryText_2; // 0x00C0(0x0010)()
	EObjectiveState                               CallFunc_GetObjectiveContentData_OutObjectiveState_2; // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UTedObjectiveObj*                 CallFunc_GetObjectiveContentData_ReturnValue_2;    // 0x00D8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Get_Background_Material_Out_1;            // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Get_Light_Frame_Material_Out_1;           // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Get_Light_Material_Out_1;                 // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EObjectiveState                               Temp_byte_Variable;                                // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetObjectiveContentData_OutPrimaryText_3; // 0x0118(0x0010)()
	class FText                                   CallFunc_GetObjectiveContentData_OutSecondaryText_3; // 0x0128(0x0010)()
	EObjectiveState                               CallFunc_GetObjectiveContentData_OutObjectiveState_3; // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UTedObjectiveObj*                 CallFunc_GetObjectiveContentData_ReturnValue_3;    // 0x0140(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot) == 0x000008, "Wrong alignment on WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot");
static_assert(sizeof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot) == 0x000150, "Wrong size on WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, EntryPoint) == 0x000000, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_GetRequisition_ReturnValue) == 0x000004, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_GetRequisition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_GetObjectiveContentData_OutPrimaryText) == 0x000008, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_GetObjectiveContentData_OutPrimaryText' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_GetObjectiveContentData_OutSecondaryText) == 0x000018, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_GetObjectiveContentData_OutSecondaryText' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_GetObjectiveContentData_OutObjectiveState) == 0x000028, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_GetObjectiveContentData_OutObjectiveState' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_GetObjectiveContentData_ReturnValue) == 0x000030, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_GetObjectiveContentData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000038, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_Get_Light_Frame_Material_Out) == 0x000040, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_Get_Light_Frame_Material_Out' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_Get_Light_Material_Out) == 0x000048, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_Get_Light_Material_Out' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_Get_Background_Material_Out) == 0x000050, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_Get_Background_Material_Out' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_PlayAnimation_ReturnValue) == 0x000058, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_GetObjectiveContentData_OutPrimaryText_1) == 0x000060, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_GetObjectiveContentData_OutPrimaryText_1' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_GetObjectiveContentData_OutSecondaryText_1) == 0x000070, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_GetObjectiveContentData_OutSecondaryText_1' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_GetObjectiveContentData_OutObjectiveState_1) == 0x000080, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_GetObjectiveContentData_OutObjectiveState_1' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_GetObjectiveContentData_ReturnValue_1) == 0x000088, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_GetObjectiveContentData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000090, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000091, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_GetRequisition_ReturnValue_1) == 0x000094, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_GetRequisition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_BooleanOR_ReturnValue) == 0x000098, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000A0, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, K2Node_Event_IsDesignTime) == 0x0000A8, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_GetObjectiveContentData_OutPrimaryText_2) == 0x0000B0, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_GetObjectiveContentData_OutPrimaryText_2' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_GetObjectiveContentData_OutSecondaryText_2) == 0x0000C0, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_GetObjectiveContentData_OutSecondaryText_2' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_GetObjectiveContentData_OutObjectiveState_2) == 0x0000D0, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_GetObjectiveContentData_OutObjectiveState_2' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_GetObjectiveContentData_ReturnValue_2) == 0x0000D8, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_GetObjectiveContentData_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, Temp_int_Variable) == 0x0000E0, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_Get_Background_Material_Out_1) == 0x0000E8, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_Get_Background_Material_Out_1' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_Get_Light_Frame_Material_Out_1) == 0x0000F0, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_Get_Light_Frame_Material_Out_1' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_Get_Light_Material_Out_1) == 0x0000F8, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_Get_Light_Material_Out_1' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, K2Node_SwitchEnum_CmpSuccess) == 0x000100, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, Temp_int_Variable_1) == 0x000104, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, Temp_int_Variable_2) == 0x000108, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, Temp_byte_Variable) == 0x00010C, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, K2Node_Select_Default) == 0x000110, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_GetObjectiveContentData_OutPrimaryText_3) == 0x000118, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_GetObjectiveContentData_OutPrimaryText_3' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_GetObjectiveContentData_OutSecondaryText_3) == 0x000128, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_GetObjectiveContentData_OutSecondaryText_3' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_GetObjectiveContentData_OutObjectiveState_3) == 0x000138, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_GetObjectiveContentData_OutObjectiveState_3' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, CallFunc_GetObjectiveContentData_ReturnValue_3) == 0x000140, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::CallFunc_GetObjectiveContentData_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot, K2Node_SwitchEnum_CmpSuccess_1) == 0x000148, "Member 'WBP_ScoreScreen_Objective_Slot_C_ExecuteUbergraph_WBP_ScoreScreen_Objective_Slot::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function WBP_ScoreScreen_Objective_Slot.WBP_ScoreScreen_Objective_Slot_C.Get Background Material
// 0x0040 (0x0040 - 0x0000)
struct WBP_ScoreScreen_Objective_Slot_C_Get_Background_Material final
{
public:
	EObjectiveState                               InState;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Out;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EObjectiveState                               Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_3;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ScoreScreen_Objective_Slot_C_Get_Background_Material) == 0x000008, "Wrong alignment on WBP_ScoreScreen_Objective_Slot_C_Get_Background_Material");
static_assert(sizeof(WBP_ScoreScreen_Objective_Slot_C_Get_Background_Material) == 0x000040, "Wrong size on WBP_ScoreScreen_Objective_Slot_C_Get_Background_Material");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Get_Background_Material, InState) == 0x000000, "Member 'WBP_ScoreScreen_Objective_Slot_C_Get_Background_Material::InState' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Get_Background_Material, Out) == 0x000008, "Member 'WBP_ScoreScreen_Objective_Slot_C_Get_Background_Material::Out' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Get_Background_Material, Temp_byte_Variable) == 0x000010, "Member 'WBP_ScoreScreen_Objective_Slot_C_Get_Background_Material::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Get_Background_Material, Temp_object_Variable) == 0x000018, "Member 'WBP_ScoreScreen_Objective_Slot_C_Get_Background_Material::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Get_Background_Material, Temp_object_Variable_1) == 0x000020, "Member 'WBP_ScoreScreen_Objective_Slot_C_Get_Background_Material::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Get_Background_Material, Temp_object_Variable_2) == 0x000028, "Member 'WBP_ScoreScreen_Objective_Slot_C_Get_Background_Material::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Get_Background_Material, Temp_object_Variable_3) == 0x000030, "Member 'WBP_ScoreScreen_Objective_Slot_C_Get_Background_Material::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Get_Background_Material, K2Node_Select_Default) == 0x000038, "Member 'WBP_ScoreScreen_Objective_Slot_C_Get_Background_Material::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ScoreScreen_Objective_Slot.WBP_ScoreScreen_Objective_Slot_C.Get Light Frame Material
// 0x0040 (0x0040 - 0x0000)
struct WBP_ScoreScreen_Objective_Slot_C_Get_Light_Frame_Material final
{
public:
	EObjectiveState                               InState;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Out;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EObjectiveState                               Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_3;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ScoreScreen_Objective_Slot_C_Get_Light_Frame_Material) == 0x000008, "Wrong alignment on WBP_ScoreScreen_Objective_Slot_C_Get_Light_Frame_Material");
static_assert(sizeof(WBP_ScoreScreen_Objective_Slot_C_Get_Light_Frame_Material) == 0x000040, "Wrong size on WBP_ScoreScreen_Objective_Slot_C_Get_Light_Frame_Material");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Get_Light_Frame_Material, InState) == 0x000000, "Member 'WBP_ScoreScreen_Objective_Slot_C_Get_Light_Frame_Material::InState' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Get_Light_Frame_Material, Out) == 0x000008, "Member 'WBP_ScoreScreen_Objective_Slot_C_Get_Light_Frame_Material::Out' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Get_Light_Frame_Material, Temp_byte_Variable) == 0x000010, "Member 'WBP_ScoreScreen_Objective_Slot_C_Get_Light_Frame_Material::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Get_Light_Frame_Material, Temp_object_Variable) == 0x000018, "Member 'WBP_ScoreScreen_Objective_Slot_C_Get_Light_Frame_Material::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Get_Light_Frame_Material, Temp_object_Variable_1) == 0x000020, "Member 'WBP_ScoreScreen_Objective_Slot_C_Get_Light_Frame_Material::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Get_Light_Frame_Material, Temp_object_Variable_2) == 0x000028, "Member 'WBP_ScoreScreen_Objective_Slot_C_Get_Light_Frame_Material::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Get_Light_Frame_Material, Temp_object_Variable_3) == 0x000030, "Member 'WBP_ScoreScreen_Objective_Slot_C_Get_Light_Frame_Material::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Get_Light_Frame_Material, K2Node_Select_Default) == 0x000038, "Member 'WBP_ScoreScreen_Objective_Slot_C_Get_Light_Frame_Material::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ScoreScreen_Objective_Slot.WBP_ScoreScreen_Objective_Slot_C.Get Light Material
// 0x0040 (0x0040 - 0x0000)
struct WBP_ScoreScreen_Objective_Slot_C_Get_Light_Material final
{
public:
	EObjectiveState                               InState;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Out;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EObjectiveState                               Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_3;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ScoreScreen_Objective_Slot_C_Get_Light_Material) == 0x000008, "Wrong alignment on WBP_ScoreScreen_Objective_Slot_C_Get_Light_Material");
static_assert(sizeof(WBP_ScoreScreen_Objective_Slot_C_Get_Light_Material) == 0x000040, "Wrong size on WBP_ScoreScreen_Objective_Slot_C_Get_Light_Material");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Get_Light_Material, InState) == 0x000000, "Member 'WBP_ScoreScreen_Objective_Slot_C_Get_Light_Material::InState' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Get_Light_Material, Out) == 0x000008, "Member 'WBP_ScoreScreen_Objective_Slot_C_Get_Light_Material::Out' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Get_Light_Material, Temp_byte_Variable) == 0x000010, "Member 'WBP_ScoreScreen_Objective_Slot_C_Get_Light_Material::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Get_Light_Material, Temp_object_Variable) == 0x000018, "Member 'WBP_ScoreScreen_Objective_Slot_C_Get_Light_Material::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Get_Light_Material, Temp_object_Variable_1) == 0x000020, "Member 'WBP_ScoreScreen_Objective_Slot_C_Get_Light_Material::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Get_Light_Material, Temp_object_Variable_2) == 0x000028, "Member 'WBP_ScoreScreen_Objective_Slot_C_Get_Light_Material::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Get_Light_Material, Temp_object_Variable_3) == 0x000030, "Member 'WBP_ScoreScreen_Objective_Slot_C_Get_Light_Material::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Get_Light_Material, K2Node_Select_Default) == 0x000038, "Member 'WBP_ScoreScreen_Objective_Slot_C_Get_Light_Material::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ScoreScreen_Objective_Slot.WBP_ScoreScreen_Objective_Slot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_ScoreScreen_Objective_Slot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ScoreScreen_Objective_Slot_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_ScoreScreen_Objective_Slot_C_PreConstruct");
static_assert(sizeof(WBP_ScoreScreen_Objective_Slot_C_PreConstruct) == 0x000001, "Wrong size on WBP_ScoreScreen_Objective_Slot_C_PreConstruct");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_ScoreScreen_Objective_Slot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_ScoreScreen_Objective_Slot.WBP_ScoreScreen_Objective_Slot_C.Refresh Image Material
// 0x0018 (0x0018 - 0x0000)
struct WBP_ScoreScreen_Objective_Slot_C_Refresh_Image_Material final
{
public:
	class UImage*                                 InImage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     InMaterial;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ScoreScreen_Objective_Slot_C_Refresh_Image_Material) == 0x000008, "Wrong alignment on WBP_ScoreScreen_Objective_Slot_C_Refresh_Image_Material");
static_assert(sizeof(WBP_ScoreScreen_Objective_Slot_C_Refresh_Image_Material) == 0x000018, "Wrong size on WBP_ScoreScreen_Objective_Slot_C_Refresh_Image_Material");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Refresh_Image_Material, InImage) == 0x000000, "Member 'WBP_ScoreScreen_Objective_Slot_C_Refresh_Image_Material::InImage' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Refresh_Image_Material, InMaterial) == 0x000008, "Member 'WBP_ScoreScreen_Objective_Slot_C_Refresh_Image_Material::InMaterial' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Refresh_Image_Material, Temp_byte_Variable) == 0x000010, "Member 'WBP_ScoreScreen_Objective_Slot_C_Refresh_Image_Material::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Refresh_Image_Material, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'WBP_ScoreScreen_Objective_Slot_C_Refresh_Image_Material::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Refresh_Image_Material, Temp_byte_Variable_1) == 0x000012, "Member 'WBP_ScoreScreen_Objective_Slot_C_Refresh_Image_Material::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Refresh_Image_Material, Temp_bool_Variable) == 0x000013, "Member 'WBP_ScoreScreen_Objective_Slot_C_Refresh_Image_Material::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_Refresh_Image_Material, K2Node_Select_Default) == 0x000014, "Member 'WBP_ScoreScreen_Objective_Slot_C_Refresh_Image_Material::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ScoreScreen_Objective_Slot.WBP_ScoreScreen_Objective_Slot_C.RefreshTextColors
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors final
{
public:
	EObjectiveState                               InState;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Local_Color;                                       // 0x0004(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Local_Color_Default;                               // 0x0014(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Local_Color_Fail;                                  // 0x0024(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Local_Color_Success;                               // 0x0034(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EObjectiveState                               Temp_byte_Variable;                                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EObjectiveState                               Temp_byte_Variable_1;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x006C(0x0014)()
	class UMaterialInstanceDynamic*               CallFunc_GetGlowEffect_ReturnValue;                // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetGlowEffect_ReturnValue_1;              // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors) == 0x000008, "Wrong alignment on WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors");
static_assert(sizeof(WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors) == 0x0000B0, "Wrong size on WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors, InState) == 0x000000, "Member 'WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors::InState' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors, Local_Color) == 0x000004, "Member 'WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors::Local_Color' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors, Local_Color_Default) == 0x000014, "Member 'WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors::Local_Color_Default' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors, Local_Color_Fail) == 0x000024, "Member 'WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors::Local_Color_Fail' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors, Local_Color_Success) == 0x000034, "Member 'WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors::Local_Color_Success' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors, Temp_byte_Variable) == 0x000044, "Member 'WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors, Temp_real_Variable) == 0x000048, "Member 'WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors, Temp_real_Variable_1) == 0x000050, "Member 'WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors, Temp_real_Variable_2) == 0x000058, "Member 'WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors, Temp_real_Variable_3) == 0x000060, "Member 'WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors, Temp_byte_Variable_1) == 0x000068, "Member 'WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors, K2Node_MakeStruct_SlateColor) == 0x00006C, "Member 'WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors, CallFunc_GetGlowEffect_ReturnValue) == 0x000080, "Member 'WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors::CallFunc_GetGlowEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors, K2Node_Select_Default) == 0x000088, "Member 'WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors, K2Node_Select_Default_1) == 0x000090, "Member 'WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors, CallFunc_GetGlowEffect_ReturnValue_1) == 0x0000A0, "Member 'WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors::CallFunc_GetGlowEffect_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x0000A8, "Member 'WBP_ScoreScreen_Objective_Slot_C_RefreshTextColors::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function WBP_ScoreScreen_Objective_Slot.WBP_ScoreScreen_Objective_Slot_C.SetInitialTextColors
// 0x0048 (0x0048 - 0x0000)
struct WBP_ScoreScreen_Objective_Slot_C_SetInitialTextColors final
{
public:
	struct FLinearColor                           Local_Color;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Local_Color_Default;                               // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0020(0x0014)()
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetGlowEffect_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetGlowEffect_ReturnValue_1;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ScoreScreen_Objective_Slot_C_SetInitialTextColors) == 0x000008, "Wrong alignment on WBP_ScoreScreen_Objective_Slot_C_SetInitialTextColors");
static_assert(sizeof(WBP_ScoreScreen_Objective_Slot_C_SetInitialTextColors) == 0x000048, "Wrong size on WBP_ScoreScreen_Objective_Slot_C_SetInitialTextColors");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_SetInitialTextColors, Local_Color) == 0x000000, "Member 'WBP_ScoreScreen_Objective_Slot_C_SetInitialTextColors::Local_Color' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_SetInitialTextColors, Local_Color_Default) == 0x000010, "Member 'WBP_ScoreScreen_Objective_Slot_C_SetInitialTextColors::Local_Color_Default' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_SetInitialTextColors, K2Node_MakeStruct_SlateColor) == 0x000020, "Member 'WBP_ScoreScreen_Objective_Slot_C_SetInitialTextColors::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_SetInitialTextColors, CallFunc_GetGlowEffect_ReturnValue) == 0x000038, "Member 'WBP_ScoreScreen_Objective_Slot_C_SetInitialTextColors::CallFunc_GetGlowEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_SetInitialTextColors, CallFunc_GetGlowEffect_ReturnValue_1) == 0x000040, "Member 'WBP_ScoreScreen_Objective_Slot_C_SetInitialTextColors::CallFunc_GetGlowEffect_ReturnValue_1' has a wrong offset!");

// Function WBP_ScoreScreen_Objective_Slot.WBP_ScoreScreen_Objective_Slot_C.UpdatePrimaryText
// 0x0018 (0x0018 - 0x0000)
struct WBP_ScoreScreen_Objective_Slot_C_UpdatePrimaryText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ScoreScreen_Objective_Slot_C_UpdatePrimaryText) == 0x000008, "Wrong alignment on WBP_ScoreScreen_Objective_Slot_C_UpdatePrimaryText");
static_assert(sizeof(WBP_ScoreScreen_Objective_Slot_C_UpdatePrimaryText) == 0x000018, "Wrong size on WBP_ScoreScreen_Objective_Slot_C_UpdatePrimaryText");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_UpdatePrimaryText, InText) == 0x000000, "Member 'WBP_ScoreScreen_Objective_Slot_C_UpdatePrimaryText::InText' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_UpdatePrimaryText, Temp_byte_Variable) == 0x000010, "Member 'WBP_ScoreScreen_Objective_Slot_C_UpdatePrimaryText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_UpdatePrimaryText, CallFunc_TextIsEmpty_ReturnValue) == 0x000011, "Member 'WBP_ScoreScreen_Objective_Slot_C_UpdatePrimaryText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_UpdatePrimaryText, Temp_byte_Variable_1) == 0x000012, "Member 'WBP_ScoreScreen_Objective_Slot_C_UpdatePrimaryText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_UpdatePrimaryText, Temp_bool_Variable) == 0x000013, "Member 'WBP_ScoreScreen_Objective_Slot_C_UpdatePrimaryText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_UpdatePrimaryText, K2Node_Select_Default) == 0x000014, "Member 'WBP_ScoreScreen_Objective_Slot_C_UpdatePrimaryText::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ScoreScreen_Objective_Slot.WBP_ScoreScreen_Objective_Slot_C.UpdateSecondaryText
// 0x0010 (0x0010 - 0x0000)
struct WBP_ScoreScreen_Objective_Slot_C_UpdateSecondaryText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_ScoreScreen_Objective_Slot_C_UpdateSecondaryText) == 0x000008, "Wrong alignment on WBP_ScoreScreen_Objective_Slot_C_UpdateSecondaryText");
static_assert(sizeof(WBP_ScoreScreen_Objective_Slot_C_UpdateSecondaryText) == 0x000010, "Wrong size on WBP_ScoreScreen_Objective_Slot_C_UpdateSecondaryText");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_UpdateSecondaryText, InText) == 0x000000, "Member 'WBP_ScoreScreen_Objective_Slot_C_UpdateSecondaryText::InText' has a wrong offset!");

// Function WBP_ScoreScreen_Objective_Slot.WBP_ScoreScreen_Objective_Slot_C.UpdateValueText
// 0x0110 (0x0110 - 0x0000)
struct WBP_ScoreScreen_Objective_Slot_C_UpdateValueText final
{
public:
	int32                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0098(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0100(0x0010)()
};
static_assert(alignof(WBP_ScoreScreen_Objective_Slot_C_UpdateValueText) == 0x000008, "Wrong alignment on WBP_ScoreScreen_Objective_Slot_C_UpdateValueText");
static_assert(sizeof(WBP_ScoreScreen_Objective_Slot_C_UpdateValueText) == 0x000110, "Wrong size on WBP_ScoreScreen_Objective_Slot_C_UpdateValueText");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_UpdateValueText, InValue) == 0x000000, "Member 'WBP_ScoreScreen_Objective_Slot_C_UpdateValueText::InValue' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_UpdateValueText, Temp_string_Variable) == 0x000008, "Member 'WBP_ScoreScreen_Objective_Slot_C_UpdateValueText::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_UpdateValueText, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000018, "Member 'WBP_ScoreScreen_Objective_Slot_C_UpdateValueText::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_UpdateValueText, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000020, "Member 'WBP_ScoreScreen_Objective_Slot_C_UpdateValueText::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_UpdateValueText, Temp_string_Variable_1) == 0x000028, "Member 'WBP_ScoreScreen_Objective_Slot_C_UpdateValueText::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_UpdateValueText, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'WBP_ScoreScreen_Objective_Slot_C_UpdateValueText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_UpdateValueText, Temp_bool_Variable) == 0x000080, "Member 'WBP_ScoreScreen_Objective_Slot_C_UpdateValueText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_UpdateValueText, K2Node_Select_Default) == 0x000088, "Member 'WBP_ScoreScreen_Objective_Slot_C_UpdateValueText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_UpdateValueText, CallFunc_Conv_StringToText_ReturnValue) == 0x000098, "Member 'WBP_ScoreScreen_Objective_Slot_C_UpdateValueText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_UpdateValueText, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A8, "Member 'WBP_ScoreScreen_Objective_Slot_C_UpdateValueText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_UpdateValueText, K2Node_MakeArray_Array) == 0x0000F0, "Member 'WBP_ScoreScreen_Objective_Slot_C_UpdateValueText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_ScoreScreen_Objective_Slot_C_UpdateValueText, CallFunc_Format_ReturnValue) == 0x000100, "Member 'WBP_ScoreScreen_Objective_Slot_C_UpdateValueText::CallFunc_Format_ReturnValue' has a wrong offset!");

}

