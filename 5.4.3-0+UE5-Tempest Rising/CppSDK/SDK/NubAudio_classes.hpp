#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NubAudio

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// Class NubAudio.SoundNodeRandomStartTime
// 0x0010 (0x0058 - 0x0048)
class USoundNodeRandomStartTime final : public USoundNode
{
public:
	bool                                          bUseConnectedWavePlayer;                           // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartTimeMin;                                      // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         StartTimeMax;                                      // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SoundNodeRandomStartTime">();
	}
	static class USoundNodeRandomStartTime* GetDefaultObj()
	{
		return GetDefaultObjImpl<USoundNodeRandomStartTime>();
	}
};
static_assert(alignof(USoundNodeRandomStartTime) == 0x000008, "Wrong alignment on USoundNodeRandomStartTime");
static_assert(sizeof(USoundNodeRandomStartTime) == 0x000058, "Wrong size on USoundNodeRandomStartTime");
static_assert(offsetof(USoundNodeRandomStartTime, bUseConnectedWavePlayer) == 0x000048, "Member 'USoundNodeRandomStartTime::bUseConnectedWavePlayer' has a wrong offset!");
static_assert(offsetof(USoundNodeRandomStartTime, StartTimeMin) == 0x00004C, "Member 'USoundNodeRandomStartTime::StartTimeMin' has a wrong offset!");
static_assert(offsetof(USoundNodeRandomStartTime, StartTimeMax) == 0x000050, "Member 'USoundNodeRandomStartTime::StartTimeMax' has a wrong offset!");

}

