#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HUD_StructureControls_Slot

#include "Basic.hpp"

#include "WBP_HUD_StructureControls_Slot_classes.hpp"
#include "WBP_HUD_StructureControls_Slot_parameters.hpp"


namespace SDK
{

// Function WBP_HUD_StructureControls_Slot.WBP_HUD_StructureControls_Slot_C.ExecuteUbergraph_WBP_HUD_StructureControls_Slot
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_HUD_StructureControls_Slot_C::ExecuteUbergraph_WBP_HUD_StructureControls_Slot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_StructureControls_Slot_C", "ExecuteUbergraph_WBP_HUD_StructureControls_Slot");

	Params::WBP_HUD_StructureControls_Slot_C_ExecuteUbergraph_WBP_HUD_StructureControls_Slot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_HUD_StructureControls_Slot.WBP_HUD_StructureControls_Slot_C.OnActivateState
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETedContentSlotState                    InState                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInActivated                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_HUD_StructureControls_Slot_C::OnActivateState(ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_StructureControls_Slot_C", "OnActivateState");

	Params::WBP_HUD_StructureControls_Slot_C_OnActivateState Parms{};

	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_HUD_StructureControls_Slot.WBP_HUD_StructureControls_Slot_C.RefreshHoverVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_HUD_StructureControls_Slot_C::RefreshHoverVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_StructureControls_Slot_C", "RefreshHoverVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HUD_StructureControls_Slot.WBP_HUD_StructureControls_Slot_C.RefreshIcon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_HUD_StructureControls_Slot_C::RefreshIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_StructureControls_Slot_C", "RefreshIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HUD_StructureControls_Slot.WBP_HUD_StructureControls_Slot_C.RefreshUI
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_HUD_StructureControls_Slot_C::RefreshUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_StructureControls_Slot_C", "RefreshUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HUD_StructureControls_Slot.WBP_HUD_StructureControls_Slot_C.GetMaterialsSupportingStates
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TArray<class UMaterialInstanceDynamic*>*OutMIDs                                                (Parm, OutParm)

void UWBP_HUD_StructureControls_Slot_C::GetMaterialsSupportingStates(TArray<class UMaterialInstanceDynamic*>* OutMIDs) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_StructureControls_Slot_C", "GetMaterialsSupportingStates");

	Params::WBP_HUD_StructureControls_Slot_C_GetMaterialsSupportingStates Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutMIDs != nullptr)
		*OutMIDs = std::move(Parms.OutMIDs);
}

}

