#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TedUpgradeLogic_RegionalNetworking

#include "Basic.hpp"

#include "TedUpgradeLogic_RegionalNetworking_classes.hpp"
#include "TedUpgradeLogic_RegionalNetworking_parameters.hpp"


namespace SDK
{

// Function TedUpgradeLogic_RegionalNetworking.TedUpgradeLogic_RegionalNetworking_C.K2_IsApplicableToPawn
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const class ATedPawn*                   InPawn                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UTedUpgradeLogic_RegionalNetworking_C::K2_IsApplicableToPawn(const class ATedPawn* InPawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUpgradeLogic_RegionalNetworking_C", "K2_IsApplicableToPawn");

	Params::TedUpgradeLogic_RegionalNetworking_C_K2_IsApplicableToPawn Parms{};

	Parms.InPawn = InPawn;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TedUpgradeLogic_RegionalNetworking.TedUpgradeLogic_RegionalNetworking_C.K2_TryApplyToPawn
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ATedPawn*                         InPawn                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UTedUpgradeLogic_RegionalNetworking_C::K2_TryApplyToPawn(class ATedPawn* InPawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUpgradeLogic_RegionalNetworking_C", "K2_TryApplyToPawn");

	Params::TedUpgradeLogic_RegionalNetworking_C_K2_TryApplyToPawn Parms{};

	Parms.InPawn = InPawn;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

