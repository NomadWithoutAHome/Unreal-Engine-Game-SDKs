#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_BD_GDF_MedBay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_BD_GDF_MedBay.ABP_BD_GDF_MedBay_C
// 0x0200 (0x0570 - 0x0370)
class UABP_BD_GDF_MedBay_C final : public UAnimInstance
{
public:
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0378(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0380(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0388(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x03A8(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x03F0(0x00F0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x04E0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0528(0x0048)()

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void ExecuteUbergraph_ABP_BD_GDF_MedBay(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_BD_GDF_MedBay_C">();
	}
	static class UABP_BD_GDF_MedBay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_BD_GDF_MedBay_C>();
	}
};
static_assert(alignof(UABP_BD_GDF_MedBay_C) == 0x000010, "Wrong alignment on UABP_BD_GDF_MedBay_C");
static_assert(sizeof(UABP_BD_GDF_MedBay_C) == 0x000570, "Wrong size on UABP_BD_GDF_MedBay_C");
static_assert(offsetof(UABP_BD_GDF_MedBay_C, UberGraphFrame) == 0x000370, "Member 'UABP_BD_GDF_MedBay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_BD_GDF_MedBay_C, AnimBlueprintExtension_PropertyAccess) == 0x000378, "Member 'UABP_BD_GDF_MedBay_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_BD_GDF_MedBay_C, AnimBlueprintExtension_Base) == 0x000380, "Member 'UABP_BD_GDF_MedBay_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_BD_GDF_MedBay_C, AnimGraphNode_Root) == 0x000388, "Member 'UABP_BD_GDF_MedBay_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_BD_GDF_MedBay_C, AnimGraphNode_SequencePlayer_1) == 0x0003A8, "Member 'UABP_BD_GDF_MedBay_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_BD_GDF_MedBay_C, AnimGraphNode_LayeredBoneBlend) == 0x0003F0, "Member 'UABP_BD_GDF_MedBay_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_BD_GDF_MedBay_C, AnimGraphNode_Slot) == 0x0004E0, "Member 'UABP_BD_GDF_MedBay_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_BD_GDF_MedBay_C, AnimGraphNode_SequencePlayer) == 0x000528, "Member 'UABP_BD_GDF_MedBay_C::AnimGraphNode_SequencePlayer' has a wrong offset!");

}

