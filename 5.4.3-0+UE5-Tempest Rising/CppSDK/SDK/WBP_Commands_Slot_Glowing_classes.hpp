#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Commands_Slot_Glowing

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Tempest_structs.hpp"
#include "Tempest_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Commands_Slot_Glowing.WBP_Commands_Slot_Glowing_C
// 0x0060 (0x04A0 - 0x0440)
class UWBP_Commands_Slot_Glowing_C final : public UTedPawnCommandSlotBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0440(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_ActiveEffect;                                // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_AlternatingActiveEffect;                     // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_AutoCastEffect;                              // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Background;                                  // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_CooldownProgress;                            // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Highlighted_Effect;                          // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Icon;                                        // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Shortcut;                                // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CooldownDMI;                                       // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           FactionVectorColorParameters;                      // 0x0490(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void CheckForHighlight();
	void EvaluateIconOpacity(double* Return_Value);
	void ExecuteUbergraph_WBP_Commands_Slot_Glowing(int32 EntryPoint);
	class UTedCommandsPanel* GetCommandsPanel();
	const class UTedCommand* GetSlotCDO();
	void HandleHovered(bool bInActive);
	void HandleSelected(bool bInActive);
	void OnActivateState(ETedContentSlotState InState, bool bInActivated);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnRefreshControlMappings();
	void PreConstruct(bool IsDesignTime);
	void RefreshIconOpacity();
	void RefreshMissingPrerequisitesVisuals();
	void RefreshShortcut();
	void RefreshUI();
	void SetActiveEffectColor(bool Condition);
	void SetupCooldownImage();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void ToggleActiveEffect(bool bToggle, class UImage* ImageToToggle);

	void GetMaterialsSupportingStates(TArray<class UMaterialInstanceDynamic*>* OutMIDs) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Commands_Slot_Glowing_C">();
	}
	static class UWBP_Commands_Slot_Glowing_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Commands_Slot_Glowing_C>();
	}
};
static_assert(alignof(UWBP_Commands_Slot_Glowing_C) == 0x000008, "Wrong alignment on UWBP_Commands_Slot_Glowing_C");
static_assert(sizeof(UWBP_Commands_Slot_Glowing_C) == 0x0004A0, "Wrong size on UWBP_Commands_Slot_Glowing_C");
static_assert(offsetof(UWBP_Commands_Slot_Glowing_C, UberGraphFrame) == 0x000440, "Member 'UWBP_Commands_Slot_Glowing_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Commands_Slot_Glowing_C, Image_ActiveEffect) == 0x000448, "Member 'UWBP_Commands_Slot_Glowing_C::Image_ActiveEffect' has a wrong offset!");
static_assert(offsetof(UWBP_Commands_Slot_Glowing_C, Image_AlternatingActiveEffect) == 0x000450, "Member 'UWBP_Commands_Slot_Glowing_C::Image_AlternatingActiveEffect' has a wrong offset!");
static_assert(offsetof(UWBP_Commands_Slot_Glowing_C, Image_AutoCastEffect) == 0x000458, "Member 'UWBP_Commands_Slot_Glowing_C::Image_AutoCastEffect' has a wrong offset!");
static_assert(offsetof(UWBP_Commands_Slot_Glowing_C, Image_Background) == 0x000460, "Member 'UWBP_Commands_Slot_Glowing_C::Image_Background' has a wrong offset!");
static_assert(offsetof(UWBP_Commands_Slot_Glowing_C, Image_CooldownProgress) == 0x000468, "Member 'UWBP_Commands_Slot_Glowing_C::Image_CooldownProgress' has a wrong offset!");
static_assert(offsetof(UWBP_Commands_Slot_Glowing_C, Image_Highlighted_Effect) == 0x000470, "Member 'UWBP_Commands_Slot_Glowing_C::Image_Highlighted_Effect' has a wrong offset!");
static_assert(offsetof(UWBP_Commands_Slot_Glowing_C, Image_Icon) == 0x000478, "Member 'UWBP_Commands_Slot_Glowing_C::Image_Icon' has a wrong offset!");
static_assert(offsetof(UWBP_Commands_Slot_Glowing_C, TextBlock_Shortcut) == 0x000480, "Member 'UWBP_Commands_Slot_Glowing_C::TextBlock_Shortcut' has a wrong offset!");
static_assert(offsetof(UWBP_Commands_Slot_Glowing_C, CooldownDMI) == 0x000488, "Member 'UWBP_Commands_Slot_Glowing_C::CooldownDMI' has a wrong offset!");
static_assert(offsetof(UWBP_Commands_Slot_Glowing_C, FactionVectorColorParameters) == 0x000490, "Member 'UWBP_Commands_Slot_Glowing_C::FactionVectorColorParameters' has a wrong offset!");

}

