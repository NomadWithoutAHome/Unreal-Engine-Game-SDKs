#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_BuildingGrid_ModeTabs_Slot

#include "Basic.hpp"

#include "Tempest_structs.hpp"


namespace SDK::Params
{

// Function WBP_BuildingGrid_ModeTabs_Slot.WBP_BuildingGrid_ModeTabs_Slot_C.ExecuteUbergraph_WBP_BuildingGrid_ModeTabs_Slot
// 0x0008 (0x0008 - 0x0000)
struct WBP_BuildingGrid_ModeTabs_Slot_C_ExecuteUbergraph_WBP_BuildingGrid_ModeTabs_Slot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BuildingGrid_ModeTabs_Slot_C_ExecuteUbergraph_WBP_BuildingGrid_ModeTabs_Slot) == 0x000004, "Wrong alignment on WBP_BuildingGrid_ModeTabs_Slot_C_ExecuteUbergraph_WBP_BuildingGrid_ModeTabs_Slot");
static_assert(sizeof(WBP_BuildingGrid_ModeTabs_Slot_C_ExecuteUbergraph_WBP_BuildingGrid_ModeTabs_Slot) == 0x000008, "Wrong size on WBP_BuildingGrid_ModeTabs_Slot_C_ExecuteUbergraph_WBP_BuildingGrid_ModeTabs_Slot");
static_assert(offsetof(WBP_BuildingGrid_ModeTabs_Slot_C_ExecuteUbergraph_WBP_BuildingGrid_ModeTabs_Slot, EntryPoint) == 0x000000, "Member 'WBP_BuildingGrid_ModeTabs_Slot_C_ExecuteUbergraph_WBP_BuildingGrid_ModeTabs_Slot::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_BuildingGrid_ModeTabs_Slot_C_ExecuteUbergraph_WBP_BuildingGrid_ModeTabs_Slot, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_BuildingGrid_ModeTabs_Slot_C_ExecuteUbergraph_WBP_BuildingGrid_ModeTabs_Slot::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_BuildingGrid_ModeTabs_Slot.WBP_BuildingGrid_ModeTabs_Slot_C.OnActivateState
// 0x0002 (0x0002 - 0x0000)
struct WBP_BuildingGrid_ModeTabs_Slot_C_OnActivateState final
{
public:
	ETedContentSlotState                          InState;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInActivated;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BuildingGrid_ModeTabs_Slot_C_OnActivateState) == 0x000001, "Wrong alignment on WBP_BuildingGrid_ModeTabs_Slot_C_OnActivateState");
static_assert(sizeof(WBP_BuildingGrid_ModeTabs_Slot_C_OnActivateState) == 0x000002, "Wrong size on WBP_BuildingGrid_ModeTabs_Slot_C_OnActivateState");
static_assert(offsetof(WBP_BuildingGrid_ModeTabs_Slot_C_OnActivateState, InState) == 0x000000, "Member 'WBP_BuildingGrid_ModeTabs_Slot_C_OnActivateState::InState' has a wrong offset!");
static_assert(offsetof(WBP_BuildingGrid_ModeTabs_Slot_C_OnActivateState, bInActivated) == 0x000001, "Member 'WBP_BuildingGrid_ModeTabs_Slot_C_OnActivateState::bInActivated' has a wrong offset!");

// Function WBP_BuildingGrid_ModeTabs_Slot.WBP_BuildingGrid_ModeTabs_Slot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_BuildingGrid_ModeTabs_Slot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BuildingGrid_ModeTabs_Slot_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_BuildingGrid_ModeTabs_Slot_C_PreConstruct");
static_assert(sizeof(WBP_BuildingGrid_ModeTabs_Slot_C_PreConstruct) == 0x000001, "Wrong size on WBP_BuildingGrid_ModeTabs_Slot_C_PreConstruct");
static_assert(offsetof(WBP_BuildingGrid_ModeTabs_Slot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_BuildingGrid_ModeTabs_Slot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_BuildingGrid_ModeTabs_Slot.WBP_BuildingGrid_ModeTabs_Slot_C.RefreshHoveredVisuals
// 0x0004 (0x0004 - 0x0000)
struct WBP_BuildingGrid_ModeTabs_Slot_C_RefreshHoveredVisuals final
{
public:
	bool                                          CallFunc_IsStateActive_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStateActive_ReturnValue_1;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BuildingGrid_ModeTabs_Slot_C_RefreshHoveredVisuals) == 0x000001, "Wrong alignment on WBP_BuildingGrid_ModeTabs_Slot_C_RefreshHoveredVisuals");
static_assert(sizeof(WBP_BuildingGrid_ModeTabs_Slot_C_RefreshHoveredVisuals) == 0x000004, "Wrong size on WBP_BuildingGrid_ModeTabs_Slot_C_RefreshHoveredVisuals");
static_assert(offsetof(WBP_BuildingGrid_ModeTabs_Slot_C_RefreshHoveredVisuals, CallFunc_IsStateActive_ReturnValue) == 0x000000, "Member 'WBP_BuildingGrid_ModeTabs_Slot_C_RefreshHoveredVisuals::CallFunc_IsStateActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BuildingGrid_ModeTabs_Slot_C_RefreshHoveredVisuals, CallFunc_IsStateActive_ReturnValue_1) == 0x000001, "Member 'WBP_BuildingGrid_ModeTabs_Slot_C_RefreshHoveredVisuals::CallFunc_IsStateActive_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BuildingGrid_ModeTabs_Slot_C_RefreshHoveredVisuals, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'WBP_BuildingGrid_ModeTabs_Slot_C_RefreshHoveredVisuals::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BuildingGrid_ModeTabs_Slot_C_RefreshHoveredVisuals, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'WBP_BuildingGrid_ModeTabs_Slot_C_RefreshHoveredVisuals::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_BuildingGrid_ModeTabs_Slot.WBP_BuildingGrid_ModeTabs_Slot_C.RefreshSelectedVisuals
// 0x0001 (0x0001 - 0x0000)
struct WBP_BuildingGrid_ModeTabs_Slot_C_RefreshSelectedVisuals final
{
public:
	bool                                          CallFunc_IsStateActive_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BuildingGrid_ModeTabs_Slot_C_RefreshSelectedVisuals) == 0x000001, "Wrong alignment on WBP_BuildingGrid_ModeTabs_Slot_C_RefreshSelectedVisuals");
static_assert(sizeof(WBP_BuildingGrid_ModeTabs_Slot_C_RefreshSelectedVisuals) == 0x000001, "Wrong size on WBP_BuildingGrid_ModeTabs_Slot_C_RefreshSelectedVisuals");
static_assert(offsetof(WBP_BuildingGrid_ModeTabs_Slot_C_RefreshSelectedVisuals, CallFunc_IsStateActive_ReturnValue) == 0x000000, "Member 'WBP_BuildingGrid_ModeTabs_Slot_C_RefreshSelectedVisuals::CallFunc_IsStateActive_ReturnValue' has a wrong offset!");

// Function WBP_BuildingGrid_ModeTabs_Slot.WBP_BuildingGrid_ModeTabs_Slot_C.RefreshText
// 0x0028 (0x0028 - 0x0000)
struct WBP_BuildingGrid_ModeTabs_Slot_C_RefreshText final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0008(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x0018(0x0010)()
};
static_assert(alignof(WBP_BuildingGrid_ModeTabs_Slot_C_RefreshText) == 0x000008, "Wrong alignment on WBP_BuildingGrid_ModeTabs_Slot_C_RefreshText");
static_assert(sizeof(WBP_BuildingGrid_ModeTabs_Slot_C_RefreshText) == 0x000028, "Wrong size on WBP_BuildingGrid_ModeTabs_Slot_C_RefreshText");
static_assert(offsetof(WBP_BuildingGrid_ModeTabs_Slot_C_RefreshText, Temp_bool_Variable) == 0x000000, "Member 'WBP_BuildingGrid_ModeTabs_Slot_C_RefreshText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BuildingGrid_ModeTabs_Slot_C_RefreshText, CallFunc_TextToUpper_ReturnValue) == 0x000008, "Member 'WBP_BuildingGrid_ModeTabs_Slot_C_RefreshText::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BuildingGrid_ModeTabs_Slot_C_RefreshText, K2Node_Select_Default) == 0x000018, "Member 'WBP_BuildingGrid_ModeTabs_Slot_C_RefreshText::K2Node_Select_Default' has a wrong offset!");

// Function WBP_BuildingGrid_ModeTabs_Slot.WBP_BuildingGrid_ModeTabs_Slot_C.GetMaterialsSupportingStates
// 0x0028 (0x0028 - 0x0000)
struct WBP_BuildingGrid_ModeTabs_Slot_C_GetMaterialsSupportingStates final
{
public:
	TArray<class UMaterialInstanceDynamic*>       OutMIDs;                                           // 0x0000(0x0010)(Parm, OutParm)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
};
static_assert(alignof(WBP_BuildingGrid_ModeTabs_Slot_C_GetMaterialsSupportingStates) == 0x000008, "Wrong alignment on WBP_BuildingGrid_ModeTabs_Slot_C_GetMaterialsSupportingStates");
static_assert(sizeof(WBP_BuildingGrid_ModeTabs_Slot_C_GetMaterialsSupportingStates) == 0x000028, "Wrong size on WBP_BuildingGrid_ModeTabs_Slot_C_GetMaterialsSupportingStates");
static_assert(offsetof(WBP_BuildingGrid_ModeTabs_Slot_C_GetMaterialsSupportingStates, OutMIDs) == 0x000000, "Member 'WBP_BuildingGrid_ModeTabs_Slot_C_GetMaterialsSupportingStates::OutMIDs' has a wrong offset!");
static_assert(offsetof(WBP_BuildingGrid_ModeTabs_Slot_C_GetMaterialsSupportingStates, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'WBP_BuildingGrid_ModeTabs_Slot_C_GetMaterialsSupportingStates::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BuildingGrid_ModeTabs_Slot_C_GetMaterialsSupportingStates, K2Node_MakeArray_Array) == 0x000018, "Member 'WBP_BuildingGrid_ModeTabs_Slot_C_GetMaterialsSupportingStates::K2Node_MakeArray_Array' has a wrong offset!");

}

