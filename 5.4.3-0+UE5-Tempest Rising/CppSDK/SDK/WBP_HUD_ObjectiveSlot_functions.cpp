#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HUD_ObjectiveSlot

#include "Basic.hpp"

#include "WBP_HUD_ObjectiveSlot_classes.hpp"
#include "WBP_HUD_ObjectiveSlot_parameters.hpp"


namespace SDK
{

// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.ClearStrikeThroughContentText
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_HUD_ObjectiveSlot_C::ClearStrikeThroughContentText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_ObjectiveSlot_C", "ClearStrikeThroughContentText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.Collapse
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_HUD_ObjectiveSlot_C::Collapse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_ObjectiveSlot_C", "Collapse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.ExecuteUbergraph_WBP_HUD_ObjectiveSlot
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_HUD_ObjectiveSlot_C::ExecuteUbergraph_WBP_HUD_ObjectiveSlot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_ObjectiveSlot_C", "ExecuteUbergraph_WBP_HUD_ObjectiveSlot");

	Params::WBP_HUD_ObjectiveSlot_C_ExecuteUbergraph_WBP_HUD_ObjectiveSlot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.GetWidgetAnimations
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UWidgetAnimation*>*        OutAnimations                                          (Parm, OutParm)

void UWBP_HUD_ObjectiveSlot_C::GetWidgetAnimations(TArray<class UWidgetAnimation*>* OutAnimations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_ObjectiveSlot_C", "GetWidgetAnimations");

	Params::WBP_HUD_ObjectiveSlot_C_GetWidgetAnimations Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutAnimations != nullptr)
		*OutAnimations = std::move(Parms.OutAnimations);
}


// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.GetWidgetAnimationTag
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidgetAnimation*                 InAnim                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag*                    OutAnimTag                                             (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UWBP_HUD_ObjectiveSlot_C::GetWidgetAnimationTag(class UWidgetAnimation* InAnim, struct FGameplayTag* OutAnimTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_ObjectiveSlot_C", "GetWidgetAnimationTag");

	Params::WBP_HUD_ObjectiveSlot_C_GetWidgetAnimationTag Parms{};

	Parms.InAnim = InAnim;

	UObject::ProcessEvent(Func, &Parms);

	if (OutAnimTag != nullptr)
		*OutAnimTag = std::move(Parms.OutAnimTag);
}


// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.OnActivateState
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETedContentSlotState                    InState                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInActivated                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_HUD_ObjectiveSlot_C::OnActivateState(ETedContentSlotState InState, bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_ObjectiveSlot_C", "OnActivateState");

	Params::WBP_HUD_ObjectiveSlot_C_OnActivateState Parms{};

	Parms.InState = InState;
	Parms.bInActivated = bInActivated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.OnAnimationFinished
// (BlueprintCosmetic, Event, Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class UWidgetAnimation*           Animation                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_HUD_ObjectiveSlot_C::OnAnimationFinished(const class UWidgetAnimation* Animation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_ObjectiveSlot_C", "OnAnimationFinished");

	Params::WBP_HUD_ObjectiveSlot_C_OnAnimationFinished Parms{};

	Parms.Animation = Animation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.OnAnimationStarted
// (BlueprintCosmetic, Event, Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class UWidgetAnimation*           Animation                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_HUD_ObjectiveSlot_C::OnAnimationStarted(const class UWidgetAnimation* Animation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_ObjectiveSlot_C", "OnAnimationStarted");

	Params::WBP_HUD_ObjectiveSlot_C_OnAnimationStarted Parms{};

	Parms.Animation = Animation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.OnPlayWidgetAnimation
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              InAnim                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UWBP_HUD_ObjectiveSlot_C::OnPlayWidgetAnimation(const struct FGameplayTag& InAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_ObjectiveSlot_C", "OnPlayWidgetAnimation");

	Params::WBP_HUD_ObjectiveSlot_C_OnPlayWidgetAnimation Parms{};

	Parms.InAnim = std::move(InAnim);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.PlayWidgetAnimationImpl
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class UWidgetAnimation*&          InAnim                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// const class FText&                      InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// const class UFileMediaSource*           InCheckboxAnim                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              InGlowColor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_HUD_ObjectiveSlot_C::PlayWidgetAnimationImpl(const class UWidgetAnimation*& InAnim, const class FText& InText, const class UFileMediaSource* InCheckboxAnim, const struct FLinearColor& InGlowColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_ObjectiveSlot_C", "PlayWidgetAnimationImpl");

	Params::WBP_HUD_ObjectiveSlot_C_PlayWidgetAnimationImpl Parms{};

	Parms.InAnim = InAnim;
	Parms.InText = std::move(InText);
	Parms.InCheckboxAnim = InCheckboxAnim;
	Parms.InGlowColor = std::move(InGlowColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.RefreshCheckbox
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_HUD_ObjectiveSlot_C::RefreshCheckbox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_ObjectiveSlot_C", "RefreshCheckbox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.RefreshPadding
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_HUD_ObjectiveSlot_C::RefreshPadding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_ObjectiveSlot_C", "RefreshPadding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.RefreshText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_HUD_ObjectiveSlot_C::RefreshText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_ObjectiveSlot_C", "RefreshText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.RefreshTrackingVisuals
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_HUD_ObjectiveSlot_C::RefreshTrackingVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_ObjectiveSlot_C", "RefreshTrackingVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.RefreshUI
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_HUD_ObjectiveSlot_C::RefreshUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_ObjectiveSlot_C", "RefreshUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.ResetVisuals
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_HUD_ObjectiveSlot_C::ResetVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_ObjectiveSlot_C", "ResetVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.SequenceEvent__ENTRYPOINTWBP_HUD_ObjectiveSlot
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_HUD_ObjectiveSlot_C::SequenceEvent__ENTRYPOINTWBP_HUD_ObjectiveSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_ObjectiveSlot_C", "SequenceEvent__ENTRYPOINTWBP_HUD_ObjectiveSlot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.SequenceEvent__ENTRYPOINTWBP_HUD_ObjectiveSlot_0
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_HUD_ObjectiveSlot_C::SequenceEvent__ENTRYPOINTWBP_HUD_ObjectiveSlot_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_ObjectiveSlot_C", "SequenceEvent__ENTRYPOINTWBP_HUD_ObjectiveSlot_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.SequenceEvent__ENTRYPOINTWBP_HUD_ObjectiveSlot_1
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_HUD_ObjectiveSlot_C::SequenceEvent__ENTRYPOINTWBP_HUD_ObjectiveSlot_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_ObjectiveSlot_C", "SequenceEvent__ENTRYPOINTWBP_HUD_ObjectiveSlot_1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.SequenceEvent__ENTRYPOINTWBP_HUD_ObjectiveSlot_2
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_HUD_ObjectiveSlot_C::SequenceEvent__ENTRYPOINTWBP_HUD_ObjectiveSlot_2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_ObjectiveSlot_C", "SequenceEvent__ENTRYPOINTWBP_HUD_ObjectiveSlot_2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.SetupCheckbox
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInVisible                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInChecked                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_HUD_ObjectiveSlot_C::SetupCheckbox(bool bInVisible, bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_ObjectiveSlot_C", "SetupCheckbox");

	Params::WBP_HUD_ObjectiveSlot_C_SetupCheckbox Parms{};

	Parms.bInVisible = bInVisible;
	Parms.bInChecked = bInChecked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.StopNotifications
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidgetAnimation*                 InExceptAnim                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_HUD_ObjectiveSlot_C::StopNotifications(class UWidgetAnimation* InExceptAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_ObjectiveSlot_C", "StopNotifications");

	Params::WBP_HUD_ObjectiveSlot_C_StopNotifications Parms{};

	Parms.InExceptAnim = InExceptAnim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.StrikeThroughContentText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_HUD_ObjectiveSlot_C::StrikeThroughContentText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_ObjectiveSlot_C", "StrikeThroughContentText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.UpdateSlotStateVisuals
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_HUD_ObjectiveSlot_C::UpdateSlotStateVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_ObjectiveSlot_C", "UpdateSlotStateVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.GetWidgetAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// const struct FGameplayTag&              InAnimTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UWidgetAnimation**                OutAnim                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_HUD_ObjectiveSlot_C::GetWidgetAnimation(const struct FGameplayTag& InAnimTag, class UWidgetAnimation** OutAnim) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_ObjectiveSlot_C", "GetWidgetAnimation");

	Params::WBP_HUD_ObjectiveSlot_C_GetWidgetAnimation Parms{};

	Parms.InAnimTag = std::move(InAnimTag);

	UObject::ProcessEvent(Func, &Parms);

	if (OutAnim != nullptr)
		*OutAnim = Parms.OutAnim;
}


// Function WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C.OnCanPlayWidgetAnimation
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// const struct FGameplayTag&              InAnim                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWBP_HUD_ObjectiveSlot_C::OnCanPlayWidgetAnimation(const struct FGameplayTag& InAnim) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_ObjectiveSlot_C", "OnCanPlayWidgetAnimation");

	Params::WBP_HUD_ObjectiveSlot_C_OnCanPlayWidgetAnimation Parms{};

	Parms.InAnim = std::move(InAnim);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

