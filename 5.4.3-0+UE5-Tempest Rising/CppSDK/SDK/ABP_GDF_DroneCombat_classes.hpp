#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_GDF_DroneCombat

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Tempest_classes.hpp"
#include "ABP_GDF_DroneCombat_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_GDF_DroneCombat.ABP_GDF_DroneCombat_C
// 0x0520 (0x0940 - 0x0420)
class UABP_GDF_DroneCombat_C final : public UTedAnimInstance_Aircraft
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0420(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_GDF_DroneCombat::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;          // 0x0428(0x0003)(HasGetValueTypeHash)
	uint8                                         Pad_42B[0x5];                                      // 0x042B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0430(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0438(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0440(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0460(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x04A8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0528(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0570(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0698(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x06B8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x06E0(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0728(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x07F0(0x0048)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0838(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0858(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x08A0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x08E8(0x0048)()
	bool                                          PlayingMontage;                                    // 0x0930(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_GDF_DroneCombat_AnimGraphNode_ModifyBone_1C440F9A453AB6C6C76FEAABD0E4D5E8();
	void ExecuteUbergraph_ABP_GDF_DroneCombat(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_GDF_DroneCombat_C">();
	}
	static class UABP_GDF_DroneCombat_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_GDF_DroneCombat_C>();
	}
};
static_assert(alignof(UABP_GDF_DroneCombat_C) == 0x000010, "Wrong alignment on UABP_GDF_DroneCombat_C");
static_assert(sizeof(UABP_GDF_DroneCombat_C) == 0x000940, "Wrong size on UABP_GDF_DroneCombat_C");
static_assert(offsetof(UABP_GDF_DroneCombat_C, UberGraphFrame) == 0x000420, "Member 'UABP_GDF_DroneCombat_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_GDF_DroneCombat_C, __AnimBlueprintMutables) == 0x000428, "Member 'UABP_GDF_DroneCombat_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_GDF_DroneCombat_C, AnimBlueprintExtension_PropertyAccess) == 0x000430, "Member 'UABP_GDF_DroneCombat_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_GDF_DroneCombat_C, AnimBlueprintExtension_Base) == 0x000438, "Member 'UABP_GDF_DroneCombat_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_GDF_DroneCombat_C, AnimGraphNode_Root) == 0x000440, "Member 'UABP_GDF_DroneCombat_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_GDF_DroneCombat_C, AnimGraphNode_Slot) == 0x000460, "Member 'UABP_GDF_DroneCombat_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_GDF_DroneCombat_C, AnimGraphNode_SaveCachedPose) == 0x0004A8, "Member 'UABP_GDF_DroneCombat_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_GDF_DroneCombat_C, AnimGraphNode_SequencePlayer_3) == 0x000528, "Member 'UABP_GDF_DroneCombat_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_GDF_DroneCombat_C, AnimGraphNode_ModifyBone) == 0x000570, "Member 'UABP_GDF_DroneCombat_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_GDF_DroneCombat_C, AnimGraphNode_ComponentToLocalSpace) == 0x000698, "Member 'UABP_GDF_DroneCombat_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_GDF_DroneCombat_C, AnimGraphNode_UseCachedPose) == 0x0006B8, "Member 'UABP_GDF_DroneCombat_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_GDF_DroneCombat_C, AnimGraphNode_SequencePlayer_2) == 0x0006E0, "Member 'UABP_GDF_DroneCombat_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_GDF_DroneCombat_C, AnimGraphNode_ApplyAdditive) == 0x000728, "Member 'UABP_GDF_DroneCombat_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_GDF_DroneCombat_C, AnimGraphNode_BlendListByBool_1) == 0x0007F0, "Member 'UABP_GDF_DroneCombat_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_GDF_DroneCombat_C, AnimGraphNode_LocalToComponentSpace) == 0x000838, "Member 'UABP_GDF_DroneCombat_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_GDF_DroneCombat_C, AnimGraphNode_BlendListByBool) == 0x000858, "Member 'UABP_GDF_DroneCombat_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_GDF_DroneCombat_C, AnimGraphNode_SequencePlayer_1) == 0x0008A0, "Member 'UABP_GDF_DroneCombat_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_GDF_DroneCombat_C, AnimGraphNode_SequencePlayer) == 0x0008E8, "Member 'UABP_GDF_DroneCombat_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_GDF_DroneCombat_C, PlayingMontage) == 0x000930, "Member 'UABP_GDF_DroneCombat_C::PlayingMontage' has a wrong offset!");

}

