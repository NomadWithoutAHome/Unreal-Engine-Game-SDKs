#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_BD_DYN_SensorArray

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Tempest_structs.hpp"


namespace SDK::Params
{

// Function ABP_BD_DYN_SensorArray.ABP_BD_DYN_SensorArray_C.ExecuteUbergraph_ABP_BD_DYN_SensorArray
// 0x0098 (0x0098 - 0x0000)
struct ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATedStructureBase*                      K2Node_DynamicCast_AsTed_Structure_Base;           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETedPowerStatus                               CallFunc_GetPowerStatus_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasFireTarget_ReturnValue;                // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B[0x5];                                       // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray) == 0x000008, "Wrong alignment on ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray");
static_assert(sizeof(ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray) == 0x000098, "Wrong size on ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray, EntryPoint) == 0x000000, "Member 'ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000008, "Member 'ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray, CallFunc_BreakVector2D_X) == 0x000010, "Member 'ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray, K2Node_Event_DeltaTimeX) == 0x000020, "Member 'ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000040, "Member 'ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray, CallFunc_Lerp_ReturnValue) == 0x000048, "Member 'ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray, K2Node_DynamicCast_AsTed_Structure_Base) == 0x000050, "Member 'ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray::K2Node_DynamicCast_AsTed_Structure_Base' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray, CallFunc_MakeRotator_ReturnValue) == 0x000060, "Member 'ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray, CallFunc_GetPowerStatus_ReturnValue) == 0x000078, "Member 'ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray::CallFunc_GetPowerStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000079, "Member 'ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray, CallFunc_HasFireTarget_ReturnValue) == 0x00007A, "Member 'ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray::CallFunc_HasFireTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000080, "Member 'ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000088, "Member 'ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000090, "Member 'ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000094, "Member 'ABP_BD_DYN_SensorArray_C_ExecuteUbergraph_ABP_BD_DYN_SensorArray::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");

// Function ABP_BD_DYN_SensorArray.ABP_BD_DYN_SensorArray_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_BD_DYN_SensorArray_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_BD_DYN_SensorArray_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_BD_DYN_SensorArray_C_AnimGraph");
static_assert(sizeof(ABP_BD_DYN_SensorArray_C_AnimGraph) == 0x000010, "Wrong size on ABP_BD_DYN_SensorArray_C_AnimGraph");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_BD_DYN_SensorArray_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ABP_BD_DYN_SensorArray.ABP_BD_DYN_SensorArray_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_BD_DYN_SensorArray_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_BD_DYN_SensorArray_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_BD_DYN_SensorArray_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_BD_DYN_SensorArray_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_BD_DYN_SensorArray_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_BD_DYN_SensorArray_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_BD_DYN_SensorArray_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

}

